"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gridVerticalScrollbarWidthSelector = exports.gridRowHeightSelector = exports.gridHorizontalScrollbarHeightSelector = exports.gridHeaderHeightSelector = exports.gridHeaderFilterHeightSelector = exports.gridHasScrollYSelector = exports.gridHasScrollXSelector = exports.gridHasFillerSelector = exports.gridHasBottomFillerSelector = exports.gridGroupHeaderHeightSelector = exports.gridDimensionsSelector = exports.gridContentHeightSelector = exports.gridColumnsTotalWidthSelector = void 0;
var _createSelector = require("../../../utils/createSelector");
const gridDimensionsSelector = state => state.dimensions;

/**
 * Get the summed width of all the visible columns.
 * @category Visible Columns
 */
exports.gridDimensionsSelector = gridDimensionsSelector;
const gridColumnsTotalWidthSelector = exports.gridColumnsTotalWidthSelector = (0, _createSelector.createSelector)(gridDimensionsSelector, dimensions => dimensions.columnsTotalWidth);
const gridRowHeightSelector = state => state.dimensions.rowHeight;
exports.gridRowHeightSelector = gridRowHeightSelector;
const gridContentHeightSelector = state => state.dimensions.contentSize.height;
exports.gridContentHeightSelector = gridContentHeightSelector;
const gridHasScrollXSelector = state => state.dimensions.hasScrollX;
exports.gridHasScrollXSelector = gridHasScrollXSelector;
const gridHasScrollYSelector = state => state.dimensions.hasScrollY;
exports.gridHasScrollYSelector = gridHasScrollYSelector;
const gridHasFillerSelector = state => state.dimensions.columnsTotalWidth < state.dimensions.viewportOuterSize.width;
exports.gridHasFillerSelector = gridHasFillerSelector;
const gridHeaderHeightSelector = state => state.dimensions.headerHeight;
exports.gridHeaderHeightSelector = gridHeaderHeightSelector;
const gridGroupHeaderHeightSelector = state => state.dimensions.groupHeaderHeight;
exports.gridGroupHeaderHeightSelector = gridGroupHeaderHeightSelector;
const gridHeaderFilterHeightSelector = state => state.dimensions.headerFilterHeight;
exports.gridHeaderFilterHeightSelector = gridHeaderFilterHeightSelector;
const gridVerticalScrollbarWidthSelector = state => state.dimensions.hasScrollY ? state.dimensions.scrollbarSize : 0;
exports.gridVerticalScrollbarWidthSelector = gridVerticalScrollbarWidthSelector;
const gridHorizontalScrollbarHeightSelector = state => state.dimensions.hasScrollX ? state.dimensions.scrollbarSize : 0;
exports.gridHorizontalScrollbarHeightSelector = gridHorizontalScrollbarHeightSelector;
const gridHasBottomFillerSelector = state => {
  const height = state.dimensions.hasScrollX ? state.dimensions.scrollbarSize : 0;
  const needsLastRowBorder = state.dimensions.viewportOuterSize.height - state.dimensions.minimumSize.height > 0;
  if (height === 0 && !needsLastRowBorder) {
    return false;
  }
  return true;
};
exports.gridHasBottomFillerSelector = gridHasBottomFillerSelector;