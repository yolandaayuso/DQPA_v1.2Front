import { Base, Point, Type } from "./type";
import { TouchGestureState } from "./TouchGestureState";
import { IExecutionContext } from "./IExecutionContext";
import { List$1 } from "./List$1";
import { TouchPointInfo } from "./TouchPointInfo";
import { TouchGestureEventArgs } from "./TouchGestureEventArgs";
/**
 * @hidden
 */
export declare class TouchGestureRecognizer extends Base {
    static $t: Type;
    constructor(a: IExecutionContext);
    n: TouchGestureState;
    private p;
    private u;
    private v;
    private ab;
    private ac;
    private w;
    private x;
    private an;
    private ao;
    private am;
    private ak;
    private al;
    private z;
    private y;
    get aw(): number;
    set aw(a: number);
    get at(): number;
    get au(): number;
    bh(): Point;
    bf(a: List$1<TouchPointInfo>): void;
    a7(a: List$1<TouchPointInfo>): void;
    private az;
    private ap;
    private aq;
    private s;
    a0: number;
    private ba;
    private a3;
    be(): void;
    private a6;
    private a9;
    private ag;
    private ah;
    private ad;
    private ae;
    private af;
    private bc;
    private a4;
    private bb;
    private r;
    bd(): void;
    private a2;
    private o;
    private av;
    private ax;
    private bg;
    private b;
    private q;
    private ay;
    private t;
    private a8;
    private a5;
    private c;
    private a1;
    holdStarting: (sender: any, args: TouchGestureEventArgs) => void;
    holdEnding: (sender: any, args: TouchGestureEventArgs) => void;
    panStarting: (sender: any, args: TouchGestureEventArgs) => void;
    manipulationStarting: (sender: any, args: TouchGestureEventArgs) => void;
    manipulationChanging: (sender: any, args: TouchGestureEventArgs) => void;
    manipulationEnding: (sender: any, args: TouchGestureEventArgs) => void;
    panEnding: (sender: any, args: TouchGestureEventArgs) => void;
    zoomStarting: (sender: any, args: TouchGestureEventArgs) => void;
    zoomEnding: (sender: any, args: TouchGestureEventArgs) => void;
    flingStarting: (sender: any, args: TouchGestureEventArgs) => boolean;
    doubleTapped: (sender: any, args: TouchGestureEventArgs) => void;
    private ai;
    private aj;
    private aa;
    private ar;
    private as;
}
