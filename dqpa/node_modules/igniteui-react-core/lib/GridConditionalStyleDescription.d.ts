import { Description } from "./Description";
import { GridConditionalStylePropertyDescription } from "./GridConditionalStylePropertyDescription";
import { FilterExpressionDescription } from "./FilterExpressionDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class GridConditionalStyleDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private w;
    get styleKey(): string;
    set styleKey(a: string);
    private o;
    get isTransitionInEnabled(): boolean;
    set isTransitionInEnabled(a: boolean);
    private h;
    get properties(): GridConditionalStylePropertyDescription[];
    set properties(a: GridConditionalStylePropertyDescription[]);
    private t;
    get conditionString(): string;
    set conditionString(a: string);
    private j;
    get condition(): FilterExpressionDescription;
    set condition(a: FilterExpressionDescription);
    private m;
    get isFieldMinimumNeeded(): boolean;
    set isFieldMinimumNeeded(a: boolean);
    private l;
    get isFieldMaximumNeeded(): boolean;
    set isFieldMaximumNeeded(a: boolean);
    private n;
    get isFieldSumNeeded(): boolean;
    set isFieldSumNeeded(a: boolean);
    private v;
    get propertyUpdatedRef(): string;
    set propertyUpdatedRef(a: string);
    private u;
    get filterStringErrorsParsingRef(): string;
    set filterStringErrorsParsingRef(a: string);
}
