import { Description } from "./Description";
import { RectDescription } from "./RectDescription";
import { Type } from "./type";
import { SeriesViewerDescription } from "./SeriesViewerDescription";
/**
 * @hidden
 */
export declare abstract class GeographicMapImageryDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private j;
    get windowRect(): RectDescription;
    set windowRect(a: RectDescription);
    private h;
    get geographicMap(): GeographicMapDescription;
    set geographicMap(a: GeographicMapDescription);
    private t;
    get referer(): string;
    set referer(a: string);
    private l;
    get isHorizontalWrappingEnabled(): boolean;
    set isHorizontalWrappingEnabled(a: boolean);
    private u;
    get userAgent(): string;
    set userAgent(a: string);
    private n;
    get opacity(): number;
    set opacity(a: number);
    private s;
    get imageTilesReadyRef(): string;
    set imageTilesReadyRef(a: string);
    private r;
    get imagesChangedRef(): string;
    set imagesChangedRef(a: string);
    private p;
    get cancellingImageRef(): string;
    set cancellingImageRef(a: string);
    private q;
    get downloadingImageRef(): string;
    set downloadingImageRef(a: string);
}
/**
 * @hidden
 */
export declare class GeographicMapDescription extends SeriesViewerDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private ie;
    get zoomable(): boolean;
    set zoomable(a: boolean);
    private is;
    get resizeBehavior(): string;
    set resizeBehavior(a: string);
    private ib;
    get isHorizontalWrappingEnabled(): boolean;
    set isHorizontalWrappingEnabled(a: boolean);
    private ip;
    get backgroundTilingMode(): string;
    set backgroundTilingMode(a: string);
    private id;
    get useWorldRectForZoomBounds(): boolean;
    set useWorldRectForZoomBounds(a: boolean);
    private ic;
    get suppressZoomResetOnWorldRectChange(): boolean;
    set suppressZoomResetOnWorldRectChange(a: boolean);
    private h8;
    get worldRect(): RectDescription;
    set worldRect(a: RectDescription);
    private h7;
    get actualWorldRect(): RectDescription;
    set actualWorldRect(a: RectDescription);
    private h5;
    get backgroundContent(): GeographicMapImageryDescription;
    set backgroundContent(a: GeographicMapImageryDescription);
    private il;
    get windowScale(): number;
    set windowScale(a: number);
    private ik;
    get actualWindowScale(): number;
    set actualWindowScale(a: number);
    private ir;
    get imageTilesReadyRef(): string;
    set imageTilesReadyRef(a: string);
    private it;
    get width(): string;
    set width(a: string);
    private iq;
    get height(): string;
    set height(a: string);
}
