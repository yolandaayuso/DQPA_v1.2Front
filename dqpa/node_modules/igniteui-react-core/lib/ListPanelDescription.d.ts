import { Description } from "./Description";
import { Type } from "./type";
import { ListPanelPrimaryKeyValueDescription } from "./ListPanelPrimaryKeyValueDescription";
import { BaseDataSourceDescription } from "./BaseDataSourceDescription";
/**
 * @hidden
 */
export declare class ListPanelDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private bc;
    get selectionMode(): string;
    set selectionMode(a: string);
    private t;
    get isActiveRowStyleEnabled(): boolean;
    set isActiveRowStyleEnabled(a: boolean);
    private a7;
    get selectedBackground(): string;
    set selectedBackground(a: string);
    private a2;
    get normalBackground(): string;
    set normalBackground(a: string);
    private ap;
    get activationBorder(): string;
    set activationBorder(a: string);
    private ae;
    get activationBorderLeftWidth(): number;
    set activationBorderLeftWidth(a: number);
    private ag;
    get activationBorderTopWidth(): number;
    set activationBorderTopWidth(a: number);
    private af;
    get activationBorderRightWidth(): number;
    set activationBorderRightWidth(a: number);
    private ad;
    get activationBorderBottomWidth(): number;
    set activationBorderBottomWidth(a: number);
    private aq;
    get activationMode(): string;
    set activationMode(a: string);
    private ba;
    get selectionBehavior(): string;
    set selectionBehavior(a: string);
    private i;
    get primaryKey(): string[];
    set primaryKey(a: string[]);
    private h;
    get actualPrimaryKey(): string[];
    set actualPrimaryKey(a: string[]);
    private k;
    get selectedItems(): any[];
    set selectedItems(a: any[]);
    private l;
    get selectedKeys(): ListPanelPrimaryKeyValueDescription[];
    set selectedKeys(a: ListPanelPrimaryKeyValueDescription[]);
    private ay;
    get dataSourceRef(): string;
    set dataSourceRef(a: string);
    private r;
    get dataSource(): BaseDataSourceDescription;
    set dataSource(a: BaseDataSourceDescription);
    private j;
    get schemaIncludedProperties(): string[];
    set schemaIncludedProperties(a: string[]);
    private ai;
    get rowHeight(): number;
    set rowHeight(a: number);
    private z;
    get actualRowHeight(): number;
    set actualRowHeight(a: number);
    private au;
    get cellFontFamily(): string;
    set cellFontFamily(a: string);
    private aa;
    get cellFontSize(): number;
    set cellFontSize(a: number);
    private av;
    get cellFontStyle(): string;
    set cellFontStyle(a: string);
    private aw;
    get cellFontWeight(): string;
    set cellFontWeight(a: string);
    private a6;
    get scrollbarStyle(): string;
    set scrollbarStyle(a: string);
    private a5;
    get scrollbarBackground(): string;
    set scrollbarBackground(a: string);
    private at;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private a3;
    get orientation(): string;
    set orientation(a: string);
    private u;
    get isCustomRowHeightEnabled(): boolean;
    set isCustomRowHeightEnabled(a: boolean);
    private bd;
    get textColor(): string;
    set textColor(a: string);
    private ah;
    get activeRow(): number;
    set activeRow(a: number);
    private v;
    get notifyOnAllSelectionChanges(): boolean;
    set notifyOnAllSelectionChanges(a: boolean);
    private a8;
    get selectedItemsChangedRef(): string;
    set selectedItemsChangedRef(a: string);
    private a9;
    get selectedKeysChangedRef(): string;
    set selectedKeysChangedRef(a: string);
    private bb;
    get selectionChangedRef(): string;
    set selectionChangedRef(a: string);
    private ar;
    get activeRowChangedRef(): string;
    set activeRowChangedRef(a: string);
    private ax;
    get contentRefreshedRef(): string;
    set contentRefreshedRef(a: string);
    private a4;
    get rowUpdatingRef(): string;
    set rowUpdatingRef(a: string);
    private a1;
    get itemWidthRequestedRef(): string;
    set itemWidthRequestedRef(a: string);
    private a0;
    get itemHeightRequestedRef(): string;
    set itemHeightRequestedRef(a: string);
    private az;
    get itemClickedRef(): string;
    set itemClickedRef(a: string);
    private as;
    get actualPrimaryKeyChangeRef(): string;
    set actualPrimaryKeyChangeRef(a: string);
}
