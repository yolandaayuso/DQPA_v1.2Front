import { Description } from "./Description";
import { ToolActionDescription } from "./ToolActionDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class ToolPanelDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private h;
    get actions(): ToolActionDescription[];
    set actions(a: ToolActionDescription[]);
    private j;
    get showOnHover(): boolean;
    set showOnHover(a: boolean);
    private k;
    get showTooltipOnHover(): boolean;
    set showTooltipOnHover(a: boolean);
    private be;
    get dropdownClickBuffer(): number;
    set dropdownClickBuffer(a: number);
    private b9;
    get cellFontFamily(): string;
    set cellFontFamily(a: string);
    private z;
    get cellFontSize(): number;
    set cellFontSize(a: number);
    private ca;
    get cellFontStyle(): string;
    set cellFontStyle(a: string);
    private cb;
    get cellFontWeight(): string;
    set cellFontWeight(a: string);
    private cv;
    get subtitleFontFamily(): string;
    set subtitleFontFamily(a: string);
    private ak;
    get subtitleFontSize(): number;
    set subtitleFontSize(a: number);
    private cw;
    get subtitleFontStyle(): string;
    set subtitleFontStyle(a: string);
    private cx;
    get subtitleFontWeight(): string;
    set subtitleFontWeight(a: string);
    private b8;
    get baseTheme(): string;
    set baseTheme(a: string);
    private cf;
    get density(): string;
    set density(a: string);
    private bo;
    get actualDensity(): string;
    set actualDensity(a: string);
    private b7;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private bl;
    get actualBackgroundColor(): string;
    set actualBackgroundColor(a: string);
    private cu;
    get submenuBackgroundColor(): string;
    set submenuBackgroundColor(a: string);
    private b0;
    get actualSubmenuBackgroundColor(): string;
    set actualSubmenuBackgroundColor(a: string);
    private ch;
    get groupHeaderBackgroundColor(): string;
    set groupHeaderBackgroundColor(a: string);
    private bq;
    get actualGroupHeaderBackgroundColor(): string;
    set actualGroupHeaderBackgroundColor(a: string);
    private ct;
    get separatorBackgroundColor(): string;
    set separatorBackgroundColor(a: string);
    private bz;
    get actualSeparatorBackgroundColor(): string;
    set actualSeparatorBackgroundColor(a: string);
    private ci;
    get groupHeaderSeparatorBackgroundColor(): string;
    set groupHeaderSeparatorBackgroundColor(a: string);
    private br;
    get actualGroupHeaderSeparatorBackgroundColor(): string;
    set actualGroupHeaderSeparatorBackgroundColor(a: string);
    private cm;
    get hoverBackgroundColor(): string;
    set hoverBackgroundColor(a: string);
    private bv;
    get actualHoverBackgroundColor(): string;
    set actualHoverBackgroundColor(a: string);
    private cz;
    get textColor(): string;
    set textColor(a: string);
    private b2;
    get actualTextColor(): string;
    set actualTextColor(a: string);
    private b1;
    get actualSubtitleTextColor(): string;
    set actualSubtitleTextColor(a: string);
    private cy;
    get subtitleTextColor(): string;
    set subtitleTextColor(a: string);
    private cg;
    get disabledTextColor(): string;
    set disabledTextColor(a: string);
    private bp;
    get actualDisabledTextColor(): string;
    set actualDisabledTextColor(a: string);
    private ck;
    get groupHeaderTextColor(): string;
    set groupHeaderTextColor(a: string);
    private bt;
    get actualGroupHeaderTextColor(): string;
    set actualGroupHeaderTextColor(a: string);
    private cj;
    get groupHeaderSubtitleTextColor(): string;
    set groupHeaderSubtitleTextColor(a: string);
    private bs;
    get actualGroupHeaderSubtitleTextColor(): string;
    set actualGroupHeaderSubtitleTextColor(a: string);
    private c1;
    get toolTipTextColor(): string;
    set toolTipTextColor(a: string);
    private b4;
    get actualToolTipTextColor(): string;
    set actualToolTipTextColor(a: string);
    private c0;
    get toolTipBackgroundColor(): string;
    set toolTipBackgroundColor(a: string);
    private b3;
    get actualToolTipBackgroundColor(): string;
    set actualToolTipBackgroundColor(a: string);
    private al;
    get toolTipCornerRadius(): number;
    set toolTipCornerRadius(a: number);
    private x;
    get actualToolTipCornerRadius(): number;
    set actualToolTipCornerRadius(a: number);
    private am;
    get toolTipElevation(): number;
    set toolTipElevation(a: number);
    private y;
    get actualToolTipElevation(): number;
    set actualToolTipElevation(a: number);
    private cn;
    get iconFill(): string;
    set iconFill(a: string);
    private bw;
    get actualIconFill(): string;
    set actualIconFill(a: string);
    private co;
    get iconStroke(): string;
    set iconStroke(a: string);
    private bx;
    get actualIconStroke(): string;
    set actualIconStroke(a: string);
    private ah;
    get separatorVerticalPaddingLeft(): number;
    set separatorVerticalPaddingLeft(a: number);
    private u;
    get actualSeparatorVerticalPaddingLeft(): number;
    set actualSeparatorVerticalPaddingLeft(a: number);
    private ai;
    get separatorVerticalPaddingRight(): number;
    set separatorVerticalPaddingRight(a: number);
    private v;
    get actualSeparatorVerticalPaddingRight(): number;
    set actualSeparatorVerticalPaddingRight(a: number);
    private aj;
    get separatorVerticalPaddingTop(): number;
    set separatorVerticalPaddingTop(a: number);
    private w;
    get actualSeparatorVerticalPaddingTop(): number;
    set actualSeparatorVerticalPaddingTop(a: number);
    private ag;
    get separatorVerticalPaddingBottom(): number;
    set separatorVerticalPaddingBottom(a: number);
    private t;
    get actualSeparatorVerticalPaddingBottom(): number;
    set actualSeparatorVerticalPaddingBottom(a: number);
    private ad;
    get separatorHorizontalPaddingLeft(): number;
    set separatorHorizontalPaddingLeft(a: number);
    private q;
    get actualSeparatorHorizontalPaddingLeft(): number;
    set actualSeparatorHorizontalPaddingLeft(a: number);
    private ae;
    get separatorHorizontalPaddingRight(): number;
    set separatorHorizontalPaddingRight(a: number);
    private r;
    get actualSeparatorHorizontalPaddingRight(): number;
    set actualSeparatorHorizontalPaddingRight(a: number);
    private af;
    get separatorHorizontalPaddingTop(): number;
    set separatorHorizontalPaddingTop(a: number);
    private s;
    get actualSeparatorHorizontalPaddingTop(): number;
    set actualSeparatorHorizontalPaddingTop(a: number);
    private ac;
    get separatorHorizontalPaddingBottom(): number;
    set separatorHorizontalPaddingBottom(a: number);
    private p;
    get actualSeparatorHorizontalPaddingBottom(): number;
    set actualSeparatorHorizontalPaddingBottom(a: number);
    private cs;
    get orientation(): string;
    set orientation(a: string);
    private bg;
    get rowHeight(): number;
    set rowHeight(a: number);
    private ab;
    get highlightWidth(): number;
    set highlightWidth(a: number);
    private o;
    get actualHighlightWidth(): number;
    set actualHighlightWidth(a: number);
    private aa;
    get highlightRadius(): number;
    set highlightRadius(a: number);
    private n;
    get actualHighlightRadius(): number;
    set actualHighlightRadius(a: number);
    private cl;
    get highlightColor(): string;
    set highlightColor(a: string);
    private bu;
    get actualHighlightColor(): string;
    set actualHighlightColor(a: string);
    private cp;
    get menuArrowStroke(): string;
    set menuArrowStroke(a: string);
    private by;
    get actualMenuArrowStroke(): string;
    set actualMenuArrowStroke(a: string);
    private c2;
    get uncheckedBackgroundColor(): string;
    set uncheckedBackgroundColor(a: string);
    private b5;
    get actualUncheckedBackgroundColor(): string;
    set actualUncheckedBackgroundColor(a: string);
    private cc;
    get checkedBackgroundColor(): string;
    set checkedBackgroundColor(a: string);
    private bm;
    get actualCheckedBackgroundColor(): string;
    set actualCheckedBackgroundColor(a: string);
    private c3;
    get uncheckedBorderColor(): string;
    set uncheckedBorderColor(a: string);
    private b6;
    get actualUncheckedBorderColor(): string;
    set actualUncheckedBorderColor(a: string);
    private cd;
    get checkedBorderColor(): string;
    set checkedBorderColor(a: string);
    private bn;
    get actualCheckedBorderColor(): string;
    set actualCheckedBorderColor(a: string);
    private bf;
    get dropdownDelay(): number;
    set dropdownDelay(a: number);
    private bd;
    get actualDropdownDelay(): number;
    set actualDropdownDelay(a: number);
    private cq;
    get nestedActionMode(): string;
    set nestedActionMode(a: string);
    private ce;
    get contentRefreshedRef(): string;
    set contentRefreshedRef(a: string);
    private cr;
    get onCommandRef(): string;
    set onCommandRef(a: string);
}
