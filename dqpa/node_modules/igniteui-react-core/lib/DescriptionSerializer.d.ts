import { Base, Type } from "./type";
import { TypeDescriptionContext } from "./TypeDescriptionContext";
import { Description } from "./Description";
import { DescriptionTreeNode } from "./DescriptionTreeNode";
import { DescriptionSerializerBuilder } from "./DescriptionSerializerBuilder";
import { DescriptionResult } from "./DescriptionResult";
import { JsonDictionaryItem } from "./JsonDictionaryItem";
import { JsonDictionaryObject } from "./JsonDictionaryObject";
import { TypeDescriptionMetadata } from "./TypeDescriptionMetadata";
/**
 * @hidden
 */
export declare class DescriptionSerializer extends Base {
    static $t: Type;
    constructor();
    h: boolean;
    p(a: TypeDescriptionContext, b: Description): string;
    t(a: TypeDescriptionContext, b: DescriptionTreeNode, c: DescriptionSerializerBuilder): void;
    c(a: TypeDescriptionContext, b: string): DescriptionResult;
    g: boolean;
    private f;
    private i;
    private e;
    d(a: TypeDescriptionContext, b: JsonDictionaryItem, c: boolean, d: (arg1: string) => string, e: boolean): DescriptionResult;
    v(a: TypeDescriptionContext, b: Description, c: string, d: TypeDescriptionMetadata, e: any): void;
    private b;
    private n;
    static k(a: TypeDescriptionContext, b: JsonDictionaryObject): any;
    static m(a: TypeDescriptionContext, b: JsonDictionaryObject): any;
    static l(a: TypeDescriptionContext, b: JsonDictionaryObject): any;
    private a;
    private j;
    private q;
    private o;
    private r;
    private u;
    private s;
}
