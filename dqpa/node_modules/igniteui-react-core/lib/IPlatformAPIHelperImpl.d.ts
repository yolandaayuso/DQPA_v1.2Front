import { Point, Type } from "./type";
import { Brush } from "./Brush";
import { BrushCollection } from "./BrushCollection";
import { Color } from "./Color";
import { Size } from "./Size";
import { Rect } from "./Rect";
import { DoubleCollection } from "./DoubleCollection";
/**
 * @hidden
 */
export interface IPlatformAPIHelperImpl {
    externalizeBrushValue(a: Brush): any;
    externalizeBrushCollectionValue(a: BrushCollection): any;
    externalizeColorValue(a: Color): any;
    externalizePointValue(a: Point): any;
    externalizeSizeValue(a: Size): any;
    externalizeRectValue(a: Rect): any;
    externalizeDoubleCollectionValue(a: DoubleCollection): any;
    internalizeBrushValue(a: any): any;
    internalizeColorValue(a: any): any;
    internalizePointValue(a: any): any;
    internalizeSizeValue(a: any): any;
    internalizeRectValue(a: any): any;
    internalizeDoubleCollectionValue(a: any): any;
    internalizeBrushCollectionValue(a: any): any;
}
/**
 * @hidden
 */
export declare let IPlatformAPIHelperImpl_$type: Type;
