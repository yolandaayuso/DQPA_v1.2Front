import { Base, Type } from "./type";
import { ComponentRendererMethodHelperBuilder } from "./ComponentRendererMethodHelperBuilder";
import { EmbeddedRefDescription } from "./EmbeddedRefDescription";
import { PointDescription } from "./PointDescription";
import { SizeDescription } from "./SizeDescription";
import { RectDescription } from "./RectDescription";
/**
 * @hidden
 */
export declare class ComponentRendererMethodHelper extends Base {
    static $t: Type;
    static call(a: string, b?: string): ComponentRendererMethodHelperBuilder;
    static returnAsInt(a: string): number;
    private static l;
    static returnAsDouble(a: string): number;
    static returnAsShort(a: string): number;
    static returnAsLong(a: string): number;
    static returnAsFloat(a: string): number;
    static returnAsEnum(a: Type, b: string): any;
    static returnAsString(a: string): string;
    static returnAsAsPublicTypeRef(a: string, b: string): EmbeddedRefDescription;
    static returnAsPoint(a: string): PointDescription;
    static returnAsSize(a: string): SizeDescription;
    static returnAsRect(a: string): RectDescription;
    static asMethodRef(a: string): EmbeddedRefDescription;
    static returnAsBool(a: string): boolean;
}
