import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class ButtonDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private a8;
    get minWidth(): number;
    set minWidth(a: number);
    private a7;
    get minHeight(): number;
    set minHeight(a: number);
    private e3;
    get displayType(): string;
    set displayType(a: string);
    private ey;
    get density(): string;
    set density(a: string);
    private ev;
    get baseTheme(): string;
    set baseTheme(a: string);
    private ef;
    get actualDensity(): string;
    set actualDensity(a: string);
    private ee;
    get actualBorderColor(): string;
    set actualBorderColor(a: string);
    private er;
    get actualUmbraShadowColor(): string;
    set actualUmbraShadowColor(a: string);
    private eo;
    get actualPenumbraShadowColor(): string;
    set actualPenumbraShadowColor(a: string);
    private ec;
    get actualAmbientShadowColor(): string;
    set actualAmbientShadowColor(a: string);
    private cs;
    get actualRestingElevation(): number;
    set actualRestingElevation(a: number);
    private cq;
    get actualFocusElevation(): number;
    set actualFocusElevation(a: number);
    private cr;
    get actualHoverElevation(): number;
    set actualHoverElevation(a: number);
    private ep;
    get actualRippleColor(): string;
    set actualRippleColor(a: string);
    private af;
    get actualCornerRadiusBottomRight(): number;
    set actualCornerRadiusBottomRight(a: number);
    private ae;
    get actualCornerRadiusBottomLeft(): number;
    set actualCornerRadiusBottomLeft(a: number);
    private ag;
    get actualCornerRadiusTopLeft(): number;
    set actualCornerRadiusTopLeft(a: number);
    private ah;
    get actualCornerRadiusTopRight(): number;
    set actualCornerRadiusTopRight(a: number);
    private ed;
    get actualBackgroundColor(): string;
    set actualBackgroundColor(a: string);
    private eg;
    get actualDisabledBackgroundColor(): string;
    set actualDisabledBackgroundColor(a: string);
    private eh;
    get actualDisabledBorderColor(): string;
    set actualDisabledBorderColor(a: string);
    private ei;
    get actualDisabledTextColor(): string;
    set actualDisabledTextColor(a: string);
    private cp;
    get actualDisabledElevation(): number;
    set actualDisabledElevation(a: number);
    private ej;
    get actualElevationMode(): string;
    set actualElevationMode(a: string);
    private eq;
    get actualTextColor(): string;
    set actualTextColor(a: string);
    private en;
    get actualHoverTextColor(): string;
    set actualHoverTextColor(a: string);
    private ek;
    get actualFocusBackgroundColor(): string;
    set actualFocusBackgroundColor(a: string);
    private el;
    get actualFocusTextColor(): string;
    set actualFocusTextColor(a: string);
    private em;
    get actualHoverBackgroundColor(): string;
    set actualHoverBackgroundColor(a: string);
    private ad;
    get actualBorderWidth(): number;
    set actualBorderWidth(a: number);
    private gs;
    get raisedBackgroundColor(): string;
    set raisedBackgroundColor(a: string);
    private gu;
    get raisedDisabledBackgroundColor(): string;
    set raisedDisabledBackgroundColor(a: string);
    private gv;
    get raisedDisabledBorderColor(): string;
    set raisedDisabledBorderColor(a: string);
    private gw;
    get raisedDisabledTextColor(): string;
    set raisedDisabledTextColor(a: string);
    private dc;
    get raisedDisabledElevation(): number;
    set raisedDisabledElevation(a: number);
    private gz;
    get raisedHoverBackgroundColor(): string;
    set raisedHoverBackgroundColor(a: string);
    private gt;
    get raisedBorderColor(): string;
    set raisedBorderColor(a: string);
    private df;
    get raisedRestingElevation(): number;
    set raisedRestingElevation(a: number);
    private de;
    get raisedHoverElevation(): number;
    set raisedHoverElevation(a: number);
    private dd;
    get raisedFocusElevation(): number;
    set raisedFocusElevation(a: number);
    private be;
    get raisedBorderWidth(): number;
    set raisedBorderWidth(a: number);
    private bg;
    get raisedCornerRadiusBottomRight(): number;
    set raisedCornerRadiusBottomRight(a: number);
    private bf;
    get raisedCornerRadiusBottomLeft(): number;
    set raisedCornerRadiusBottomLeft(a: number);
    private bh;
    get raisedCornerRadiusTopLeft(): number;
    set raisedCornerRadiusTopLeft(a: number);
    private bi;
    get raisedCornerRadiusTopRight(): number;
    set raisedCornerRadiusTopRight(a: number);
    private g1;
    get raisedRippleColor(): string;
    set raisedRippleColor(a: string);
    private fg;
    get flatBackgroundColor(): string;
    set flatBackgroundColor(a: string);
    private fi;
    get flatDisabledBackgroundColor(): string;
    set flatDisabledBackgroundColor(a: string);
    private fj;
    get flatDisabledBorderColor(): string;
    set flatDisabledBorderColor(a: string);
    private fk;
    get flatDisabledTextColor(): string;
    set flatDisabledTextColor(a: string);
    private cy;
    get flatDisabledElevation(): number;
    set flatDisabledElevation(a: number);
    private fn;
    get flatHoverBackgroundColor(): string;
    set flatHoverBackgroundColor(a: string);
    private fh;
    get flatBorderColor(): string;
    set flatBorderColor(a: string);
    private c1;
    get flatRestingElevation(): number;
    set flatRestingElevation(a: number);
    private c0;
    get flatHoverElevation(): number;
    set flatHoverElevation(a: number);
    private cz;
    get flatFocusElevation(): number;
    set flatFocusElevation(a: number);
    private fp;
    get flatRippleColor(): string;
    set flatRippleColor(a: string);
    private fq;
    get flatTextColor(): string;
    set flatTextColor(a: string);
    private fo;
    get flatHoverTextColor(): string;
    set flatHoverTextColor(a: string);
    private fl;
    get flatFocusBackgroundColor(): string;
    set flatFocusBackgroundColor(a: string);
    private fm;
    get flatFocusTextColor(): string;
    set flatFocusTextColor(a: string);
    private aw;
    get flatBorderWidth(): number;
    set flatBorderWidth(a: number);
    private ay;
    get flatCornerRadiusBottomRight(): number;
    set flatCornerRadiusBottomRight(a: number);
    private ax;
    get flatCornerRadiusBottomLeft(): number;
    set flatCornerRadiusBottomLeft(a: number);
    private az;
    get flatCornerRadiusTopLeft(): number;
    set flatCornerRadiusTopLeft(a: number);
    private a0;
    get flatCornerRadiusTopRight(): number;
    set flatCornerRadiusTopRight(a: number);
    private eu;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private ez;
    get disabledBackgroundColor(): string;
    set disabledBackgroundColor(a: string);
    private e0;
    get disabledBorderColor(): string;
    set disabledBorderColor(a: string);
    private e1;
    get disabledTextColor(): string;
    set disabledTextColor(a: string);
    private ct;
    get disabledElevation(): number;
    set disabledElevation(a: number);
    private e4;
    get elevationMode(): string;
    set elevationMode(a: string);
    private f0;
    get hoverBackgroundColor(): string;
    set hoverBackgroundColor(a: string);
    private ew;
    get borderColor(): string;
    set borderColor(a: string);
    private dg;
    get restingElevation(): number;
    set restingElevation(a: number);
    private c3;
    get hoverElevation(): number;
    set hoverElevation(a: number);
    private c2;
    get focusElevation(): number;
    set focusElevation(a: number);
    private fv;
    get fontFamily(): string;
    set fontFamily(a: string);
    private a1;
    get fontSize(): number;
    set fontSize(a: number);
    private fw;
    get fontStyle(): string;
    set fontStyle(a: string);
    private fx;
    get fontWeight(): string;
    set fontWeight(a: string);
    private g4;
    get textColor(): string;
    set textColor(a: string);
    private f1;
    get hoverTextColor(): string;
    set hoverTextColor(a: string);
    private g3;
    get rippleColor(): string;
    set rippleColor(a: string);
    private g2;
    get raisedTextColor(): string;
    set raisedTextColor(a: string);
    private g0;
    get raisedHoverTextColor(): string;
    set raisedHoverTextColor(a: string);
    private gx;
    get raisedFocusBackgroundColor(): string;
    set raisedFocusBackgroundColor(a: string);
    private gy;
    get raisedFocusTextColor(): string;
    set raisedFocusTextColor(a: string);
    private ft;
    get focusBackgroundColor(): string;
    set focusBackgroundColor(a: string);
    private fu;
    get focusTextColor(): string;
    set focusTextColor(a: string);
    private ai;
    get borderWidth(): number;
    set borderWidth(a: number);
    private ao;
    get cornerRadiusBottomRight(): number;
    set cornerRadiusBottomRight(a: number);
    private an;
    get cornerRadiusBottomLeft(): number;
    set cornerRadiusBottomLeft(a: number);
    private ap;
    get cornerRadiusTopLeft(): number;
    set cornerRadiusTopLeft(a: number);
    private aq;
    get cornerRadiusTopRight(): number;
    set cornerRadiusTopRight(a: number);
    private gh;
    get outlinedBackgroundColor(): string;
    set outlinedBackgroundColor(a: string);
    private gj;
    get outlinedDisabledBackgroundColor(): string;
    set outlinedDisabledBackgroundColor(a: string);
    private gk;
    get outlinedDisabledBorderColor(): string;
    set outlinedDisabledBorderColor(a: string);
    private gl;
    get outlinedDisabledTextColor(): string;
    set outlinedDisabledTextColor(a: string);
    private c8;
    get outlinedDisabledElevation(): number;
    set outlinedDisabledElevation(a: number);
    private go;
    get outlinedHoverBackgroundColor(): string;
    set outlinedHoverBackgroundColor(a: string);
    private gi;
    get outlinedBorderColor(): string;
    set outlinedBorderColor(a: string);
    private db;
    get outlinedRestingElevation(): number;
    set outlinedRestingElevation(a: number);
    private da;
    get outlinedHoverElevation(): number;
    set outlinedHoverElevation(a: number);
    private c9;
    get outlinedFocusElevation(): number;
    set outlinedFocusElevation(a: number);
    private a9;
    get outlinedBorderWidth(): number;
    set outlinedBorderWidth(a: number);
    private bb;
    get outlinedCornerRadiusBottomRight(): number;
    set outlinedCornerRadiusBottomRight(a: number);
    private ba;
    get outlinedCornerRadiusBottomLeft(): number;
    set outlinedCornerRadiusBottomLeft(a: number);
    private bc;
    get outlinedCornerRadiusTopLeft(): number;
    set outlinedCornerRadiusTopLeft(a: number);
    private bd;
    get outlinedCornerRadiusTopRight(): number;
    set outlinedCornerRadiusTopRight(a: number);
    private gq;
    get outlinedRippleColor(): string;
    set outlinedRippleColor(a: string);
    private gr;
    get outlinedTextColor(): string;
    set outlinedTextColor(a: string);
    private gp;
    get outlinedHoverTextColor(): string;
    set outlinedHoverTextColor(a: string);
    private gm;
    get outlinedFocusBackgroundColor(): string;
    set outlinedFocusBackgroundColor(a: string);
    private gn;
    get outlinedFocusTextColor(): string;
    set outlinedFocusTextColor(a: string);
    private e5;
    get fabBackgroundColor(): string;
    set fabBackgroundColor(a: string);
    private e7;
    get fabDisabledBackgroundColor(): string;
    set fabDisabledBackgroundColor(a: string);
    private e8;
    get fabDisabledBorderColor(): string;
    set fabDisabledBorderColor(a: string);
    private e9;
    get fabDisabledTextColor(): string;
    set fabDisabledTextColor(a: string);
    private cu;
    get fabDisabledElevation(): number;
    set fabDisabledElevation(a: number);
    private fc;
    get fabHoverBackgroundColor(): string;
    set fabHoverBackgroundColor(a: string);
    private e6;
    get fabBorderColor(): string;
    set fabBorderColor(a: string);
    private cx;
    get fabRestingElevation(): number;
    set fabRestingElevation(a: number);
    private cw;
    get fabHoverElevation(): number;
    set fabHoverElevation(a: number);
    private cv;
    get fabFocusElevation(): number;
    set fabFocusElevation(a: number);
    private ar;
    get fabBorderWidth(): number;
    set fabBorderWidth(a: number);
    private at;
    get fabCornerRadiusBottomRight(): number;
    set fabCornerRadiusBottomRight(a: number);
    private as;
    get fabCornerRadiusBottomLeft(): number;
    set fabCornerRadiusBottomLeft(a: number);
    private au;
    get fabCornerRadiusTopLeft(): number;
    set fabCornerRadiusTopLeft(a: number);
    private av;
    get fabCornerRadiusTopRight(): number;
    set fabCornerRadiusTopRight(a: number);
    private fe;
    get fabRippleColor(): string;
    set fabRippleColor(a: string);
    private ff;
    get fabTextColor(): string;
    set fabTextColor(a: string);
    private fd;
    get fabHoverTextColor(): string;
    set fabHoverTextColor(a: string);
    private fa;
    get fabFocusBackgroundColor(): string;
    set fabFocusBackgroundColor(a: string);
    private fb;
    get fabFocusTextColor(): string;
    set fabFocusTextColor(a: string);
    private f2;
    get iconBackgroundColor(): string;
    set iconBackgroundColor(a: string);
    private f4;
    get iconDisabledBackgroundColor(): string;
    set iconDisabledBackgroundColor(a: string);
    private f5;
    get iconDisabledBorderColor(): string;
    set iconDisabledBorderColor(a: string);
    private f6;
    get iconDisabledTextColor(): string;
    set iconDisabledTextColor(a: string);
    private c4;
    get iconDisabledElevation(): number;
    set iconDisabledElevation(a: number);
    private f9;
    get iconHoverBackgroundColor(): string;
    set iconHoverBackgroundColor(a: string);
    private f3;
    get iconBorderColor(): string;
    set iconBorderColor(a: string);
    private c7;
    get iconRestingElevation(): number;
    set iconRestingElevation(a: number);
    private c6;
    get iconHoverElevation(): number;
    set iconHoverElevation(a: number);
    private c5;
    get iconFocusElevation(): number;
    set iconFocusElevation(a: number);
    private a2;
    get iconBorderWidth(): number;
    set iconBorderWidth(a: number);
    private a4;
    get iconCornerRadiusBottomRight(): number;
    set iconCornerRadiusBottomRight(a: number);
    private a3;
    get iconCornerRadiusBottomLeft(): number;
    set iconCornerRadiusBottomLeft(a: number);
    private a5;
    get iconCornerRadiusTopLeft(): number;
    set iconCornerRadiusTopLeft(a: number);
    private a6;
    get iconCornerRadiusTopRight(): number;
    set iconCornerRadiusTopRight(a: number);
    private gb;
    get iconRippleColor(): string;
    set iconRippleColor(a: string);
    private gc;
    get iconTextColor(): string;
    set iconTextColor(a: string);
    private ga;
    get iconHoverTextColor(): string;
    set iconHoverTextColor(a: string);
    private f7;
    get iconFocusBackgroundColor(): string;
    set iconFocusBackgroundColor(a: string);
    private f8;
    get iconFocusTextColor(): string;
    set iconFocusTextColor(a: string);
    private ge;
    get inputId(): string;
    set inputId(a: string);
    private gd;
    get id(): string;
    set id(a: string);
    private e2;
    get display(): string;
    set display(a: string);
    private fr;
    get flexDirection(): string;
    set flexDirection(a: string);
    private fs;
    get flexGrow(): string;
    set flexGrow(a: string);
    private es;
    get alignItems(): string;
    set alignItems(a: string);
    private g5;
    get valueRef(): string;
    set valueRef(a: string);
    private gg;
    get name(): string;
    set name(a: string);
    private dh;
    get tabIndex(): number;
    set tabIndex(a: number);
    private et;
    get ariaLabel(): string;
    set ariaLabel(a: string);
    private o;
    get fillAvailableSpace(): boolean;
    set fillAvailableSpace(a: boolean);
    private p;
    get focused(): boolean;
    set focused(a: boolean);
    private q;
    get isFocusStyleEnabled(): boolean;
    set isFocusStyleEnabled(a: boolean);
    private m;
    get disableRipple(): boolean;
    set disableRipple(a: boolean);
    private h;
    get actualDisableRipple(): boolean;
    set actualDisableRipple(a: boolean);
    private k;
    get disableHover(): boolean;
    set disableHover(a: boolean);
    private r;
    get isHover(): boolean;
    set isHover(a: boolean);
    private j;
    get disabled(): boolean;
    set disabled(a: boolean);
    private n;
    get disableTransitions(): boolean;
    set disableTransitions(a: boolean);
    private l;
    get disablePointer(): boolean;
    set disablePointer(a: boolean);
    private ak;
    get contentPaddingLeft(): number;
    set contentPaddingLeft(a: number);
    private am;
    get contentPaddingTop(): number;
    set contentPaddingTop(a: number);
    private al;
    get contentPaddingRight(): number;
    set contentPaddingRight(a: number);
    private aj;
    get contentPaddingBottom(): number;
    set contentPaddingBottom(a: number);
    private fz;
    get horizontalContentAlignment(): string;
    set horizontalContentAlignment(a: string);
    private g6;
    get verticalContentAlignment(): string;
    set verticalContentAlignment(a: string);
    private i;
    get clickTunneling(): boolean;
    set clickTunneling(a: boolean);
    private ex;
    get clickedRef(): string;
    set clickedRef(a: string);
    private fy;
    get gotFocusRef(): string;
    set gotFocusRef(a: string);
    private gf;
    get lostFocusRef(): string;
    set lostFocusRef(a: string);
}
