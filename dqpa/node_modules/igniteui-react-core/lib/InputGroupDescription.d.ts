import { Description } from "./Description";
import { InputGroupItemDescription } from "./InputGroupItemDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class InputGroupDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private gu;
    get displayType(): string;
    set displayType(a: string);
    private gt;
    get density(): string;
    set density(a: string);
    private f6;
    get actualDensity(): string;
    set actualDensity(a: string);
    private gd;
    get baseTheme(): string;
    set baseTheme(a: string);
    private f5;
    get actualBorderColor(): string;
    set actualBorderColor(a: string);
    private f7;
    get actualFocusBorderColor(): string;
    set actualFocusBorderColor(a: string);
    private t;
    get actualBorderWidth(): number;
    set actualBorderWidth(a: number);
    private ac;
    get actualFocusBorderWidth(): number;
    set actualFocusBorderWidth(a: number);
    private z;
    get actualCornerRadiusBottomRight(): number;
    set actualCornerRadiusBottomRight(a: number);
    private y;
    get actualCornerRadiusBottomLeft(): number;
    set actualCornerRadiusBottomLeft(a: number);
    private aa;
    get actualCornerRadiusTopLeft(): number;
    set actualCornerRadiusTopLeft(a: number);
    private ab;
    get actualCornerRadiusTopRight(): number;
    set actualCornerRadiusTopRight(a: number);
    private u;
    get actualContentPaddingBottom(): number;
    set actualContentPaddingBottom(a: number);
    private v;
    get actualContentPaddingLeft(): number;
    set actualContentPaddingLeft(a: number);
    private w;
    get actualContentPaddingRight(): number;
    set actualContentPaddingRight(a: number);
    private x;
    get actualContentPaddingTop(): number;
    set actualContentPaddingTop(a: number);
    private ak;
    get actualUnderlineWidth(): number;
    set actualUnderlineWidth(a: number);
    private aj;
    get actualUnderlineRippleWidth(): number;
    set actualUnderlineRippleWidth(a: number);
    private ag;
    get actualHoverUnderlineWidth(): number;
    set actualHoverUnderlineWidth(a: number);
    private ga;
    get actualUnderlineColor(): string;
    set actualUnderlineColor(a: string);
    private gb;
    get actualUnderlineRippleColor(): string;
    set actualUnderlineRippleColor(a: string);
    private f9;
    get actualHoverUnderlineColor(): string;
    set actualHoverUnderlineColor(a: string);
    private f8;
    get actualFocusUnderlineColor(): string;
    set actualFocusUnderlineColor(a: string);
    private ah;
    get actualUnderlineOpacity(): number;
    set actualUnderlineOpacity(a: number);
    private af;
    get actualHoverUnderlineOpacity(): number;
    set actualHoverUnderlineOpacity(a: number);
    private ad;
    get actualFocusUnderlineOpacity(): number;
    set actualFocusUnderlineOpacity(a: number);
    private ae;
    get actualFocusUnderlineRippleOpacity(): number;
    set actualFocusUnderlineRippleOpacity(a: number);
    private ai;
    get actualUnderlineRippleOpacity(): number;
    set actualUnderlineRippleOpacity(a: number);
    private f4;
    get actualBackgroundColor(): string;
    set actualBackgroundColor(a: string);
    private a3;
    get borderWidth(): number;
    set borderWidth(a: number);
    private bu;
    get focusBorderWidth(): number;
    set focusBorderWidth(a: number);
    private ge;
    get borderColor(): string;
    set borderColor(a: string);
    private br;
    get cornerRadiusBottomRight(): number;
    set cornerRadiusBottomRight(a: number);
    private bq;
    get cornerRadiusBottomLeft(): number;
    set cornerRadiusBottomLeft(a: number);
    private bs;
    get cornerRadiusTopLeft(): number;
    set cornerRadiusTopLeft(a: number);
    private bt;
    get cornerRadiusTopRight(): number;
    set cornerRadiusTopRight(a: number);
    private bm;
    get contentPaddingBottom(): number;
    set contentPaddingBottom(a: number);
    private bn;
    get contentPaddingLeft(): number;
    set contentPaddingLeft(a: number);
    private bo;
    get contentPaddingRight(): number;
    set contentPaddingRight(a: number);
    private bp;
    get contentPaddingTop(): number;
    set contentPaddingTop(a: number);
    private c2;
    get underlineWidth(): number;
    set underlineWidth(a: number);
    private c1;
    get underlineRippleWidth(): number;
    set underlineRippleWidth(a: number);
    private by;
    get hoverUnderlineWidth(): number;
    set hoverUnderlineWidth(a: number);
    private hd;
    get underlineColor(): string;
    set underlineColor(a: string);
    private he;
    get underlineRippleColor(): string;
    set underlineRippleColor(a: string);
    private gx;
    get hoverUnderlineColor(): string;
    set hoverUnderlineColor(a: string);
    private gw;
    get focusUnderlineColor(): string;
    set focusUnderlineColor(a: string);
    private cz;
    get underlineOpacity(): number;
    set underlineOpacity(a: number);
    private bx;
    get hoverUnderlineOpacity(): number;
    set hoverUnderlineOpacity(a: number);
    private bv;
    get focusUnderlineOpacity(): number;
    set focusUnderlineOpacity(a: number);
    private bw;
    get focusUnderlineRippleOpacity(): number;
    set focusUnderlineRippleOpacity(a: number);
    private c0;
    get underlineRippleOpacity(): number;
    set underlineRippleOpacity(a: number);
    private gc;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private bz;
    get lineTypeBorderWidth(): number;
    set lineTypeBorderWidth(a: number);
    private b8;
    get lineTypeFocusBorderWidth(): number;
    set lineTypeFocusBorderWidth(a: number);
    private g1;
    get lineTypeFocusBorderColor(): string;
    set lineTypeFocusBorderColor(a: string);
    private g0;
    get lineTypeBorderColor(): string;
    set lineTypeBorderColor(a: string);
    private b5;
    get lineTypeCornerRadiusBottomRight(): number;
    set lineTypeCornerRadiusBottomRight(a: number);
    private b4;
    get lineTypeCornerRadiusBottomLeft(): number;
    set lineTypeCornerRadiusBottomLeft(a: number);
    private b6;
    get lineTypeCornerRadiusTopLeft(): number;
    set lineTypeCornerRadiusTopLeft(a: number);
    private b7;
    get lineTypeCornerRadiusTopRight(): number;
    set lineTypeCornerRadiusTopRight(a: number);
    private b0;
    get lineTypeContentPaddingBottom(): number;
    set lineTypeContentPaddingBottom(a: number);
    private b1;
    get lineTypeContentPaddingLeft(): number;
    set lineTypeContentPaddingLeft(a: number);
    private b2;
    get lineTypeContentPaddingRight(): number;
    set lineTypeContentPaddingRight(a: number);
    private b3;
    get lineTypeContentPaddingTop(): number;
    set lineTypeContentPaddingTop(a: number);
    private cg;
    get lineTypeUnderlineWidth(): number;
    set lineTypeUnderlineWidth(a: number);
    private cf;
    get lineTypeUnderlineRippleWidth(): number;
    set lineTypeUnderlineRippleWidth(a: number);
    private cc;
    get lineTypeHoverUnderlineWidth(): number;
    set lineTypeHoverUnderlineWidth(a: number);
    private g4;
    get lineTypeUnderlineColor(): string;
    set lineTypeUnderlineColor(a: string);
    private g5;
    get lineTypeUnderlineRippleColor(): string;
    set lineTypeUnderlineRippleColor(a: string);
    private g3;
    get lineTypeHoverUnderlineColor(): string;
    set lineTypeHoverUnderlineColor(a: string);
    private g2;
    get lineTypeFocusUnderlineColor(): string;
    set lineTypeFocusUnderlineColor(a: string);
    private cd;
    get lineTypeUnderlineOpacity(): number;
    set lineTypeUnderlineOpacity(a: number);
    private cb;
    get lineTypeHoverUnderlineOpacity(): number;
    set lineTypeHoverUnderlineOpacity(a: number);
    private b9;
    get lineTypeFocusUnderlineOpacity(): number;
    set lineTypeFocusUnderlineOpacity(a: number);
    private ca;
    get lineTypeFocusUnderlineRippleOpacity(): number;
    set lineTypeFocusUnderlineRippleOpacity(a: number);
    private ce;
    get lineTypeUnderlineRippleOpacity(): number;
    set lineTypeUnderlineRippleOpacity(a: number);
    private gz;
    get lineTypeBackgroundColor(): string;
    set lineTypeBackgroundColor(a: string);
    private a4;
    get boxTypeBorderWidth(): number;
    set boxTypeBorderWidth(a: number);
    private bd;
    get boxTypeFocusBorderWidth(): number;
    set boxTypeFocusBorderWidth(a: number);
    private go;
    get boxTypeFocusBorderColor(): string;
    set boxTypeFocusBorderColor(a: string);
    private gn;
    get boxTypeBorderColor(): string;
    set boxTypeBorderColor(a: string);
    private ba;
    get boxTypeCornerRadiusBottomRight(): number;
    set boxTypeCornerRadiusBottomRight(a: number);
    private a9;
    get boxTypeCornerRadiusBottomLeft(): number;
    set boxTypeCornerRadiusBottomLeft(a: number);
    private bb;
    get boxTypeCornerRadiusTopLeft(): number;
    set boxTypeCornerRadiusTopLeft(a: number);
    private bc;
    get boxTypeCornerRadiusTopRight(): number;
    set boxTypeCornerRadiusTopRight(a: number);
    private a5;
    get boxTypeContentPaddingBottom(): number;
    set boxTypeContentPaddingBottom(a: number);
    private a6;
    get boxTypeContentPaddingLeft(): number;
    set boxTypeContentPaddingLeft(a: number);
    private a7;
    get boxTypeContentPaddingRight(): number;
    set boxTypeContentPaddingRight(a: number);
    private a8;
    get boxTypeContentPaddingTop(): number;
    set boxTypeContentPaddingTop(a: number);
    private bl;
    get boxTypeUnderlineWidth(): number;
    set boxTypeUnderlineWidth(a: number);
    private bk;
    get boxTypeUnderlineRippleWidth(): number;
    set boxTypeUnderlineRippleWidth(a: number);
    private bh;
    get boxTypeHoverUnderlineWidth(): number;
    set boxTypeHoverUnderlineWidth(a: number);
    private gr;
    get boxTypeUnderlineColor(): string;
    set boxTypeUnderlineColor(a: string);
    private gs;
    get boxTypeUnderlineRippleColor(): string;
    set boxTypeUnderlineRippleColor(a: string);
    private gq;
    get boxTypeHoverUnderlineColor(): string;
    set boxTypeHoverUnderlineColor(a: string);
    private gp;
    get boxTypeFocusUnderlineColor(): string;
    set boxTypeFocusUnderlineColor(a: string);
    private bi;
    get boxTypeUnderlineOpacity(): number;
    set boxTypeUnderlineOpacity(a: number);
    private bg;
    get boxTypeHoverUnderlineOpacity(): number;
    set boxTypeHoverUnderlineOpacity(a: number);
    private be;
    get boxTypeFocusUnderlineOpacity(): number;
    set boxTypeFocusUnderlineOpacity(a: number);
    private bf;
    get boxTypeFocusUnderlineRippleOpacity(): number;
    set boxTypeFocusUnderlineRippleOpacity(a: number);
    private bj;
    get boxTypeUnderlineRippleOpacity(): number;
    set boxTypeUnderlineRippleOpacity(a: number);
    private gm;
    get boxTypeBackgroundColor(): string;
    set boxTypeBackgroundColor(a: string);
    private al;
    get borderTypeBorderWidth(): number;
    set borderTypeBorderWidth(a: number);
    private au;
    get borderTypeFocusBorderWidth(): number;
    set borderTypeFocusBorderWidth(a: number);
    private gh;
    get borderTypeFocusBorderColor(): string;
    set borderTypeFocusBorderColor(a: string);
    private gg;
    get borderTypeBorderColor(): string;
    set borderTypeBorderColor(a: string);
    private ar;
    get borderTypeCornerRadiusBottomRight(): number;
    set borderTypeCornerRadiusBottomRight(a: number);
    private aq;
    get borderTypeCornerRadiusBottomLeft(): number;
    set borderTypeCornerRadiusBottomLeft(a: number);
    private as;
    get borderTypeCornerRadiusTopLeft(): number;
    set borderTypeCornerRadiusTopLeft(a: number);
    private at;
    get borderTypeCornerRadiusTopRight(): number;
    set borderTypeCornerRadiusTopRight(a: number);
    private am;
    get borderTypeContentPaddingBottom(): number;
    set borderTypeContentPaddingBottom(a: number);
    private an;
    get borderTypeContentPaddingLeft(): number;
    set borderTypeContentPaddingLeft(a: number);
    private ao;
    get borderTypeContentPaddingRight(): number;
    set borderTypeContentPaddingRight(a: number);
    private ap;
    get borderTypeContentPaddingTop(): number;
    set borderTypeContentPaddingTop(a: number);
    private a2;
    get borderTypeUnderlineWidth(): number;
    set borderTypeUnderlineWidth(a: number);
    private a1;
    get borderTypeUnderlineRippleWidth(): number;
    set borderTypeUnderlineRippleWidth(a: number);
    private ay;
    get borderTypeHoverUnderlineWidth(): number;
    set borderTypeHoverUnderlineWidth(a: number);
    private gk;
    get borderTypeUnderlineColor(): string;
    set borderTypeUnderlineColor(a: string);
    private gl;
    get borderTypeUnderlineRippleColor(): string;
    set borderTypeUnderlineRippleColor(a: string);
    private gj;
    get borderTypeHoverUnderlineColor(): string;
    set borderTypeHoverUnderlineColor(a: string);
    private gi;
    get borderTypeFocusUnderlineColor(): string;
    set borderTypeFocusUnderlineColor(a: string);
    private az;
    get borderTypeUnderlineOpacity(): number;
    set borderTypeUnderlineOpacity(a: number);
    private ax;
    get borderTypeHoverUnderlineOpacity(): number;
    set borderTypeHoverUnderlineOpacity(a: number);
    private av;
    get borderTypeFocusUnderlineOpacity(): number;
    set borderTypeFocusUnderlineOpacity(a: number);
    private aw;
    get borderTypeFocusUnderlineRippleOpacity(): number;
    set borderTypeFocusUnderlineRippleOpacity(a: number);
    private a0;
    get borderTypeUnderlineRippleOpacity(): number;
    set borderTypeUnderlineRippleOpacity(a: number);
    private gf;
    get borderTypeBackgroundColor(): string;
    set borderTypeBackgroundColor(a: string);
    private ch;
    get searchTypeBorderWidth(): number;
    set searchTypeBorderWidth(a: number);
    private cq;
    get searchTypeFocusBorderWidth(): number;
    set searchTypeFocusBorderWidth(a: number);
    private g8;
    get searchTypeFocusBorderColor(): string;
    set searchTypeFocusBorderColor(a: string);
    private g7;
    get searchTypeBorderColor(): string;
    set searchTypeBorderColor(a: string);
    private cn;
    get searchTypeCornerRadiusBottomRight(): number;
    set searchTypeCornerRadiusBottomRight(a: number);
    private cm;
    get searchTypeCornerRadiusBottomLeft(): number;
    set searchTypeCornerRadiusBottomLeft(a: number);
    private co;
    get searchTypeCornerRadiusTopLeft(): number;
    set searchTypeCornerRadiusTopLeft(a: number);
    private cp;
    get searchTypeCornerRadiusTopRight(): number;
    set searchTypeCornerRadiusTopRight(a: number);
    private ci;
    get searchTypeContentPaddingBottom(): number;
    set searchTypeContentPaddingBottom(a: number);
    private cj;
    get searchTypeContentPaddingLeft(): number;
    set searchTypeContentPaddingLeft(a: number);
    private ck;
    get searchTypeContentPaddingRight(): number;
    set searchTypeContentPaddingRight(a: number);
    private cl;
    get searchTypeContentPaddingTop(): number;
    set searchTypeContentPaddingTop(a: number);
    private cy;
    get searchTypeUnderlineWidth(): number;
    set searchTypeUnderlineWidth(a: number);
    private cx;
    get searchTypeUnderlineRippleWidth(): number;
    set searchTypeUnderlineRippleWidth(a: number);
    private cu;
    get searchTypeHoverUnderlineWidth(): number;
    set searchTypeHoverUnderlineWidth(a: number);
    private hb;
    get searchTypeUnderlineColor(): string;
    set searchTypeUnderlineColor(a: string);
    private hc;
    get searchTypeUnderlineRippleColor(): string;
    set searchTypeUnderlineRippleColor(a: string);
    private ha;
    get searchTypeHoverUnderlineColor(): string;
    set searchTypeHoverUnderlineColor(a: string);
    private g9;
    get searchTypeFocusUnderlineColor(): string;
    set searchTypeFocusUnderlineColor(a: string);
    private cv;
    get searchTypeUnderlineOpacity(): number;
    set searchTypeUnderlineOpacity(a: number);
    private ct;
    get searchTypeHoverUnderlineOpacity(): number;
    set searchTypeHoverUnderlineOpacity(a: number);
    private cr;
    get searchTypeFocusUnderlineOpacity(): number;
    set searchTypeFocusUnderlineOpacity(a: number);
    private cs;
    get searchTypeFocusUnderlineRippleOpacity(): number;
    set searchTypeFocusUnderlineRippleOpacity(a: number);
    private cw;
    get searchTypeUnderlineRippleOpacity(): number;
    set searchTypeUnderlineRippleOpacity(a: number);
    private g6;
    get searchTypeBackgroundColor(): string;
    set searchTypeBackgroundColor(a: string);
    private l;
    get isExpanded(): boolean;
    set isExpanded(a: boolean);
    private n;
    get isHovered(): boolean;
    set isHovered(a: boolean);
    private m;
    get isFocused(): boolean;
    set isFocused(a: boolean);
    private j;
    get actualIsExpanded(): boolean;
    set actualIsExpanded(a: boolean);
    private gv;
    get focusBorderColor(): string;
    set focusBorderColor(a: string);
    private gy;
    get id(): string;
    set id(a: string);
    private k;
    get disabled(): boolean;
    set disabled(a: boolean);
    private h;
    get inputs(): InputGroupItemDescription[];
    set inputs(a: InputGroupItemDescription[]);
}
