import { SeriesDescription } from "./SeriesDescription";
import { PointDescription } from "./PointDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class AnnotationLayerDescription extends SeriesDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private ff;
    get useIndex(): boolean;
    set useIndex(a: boolean);
    private fg;
    get useLegend(): boolean;
    set useLegend(a: boolean);
    private fb;
    get cursorPosition(): PointDescription;
    set cursorPosition(a: PointDescription);
    private fd;
    get isDefaultCrosshairDisabled(): boolean;
    set isDefaultCrosshairDisabled(a: boolean);
    private f0;
    get appearanceMode(): string;
    set appearanceMode(a: string);
    private fx;
    get actualAppearanceMode(): string;
    set actualAppearanceMode(a: string);
    private fp;
    get shiftAmount(): number;
    set shiftAmount(a: number);
    private fm;
    get actualShiftAmount(): number;
    set actualShiftAmount(a: number);
    private f1;
    get horizontalAppearanceMode(): string;
    set horizontalAppearanceMode(a: string);
    private fy;
    get actualHorizontalAppearanceMode(): string;
    set actualHorizontalAppearanceMode(a: string);
    private f2;
    get verticalAppearanceMode(): string;
    set verticalAppearanceMode(a: string);
    private fz;
    get actualVerticalAppearanceMode(): string;
    set actualVerticalAppearanceMode(a: string);
    private fo;
    get horizontalShiftAmount(): number;
    set horizontalShiftAmount(a: number);
    private fl;
    get actualHorizontalShiftAmount(): number;
    set actualHorizontalShiftAmount(a: number);
    private fq;
    get verticalShiftAmount(): number;
    set verticalShiftAmount(a: number);
    private fn;
    get actualVerticalShiftAmount(): number;
    set actualVerticalShiftAmount(a: number);
    private e5;
    get horizontalDashArray(): number[];
    set horizontalDashArray(a: number[]);
    private e3;
    get actualHorizontalDashArray(): number[];
    set actualHorizontalDashArray(a: number[]);
    private e6;
    get verticalDashArray(): number[];
    set verticalDashArray(a: number[]);
    private e4;
    get actualVerticalDashArray(): number[];
    set actualVerticalDashArray(a: number[]);
    private fe;
    get shouldRenderAsOverlay(): boolean;
    set shouldRenderAsOverlay(a: boolean);
}
