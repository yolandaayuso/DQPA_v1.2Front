import { SeriesDescription } from "./SeriesDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class FinancialSeriesDescription extends SeriesDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private fg;
    get negativeBrush(): string;
    set negativeBrush(a: string);
    private fm;
    get xAxisRef(): string;
    set xAxisRef(a: string);
    private fn;
    get yAxisRef(): string;
    set yAxisRef(a: string);
    private fh;
    get openMemberPath(): string;
    set openMemberPath(a: string);
    private fe;
    get highMemberPath(): string;
    set highMemberPath(a: string);
    private ff;
    get lowMemberPath(): string;
    set lowMemberPath(a: string);
    private e8;
    get closeMemberPath(): string;
    set closeMemberPath(a: string);
    private fl;
    get volumeMemberPath(): string;
    set volumeMemberPath(a: string);
    private fc;
    get highlightedOpenMemberPath(): string;
    set highlightedOpenMemberPath(a: string);
    private fa;
    get highlightedHighMemberPath(): string;
    set highlightedHighMemberPath(a: string);
    private fb;
    get highlightedLowMemberPath(): string;
    set highlightedLowMemberPath(a: string);
    private e9;
    get highlightedCloseMemberPath(): string;
    set highlightedCloseMemberPath(a: string);
    private fd;
    get highlightedVolumeMemberPath(): string;
    set highlightedVolumeMemberPath(a: string);
    private e3;
    get isCustomCategoryStyleAllowed(): boolean;
    set isCustomCategoryStyleAllowed(a: boolean);
    private fi;
    get transitionInMode(): string;
    set transitionInMode(a: string);
    private e4;
    get isTransitionInEnabled(): boolean;
    set isTransitionInEnabled(a: boolean);
    private e7;
    get assigningCategoryStyleRef(): string;
    set assigningCategoryStyleRef(a: string);
    private fj;
    get typicalRef(): string;
    set typicalRef(a: string);
    private fk;
    get typicalBasedOnRef(): string;
    set typicalBasedOnRef(a: string);
}
