import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class DataLegendSeriesValueInfoDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private ab;
    get value(): number;
    set value(a: number);
    private aq;
    get valueNegativePrefix(): string;
    set valueNegativePrefix(a: string);
    private ar;
    get valueNegativeSuffix(): string;
    set valueNegativeSuffix(a: string);
    private as;
    get valuePositivePrefix(): string;
    set valuePositivePrefix(a: string);
    private at;
    get valuePositiveSuffix(): string;
    set valuePositiveSuffix(a: string);
    private al;
    get formatWithSeriesColor(): string;
    set formatWithSeriesColor(a: string);
    private ae;
    get formatMinFractions(): number;
    set formatMinFractions(a: number);
    private ad;
    get formatMaxFractions(): number;
    set formatMaxFractions(a: number);
    private p;
    get formatUsePositiveColor(): boolean;
    set formatUsePositiveColor(a: boolean);
    private o;
    get formatUseNegativeColor(): boolean;
    set formatUseNegativeColor(a: boolean);
    private k;
    get formatAllowCurrency(): boolean;
    set formatAllowCurrency(a: boolean);
    private n;
    get formatAllowPercent(): boolean;
    set formatAllowPercent(a: boolean);
    private l;
    get formatAllowDecimal(): boolean;
    set formatAllowDecimal(a: boolean);
    private m;
    get formatAllowInteger(): boolean;
    set formatAllowInteger(a: boolean);
    private j;
    get formatAllowAbbreviation(): boolean;
    set formatAllowAbbreviation(a: boolean);
    private au;
    get valueType(): string;
    set valueType(a: string);
    private af;
    get index(): number;
    set index(a: number);
    private ag;
    get orderIndex(): number;
    set orderIndex(a: number);
    private q;
    get isExcludeByDefault(): boolean;
    set isExcludeByDefault(a: boolean);
    private i;
    get allowUnits(): boolean;
    set allowUnits(a: boolean);
    private h;
    get allowLabels(): boolean;
    set allowLabels(a: boolean);
    private an;
    get memberPath(): string;
    set memberPath(a: string);
    private am;
    get memberLabel(): string;
    set memberLabel(a: string);
    private ao;
    get memberSymbol(): string;
    set memberSymbol(a: string);
    private ap;
    get memberUnit(): string;
    set memberUnit(a: string);
}
