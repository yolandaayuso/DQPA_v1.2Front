import { Base, IList$1, Type } from "./type";
import { DataSeriesAxisType } from "./DataSeriesAxisType";
import { DataSeriesType } from "./DataSeriesType";
import { DataSeriesMarker } from "./DataSeriesMarker";
import { DataSeriesMemberPathHint } from "./DataSeriesMemberPathHint";
import { DataSeriesIntent } from "./DataSeriesIntent";
/**
 * @hidden
 */
export declare class DataSeries extends Base {
    static $t: Type;
    constructor();
    private m;
    private _name;
    get name(): string;
    set name(a: string);
    private _title;
    get title(): string;
    set title(a: string);
    private _data;
    get data(): any;
    set data(a: any);
    private _highlightedData;
    get highlightedData(): any;
    set highlightedData(a: any);
    private _priority;
    get priority(): number;
    set priority(a: number);
    private _index;
    get index(): number;
    set index(a: number);
    private _suggestedPrimaryAxis;
    get suggestedPrimaryAxis(): DataSeriesAxisType;
    set suggestedPrimaryAxis(a: DataSeriesAxisType);
    private _suggestedSecondaryAxis;
    get suggestedSecondaryAxis(): DataSeriesAxisType;
    set suggestedSecondaryAxis(a: DataSeriesAxisType);
    private _suggestedSeries;
    get suggestedSeries(): DataSeriesType;
    set suggestedSeries(a: DataSeriesType);
    private _dataPath;
    get dataPath(): string;
    set dataPath(a: string);
    private _suggestedMarker;
    get suggestedMarker(): DataSeriesMarker;
    set suggestedMarker(a: DataSeriesMarker);
    addMemberPathHint(a: DataSeriesMemberPathHint): void;
    addMemberPathHint1(a: DataSeriesMemberPathHint, b: DataSeriesIntent): void;
    addMemberPathHint2(a: string, b: DataSeriesIntent): void;
    removeMemberPathHint(a: DataSeriesMemberPathHint): void;
    clearMemberPathHints(): void;
    getMemberPathHintCount(): number;
    getMemberPathHintAt(a: number): DataSeriesMemberPathHint;
    findMatchingHint(a: DataSeriesIntent): DataSeriesMemberPathHint;
    getMemberPathFor(a: DataSeriesIntent): string;
    hasMatchingHint(a: DataSeriesIntent): boolean;
    f(a: DataSeriesIntent): DataSeriesMemberPathHint;
    l(): IList$1<DataSeriesMemberPathHint>;
    clone(): DataSeries;
    equals(a: any): boolean;
    isMatch(a: any): boolean;
    toString(): string;
}
