import { EventProxy } from "./EventProxy";
import { DomWrapper, DomRenderer, NormalizedEvent } from "./dom";
import { Point, Type } from "./type";
import { Rect } from "./Rect";
import { Key } from "./Key";
import { List$1 } from "./List$1";
/**
 * @hidden
 */
export declare abstract class BaseDOMEventProxy extends EventProxy {
    static $t: Type;
    protected b4: DomWrapper;
    d(): EventProxy;
    static get by(): boolean;
    bv: boolean;
    protected bx: boolean;
    bk(a: DomWrapper): Rect;
    br(e_: NormalizedEvent): boolean;
    protected b3: DomRenderer;
    protected cu(a: NormalizedEvent): void;
    private bq;
    static bt: boolean;
    static bu: boolean;
    private bo;
    protected cq(): void;
    protected static ct(source_: any): void;
    protected static cn(source_: any): void;
    protected co(): void;
    protected aw(): void;
    static cc: number;
    static b9: number;
    protected cb(): number;
    protected ca(): number;
    static cs(e_: NormalizedEvent): void;
    static c4(a: DomWrapper): Rect;
    private b1;
    private b2;
    private bz;
    private b0;
    private b5;
    protected c3: Point;
    protected c2: Point;
    protected get b8(): number;
    protected set b8(a: number);
    protected cx(a: NormalizedEvent): void;
    protected cy(e_: NormalizedEvent): void;
    protected cm(e_: NormalizedEvent): void;
    protected ck(e_: NormalizedEvent): void;
    private bn;
    private b6;
    protected cr(): void;
    protected cd(): void;
    protected cp(): void;
    protected bs: boolean;
    private bp;
    protected get bw(): boolean;
    protected set bw(a: boolean);
    protected ci(a: NormalizedEvent): void;
    protected cj(a: NormalizedEvent): void;
    protected cv(a: NormalizedEvent): void;
    private bm;
    protected ch(a: NormalizedEvent): void;
    protected cz(a: NormalizedEvent): void;
    protected cl(a: NormalizedEvent): void;
    protected ce(a: NormalizedEvent): void;
    protected cg(a: NormalizedEvent): void;
    protected c1(a: NormalizedEvent): Key;
    static c0(a: NormalizedEvent): Key;
    protected cf(a: NormalizedEvent, b: boolean): void;
    protected cw(a: NormalizedEvent): void;
    bj(): Point;
}
/**
 * @hidden
 */
export declare class DOMEventProxy extends BaseDOMEventProxy {
    static $t: Type;
    private static dd;
    private de;
    private dg;
    private c6;
    df: any;
    constructor(a: DomWrapper, b: DomRenderer, c: boolean);
    private c8;
    dh(a: any, b: string, c: List$1<() => void>): void;
    at(a: any, b: string): void;
    private dr;
    private dl;
    private dm;
    private dn;
    private dp;
    private dq;
    private dk;
    private di;
    private dj;
    private d3;
    private du;
    private dc;
    private d4;
    private da;
    private db;
    private c9;
    private dz;
    private dw;
    private d0;
    dx(): void;
    private c5;
    private d2;
    private dt;
    private c7;
    private ds;
    private dy;
    private d1;
    private dv;
    bh(a: any, b: string): void;
    av(): void;
}
