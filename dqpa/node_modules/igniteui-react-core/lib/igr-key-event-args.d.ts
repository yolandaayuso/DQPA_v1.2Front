import { ModifierKeys } from "./ModifierKeys";
import { KeyEventArgs as KeyEventArgs_internal } from "./KeyEventArgs";
import { ContentChildrenManager } from "./ContentChildrenManager";
/**
 * Event args for KeyUp and KeyDown events.
*/
export declare class IgrKeyEventArgs {
    protected _implementation: any;
    protected mounted: boolean;
    get nativeElement(): HTMLElement;
    /**
     * @hidden
     */
    get i(): KeyEventArgs_internal;
    protected onImplementationCreated(): void;
    protected _contentChildrenManager: ContentChildrenManager;
    constructor();
    protected _provideImplementation(i: any): void;
    get originalEvent(): any;
    /**
     * Gets a value indicating whether the ALT key was pressed.
    */
    get alt(): boolean;
    /**
     * Gets a value indicating whether the CTRL key was pressed.
    */
    get ctrl(): boolean;
    /**
     * Gets the keyboard code for a KeyDown or KeyUp event.
    */
    get keyCode(): number;
    /**
     * Gets the modifier flags for a KeyDown or KeyUp event.
     * The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.
    */
    get modifiers(): ModifierKeys;
    /**
     * Gets a value indicating whether the SHIFT key was pressed.
    */
    get shift(): boolean;
    /**
     * Gets whether the PreventDefault method was called.
    */
    get defaultPrevented(): boolean;
    /**
     * Tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be.
    
    */
    preventDefault(): void;
    /**
     * Prevent the event from bubbling up.
    
    */
    stopPropagation(): void;
}
