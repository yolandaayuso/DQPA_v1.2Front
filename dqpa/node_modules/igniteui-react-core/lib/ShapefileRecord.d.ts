import { DependencyObject } from "./DependencyObject";
import { INotifyPropertyChanged, PropertyChangedEventArgs, Point, Type } from "./type";
import { ShapeType } from "./ShapeType";
import { List$1 } from "./List$1";
import { Rect } from "./Rect";
import { Dictionary$2 } from "./Dictionary$2";
/**
 * @hidden
 */
export declare class ShapefileRecord extends DependencyObject implements INotifyPropertyChanged {
    static $t: Type;
    constructor();
    private _shapeType;
    get shapeType(): ShapeType;
    set shapeType(a: ShapeType);
    private _fieldsNames;
    get fieldsNames(): List$1<string>;
    set fieldsNames(a: List$1<string>);
    private _fieldsTypes;
    get fieldsTypes(): List$1<string>;
    set fieldsTypes(a: List$1<string>);
    fields: Dictionary$2<string, any>;
    points: List$1<List$1<Point>>;
    private q;
    propertyChanged: (sender: any, e: PropertyChangedEventArgs) => void;
    private _fieldValues;
    get fieldValues(): any;
    set fieldValues(a: any);
    private _bounds;
    get bounds(): Rect;
    set bounds(a: Rect);
    getFieldValue(a: string): any;
    setFieldValue(a: string, b: any): void;
}
