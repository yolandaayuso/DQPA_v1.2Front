import { PortalManager, ReactRenderer } from './react-renderer';
import * as React from 'react';
import { DomWrapper } from "./dom";
export declare class ReactTemplateAdapter<T> {
    private _portalManager;
    private _propertyName;
    private _igTemplating;
    private _renderer;
    private _createExternal;
    constructor(renderer: ReactRenderer, portalManager: PortalManager, propertyName: string, igTemplating: any, createExternal?: () => T);
    private _value;
    createMutationObserver(...args: any[]): any;
    setValue(target: any, value: React.FunctionComponent<{
        dataContext: T;
    }> | React.Component<{
        dataContext: T;
    }>): void;
    private _initializing;
    private _templateContents;
    private _waiting;
    ensureExternalObject(target: any): any;
    adjustDynamicContent(hostElement: DomWrapper, templateId: string, contentId: string, operation: string, context: any): void;
}
