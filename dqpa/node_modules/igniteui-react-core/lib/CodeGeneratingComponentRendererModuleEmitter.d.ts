import { Base, Type } from "./type";
import { CodeGeneratingRendererResult } from "./CodeGeneratingRendererResult";
import { CodeGeneratingCodeWriter } from "./CodeGeneratingCodeWriter";
import { CodeGeneratingImportManager } from "./CodeGeneratingImportManager";
import { CodeGenerationRendererOptions } from "./CodeGenerationRendererOptions";
import { JsonDictionaryItem } from "./JsonDictionaryItem";
import { TypeDescriptionContext } from "./TypeDescriptionContext";
/**
 * @hidden
 */
export declare class CodeGeneratingComponentRendererModuleEmitter extends Base {
    static $t: Type;
    private k;
    private i;
    protected get j(): CodeGeneratingRendererResult;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    private b;
    protected get d(): CodeGeneratingCodeWriter;
    private f;
    protected get h(): CodeGeneratingImportManager;
    private e;
    protected get g(): CodeGeneratingImportManager;
    private a;
    protected get c(): CodeGeneratingCodeWriter;
    n(a: JsonDictionaryItem, b: TypeDescriptionContext): void;
    private l;
    protected o(): void;
    protected m(a: TypeDescriptionContext, b: string, c: boolean): void;
    protected p(): void;
}
