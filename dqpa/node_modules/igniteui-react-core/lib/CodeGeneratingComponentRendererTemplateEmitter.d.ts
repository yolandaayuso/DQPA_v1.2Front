import { Base, Type } from "./type";
import { CodeGeneratingRendererResult } from "./CodeGeneratingRendererResult";
import { CodeGeneratingCodeWriter } from "./CodeGeneratingCodeWriter";
import { CodeGeneratingImportManager } from "./CodeGeneratingImportManager";
import { CodeGenerationRendererOptions } from "./CodeGenerationRendererOptions";
/**
 * @hidden
 */
export declare class CodeGeneratingComponentRendererTemplateEmitter extends Base {
    static $t: Type;
    private o;
    private m;
    protected get n(): CodeGeneratingRendererResult;
    constructor(a: CodeGenerationRendererOptions, b: CodeGeneratingRendererResult);
    private e;
    protected get j(): CodeGeneratingCodeWriter;
    private b;
    protected get g(): CodeGeneratingCodeWriter;
    private c;
    protected get h(): CodeGeneratingCodeWriter;
    private d;
    protected get i(): CodeGeneratingCodeWriter;
    private a;
    protected get f(): CodeGeneratingCodeWriter;
    private k;
    protected get l(): CodeGeneratingImportManager;
    private p;
    r(): void;
    protected s(a: CodeGeneratingImportManager, b: string): void;
    protected q(a: string, b: string): string;
}
