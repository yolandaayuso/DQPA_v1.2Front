import { Base, Type } from "./type";
import { TypeDescriptionContext } from "./TypeDescriptionContext";
import { CodeGenerationLibrary } from "./CodeGenerationLibrary";
/**
 * @hidden
 */
export declare class CodeGenerationRendererOptions extends Base {
    static $t: Type;
    constructor();
    private _forceHelperLookups;
    get forceHelperLookups(): boolean;
    set forceHelperLookups(a: boolean);
    private _skipAlterDataCasing;
    get skipAlterDataCasing(): boolean;
    set skipAlterDataCasing(a: boolean);
    c: boolean;
    private _reusedContext;
    get reusedContext(): TypeDescriptionContext;
    set reusedContext(a: TypeDescriptionContext);
    get g(): boolean;
    private _generateFullProject;
    get generateFullProject(): boolean;
    set generateFullProject(a: boolean);
    private _forceCodeBehind;
    get forceCodeBehind(): boolean;
    set forceCodeBehind(a: boolean);
    private _library;
    get library(): CodeGenerationLibrary;
    set library(a: CodeGenerationLibrary);
    private _cDNBasePath;
    get cDNBasePath(): string;
    set cDNBasePath(a: string);
    private _useSpacesForIndent;
    get useSpacesForIndent(): boolean;
    set useSpacesForIndent(a: boolean);
    private _indentSpaces;
    get indentSpaces(): number;
    set indentSpaces(a: number);
}
