import { Description } from "./Description";
import { WebActionStripDescription } from "./WebActionStripDescription";
import { WebDataCloneStrategyDescription } from "./WebDataCloneStrategyDescription";
import { WebClipboardOptionsDescription } from "./WebClipboardOptionsDescription";
import { WebColumnDescription } from "./WebColumnDescription";
import { WebGridToolbarDescription } from "./WebGridToolbarDescription";
import { WebPaginatorDescription } from "./WebPaginatorDescription";
import { WebGridResourceStringsDescription } from "./WebGridResourceStringsDescription";
import { WebFilteringExpressionsTreeDescription } from "./WebFilteringExpressionsTreeDescription";
import { WebPinningConfigDescription } from "./WebPinningConfigDescription";
import { WebFilteringStrategyDescription } from "./WebFilteringStrategyDescription";
import { WebGridSortingStrategyDescription } from "./WebGridSortingStrategyDescription";
import { WebSortingOptionsDescription } from "./WebSortingOptionsDescription";
import { Type } from "./type";
import { WebSortingExpressionDescription } from "./WebSortingExpressionDescription";
/**
 * @hidden
 */
export declare class WebRowIslandDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private by;
    get childDataKey(): string;
    set childDataKey(a: string);
    private j;
    get childLayoutList(): WebRowIslandDescription[];
    set childLayoutList(a: WebRowIslandDescription[]);
    private h;
    get actionStripComponents(): WebActionStripDescription[];
    set actionStripComponents(a: WebActionStripDescription[]);
    private at;
    get expandChildren(): boolean;
    set expandChildren(a: boolean);
    private cy;
    get hasChildrenKey(): string;
    set hasChildrenKey(a: string);
    private a1;
    get showExpandAll(): boolean;
    set showExpandAll(a: boolean);
    private as;
    get batchEditing(): boolean;
    set batchEditing(a: boolean);
    private bi;
    get snackbarDisplayTime(): number;
    set snackbarDisplayTime(a: number);
    private ar;
    get autoGenerate(): boolean;
    set autoGenerate(a: boolean);
    private i;
    get autoGenerateExclude(): string[];
    set autoGenerateExclude(a: string[]);
    private aw;
    get moving(): boolean;
    set moving(a: boolean);
    private cl;
    get emptyGridTemplateRef(): string;
    set emptyGridTemplateRef(a: string);
    private bq;
    get addRowEmptyTemplateRef(): string;
    set addRowEmptyTemplateRef(a: string);
    private c3;
    get loadingGridTemplateRef(): string;
    set loadingGridTemplateRef(a: string);
    private bj;
    get summaryRowHeight(): number;
    set summaryRowHeight(a: number);
    private z;
    get dataCloneStrategy(): WebDataCloneStrategyDescription;
    set dataCloneStrategy(a: WebDataCloneStrategyDescription);
    private x;
    get clipboardOptions(): WebClipboardOptionsDescription;
    set clipboardOptions(a: WebClipboardOptionsDescription);
    private dd;
    get rowClassesRef(): string;
    set rowClassesRef(a: string);
    private dx;
    get rowStylesRef(): string;
    set rowStylesRef(a: string);
    private c7;
    get primaryKey(): string;
    set primaryKey(a: string);
    private k;
    get columnList(): WebColumnDescription[];
    set columnList(a: WebColumnDescription[]);
    private ch;
    get dragGhostCustomTemplateRef(): string;
    set dragGhostCustomTemplateRef(a: string);
    private dq;
    get rowEditTextTemplateRef(): string;
    set rowEditTextTemplateRef(a: string);
    private dc;
    get rowAddTextTemplateRef(): string;
    set rowAddTextTemplateRef(a: string);
    private dl;
    get rowEditActionsTemplateRef(): string;
    set rowEditActionsTemplateRef(a: string);
    private dr;
    get rowExpandedIndicatorTemplateRef(): string;
    set rowExpandedIndicatorTemplateRef(a: string);
    private df;
    get rowCollapsedIndicatorTemplateRef(): string;
    set rowCollapsedIndicatorTemplateRef(a: string);
    private c0;
    get headerExpandedIndicatorTemplateRef(): string;
    set headerExpandedIndicatorTemplateRef(a: string);
    private cz;
    get headerCollapsedIndicatorTemplateRef(): string;
    set headerCollapsedIndicatorTemplateRef(a: string);
    private cm;
    get excelStyleHeaderIconTemplateRef(): string;
    set excelStyleHeaderIconTemplateRef(a: string);
    private d1;
    get sortAscendingHeaderIconTemplateRef(): string;
    set sortAscendingHeaderIconTemplateRef(a: string);
    private d2;
    get sortDescendingHeaderIconTemplateRef(): string;
    set sortDescendingHeaderIconTemplateRef(a: string);
    private d3;
    get sortHeaderIconTemplateRef(): string;
    set sortHeaderIconTemplateRef(a: string);
    private o;
    get toolbar(): WebGridToolbarDescription[];
    set toolbar(a: WebGridToolbarDescription[]);
    private l;
    get paginationComponents(): WebPaginatorDescription[];
    set paginationComponents(a: WebPaginatorDescription[]);
    private ah;
    get resourceStrings(): WebGridResourceStringsDescription;
    set resourceStrings(a: WebGridResourceStringsDescription);
    private cq;
    get filteringLogic(): string;
    set filteringLogic(a: string);
    private ac;
    get filteringExpressionsTree(): WebFilteringExpressionsTreeDescription;
    set filteringExpressionsTree(a: WebFilteringExpressionsTreeDescription);
    private ab;
    get advancedFilteringExpressionsTree(): WebFilteringExpressionsTreeDescription;
    set advancedFilteringExpressionsTree(a: WebFilteringExpressionsTreeDescription);
    private c4;
    get locale(): string;
    set locale(a: string);
    private c6;
    get pagingMode(): string;
    set pagingMode(a: string);
    private au;
    get hideRowSelectors(): boolean;
    set hideRowSelectors(a: boolean);
    private ax;
    get rowDraggable(): boolean;
    set rowDraggable(a: boolean);
    private eb;
    get validationTrigger(): string;
    set validationTrigger(a: string);
    private ay;
    get rowEditable(): boolean;
    set rowEditable(a: boolean);
    private c2;
    get height(): string;
    set height(a: string);
    private ec;
    get width(): string;
    set width(a: string);
    private bh;
    get rowHeight(): number;
    set rowHeight(a: number);
    private cb;
    get columnWidth(): string;
    set columnWidth(a: string);
    private ck;
    get emptyGridMessage(): string;
    set emptyGridMessage(a: string);
    private av;
    get isLoading(): boolean;
    set isLoading(a: boolean);
    private a0;
    get shouldGenerate(): boolean;
    set shouldGenerate(a: boolean);
    private cj;
    get emptyFilteredGridMessage(): string;
    set emptyFilteredGridMessage(a: string);
    private al;
    get pinning(): WebPinningConfigDescription;
    set pinning(a: WebPinningConfigDescription);
    private aq;
    get allowFiltering(): boolean;
    set allowFiltering(a: boolean);
    private ap;
    get allowAdvancedFiltering(): boolean;
    set allowAdvancedFiltering(a: boolean);
    private cr;
    get filterMode(): string;
    set filterMode(a: string);
    private d8;
    get summaryPosition(): string;
    set summaryPosition(a: string);
    private d7;
    get summaryCalculationMode(): string;
    set summaryCalculationMode(a: string);
    private a2;
    get showSummaryOnCollapse(): boolean;
    set showSummaryOnCollapse(a: boolean);
    private af;
    get filterStrategy(): WebFilteringStrategyDescription;
    set filterStrategy(a: WebFilteringStrategyDescription);
    private aj;
    get sortStrategy(): WebGridSortingStrategyDescription;
    set sortStrategy(a: WebGridSortingStrategyDescription);
    private an;
    get sortingOptions(): WebSortingOptionsDescription;
    set sortingOptions(a: WebSortingOptionsDescription);
    private m;
    get selectedRows(): any[];
    set selectedRows(a: any[]);
    private c1;
    get headSelectorTemplateRef(): string;
    set headSelectorTemplateRef(a: string);
    private dw;
    get rowSelectorTemplateRef(): string;
    set rowSelectorTemplateRef(a: string);
    private ci;
    get dragIndicatorIconTemplateRef(): string;
    set dragIndicatorIconTemplateRef(a: string);
    private n;
    get sortingExpressions(): WebSortingExpressionDescription[];
    set sortingExpressions(a: WebSortingExpressionDescription[]);
    private bx;
    get cellSelection(): string;
    set cellSelection(a: string);
    private du;
    get rowSelection(): string;
    set rowSelection(a: string);
    private b7;
    get columnSelection(): string;
    set columnSelection(a: string);
    private bk;
    get totalRecords(): number;
    set totalRecords(a: number);
    private az;
    get selectRowOnClick(): boolean;
    set selectRowOnClick(a: boolean);
    private c5;
    get name(): string;
    set name(a: string);
    private cu;
    get gridCreatedRef(): string;
    set gridCreatedRef(a: string);
    private cv;
    get gridInitializedRef(): string;
    set gridInitializedRef(a: string);
    private cf;
    get dataPreLoadRef(): string;
    set dataPreLoadRef(a: string);
    private cp;
    get filteringExpressionsTreeChangeRef(): string;
    set filteringExpressionsTreeChangeRef(a: string);
    private br;
    get advancedFilteringExpressionsTreeChangeRef(): string;
    set advancedFilteringExpressionsTreeChangeRef(a: string);
    private cx;
    get gridScrollRef(): string;
    set gridScrollRef(a: string);
    private bs;
    get cellClickRef(): string;
    set cellClickRef(a: string);
    private de;
    get rowClickRef(): string;
    set rowClickRef(a: string);
    private cs;
    get formGroupCreatedRef(): string;
    set formGroupCreatedRef(a: string);
    private ea;
    get validationStatusChangeRef(): string;
    set validationStatusChangeRef(a: string);
    private dz;
    get selectedRef(): string;
    set selectedRef(a: string);
    private dv;
    get rowSelectionChangingRef(): string;
    set rowSelectionChangingRef(a: string);
    private b8;
    get columnSelectionChangingRef(): string;
    set columnSelectionChangingRef(a: string);
    private b3;
    get columnPinRef(): string;
    set columnPinRef(a: string);
    private b4;
    get columnPinnedRef(): string;
    set columnPinnedRef(a: string);
    private bv;
    get cellEditEnterRef(): string;
    set cellEditEnterRef(a: string);
    private bw;
    get cellEditExitRef(): string;
    set cellEditExitRef(a: string);
    private bt;
    get cellEditRef(): string;
    set cellEditRef(a: string);
    private bu;
    get cellEditDoneRef(): string;
    set cellEditDoneRef(a: string);
    private dn;
    get rowEditEnterRef(): string;
    set rowEditEnterRef(a: string);
    private dk;
    get rowEditRef(): string;
    set rowEditRef(a: string);
    private dm;
    get rowEditDoneRef(): string;
    set rowEditDoneRef(a: string);
    private dp;
    get rowEditExitRef(): string;
    set rowEditExitRef(a: string);
    private bz;
    get columnInitRef(): string;
    set columnInitRef(a: string);
    private b6;
    get columnsAutogeneratedRef(): string;
    set columnsAutogeneratedRef(a: string);
    private d4;
    get sortingRef(): string;
    set sortingRef(a: string);
    private d5;
    get sortingDoneRef(): string;
    set sortingDoneRef(a: string);
    private cn;
    get filteringRef(): string;
    set filteringRef(a: string);
    private co;
    get filteringDoneRef(): string;
    set filteringDoneRef(a: string);
    private db;
    get rowAddedRef(): string;
    set rowAddedRef(a: string);
    private dh;
    get rowDeletedRef(): string;
    set rowDeletedRef(a: string);
    private dg;
    get rowDeleteRef(): string;
    set rowDeleteRef(a: string);
    private da;
    get rowAddRef(): string;
    set rowAddRef(a: string);
    private b5;
    get columnResizedRef(): string;
    set columnResizedRef(a: string);
    private cc;
    get contextMenuRef(): string;
    set contextMenuRef(a: string);
    private cg;
    get doubleClickRef(): string;
    set doubleClickRef(a: string);
    private ca;
    get columnVisibilityChangingRef(): string;
    set columnVisibilityChangingRef(a: string);
    private b9;
    get columnVisibilityChangedRef(): string;
    set columnVisibilityChangedRef(a: string);
    private b2;
    get columnMovingStartRef(): string;
    set columnMovingStartRef(a: string);
    private b0;
    get columnMovingRef(): string;
    set columnMovingRef(a: string);
    private b1;
    get columnMovingEndRef(): string;
    set columnMovingEndRef(a: string);
    private cw;
    get gridKeydownRef(): string;
    set gridKeydownRef(a: string);
    private dj;
    get rowDragStartRef(): string;
    set rowDragStartRef(a: string);
    private di;
    get rowDragEndRef(): string;
    set rowDragEndRef(a: string);
    private ct;
    get gridCopyRef(): string;
    set gridCopyRef(a: string);
    private d0;
    get selectedRowsChangeRef(): string;
    set selectedRowsChangeRef(a: string);
    private dy;
    get rowToggleRef(): string;
    set rowToggleRef(a: string);
    private dt;
    get rowPinningRef(): string;
    set rowPinningRef(a: string);
    private ds;
    get rowPinnedRef(): string;
    set rowPinnedRef(a: string);
    private bp;
    get activeNodeChangeRef(): string;
    set activeNodeChangeRef(a: string);
    private d6;
    get sortingExpressionsChangeRef(): string;
    set sortingExpressionsChangeRef(a: string);
    private d9;
    get toolbarExportingRef(): string;
    set toolbarExportingRef(a: string);
    private c8;
    get rangeSelectedRef(): string;
    set rangeSelectedRef(a: string);
    private c9;
    get renderedRef(): string;
    set renderedRef(a: string);
    private ce;
    get dataChangingRef(): string;
    set dataChangingRef(a: string);
    private cd;
    get dataChangedRef(): string;
    set dataChangedRef(a: string);
}
