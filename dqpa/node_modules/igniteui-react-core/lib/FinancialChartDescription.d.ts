import { XYChartDescription } from "./XYChartDescription";
import { TimeAxisBreakDescription } from "./TimeAxisBreakDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class FinancialChartDescription extends XYChartDescription {
    static $t: Type;
    private y1;
    get tooltipTemplateRef(): string;
    set tooltipTemplateRef(a: string);
    private y3;
    get width(): string;
    set width(a: string);
    private y0;
    get height(): string;
    set height(a: string);
    private yy;
    get background(): string;
    set background(a: string);
    protected get_type(): string;
    constructor();
    private xn;
    get leftMargin(): number;
    set leftMargin(a: number);
    private wz;
    get isHorizontalZoomEnabled(): boolean;
    set isHorizontalZoomEnabled(a: boolean);
    private xr;
    get toolbarHeight(): number;
    set toolbarHeight(a: number);
    private w7;
    get yAxisIsLogarithmic(): boolean;
    set yAxisIsLogarithmic(a: boolean);
    private yq;
    get yAxisLogarithmBase(): number;
    set yAxisLogarithmBase(a: number);
    private xy;
    get yAxisInterval(): number;
    set yAxisInterval(a: number);
    private x0;
    get yAxisMinimumValue(): number;
    set yAxisMinimumValue(a: number);
    private xz;
    get yAxisMaximumValue(): number;
    set yAxisMaximumValue(a: number);
    private x1;
    get yAxisMinorInterval(): number;
    set yAxisMinorInterval(a: number);
    private y2;
    get volumeType(): string;
    set volumeType(a: string);
    private y4;
    get xAxisMode(): string;
    set xAxisMode(a: string);
    private xt;
    get xAxisZoomMaximumCategoryRange(): number;
    set xAxisZoomMaximumCategoryRange(a: number);
    private xw;
    get xAxisZoomToCategoryStart(): number;
    set xAxisZoomToCategoryStart(a: number);
    private xu;
    get xAxisZoomMaximumItemSpan(): number;
    set xAxisZoomMaximumItemSpan(a: number);
    private xv;
    get xAxisZoomToCategoryRange(): number;
    set xAxisZoomToCategoryRange(a: number);
    private xx;
    get xAxisZoomToItemSpan(): number;
    set xAxisZoomToItemSpan(a: number);
    private y6;
    get yAxisMode(): string;
    set yAxisMode(a: string);
    private w1;
    get isToolbarVisible(): boolean;
    set isToolbarVisible(a: boolean);
    private yz;
    get chartType(): string;
    set chartType(a: string);
    private y5;
    get yAxisLabelHorizontalAlignment(): string;
    set yAxisLabelHorizontalAlignment(a: string);
    private w3;
    get isWindowSyncedToVisibleRange(): boolean;
    set isWindowSyncedToVisibleRange(a: boolean);
    private wb;
    get indicatorTypes(): string[];
    set indicatorTypes(a: string[]);
    private wg;
    get overlayTypes(): string[];
    set overlayTypes(a: string[]);
    private w5;
    get yAxisAbbreviateLargeNumbers(): boolean;
    set yAxisAbbreviateLargeNumbers(a: boolean);
    private xq;
    get resolution(): number;
    set resolution(a: number);
    private w4;
    get xAxisEnhancedIntervalPreferMoreCategoryLabels(): boolean;
    set xAxisEnhancedIntervalPreferMoreCategoryLabels(a: boolean);
    private w6;
    get yAxisEnhancedIntervalPreferMoreCategoryLabels(): boolean;
    set yAxisEnhancedIntervalPreferMoreCategoryLabels(a: boolean);
    private y7;
    get zoomSliderType(): string;
    set zoomSliderType(a: string);
    private wc;
    get negativeBrushes(): string[];
    set negativeBrushes(a: string[]);
    private wd;
    get negativeOutlines(): string[];
    set negativeOutlines(a: string[]);
    private we;
    get overlayBrushes(): string[];
    set overlayBrushes(a: string[]);
    private wf;
    get overlayOutlines(): string[];
    set overlayOutlines(a: string[]);
    private wj;
    get volumeOutlines(): string[];
    set volumeOutlines(a: string[]);
    private wi;
    get volumeBrushes(): string[];
    set volumeBrushes(a: string[]);
    private wa;
    get indicatorNegativeBrushes(): string[];
    set indicatorNegativeBrushes(a: string[]);
    private v8;
    get indicatorBrushes(): string[];
    set indicatorBrushes(a: string[]);
    private xs;
    get volumeThickness(): number;
    set volumeThickness(a: number);
    private xp;
    get overlayThickness(): number;
    set overlayThickness(a: number);
    private xo;
    get overlayMultiplier(): number;
    set overlayMultiplier(a: number);
    private xm;
    get indicatorThickness(): number;
    set indicatorThickness(a: number);
    private v9;
    get indicatorDisplayTypes(): string[];
    set indicatorDisplayTypes(a: string[]);
    private ym;
    get indicatorPeriod(): number;
    set indicatorPeriod(a: number);
    private xl;
    get indicatorMultiplier(): number;
    set indicatorMultiplier(a: number);
    private yp;
    get indicatorSmoothingPeriod(): number;
    set indicatorSmoothingPeriod(a: number);
    private yn;
    get indicatorShortPeriod(): number;
    set indicatorShortPeriod(a: number);
    private yl;
    get indicatorLongPeriod(): number;
    set indicatorLongPeriod(a: number);
    private yo;
    get indicatorSignalPeriod(): number;
    set indicatorSignalPeriod(a: number);
    private wh;
    get rangeSelectorOptions(): string[];
    set rangeSelectorOptions(a: string[]);
    private v7;
    get customIndicatorNames(): string[];
    set customIndicatorNames(a: string[]);
    private w2;
    get isVerticalZoomEnabled(): boolean;
    set isVerticalZoomEnabled(a: boolean);
    private y8;
    get zoomSliderXAxisMajorStroke(): string;
    set zoomSliderXAxisMajorStroke(a: string);
    private x2;
    get zoomSliderXAxisMajorStrokeThickness(): number;
    set zoomSliderXAxisMajorStrokeThickness(a: number);
    private w0;
    get isLegendVisible(): boolean;
    set isLegendVisible(a: boolean);
    private xi;
    get xAxisMinimumValue(): Date;
    set xAxisMinimumValue(a: Date);
    private xh;
    get xAxisMaximumValue(): Date;
    set xAxisMaximumValue(a: Date);
    private wk;
    get xAxisBreaks(): TimeAxisBreakDescription[];
    set xAxisBreaks(a: TimeAxisBreakDescription[]);
    private yx;
    get applyCustomIndicatorsRef(): string;
    set applyCustomIndicatorsRef(a: string);
}
