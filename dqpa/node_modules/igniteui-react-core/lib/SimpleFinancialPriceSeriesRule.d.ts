import { Base, Type } from "./type";
import { IDataSeriesAdapterRule } from "./IDataSeriesAdapterRule";
import { DataSeriesAdapterRunContext } from "./DataSeriesAdapterRunContext";
import { DataSeriesDataProviderAnalyzer } from "./DataSeriesDataProviderAnalyzer";
/**
 * @hidden
 */
export declare class SimpleFinancialPriceSeriesRule extends Base implements IDataSeriesAdapterRule {
    static $t: Type;
    constructor();
    private _priority;
    get priority(): number;
    set priority(a: number);
    private _distinctCheckThreshold;
    get distinctCheckThreshold(): number;
    set distinctCheckThreshold(a: number);
    private f;
    static e(a: DataSeriesAdapterRunContext, b: number): string;
    getPrimaryAxisLabelsString(a: DataSeriesAdapterRunContext): string;
    static d(a: DataSeriesDataProviderAnalyzer, b: number): string;
    static b(a: DataSeriesAdapterRunContext, b: number): string;
    evaluate(a: DataSeriesAdapterRunContext): void;
    private c;
    getAdditionalValuePropertyStrings(a: DataSeriesAdapterRunContext): string[];
    getPrimaryAxisLabelsStrings(a: DataSeriesAdapterRunContext): string[];
}
