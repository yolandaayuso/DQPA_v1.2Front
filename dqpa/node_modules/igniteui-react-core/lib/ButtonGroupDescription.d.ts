import { Description } from "./Description";
import { ButtonDescription } from "./ButtonDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class ButtonGroupDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private au;
    get displayType(): string;
    set displayType(a: string);
    private as;
    get baseTheme(): string;
    set baseTheme(a: string);
    private at;
    get density(): string;
    set density(a: string);
    private af;
    get actualDensity(): string;
    set actualDensity(a: string);
    private i;
    get selectedIndices(): number[];
    set selectedIndices(a: number[]);
    private q;
    get actualItemCornerRadius(): number;
    set actualItemCornerRadius(a: number);
    private ag;
    get actualItemBackgroundColor(): string;
    set actualItemBackgroundColor(a: string);
    private ai;
    get actualItemDisabledBackgroundColor(): string;
    set actualItemDisabledBackgroundColor(a: string);
    private an;
    get actualItemTextColor(): string;
    set actualItemTextColor(a: string);
    private ak;
    get actualItemDisabledTextColor(): string;
    set actualItemDisabledTextColor(a: string);
    private ah;
    get actualItemBorderColor(): string;
    set actualItemBorderColor(a: string);
    private aj;
    get actualItemDisabledBorderColor(): string;
    set actualItemDisabledBorderColor(a: string);
    private p;
    get actualItemBorderWidth(): number;
    set actualItemBorderWidth(a: number);
    private ao;
    get actualSelectedItemBackgroundColor(): string;
    set actualSelectedItemBackgroundColor(a: string);
    private ar;
    get actualSelectedItemTextColor(): string;
    set actualSelectedItemTextColor(a: string);
    private al;
    get actualItemHoverBackgroundColor(): string;
    set actualItemHoverBackgroundColor(a: string);
    private am;
    get actualItemHoverTextColor(): string;
    set actualItemHoverTextColor(a: string);
    private ap;
    get actualSelectedItemHoverBackgroundColor(): string;
    set actualSelectedItemHoverBackgroundColor(a: string);
    private aq;
    get actualSelectedItemHoverTextColor(): string;
    set actualSelectedItemHoverTextColor(a: string);
    private u;
    get itemCornerRadius(): number;
    set itemCornerRadius(a: number);
    private a8;
    get itemBackgroundColor(): string;
    set itemBackgroundColor(a: string);
    private ba;
    get itemDisabledBackgroundColor(): string;
    set itemDisabledBackgroundColor(a: string);
    private bf;
    get itemTextColor(): string;
    set itemTextColor(a: string);
    private bc;
    get itemDisabledTextColor(): string;
    set itemDisabledTextColor(a: string);
    private bd;
    get itemHoverBackgroundColor(): string;
    set itemHoverBackgroundColor(a: string);
    private a9;
    get itemBorderColor(): string;
    set itemBorderColor(a: string);
    private bb;
    get itemDisabledBorderColor(): string;
    set itemDisabledBorderColor(a: string);
    private t;
    get itemBorderWidth(): number;
    set itemBorderWidth(a: number);
    private be;
    get itemHoverTextColor(): string;
    set itemHoverTextColor(a: string);
    private bt;
    get selectedItemBackgroundColor(): string;
    set selectedItemBackgroundColor(a: string);
    private bw;
    get selectedItemTextColor(): string;
    set selectedItemTextColor(a: string);
    private bu;
    get selectedItemHoverBackgroundColor(): string;
    set selectedItemHoverBackgroundColor(a: string);
    private bv;
    get selectedItemHoverTextColor(): string;
    set selectedItemHoverTextColor(a: string);
    private w;
    get outlinedItemCornerRadius(): number;
    set outlinedItemCornerRadius(a: number);
    private bh;
    get outlinedItemBackgroundColor(): string;
    set outlinedItemBackgroundColor(a: string);
    private bj;
    get outlinedItemDisabledBackgroundColor(): string;
    set outlinedItemDisabledBackgroundColor(a: string);
    private bo;
    get outlinedItemTextColor(): string;
    set outlinedItemTextColor(a: string);
    private bl;
    get outlinedItemDisabledTextColor(): string;
    set outlinedItemDisabledTextColor(a: string);
    private bm;
    get outlinedItemHoverBackgroundColor(): string;
    set outlinedItemHoverBackgroundColor(a: string);
    private bi;
    get outlinedItemBorderColor(): string;
    set outlinedItemBorderColor(a: string);
    private bk;
    get outlinedItemDisabledBorderColor(): string;
    set outlinedItemDisabledBorderColor(a: string);
    private v;
    get outlinedItemBorderWidth(): number;
    set outlinedItemBorderWidth(a: number);
    private bn;
    get outlinedItemHoverTextColor(): string;
    set outlinedItemHoverTextColor(a: string);
    private bp;
    get outlinedSelectedItemBackgroundColor(): string;
    set outlinedSelectedItemBackgroundColor(a: string);
    private bs;
    get outlinedSelectedItemTextColor(): string;
    set outlinedSelectedItemTextColor(a: string);
    private bq;
    get outlinedSelectedItemHoverBackgroundColor(): string;
    set outlinedSelectedItemHoverBackgroundColor(a: string);
    private br;
    get outlinedSelectedItemHoverTextColor(): string;
    set outlinedSelectedItemHoverTextColor(a: string);
    private s;
    get flatItemCornerRadius(): number;
    set flatItemCornerRadius(a: number);
    private av;
    get flatItemBackgroundColor(): string;
    set flatItemBackgroundColor(a: string);
    private ax;
    get flatItemDisabledBackgroundColor(): string;
    set flatItemDisabledBackgroundColor(a: string);
    private a2;
    get flatItemTextColor(): string;
    set flatItemTextColor(a: string);
    private az;
    get flatItemDisabledTextColor(): string;
    set flatItemDisabledTextColor(a: string);
    private a0;
    get flatItemHoverBackgroundColor(): string;
    set flatItemHoverBackgroundColor(a: string);
    private aw;
    get flatItemBorderColor(): string;
    set flatItemBorderColor(a: string);
    private ay;
    get flatItemDisabledBorderColor(): string;
    set flatItemDisabledBorderColor(a: string);
    private r;
    get flatItemBorderWidth(): number;
    set flatItemBorderWidth(a: number);
    private a1;
    get flatItemHoverTextColor(): string;
    set flatItemHoverTextColor(a: string);
    private a3;
    get flatSelectedItemBackgroundColor(): string;
    set flatSelectedItemBackgroundColor(a: string);
    private a6;
    get flatSelectedItemTextColor(): string;
    set flatSelectedItemTextColor(a: string);
    private a4;
    get flatSelectedItemHoverBackgroundColor(): string;
    set flatSelectedItemHoverBackgroundColor(a: string);
    private a5;
    get flatSelectedItemHoverTextColor(): string;
    set flatSelectedItemHoverTextColor(a: string);
    private bg;
    get orientation(): string;
    set orientation(a: string);
    private a7;
    get id(): string;
    set id(a: string);
    private l;
    get disabled(): boolean;
    set disabled(a: boolean);
    private m;
    get isMultiSelect(): boolean;
    set isMultiSelect(a: boolean);
    private h;
    get buttons(): ButtonDescription[];
    set buttons(a: ButtonDescription[]);
    private bx;
    get selectionChangedRef(): string;
    set selectionChangedRef(a: string);
}
