import { Base, Type } from "./type";
import { CodeGenerationLibraryItemPlatform } from "./CodeGenerationLibraryItemPlatform";
import { CodeGenerationLibraryItemContentLocation } from "./CodeGenerationLibraryItemContentLocation";
import { JsonDictionaryItem } from "./JsonDictionaryItem";
import { JsonDictionaryValue } from "./JsonDictionaryValue";
/**
 * @hidden
 */
export declare class CodeGenerationLibraryItemContentConfiguration extends Base {
    static $t: Type;
    private _platform;
    get platform(): CodeGenerationLibraryItemPlatform;
    set platform(a: CodeGenerationLibraryItemPlatform);
    private _location;
    get location(): CodeGenerationLibraryItemContentLocation;
    set location(a: CodeGenerationLibraryItemContentLocation);
    static a(a: JsonDictionaryItem): CodeGenerationLibraryItemContentConfiguration;
    static c(a: JsonDictionaryValue): CodeGenerationLibraryItemContentLocation;
    e(): JsonDictionaryItem;
}
/**
 * @hidden
 */
export declare class CodeGenerationLibraryItemContent extends Base {
    static $t: Type;
    private _platform;
    get platform(): CodeGenerationLibraryItemPlatform;
    set platform(a: CodeGenerationLibraryItemPlatform);
    private _content;
    get content(): string;
    set content(a: string);
    private _isJson;
    get isJson(): boolean;
    set isJson(a: boolean);
    private _isAsync;
    get isAsync(): boolean;
    set isAsync(a: boolean);
    private _isJSContent;
    get isJSContent(): boolean;
    set isJSContent(a: boolean);
    private _configs;
    get configs(): CodeGenerationLibraryItemContentConfiguration[];
    set configs(a: CodeGenerationLibraryItemContentConfiguration[]);
    static b(a: JsonDictionaryItem): CodeGenerationLibraryItemContent;
    e(): JsonDictionaryItem;
    static c(a: JsonDictionaryValue): CodeGenerationLibraryItemPlatform;
}
