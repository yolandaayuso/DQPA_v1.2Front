import { IgRect } from './IgRect';
import { Point } from './type';
import { ShapefileRecord as ShapefileRecord_internal } from "./ShapefileRecord";
import { ShapeType } from "./ShapeType";
/**
 * Represents a record of data from a Shapefile (.shp and .dbf).
*/
export declare class IgrShapefileRecord {
    protected createImplementation(): ShapefileRecord_internal;
    protected _implementation: any;
    get i(): ShapefileRecord_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets the shape type, as read from the header of the Shapefile.
    */
    get shapeType(): ShapeType;
    /**
     * Gets an array of field names and values for this record
    */
    get fieldsNames(): string[];
    /**
     * Gets an arry of field types and values for this record
    */
    get fieldsTypes(): string[];
    /**
     * Gets an array of arrays of points for this record
    */
    get points(): Point[][];
    get fieldValues(): any;
    set fieldValues(v: any);
    /**
     * Gets the bounds for the shapes
    */
    get bounds(): IgRect;
    set bounds(v: IgRect);
    findByName(name: string): any;
    getFieldValue(fieldName: string): any;
    setFieldValue(fieldName: string, value: any): void;
}
