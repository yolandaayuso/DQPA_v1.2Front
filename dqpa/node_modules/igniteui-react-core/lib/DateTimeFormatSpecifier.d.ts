import { FormatSpecifier } from "./FormatSpecifier";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class DateTimeFormatSpecifier extends FormatSpecifier {
    static $t: Type;
    constructor();
    toIntl(): any;
    private aa;
    c(): any;
    private _locale;
    get locale(): string;
    set locale(a: string);
    private _dateStyle;
    get dateStyle(): string;
    set dateStyle(a: string);
    private _timeStyle;
    get timeStyle(): string;
    set timeStyle(a: string);
    private _fractionalSecondDigits;
    get fractionalSecondDigits(): number;
    set fractionalSecondDigits(a: number);
    private _calendar;
    get calendar(): string;
    set calendar(a: string);
    private _dayPeriod;
    get dayPeriod(): string;
    set dayPeriod(a: string);
    private _numberingSystem;
    get numberingSystem(): string;
    set numberingSystem(a: string);
    private _localeMatcher;
    get localeMatcher(): string;
    set localeMatcher(a: string);
    private _timeZone;
    get timeZone(): string;
    set timeZone(a: string);
    private _hour12;
    get hour12(): string;
    set hour12(a: string);
    private _hourCycle;
    get hourCycle(): string;
    set hourCycle(a: string);
    private _formatMatcher;
    get formatMatcher(): string;
    set formatMatcher(a: string);
    private _weekDay;
    get weekDay(): string;
    set weekDay(a: string);
    private _era;
    get era(): string;
    set era(a: string);
    private _year;
    get year(): string;
    set year(a: string);
    private _month;
    get month(): string;
    set month(a: string);
    private _day;
    get day(): string;
    set day(a: string);
    private _hour;
    get hour(): string;
    set hour(a: string);
    private _minute;
    get minute(): string;
    set minute(a: string);
    private _second;
    get second(): string;
    set second(a: string);
    private _timeZoneName;
    get timeZoneName(): string;
    set timeZoneName(a: string);
}
