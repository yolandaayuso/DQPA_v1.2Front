import { Description } from "./Description";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class CalendarDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private o;
    get value(): Date;
    set value(a: Date);
    private n;
    get today(): Date;
    set today(a: Date);
    private m;
    get minDate(): Date;
    set minDate(a: Date);
    private l;
    get maxDate(): Date;
    set maxDate(a: Date);
    private z;
    get density(): string;
    set density(a: string);
    private w;
    get baseTheme(): string;
    set baseTheme(a: string);
    private v;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private ai;
    get selectedDateBackgroundColor(): string;
    set selectedDateBackgroundColor(a: string);
    private ak;
    get selectedFocusDateBackgroundColor(): string;
    set selectedFocusDateBackgroundColor(a: string);
    private ac;
    get focusDateBackgroundColor(): string;
    set focusDateBackgroundColor(a: string);
    private ah;
    get hoverBackgroundColor(): string;
    set hoverBackgroundColor(a: string);
    private am;
    get textColor(): string;
    set textColor(a: string);
    private aj;
    get selectedDateTextColor(): string;
    set selectedDateTextColor(a: string);
    private ad;
    get focusDateTextColor(): string;
    set focusDateTextColor(a: string);
    private y;
    get currentDateTextColor(): string;
    set currentDateTextColor(a: string);
    private x;
    get currentDateBorderColor(): string;
    set currentDateBorderColor(a: string);
    private h;
    get showTodayButton(): boolean;
    set showTodayButton(a: boolean);
    private ae;
    get fontFamily(): string;
    set fontFamily(a: string);
    private t;
    get fontSize(): number;
    set fontSize(a: number);
    private af;
    get fontStyle(): string;
    set fontStyle(a: string);
    private ag;
    get fontWeight(): string;
    set fontWeight(a: string);
    private aa;
    get firstDayOfWeek(): string;
    set firstDayOfWeek(a: string);
    private ab;
    get firstWeekOfYear(): string;
    set firstWeekOfYear(a: string);
    private i;
    get showWeekNumbers(): boolean;
    set showWeekNumbers(a: boolean);
    private al;
    get selectedValueChangedRef(): string;
    set selectedValueChangedRef(a: string);
    private an;
    get valueChangeRef(): string;
    set valueChangeRef(a: string);
}
