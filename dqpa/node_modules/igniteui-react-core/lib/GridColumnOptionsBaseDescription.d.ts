import { Description } from "./Description";
import { DataGridColumnDescription } from "./DataGridColumnDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class GridColumnOptionsBaseDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private j;
    get autoSize(): boolean;
    set autoSize(a: boolean);
    private s;
    get backgroundColor(): string;
    set backgroundColor(a: string);
    private t;
    get baseTheme(): string;
    set baseTheme(a: string);
    private p;
    get actualBaseTheme(): string;
    set actualBaseTheme(a: string);
    private u;
    get buttonDensity(): string;
    set buttonDensity(a: string);
    private q;
    get actualButtonDensity(): string;
    set actualButtonDensity(a: string);
    private v;
    get buttonFontFamily(): string;
    set buttonFontFamily(a: string);
    private l;
    get buttonFontSize(): number;
    set buttonFontSize(a: number);
    private w;
    get buttonFontStyle(): string;
    set buttonFontStyle(a: string);
    private x;
    get buttonFontWeight(): string;
    set buttonFontWeight(a: string);
    private h;
    get column(): DataGridColumnDescription;
    set column(a: DataGridColumnDescription);
    private y;
    get density(): string;
    set density(a: string);
    private r;
    get actualDensity(): string;
    set actualDensity(a: string);
    private z;
    get labelFontFamily(): string;
    set labelFontFamily(a: string);
    private m;
    get labelFontSize(): number;
    set labelFontSize(a: number);
    private aa;
    get labelFontStyle(): string;
    set labelFontStyle(a: string);
    private ab;
    get labelFontWeight(): string;
    set labelFontWeight(a: string);
    private ac;
    get textColor(): string;
    set textColor(a: string);
}
