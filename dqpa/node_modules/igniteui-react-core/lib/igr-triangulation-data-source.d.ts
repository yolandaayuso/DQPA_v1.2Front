import { ItfConverter as ItfConverter_internal } from "./ItfConverter";
import { IgrAsyncCompletedEventArgs } from './igr-async-completed-event-args';
import { TriangulationSourcePointRecord } from './TriangulationSourcePointRecord';
import { Triangle } from './Triangle';
/**
 * Class for converting Itf files into enumerable triangulations.
*/
export declare class IgrTriangulationDataSource {
    protected createImplementation(): ItfConverter_internal;
    protected _implementation: any;
    get i(): ItfConverter_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets the string path specifying the location of the Itf file.
    */
    get source(): string;
    /**
     * Sets the string path specifying the location of the Itf file.
    */
    set source(v: string);
    /**
    * Gets the point data.
    */
    getPointData(): TriangulationSourcePointRecord[];
    /**
    * Gets the triangle data.
    */
    getTriangleData(): Triangle[];
    findByName(name: string): any;
    private _importCompleted;
    private _importCompleted_wrapped;
    /**
     * Event raised when the import operation has completed
    */
    get importCompleted(): (s: IgrTriangulationDataSource, e: IgrAsyncCompletedEventArgs) => void;
    set importCompleted(ev: (s: IgrTriangulationDataSource, e: IgrAsyncCompletedEventArgs) => void);
}
