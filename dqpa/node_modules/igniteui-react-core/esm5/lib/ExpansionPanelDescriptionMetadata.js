/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { OnCollapsedEventArgsDescriptionMetadata } from "./OnCollapsedEventArgsDescriptionMetadata";
import { OnExpandedEventArgsDescriptionMetadata } from "./OnExpandedEventArgsDescriptionMetadata";
import { ExpansionPanelDescription } from "./ExpansionPanelDescription";
/**
 * @hidden
 */
var ExpansionPanelDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ExpansionPanelDescriptionMetadata, _super);
    function ExpansionPanelDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExpansionPanelDescriptionMetadata.b = function (a) {
        if (ExpansionPanelDescriptionMetadata.a == null) {
            ExpansionPanelDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ExpansionPanelDescriptionMetadata.c(ExpansionPanelDescriptionMetadata.a);
        }
        if (a.k(ExpansionPanelDescriptionMetadata.a)) {
            return;
        }
        a.ac(ExpansionPanelDescriptionMetadata.a);
        OnCollapsedEventArgsDescriptionMetadata.d(a);
        OnExpandedEventArgsDescriptionMetadata.d(a);
    };
    ExpansionPanelDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:XExpansionPanel");
        a.item("Caption", "String");
        a.item("CaptionTextColor", "Brush");
        a.item("ActualCaptionTextColor", "Brush");
        a.item("CaptionCollapsedTextColor", "Brush");
        a.item("CaptionExpandedTextColor", "Brush");
        a.item("Description", "String");
        a.item("DescriptionTextColor", "Brush");
        a.item("ActualDescriptionTextColor", "Brush");
        a.item("DescriptionCollapsedTextColor", "Brush");
        a.item("DescriptionExpandedTextColor", "Brush");
        a.item("Elevation", "Number:int");
        a.item("ActualElevation", "Number:int");
        a.item("Expanded", "Boolean");
        a.item("HeaderBackgroundColor", "Brush");
        a.item("ActualHeaderBackgroundColor", "Brush");
        a.item("HeaderCollapsedBackgroundColor", "Brush");
        a.item("HeaderExpandedBackgroundColor", "Brush");
        a.item("ActualUmbraShadowColor", "Brush");
        a.item("ActualPenumbraShadowColor", "Brush");
        a.item("ActualAmbientShadowColor", "Brush");
        a.item("OnCollapsedRef", "EventRef::onCollapsed");
        a.item("OnExpandedRef", "EventRef::onExpanded");
    };
    ExpansionPanelDescriptionMetadata.d = function (a) {
        ExpansionPanelDescriptionMetadata.b(a);
        a.ae("ExpansionPanel", function () { return new ExpansionPanelDescription(); });
        a.ad("ExpansionPanel", ExpansionPanelDescriptionMetadata.a);
    };
    ExpansionPanelDescriptionMetadata.$t = markType(ExpansionPanelDescriptionMetadata, 'ExpansionPanelDescriptionMetadata');
    ExpansionPanelDescriptionMetadata.a = null;
    return ExpansionPanelDescriptionMetadata;
}(Base));
export { ExpansionPanelDescriptionMetadata };
