/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
/**
 * @hidden
 */
var ToolActionInfo = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionInfo, _super);
    function ToolActionInfo() {
        var _this = _super.call(this) || this;
        _this._parentId = null;
        _this._commandId = null;
        _this._commandArgument = null;
        _this._commandArgumentValue = null;
        _this._paddingLeft = 0;
        _this._paddingRight = 0;
        _this._paddingBottom = 0;
        _this._paddingTop = 0;
        _this._name = null;
        _this._title = null;
        _this._subtitle = null;
        _this._iconName = null;
        _this._iconCollectionName = null;
        _this._iconViewBoxLeft = 0;
        _this._iconViewBoxTop = 0;
        _this._iconViewBoxWidth = 0;
        _this._iconViewBoxHeight = 0;
        _this._iconWidth = 0;
        _this._iconHeight = 0;
        _this._subPanelRowHeight = 0;
        _this._height = 0;
        _this._isDisabled = false;
        _this._isHighlighted = false;
        _this._textColor = null;
        _this._disabledTextColor = null;
        _this._closeOnExecute = false;
        _this._density = 0;
        _this._actions = null;
        _this._contextBindings = null;
        _this.iconCollectionName = "default";
        _this.subPanelRowHeight = -1;
        _this.iconViewBoxLeft = NaN;
        _this.iconViewBoxTop = NaN;
        _this.iconViewBoxWidth = NaN;
        _this.iconViewBoxHeight = NaN;
        _this.iconWidth = NaN;
        _this.iconHeight = NaN;
        _this.paddingLeft = NaN;
        _this.paddingRight = NaN;
        _this.paddingBottom = NaN;
        _this.paddingTop = NaN;
        _this.isDisabled = false;
        _this.isHighlighted = false;
        _this.height = NaN;
        return _this;
    }
    Object.defineProperty(ToolActionInfo.prototype, "parentId", {
        get: function () {
            return this._parentId;
        },
        set: function (a) {
            this._parentId = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "commandId", {
        get: function () {
            return this._commandId;
        },
        set: function (a) {
            this._commandId = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "commandArgument", {
        get: function () {
            return this._commandArgument;
        },
        set: function (a) {
            this._commandArgument = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "commandArgumentValue", {
        get: function () {
            return this._commandArgumentValue;
        },
        set: function (a) {
            this._commandArgumentValue = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "paddingLeft", {
        get: function () {
            return this._paddingLeft;
        },
        set: function (a) {
            this._paddingLeft = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "paddingRight", {
        get: function () {
            return this._paddingRight;
        },
        set: function (a) {
            this._paddingRight = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "paddingBottom", {
        get: function () {
            return this._paddingBottom;
        },
        set: function (a) {
            this._paddingBottom = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "paddingTop", {
        get: function () {
            return this._paddingTop;
        },
        set: function (a) {
            this._paddingTop = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "name", {
        get: function () {
            return this._name;
        },
        set: function (a) {
            this._name = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "title", {
        get: function () {
            return this._title;
        },
        set: function (a) {
            this._title = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "subtitle", {
        get: function () {
            return this._subtitle;
        },
        set: function (a) {
            this._subtitle = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "iconName", {
        get: function () {
            return this._iconName;
        },
        set: function (a) {
            this._iconName = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "iconCollectionName", {
        get: function () {
            return this._iconCollectionName;
        },
        set: function (a) {
            this._iconCollectionName = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "iconViewBoxLeft", {
        get: function () {
            return this._iconViewBoxLeft;
        },
        set: function (a) {
            this._iconViewBoxLeft = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "iconViewBoxTop", {
        get: function () {
            return this._iconViewBoxTop;
        },
        set: function (a) {
            this._iconViewBoxTop = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "iconViewBoxWidth", {
        get: function () {
            return this._iconViewBoxWidth;
        },
        set: function (a) {
            this._iconViewBoxWidth = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "iconViewBoxHeight", {
        get: function () {
            return this._iconViewBoxHeight;
        },
        set: function (a) {
            this._iconViewBoxHeight = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "iconWidth", {
        get: function () {
            return this._iconWidth;
        },
        set: function (a) {
            this._iconWidth = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "iconHeight", {
        get: function () {
            return this._iconHeight;
        },
        set: function (a) {
            this._iconHeight = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "subPanelRowHeight", {
        get: function () {
            return this._subPanelRowHeight;
        },
        set: function (a) {
            this._subPanelRowHeight = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "height", {
        get: function () {
            return this._height;
        },
        set: function (a) {
            this._height = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "isDisabled", {
        get: function () {
            return this._isDisabled;
        },
        set: function (a) {
            this._isDisabled = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "isHighlighted", {
        get: function () {
            return this._isHighlighted;
        },
        set: function (a) {
            this._isHighlighted = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "textColor", {
        get: function () {
            return this._textColor;
        },
        set: function (a) {
            this._textColor = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "disabledTextColor", {
        get: function () {
            return this._disabledTextColor;
        },
        set: function (a) {
            this._disabledTextColor = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "closeOnExecute", {
        get: function () {
            return this._closeOnExecute;
        },
        set: function (a) {
            this._closeOnExecute = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "density", {
        get: function () {
            return this._density;
        },
        set: function (a) {
            this._density = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "actions", {
        get: function () {
            return this._actions;
        },
        set: function (a) {
            this._actions = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfo.prototype, "contextBindings", {
        get: function () {
            return this._contextBindings;
        },
        set: function (a) {
            this._contextBindings = a;
        },
        enumerable: false,
        configurable: true
    });
    ToolActionInfo.prototype.get_d = function () {
        return 0;
    };
    Object.defineProperty(ToolActionInfo.prototype, "d", {
        get: function () {
            return this.get_d();
        },
        enumerable: false,
        configurable: true
    });
    ToolActionInfo.$t = markType(ToolActionInfo, 'ToolActionInfo');
    return ToolActionInfo;
}(Base));
export { ToolActionInfo };
