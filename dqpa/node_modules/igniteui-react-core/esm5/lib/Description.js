/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, Boolean_$type, markType } from "./type";
import { List$1 } from "./List$1";
import { Dictionary$2 } from "./Dictionary$2";
/**
 * @hidden
 */
var Description = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Description, _super);
    function Description() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = new Dictionary$2(String_$type, Boolean_$type, 0);
        _this.d = new List$1(String_$type, 0);
        _this.e = null;
        return _this;
    }
    Description.prototype.a = function () {
        if (this.d.count == 0) {
            this.d.add("Type");
        }
        return this.d.toArray();
    };
    Description.prototype.g = function (a) {
        if (!this.c.containsKey(a)) {
            if (this.d.count == 0) {
                this.d.add("Type");
            }
            this.d.add(a);
        }
        this.c.item(a, true);
    };
    Description.prototype.b = function (a) {
        if (this.c.containsKey(a)) {
            return this.c.item(a);
        }
        return false;
    };
    Object.defineProperty(Description.prototype, "name", {
        get: function () {
            return this.e;
        },
        set: function (a) {
            this.e = a;
            this.g("Name");
        },
        enumerable: false,
        configurable: true
    });
    Description.$t = markType(Description, 'Description');
    return Description;
}(Base));
export { Description };
