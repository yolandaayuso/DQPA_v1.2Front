/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebComponentValueChangedEventArgsDescriptionMetadata } from "./WebComponentValueChangedEventArgsDescriptionMetadata";
import { WebMaskInputBaseDescriptionMetadata } from "./WebMaskInputBaseDescriptionMetadata";
import { WebMaskInputDescription } from "./WebMaskInputDescription";
/**
 * @hidden
 */
var WebMaskInputDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebMaskInputDescriptionMetadata, _super);
    function WebMaskInputDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebMaskInputDescriptionMetadata.b = function (a) {
        if (WebMaskInputDescriptionMetadata.a == null) {
            WebMaskInputDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebMaskInputDescriptionMetadata.c(WebMaskInputDescriptionMetadata.a);
        }
        if (a.k(WebMaskInputDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebMaskInputDescriptionMetadata.a);
        WebComponentValueChangedEventArgsDescriptionMetadata.d(a);
    };
    WebMaskInputDescriptionMetadata.c = function (a) {
        WebMaskInputBaseDescriptionMetadata.c(a);
        a.item("__qualifiedNameTS", "String:MaskInput");
        a.item("__tagNameWC", "String:igc-mask-input");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("ValueMode", "ExportedType:string:MaskInputValueMode");
        a.item("ValueMode@stringUnion", "WebComponents;React");
        a.item("ValueMode@names", "Raw;WithFormatting");
        a.item("Value", "String");
        a.item("Mask", "String");
        a.item("ChangeRef", "EventRef::change");
    };
    WebMaskInputDescriptionMetadata.d = function (a) {
        WebMaskInputDescriptionMetadata.b(a);
        a.ae("WebMaskInput", function () { return new WebMaskInputDescription(); });
        a.ad("WebMaskInput", WebMaskInputDescriptionMetadata.a);
    };
    WebMaskInputDescriptionMetadata.$t = markType(WebMaskInputDescriptionMetadata, 'WebMaskInputDescriptionMetadata');
    WebMaskInputDescriptionMetadata.a = null;
    return WebMaskInputDescriptionMetadata;
}(Base));
export { WebMaskInputDescriptionMetadata };
