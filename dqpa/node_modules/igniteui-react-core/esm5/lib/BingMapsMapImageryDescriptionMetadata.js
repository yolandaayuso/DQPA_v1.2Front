/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GeographicMapImageryDescriptionMetadata } from "./GeographicMapImageryDescriptionMetadata";
import { BingMapsMapImageryDescription } from "./BingMapsMapImageryDescription";
/**
 * @hidden
 */
var BingMapsMapImageryDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(BingMapsMapImageryDescriptionMetadata, _super);
    function BingMapsMapImageryDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BingMapsMapImageryDescriptionMetadata.b = function (a) {
        if (BingMapsMapImageryDescriptionMetadata.a == null) {
            BingMapsMapImageryDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            BingMapsMapImageryDescriptionMetadata.c(BingMapsMapImageryDescriptionMetadata.a);
        }
        if (a.k(BingMapsMapImageryDescriptionMetadata.a)) {
            return;
        }
        a.ac(BingMapsMapImageryDescriptionMetadata.a);
    };
    BingMapsMapImageryDescriptionMetadata.c = function (a) {
        GeographicMapImageryDescriptionMetadata.c(a);
        a.item("IsInitialized", "Boolean");
        a.item("IsDeferredLoad", "Boolean");
        a.item("TilePath", "String");
        a.item("ActualTilePath", "String");
        a.item("SubDomains", "Collection:String:SubDomainsCollection:String");
        a.item("ActualSubDomains", "Collection:String:SubDomainsCollection:String");
        a.item("BingImageryRestUri", "String");
        a.item("ActualBingImageryRestUri", "String");
        a.item("CultureName", "String");
        a.item("ApiKey", "String");
        a.item("ImageryStyle", "ExportedType:string:BingMapsImageryStyle");
        a.item("ImageryStyle@names", "Aerial;AerialWithLabels;Road;CanvasDark;CanvasLight;CanvasGray");
    };
    BingMapsMapImageryDescriptionMetadata.d = function (a) {
        BingMapsMapImageryDescriptionMetadata.b(a);
        a.ae("BingMapsMapImagery", function () { return new BingMapsMapImageryDescription(); });
        a.ad("BingMapsMapImagery", BingMapsMapImageryDescriptionMetadata.a);
    };
    BingMapsMapImageryDescriptionMetadata.$t = markType(BingMapsMapImageryDescriptionMetadata, 'BingMapsMapImageryDescriptionMetadata');
    BingMapsMapImageryDescriptionMetadata.a = null;
    return BingMapsMapImageryDescriptionMetadata;
}(Base));
export { BingMapsMapImageryDescriptionMetadata };
