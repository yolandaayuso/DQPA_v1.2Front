/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DefinitionBaseDescriptionMetadata } from "./DefinitionBaseDescriptionMetadata";
import { ColumnMovingSeparatorDescription } from "./ColumnMovingSeparatorDescription";
/**
 * @hidden
 */
var ColumnMovingSeparatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ColumnMovingSeparatorDescriptionMetadata, _super);
    function ColumnMovingSeparatorDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ColumnMovingSeparatorDescriptionMetadata.b = function (a) {
        if (ColumnMovingSeparatorDescriptionMetadata.a == null) {
            ColumnMovingSeparatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ColumnMovingSeparatorDescriptionMetadata.c(ColumnMovingSeparatorDescriptionMetadata.a);
        }
        if (a.k(ColumnMovingSeparatorDescriptionMetadata.a)) {
            return;
        }
        a.ac(ColumnMovingSeparatorDescriptionMetadata.a);
    };
    ColumnMovingSeparatorDescriptionMetadata.c = function (a) {
        DefinitionBaseDescriptionMetadata.c(a);
        a.item("SeparatorWidth", "Number:int");
        a.item("ActualOpacity", "Number:double");
        a.item("Opacity", "Number:double");
    };
    ColumnMovingSeparatorDescriptionMetadata.d = function (a) {
        ColumnMovingSeparatorDescriptionMetadata.b(a);
        a.ae("ColumnMovingSeparator", function () { return new ColumnMovingSeparatorDescription(); });
        a.ad("ColumnMovingSeparator", ColumnMovingSeparatorDescriptionMetadata.a);
    };
    ColumnMovingSeparatorDescriptionMetadata.$t = markType(ColumnMovingSeparatorDescriptionMetadata, 'ColumnMovingSeparatorDescriptionMetadata');
    ColumnMovingSeparatorDescriptionMetadata.a = null;
    return ColumnMovingSeparatorDescriptionMetadata;
}(Base));
export { ColumnMovingSeparatorDescriptionMetadata };
