/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolCommandArgumentDescription } from "./ToolCommandArgumentDescription";
/**
 * @hidden
 */
var ToolCommandArgumentDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolCommandArgumentDescriptionMetadata, _super);
    function ToolCommandArgumentDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolCommandArgumentDescriptionMetadata.b = function (a) {
        if (ToolCommandArgumentDescriptionMetadata.a == null) {
            ToolCommandArgumentDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ToolCommandArgumentDescriptionMetadata.c(ToolCommandArgumentDescriptionMetadata.a);
        }
        if (a.k(ToolCommandArgumentDescriptionMetadata.a)) {
            return;
        }
        a.ac(ToolCommandArgumentDescriptionMetadata.a);
    };
    ToolCommandArgumentDescriptionMetadata.c = function (a) {
        a.item("__marshalByValue", "Boolean");
        a.item("ArgumentName", "String");
        a.item("Value", "Unknown");
    };
    ToolCommandArgumentDescriptionMetadata.d = function (a) {
        ToolCommandArgumentDescriptionMetadata.b(a);
        a.ae("ToolCommandArgument", function () { return new ToolCommandArgumentDescription(); });
        a.ad("ToolCommandArgument", ToolCommandArgumentDescriptionMetadata.a);
    };
    ToolCommandArgumentDescriptionMetadata.$t = markType(ToolCommandArgumentDescriptionMetadata, 'ToolCommandArgumentDescriptionMetadata');
    ToolCommandArgumentDescriptionMetadata.a = null;
    return ToolCommandArgumentDescriptionMetadata;
}(Base));
export { ToolCommandArgumentDescriptionMetadata };
