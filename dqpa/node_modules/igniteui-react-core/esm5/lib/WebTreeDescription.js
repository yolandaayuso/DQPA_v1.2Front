/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var WebTreeDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebTreeDescription, _super);
    function WebTreeDescription() {
        var _this = _super.call(this) || this;
        _this.h = false;
        _this.i = false;
        _this.q = null;
        _this.r = null;
        _this.p = null;
        _this.o = null;
        _this.n = null;
        _this.m = null;
        _this.l = null;
        return _this;
    }
    WebTreeDescription.prototype.get_type = function () {
        return "WebTree";
    };
    Object.defineProperty(WebTreeDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebTreeDescription.prototype, "singleBranchExpand", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("SingleBranchExpand");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebTreeDescription.prototype, "toggleNodeOnClick", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ToggleNodeOnClick");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebTreeDescription.prototype, "selection", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("Selection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebTreeDescription.prototype, "selectionChangedRef", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("SelectionChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebTreeDescription.prototype, "itemExpandingRef", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("ItemExpandingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebTreeDescription.prototype, "itemExpandedRef", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("ItemExpandedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebTreeDescription.prototype, "itemCollapsingRef", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("ItemCollapsingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebTreeDescription.prototype, "itemCollapsedRef", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("ItemCollapsedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebTreeDescription.prototype, "activeItemRef", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("ActiveItemRef");
        },
        enumerable: false,
        configurable: true
    });
    WebTreeDescription.$t = markType(WebTreeDescription, 'WebTreeDescription', Description.$);
    return WebTreeDescription;
}(Description));
export { WebTreeDescription };
