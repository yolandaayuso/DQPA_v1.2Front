/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebSortingExpressionDescriptionMetadata } from "./WebSortingExpressionDescriptionMetadata";
import { WebColumnDescriptionMetadata } from "./WebColumnDescriptionMetadata";
import { WebGroupByRecordDescription } from "./WebGroupByRecordDescription";
/**
 * @hidden
 */
var WebGroupByRecordDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebGroupByRecordDescriptionMetadata, _super);
    function WebGroupByRecordDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebGroupByRecordDescriptionMetadata.b = function (a) {
        if (WebGroupByRecordDescriptionMetadata.a == null) {
            WebGroupByRecordDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebGroupByRecordDescriptionMetadata.c(WebGroupByRecordDescriptionMetadata.a);
        }
        if (a.k(WebGroupByRecordDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebGroupByRecordDescriptionMetadata.a);
        WebSortingExpressionDescriptionMetadata.d(a);
        WebGroupByRecordDescriptionMetadata.d(a);
        WebColumnDescriptionMetadata.d(a);
    };
    WebGroupByRecordDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:GroupByRecord");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__skipSuffix", "Boolean");
        a.item("Expression", "ExportedType:WebSortingExpression");
        a.item("Level", "Number:double");
        a.item("RecordsRef", "(w:Records,wf:Records)DataRef:object");
        a.item("Value", "Unknown");
        a.item("GroupParent", "ExportedType:WebGroupByRecord");
        a.item("Groups", "Array:WebGroupByRecordDescription:GroupByRecord");
        a.item("Height", "Number:double");
        a.item("Column", "ExportedType:WebColumn");
    };
    WebGroupByRecordDescriptionMetadata.d = function (a) {
        WebGroupByRecordDescriptionMetadata.b(a);
        a.ae("WebGroupByRecord", function () { return new WebGroupByRecordDescription(); });
        a.ad("WebGroupByRecord", WebGroupByRecordDescriptionMetadata.a);
    };
    WebGroupByRecordDescriptionMetadata.$t = markType(WebGroupByRecordDescriptionMetadata, 'WebGroupByRecordDescriptionMetadata');
    WebGroupByRecordDescriptionMetadata.a = null;
    return WebGroupByRecordDescriptionMetadata;
}(Base));
export { WebGroupByRecordDescriptionMetadata };
