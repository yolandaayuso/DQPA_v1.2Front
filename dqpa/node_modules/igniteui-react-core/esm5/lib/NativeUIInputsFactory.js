/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
import { INativeUIElementFactory_$type } from "./INativeUIElementFactory";
import { DOMWindowBridge } from "./DOMWindowBridge";
import { NativeUIWindow } from "./NativeUIWindow";
import { NativeUIComponent } from "./NativeUIComponent";
import { GridBridge } from "./GridBridge";
import { NativeUIGrid } from "./NativeUIGrid";
import { AbsolutePanelBridge } from "./AbsolutePanelBridge";
import { NativeUIAbsolutePanel } from "./NativeUIAbsolutePanel";
import { IgcCheckboxBridge } from "./IgcCheckboxBridge";
import { NativeUICheckbox } from "./NativeUICheckbox";
import { IgcSliderBridge } from "./IgcSliderBridge";
import { NativeUISlider } from "./NativeUISlider";
import { IgcDropdownBridge } from "./IgcDropdownBridge";
import { NativeUIDropDown } from "./NativeUIDropDown";
import { SpanBridge } from "./SpanBridge";
import { NativeUILabel } from "./NativeUILabel";
import { IgcInputBridge } from "./IgcInputBridge";
import { NativeUIInput } from "./NativeUIInput";
import { IgcButtonBridge } from "./IgcButtonBridge";
import { NativeUIButton } from "./NativeUIButton";
import { IgcIconButtonBridge } from "./IgcIconButtonBridge";
import { NativeUIIconButton } from "./NativeUIIconButton";
import { DivBridge } from "./DivBridge";
import { NativeUIContent } from "./NativeUIContent";
/**
 * @hidden
 */
var NativeUIInputsFactory = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(NativeUIInputsFactory, _super);
    function NativeUIInputsFactory() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = 0;
        return _this;
    }
    Object.defineProperty(NativeUIInputsFactory, "b", {
        get: function () {
            if (NativeUIInputsFactory.a == null) {
                NativeUIInputsFactory.a = new NativeUIInputsFactory();
                NativeUIWindow.b = new DOMWindowBridge();
            }
            return NativeUIInputsFactory.a;
        },
        enumerable: false,
        configurable: true
    });
    NativeUIInputsFactory.n = function () {
        NativeUIComponent.as(NativeUIInputsFactory.b);
    };
    NativeUIInputsFactory.o = function (a) {
        NativeUIInputsFactory.b.c = a;
        NativeUIComponent.as(NativeUIInputsFactory.b);
    };
    Object.defineProperty(NativeUIInputsFactory.prototype, "flavor", {
        get: function () {
            return this.c;
        },
        enumerable: false,
        configurable: true
    });
    NativeUIInputsFactory.prototype.supportsComponent = function (a) {
        switch (a) {
            case 0: return true;
            case 1: return true;
            case 2: return true;
            case 3: return true;
            case 4: return true;
            case 5: return true;
            case 6: return true;
            case 7: return true;
            case 8: return false;
            case 9: return true;
            case 10: return true;
        }
        return false;
    };
    NativeUIInputsFactory.prototype.createComponentSync = function (a, b, c) {
        this.createComponent(a, b, c);
    };
    NativeUIInputsFactory.prototype.createComponent = function (a, b, c) {
        switch (b) {
            case 0:
                this.g(a, c);
                break;
            case 1:
                this.e(a, c);
                break;
            case 2:
                this.k(a, c);
                break;
            case 3:
                this.l(a, c);
                break;
            case 4:
                this.h(a, c);
                break;
            case 5:
                this.m(a, c);
                break;
            case 6:
                this.f(a, c);
                break;
            case 7:
                this.i(a, c);
                break;
            case 9:
                this.d(a, c);
                break;
            case 10:
                this.j(a, c);
                break;
            case 8: break;
        }
    };
    NativeUIInputsFactory.prototype.i = function (a, b) {
        var c = a;
        var d = c.createElement("div");
        d.setStyleProperty("display", "grid");
        d.setStyleProperty("border-style", "solid");
        d.setStyleProperty("border-width", "0px");
        d.setStyleProperty("grid-template-rows", "minmax(0, 1fr)");
        d.setStyleProperty("grid-template-columns", "minmax(0, 1fr)");
        var e = new GridBridge();
        var f = new NativeUIGrid();
        f.an = d;
        f.d = e;
        b(f);
    };
    NativeUIInputsFactory.prototype.d = function (a, b) {
        var c = a;
        var d = c.createElement("div");
        var e = new AbsolutePanelBridge();
        var f = new NativeUIAbsolutePanel();
        f.an = d;
        f.d = e;
        b(f);
    };
    NativeUIInputsFactory.prototype.f = function (a, b) {
        var c = a;
        var d = c.createElement("igc-checkbox");
        var e = new IgcCheckboxBridge();
        var f = new NativeUICheckbox();
        f.an = d;
        f.d = e;
        b(f);
    };
    NativeUIInputsFactory.prototype.m = function (a, b) {
        var c = a;
        var d = c.createElement("igc-slider");
        d.setProperty("hideTooltip", true);
        var e = new IgcSliderBridge();
        var f = new NativeUISlider();
        f.an = d;
        f.d = e;
        b(f);
    };
    NativeUIInputsFactory.prototype.h = function (a, b) {
        var c = a;
        var d = c.createElement("igc-dropdown");
        var e = c.createElement("igc-input");
        e.setAttribute("slot", "target");
        d.listen("igcChange", function (ev_) {
            var f = ev_.originalEvent.detail.value;
            e.setProperty("value", f);
        });
        d.append(e);
        var f = new IgcDropdownBridge(c);
        var g = new NativeUIDropDown();
        g.an = d;
        g.d = f;
        b(g);
    };
    NativeUIInputsFactory.prototype.l = function (a, b) {
        var c = a;
        var d = c.createElement("span");
        var e = new SpanBridge();
        var f = new NativeUILabel();
        f.an = d;
        f.d = e;
        b(f);
    };
    NativeUIInputsFactory.prototype.k = function (a, b) {
        var c = a;
        var d = c.createElement("igc-input");
        var e = new IgcInputBridge();
        var f = new NativeUIInput();
        f.an = d;
        f.d = e;
        b(f);
    };
    NativeUIInputsFactory.prototype.e = function (a, b) {
        var c = a;
        var d = c.createElement("igc-button");
        var e = new IgcButtonBridge();
        var f = new NativeUIButton();
        f.an = d;
        f.d = e;
        b(f);
    };
    NativeUIInputsFactory.prototype.j = function (a, b) {
        var c = a;
        var d = c.createElement("igc-icon-button");
        var e = new IgcIconButtonBridge();
        var f = new NativeUIIconButton();
        f.an = d;
        f.d = e;
        b(f);
    };
    NativeUIInputsFactory.prototype.g = function (a, b) {
        var c = a;
        var d = c.createElement("div");
        d.setStyleProperty("display", "grid");
        d.setStyleProperty("border-style", "solid");
        d.setStyleProperty("border-width", "0px");
        d.setStyleProperty("grid-template-rows", "minmax(0, 1fr)");
        d.setStyleProperty("grid-template-columns", "minmax(0, 1fr)");
        var e = new DivBridge();
        var f = new NativeUIContent();
        f.an = d;
        f.d = e;
        b(f);
    };
    NativeUIInputsFactory.$t = markType(NativeUIInputsFactory, 'NativeUIInputsFactory', Base.$, [INativeUIElementFactory_$type]);
    NativeUIInputsFactory.a = null;
    return NativeUIInputsFactory;
}(Base));
export { NativeUIInputsFactory };
