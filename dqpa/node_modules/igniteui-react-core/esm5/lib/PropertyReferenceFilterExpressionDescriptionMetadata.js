/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FilterExpressionDescriptionMetadata } from "./FilterExpressionDescriptionMetadata";
import { PropertyReferenceFilterExpressionDescription } from "./PropertyReferenceFilterExpressionDescription";
/**
 * @hidden
 */
var PropertyReferenceFilterExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PropertyReferenceFilterExpressionDescriptionMetadata, _super);
    function PropertyReferenceFilterExpressionDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PropertyReferenceFilterExpressionDescriptionMetadata.b = function (a) {
        if (PropertyReferenceFilterExpressionDescriptionMetadata.a == null) {
            PropertyReferenceFilterExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            PropertyReferenceFilterExpressionDescriptionMetadata.c(PropertyReferenceFilterExpressionDescriptionMetadata.a);
        }
        if (a.k(PropertyReferenceFilterExpressionDescriptionMetadata.a)) {
            return;
        }
        a.ac(PropertyReferenceFilterExpressionDescriptionMetadata.a);
    };
    PropertyReferenceFilterExpressionDescriptionMetadata.c = function (a) {
        FilterExpressionDescriptionMetadata.c(a);
        a.item("PropertyReference", "String");
    };
    PropertyReferenceFilterExpressionDescriptionMetadata.d = function (a) {
        PropertyReferenceFilterExpressionDescriptionMetadata.b(a);
        a.ae("PropertyReferenceFilterExpression", function () { return new PropertyReferenceFilterExpressionDescription(); });
        a.ad("PropertyReferenceFilterExpression", PropertyReferenceFilterExpressionDescriptionMetadata.a);
    };
    PropertyReferenceFilterExpressionDescriptionMetadata.$t = markType(PropertyReferenceFilterExpressionDescriptionMetadata, 'PropertyReferenceFilterExpressionDescriptionMetadata');
    PropertyReferenceFilterExpressionDescriptionMetadata.a = null;
    return PropertyReferenceFilterExpressionDescriptionMetadata;
}(Base));
export { PropertyReferenceFilterExpressionDescriptionMetadata };
