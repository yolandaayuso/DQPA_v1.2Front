/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FinancialCalculationDataSourceDescriptionMetadata } from "./FinancialCalculationDataSourceDescriptionMetadata";
import { FinancialCalculationSupportingCalculationsDescriptionMetadata } from "./FinancialCalculationSupportingCalculationsDescriptionMetadata";
import { FinancialEventArgsDescription } from "./FinancialEventArgsDescription";
/**
 * @hidden
 */
var FinancialEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialEventArgsDescriptionMetadata, _super);
    function FinancialEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FinancialEventArgsDescriptionMetadata.b = function (a) {
        if (FinancialEventArgsDescriptionMetadata.a == null) {
            FinancialEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            FinancialEventArgsDescriptionMetadata.c(FinancialEventArgsDescriptionMetadata.a);
        }
        if (a.k(FinancialEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(FinancialEventArgsDescriptionMetadata.a);
        FinancialCalculationDataSourceDescriptionMetadata.d(a);
        FinancialCalculationSupportingCalculationsDescriptionMetadata.d(a);
    };
    FinancialEventArgsDescriptionMetadata.c = function (a) {
        a.item("Position", "Number:int");
        a.item("Count", "Number:int");
        a.item("DataSource", "ExportedType:FinancialCalculationDataSource");
        a.item("SupportingCalculations", "ExportedType:FinancialCalculationSupportingCalculations");
    };
    FinancialEventArgsDescriptionMetadata.d = function (a) {
        FinancialEventArgsDescriptionMetadata.b(a);
        a.ae("FinancialEventArgs", function () { return new FinancialEventArgsDescription(); });
        a.ad("FinancialEventArgs", FinancialEventArgsDescriptionMetadata.a);
    };
    FinancialEventArgsDescriptionMetadata.$t = markType(FinancialEventArgsDescriptionMetadata, 'FinancialEventArgsDescriptionMetadata');
    FinancialEventArgsDescriptionMetadata.a = null;
    return FinancialEventArgsDescriptionMetadata;
}(Base));
export { FinancialEventArgsDescriptionMetadata };
