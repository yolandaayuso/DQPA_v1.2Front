/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DateRangeDescriptorDescriptionMetadata } from "./DateRangeDescriptorDescriptionMetadata";
import { WebCalendarBaseDescription } from "./WebCalendarBaseDescription";
/**
 * @hidden
 */
var WebCalendarBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebCalendarBaseDescriptionMetadata, _super);
    function WebCalendarBaseDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebCalendarBaseDescriptionMetadata.b = function (a) {
        if (WebCalendarBaseDescriptionMetadata.a == null) {
            WebCalendarBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebCalendarBaseDescriptionMetadata.c(WebCalendarBaseDescriptionMetadata.a);
        }
        if (a.k(WebCalendarBaseDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebCalendarBaseDescriptionMetadata.a);
        DateRangeDescriptorDescriptionMetadata.d(a);
    };
    WebCalendarBaseDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:CalendarBase");
        a.item("__tagNameWC", "String:igc-calendar-base");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("Selection", "ExportedType:string:CalendarBaseSelection");
        a.item("Selection@stringUnion", "WebComponents;React");
        a.item("Selection@names", "Single;Multiple;Range");
        a.item("ShowWeekNumbers", "Boolean");
        a.item("WeekStart", "ExportedType:string:WeekDays");
        a.item("WeekStart@stringUnion", "WebComponents;React");
        a.item("WeekStart@names", "Sunday;Monday;Tuesday;Wednesday;Thursday;Friday;Saturday");
        a.item("Locale", "String");
        a.item("SpecialDates", "Array:DateRangeDescriptorDescription:IDateRangeDescriptor");
        a.item("DisabledDates", "Array:DateRangeDescriptorDescription:IDateRangeDescriptor");
    };
    WebCalendarBaseDescriptionMetadata.d = function (a) {
        WebCalendarBaseDescriptionMetadata.b(a);
        a.ae("WebCalendarBase", function () { return new WebCalendarBaseDescription(); });
        a.ad("WebCalendarBase", WebCalendarBaseDescriptionMetadata.a);
    };
    WebCalendarBaseDescriptionMetadata.$t = markType(WebCalendarBaseDescriptionMetadata, 'WebCalendarBaseDescriptionMetadata');
    WebCalendarBaseDescriptionMetadata.a = null;
    return WebCalendarBaseDescriptionMetadata;
}(Base));
export { WebCalendarBaseDescriptionMetadata };
