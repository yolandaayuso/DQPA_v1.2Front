/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { markEnum } from "./type";
/**
 * Identifies the type of wrapper expression.
 */
export var FilterExpressionWrapperType = /*@__PURE__*/ (function (FilterExpressionWrapperType) {
    /**
     * A wrapper for the Today expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["Today"] = 0] = "Today";
    /**
     * A wrapper for the Tomorrow expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["Tomorrow"] = 1] = "Tomorrow";
    /**
     * A wrapper for the Yesterday expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["Yesterday"] = 2] = "Yesterday";
    /**
     * A wrapper for the ThisWeek expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["ThisWeek"] = 3] = "ThisWeek";
    /**
     * A wrapper for the NextWeek expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["NextWeek"] = 4] = "NextWeek";
    /**
     * A wrapper for the LastWeek expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["LastWeek"] = 5] = "LastWeek";
    /**
     * A wrapper for the ThisMonth expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["ThisMonth"] = 6] = "ThisMonth";
    /**
     * A wrapper for the NextMonth expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["NextMonth"] = 7] = "NextMonth";
    /**
     * A wrapper for the LastMonth expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["LastMonth"] = 8] = "LastMonth";
    /**
     * A wrapper for the ThisYear expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["ThisYear"] = 9] = "ThisYear";
    /**
     * A wrapper for the NextYear expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["NextYear"] = 10] = "NextYear";
    /**
     * A wrapper for the LastYear expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["LastYear"] = 11] = "LastYear";
    /**
     * A wrapper for the ThisQuarter expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["ThisQuarter"] = 12] = "ThisQuarter";
    /**
     * A wrapper for the NextQuarter expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["NextQuarter"] = 13] = "NextQuarter";
    /**
     * A wrapper for the LastQuarter expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["LastQuarter"] = 14] = "LastQuarter";
    /**
     * A wrapper for the YearToDate expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["YearToDate"] = 15] = "YearToDate";
    /**
     * A wrapper for the Q1 expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["Q1"] = 16] = "Q1";
    /**
     * A wrapper for the Q2 expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["Q2"] = 17] = "Q2";
    /**
     * A wrapper for the Q3 expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["Q3"] = 18] = "Q3";
    /**
     * A wrapper for the Q4 expression.
     */
    FilterExpressionWrapperType[FilterExpressionWrapperType["Q4"] = 19] = "Q4";
    return FilterExpressionWrapperType;
})({});
/**
 * @hidden
 */
export var FilterExpressionWrapperType_$type = /*@__PURE__*/ markEnum('FilterExpressionWrapperType', 'Today,0|Tomorrow,1|Yesterday,2|ThisWeek,3|NextWeek,4|LastWeek,5|ThisMonth,6|NextMonth,7|LastMonth,8|ThisYear,9|NextYear,10|LastYear,11|ThisQuarter,12|NextQuarter,13|LastQuarter,14|YearToDate,15|Q1,16|Q2,17|Q3,18|Q4,19');
