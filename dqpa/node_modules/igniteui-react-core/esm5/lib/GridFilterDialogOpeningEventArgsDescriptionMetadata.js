/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DataGridColumnDescriptionMetadata } from "./DataGridColumnDescriptionMetadata";
import { GridFilterDialogOpeningEventArgsDescription } from "./GridFilterDialogOpeningEventArgsDescription";
/**
 * @hidden
 */
var GridFilterDialogOpeningEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridFilterDialogOpeningEventArgsDescriptionMetadata, _super);
    function GridFilterDialogOpeningEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridFilterDialogOpeningEventArgsDescriptionMetadata.b = function (a) {
        if (GridFilterDialogOpeningEventArgsDescriptionMetadata.a == null) {
            GridFilterDialogOpeningEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridFilterDialogOpeningEventArgsDescriptionMetadata.c(GridFilterDialogOpeningEventArgsDescriptionMetadata.a);
        }
        if (a.k(GridFilterDialogOpeningEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(GridFilterDialogOpeningEventArgsDescriptionMetadata.a);
        DataGridColumnDescriptionMetadata.d(a);
    };
    GridFilterDialogOpeningEventArgsDescriptionMetadata.c = function (a) {
        a.item("Column", "ExportedType:DataGridColumn");
    };
    GridFilterDialogOpeningEventArgsDescriptionMetadata.d = function (a) {
        GridFilterDialogOpeningEventArgsDescriptionMetadata.b(a);
        a.ae("GridFilterDialogOpeningEventArgs", function () { return new GridFilterDialogOpeningEventArgsDescription(); });
        a.ad("GridFilterDialogOpeningEventArgs", GridFilterDialogOpeningEventArgsDescriptionMetadata.a);
    };
    GridFilterDialogOpeningEventArgsDescriptionMetadata.$t = markType(GridFilterDialogOpeningEventArgsDescriptionMetadata, 'GridFilterDialogOpeningEventArgsDescriptionMetadata');
    GridFilterDialogOpeningEventArgsDescriptionMetadata.a = null;
    return GridFilterDialogOpeningEventArgsDescriptionMetadata;
}(Base));
export { GridFilterDialogOpeningEventArgsDescriptionMetadata };
