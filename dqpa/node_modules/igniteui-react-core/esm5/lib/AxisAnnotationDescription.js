/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var AxisAnnotationDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AxisAnnotationDescription, _super);
    function AxisAnnotationDescription() {
        var _this = _super.call(this) || this;
        _this.ab = null;
        _this.z = null;
        _this.j = 0;
        _this.x = null;
        _this.h = null;
        _this.w = null;
        _this.aa = null;
        _this.v = null;
        _this.y = null;
        _this.o = 0;
        _this.l = 0;
        _this.n = 0;
        _this.m = 0;
        _this.k = 0;
        return _this;
    }
    AxisAnnotationDescription.prototype.get_type = function () {
        return "AxisAnnotation";
    };
    Object.defineProperty(AxisAnnotationDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "valueRef", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("ValueRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "text", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("Text");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "backgroundCornerRadius", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("BackgroundCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "labelFormat", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("LabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "labelFormatSpecifiers", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("LabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "formatLabelRef", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("FormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "textColor", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "background", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "outline", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("Outline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "strokeThickness", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("StrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "backgroundPaddingLeft", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("BackgroundPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "backgroundPaddingTop", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("BackgroundPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "backgroundPaddingRight", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("BackgroundPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisAnnotationDescription.prototype, "backgroundPaddingBottom", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("BackgroundPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    AxisAnnotationDescription.$t = markType(AxisAnnotationDescription, 'AxisAnnotationDescription', Description.$);
    return AxisAnnotationDescription;
}(Description));
export { AxisAnnotationDescription };
