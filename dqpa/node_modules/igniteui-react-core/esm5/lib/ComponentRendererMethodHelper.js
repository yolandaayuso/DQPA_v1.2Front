/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, markType, EnumUtil } from "./type";
import { ComponentRendererMethodHelperBuilder } from "./ComponentRendererMethodHelperBuilder";
import { JsonDictionaryParser } from "./JsonDictionaryParser";
import { JsonDictionaryObject } from "./JsonDictionaryObject";
import { EmbeddedRefDescription } from "./EmbeddedRefDescription";
import { PointDescription } from "./PointDescription";
import { SizeDescription } from "./SizeDescription";
import { RectDescription } from "./RectDescription";
import { truncate } from "./number";
/**
 * @hidden
 */
var ComponentRendererMethodHelper = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ComponentRendererMethodHelper, _super);
    function ComponentRendererMethodHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ComponentRendererMethodHelper.call = function (a, b) {
        if (b === void 0) {
            b = null;
        }
        return new ComponentRendererMethodHelperBuilder(a, b);
    };
    ComponentRendererMethodHelper.returnAsInt = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            return truncate(b);
        }
        return -2147483648;
    };
    ComponentRendererMethodHelper.l = function (a) {
        var b = new JsonDictionaryParser();
        var c = b.parse(a);
        if (c != null && typeCast(JsonDictionaryObject.$, c) !== null) {
            var d = c;
            if (d.g("result")) {
                if (typeCast(JsonDictionaryObject.$, d.item("result")) !== null) {
                    return d.item("result");
                }
                return d.item("result").value;
            }
        }
        return null;
    };
    ComponentRendererMethodHelper.returnAsDouble = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            return b;
        }
        return NaN;
    };
    ComponentRendererMethodHelper.returnAsShort = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            return truncate(b);
        }
        return -32768;
    };
    ComponentRendererMethodHelper.returnAsLong = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            return truncate(b);
        }
        return -9.2233720368547758E+18;
    };
    ComponentRendererMethodHelper.returnAsFloat = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            return b;
        }
        return NaN;
    };
    ComponentRendererMethodHelper.returnAsEnum = function (a, b) {
        var c = ComponentRendererMethodHelper.l(b);
        if (c != null) {
            return EnumUtil.parse(a, c, true);
        }
        return null;
    };
    ComponentRendererMethodHelper.returnAsString = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            return b;
        }
        return null;
    };
    ComponentRendererMethodHelper.returnAsAsPublicTypeRef = function (a, b) {
        var c = ComponentRendererMethodHelper.l(b);
        if (c != null) {
            var d_1 = c;
            var e = ((function () {
                var $ret = new EmbeddedRefDescription();
                $ret.refType = "name";
                $ret.name = d_1.item("id").value.toString();
                return $ret;
            })());
            return e;
        }
        return null;
    };
    ComponentRendererMethodHelper.returnAsPoint = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            var c = b;
            var d = new PointDescription();
            d.x = c.item("x").value;
            d.y = c.item("y").value;
            return d;
        }
        return null;
    };
    ComponentRendererMethodHelper.returnAsSize = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            var c = b;
            var d = new SizeDescription();
            d.width = c.item("width").value;
            d.height = c.item("height").value;
            return d;
        }
        return null;
    };
    ComponentRendererMethodHelper.returnAsRect = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            var c = b;
            var d = new RectDescription();
            d.width = c.item("width").value;
            d.height = c.item("height").value;
            return d;
        }
        return null;
    };
    ComponentRendererMethodHelper.asMethodRef = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            var c_1 = b;
            var d = ((function () {
                var $ret = new EmbeddedRefDescription();
                $ret.refType = "name";
                $ret.name = c_1.item("id").value.toString();
                return $ret;
            })());
            return d;
        }
        return null;
    };
    ComponentRendererMethodHelper.returnAsBool = function (a) {
        var b = ComponentRendererMethodHelper.l(a);
        if (b != null) {
            return b;
        }
        return false;
    };
    ComponentRendererMethodHelper.$t = markType(ComponentRendererMethodHelper, 'ComponentRendererMethodHelper');
    return ComponentRendererMethodHelper;
}(Base));
export { ComponentRendererMethodHelper };
