/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
import { isNaN_ } from "./number";
/**
 * @hidden
 */
var GridBridgeColumnDefinition = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridBridgeColumnDefinition, _super);
    function GridBridgeColumnDefinition() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = 0;
        _this.d = 0;
        _this.b = NaN;
        return _this;
    }
    Object.defineProperty(GridBridgeColumnDefinition.prototype, "c", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            this.b = a;
        },
        enumerable: false,
        configurable: true
    });
    GridBridgeColumnDefinition.prototype.e = function () {
        switch (this.a) {
            case 0: return "auto";
            case 1: return this.d + "px";
            case 2: return isNaN_(this.c) ? this.d + "fr" : "minmax(" + this.c + "px," + this.d + "fr)";
        }
        return "";
    };
    GridBridgeColumnDefinition.$t = markType(GridBridgeColumnDefinition, 'GridBridgeColumnDefinition');
    return GridBridgeColumnDefinition;
}(Base));
export { GridBridgeColumnDefinition };
