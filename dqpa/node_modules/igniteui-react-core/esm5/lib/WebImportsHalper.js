/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, EnumUtil, fromEnum, markType } from "./type";
import { CodeGenerationTargetPlatforms_$type } from "./CodeGenerationTargetPlatforms";
import { stringContains, stringEndsWith, stringStartsWith } from "./string";
/**
 * @hidden
 */
var WebImportsHalper = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebImportsHalper, _super);
    function WebImportsHalper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebImportsHalper.b = function (a, b, c, d, e, f, g) {
        var e_1, _a;
        try {
            for (var _b = __values(fromEnum(f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                var i = h;
                var j = h;
                var k = null;
                if (stringContains(i, ":")) {
                    var l = i.split(':');
                    i = l[0];
                    k = l[1];
                    j = i;
                }
                if (stringEndsWith(i, "Component")) {
                    i = i.substr(0, i.length - ("Component").length);
                }
                if (stringStartsWith(i, d)) {
                    i = i.substr(d.length);
                }
                if (e.getMetadata(i, "__importTypes" + EnumUtil.getName(CodeGenerationTargetPlatforms_$type, a.platform)) != null) {
                    g.addPackageImport(e.getMetadata(i, "__importTypes" + EnumUtil.getName(CodeGenerationTargetPlatforms_$type, a.platform)).specificExternalType, j);
                }
                else if (e.getMetadata("Web" + i, "__importTypes" + EnumUtil.getName(CodeGenerationTargetPlatforms_$type, a.platform)) != null) {
                    g.addPackageImport(e.getMetadata("Web" + i, "__importTypes" + EnumUtil.getName(CodeGenerationTargetPlatforms_$type, a.platform)).specificExternalType, j);
                }
                else {
                    if (k != null) {
                        g.addPackageImport(k, j);
                    }
                    else {
                        g.addPackageImport("igniteui-" + b + "-" + c, j);
                    }
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
    };
    WebImportsHalper.prototype.a = function (a, b) {
        var c = false;
        if (b.getMetadata(a, "__isPlainObject") != null && b.getMetadata(a, "__marshalByValue") == null) {
            c = true;
        }
        return c;
    };
    WebImportsHalper.$t = markType(WebImportsHalper, 'WebImportsHalper');
    return WebImportsHalper;
}(Base));
export { WebImportsHalper };
