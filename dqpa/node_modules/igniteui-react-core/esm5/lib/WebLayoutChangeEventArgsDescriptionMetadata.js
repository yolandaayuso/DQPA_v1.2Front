/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebDockManagerLayoutDescriptionMetadata } from "./WebDockManagerLayoutDescriptionMetadata";
import { WebLayoutChangeEventArgsDescription } from "./WebLayoutChangeEventArgsDescription";
/**
 * @hidden
 */
var WebLayoutChangeEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebLayoutChangeEventArgsDescriptionMetadata, _super);
    function WebLayoutChangeEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebLayoutChangeEventArgsDescriptionMetadata.b = function (a) {
        if (WebLayoutChangeEventArgsDescriptionMetadata.a == null) {
            WebLayoutChangeEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebLayoutChangeEventArgsDescriptionMetadata.c(WebLayoutChangeEventArgsDescriptionMetadata.a);
        }
        if (a.k(WebLayoutChangeEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebLayoutChangeEventArgsDescriptionMetadata.a);
        WebDockManagerLayoutDescriptionMetadata.d(a);
    };
    WebLayoutChangeEventArgsDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:LayoutChangeEventArgs");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("Detail", "ExportedType:WebDockManagerLayout");
    };
    WebLayoutChangeEventArgsDescriptionMetadata.d = function (a) {
        WebLayoutChangeEventArgsDescriptionMetadata.b(a);
        a.ae("WebLayoutChangeEventArgs", function () { return new WebLayoutChangeEventArgsDescription(); });
        a.ad("WebLayoutChangeEventArgs", WebLayoutChangeEventArgsDescriptionMetadata.a);
    };
    WebLayoutChangeEventArgsDescriptionMetadata.$t = markType(WebLayoutChangeEventArgsDescriptionMetadata, 'WebLayoutChangeEventArgsDescriptionMetadata');
    WebLayoutChangeEventArgsDescriptionMetadata.a = null;
    return WebLayoutChangeEventArgsDescriptionMetadata;
}(Base));
export { WebLayoutChangeEventArgsDescriptionMetadata };
