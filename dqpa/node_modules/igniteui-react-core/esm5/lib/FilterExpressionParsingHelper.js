/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __read, __spreadArray } from "tslib";
import { Base, markType } from "./type";
import { FilterExpressionParsingResult } from "./FilterExpressionParsingResult";
import { FilterSyntaxParser } from "./FilterSyntaxParser";
import { FilterExpressionConversionVisitor } from "./FilterExpressionConversionVisitor";
import { stringJoin } from "./string";
/**
 * @hidden
 */
var FilterExpressionParsingHelper = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterExpressionParsingHelper, _super);
    function FilterExpressionParsingHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilterExpressionParsingHelper.getFilterExpression = function (a) {
        var b = new FilterExpressionParsingResult();
        var c = new FilterSyntaxParser();
        var d = c.d(a);
        if (d.b) {
            b.errors = d.e;
            return b;
        }
        var e = new FilterExpressionConversionVisitor();
        e.b(d.a);
        if (e.k != null && (e.k.length > 0)) {
            b.errors = stringJoin.apply(void 0, __spreadArray(["\r\n"], __read(e.k), false));
            return b;
        }
        b.result = e.o();
        return b;
    };
    FilterExpressionParsingHelper.$t = markType(FilterExpressionParsingHelper, 'FilterExpressionParsingHelper');
    return FilterExpressionParsingHelper;
}(Base));
export { FilterExpressionParsingHelper };
