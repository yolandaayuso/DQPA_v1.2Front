/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotDimensionDescriptionMetadata } from "./WebPivotDimensionDescriptionMetadata";
import { WebPivotGridRecordDescription } from "./WebPivotGridRecordDescription";
/**
 * @hidden
 */
var WebPivotGridRecordDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebPivotGridRecordDescriptionMetadata, _super);
    function WebPivotGridRecordDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebPivotGridRecordDescriptionMetadata.b = function (a) {
        if (WebPivotGridRecordDescriptionMetadata.a == null) {
            WebPivotGridRecordDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebPivotGridRecordDescriptionMetadata.c(WebPivotGridRecordDescriptionMetadata.a);
        }
        if (a.k(WebPivotGridRecordDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebPivotGridRecordDescriptionMetadata.a);
        WebPivotDimensionDescriptionMetadata.d(a);
    };
    WebPivotGridRecordDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:PivotGridRecord");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("RecordsRef", "(w:Records,wf:Records)DataRef:object");
        a.item("Level", "Number:double");
        a.item("Dimensions", "Array:WebPivotDimensionDescription:PivotDimension");
        a.item("TotalRecordDimensionName", "String");
        a.item("DataIndex", "Number:double");
    };
    WebPivotGridRecordDescriptionMetadata.d = function (a) {
        WebPivotGridRecordDescriptionMetadata.b(a);
        a.ae("WebPivotGridRecord", function () { return new WebPivotGridRecordDescription(); });
        a.ad("WebPivotGridRecord", WebPivotGridRecordDescriptionMetadata.a);
    };
    WebPivotGridRecordDescriptionMetadata.$t = markType(WebPivotGridRecordDescriptionMetadata, 'WebPivotGridRecordDescriptionMetadata');
    WebPivotGridRecordDescriptionMetadata.a = null;
    return WebPivotGridRecordDescriptionMetadata;
}(Base));
export { WebPivotGridRecordDescriptionMetadata };
