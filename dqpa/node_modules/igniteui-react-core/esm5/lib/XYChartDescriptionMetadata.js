/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DomainChartDescriptionMetadata } from "./DomainChartDescriptionMetadata";
/**
 * @hidden
 */
var XYChartDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XYChartDescriptionMetadata, _super);
    function XYChartDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    XYChartDescriptionMetadata.b = function (a) {
        if (XYChartDescriptionMetadata.a == null) {
            XYChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            XYChartDescriptionMetadata.c(XYChartDescriptionMetadata.a);
        }
        if (a.k(XYChartDescriptionMetadata.a)) {
            return;
        }
        a.ac(XYChartDescriptionMetadata.a);
    };
    XYChartDescriptionMetadata.c = function (a) {
        DomainChartDescriptionMetadata.c(a);
        a.item("XAxisFormatLabelRef", "(w:XAxisFormatLabel,wf:XAxisFormatLabel)MethodRef");
        a.item("YAxisFormatLabelRef", "(w:YAxisFormatLabel,wf:YAxisFormatLabel)MethodRef");
        a.item("XAxisLabelLeftMargin", "Number:double");
        a.item("XAxisLabelTopMargin", "Number:double");
        a.item("XAxisLabelRightMargin", "Number:double");
        a.item("XAxisLabelBottomMargin", "Number:double");
        a.item("YAxisLabelLeftMargin", "Number:double");
        a.item("YAxisLabelTopMargin", "Number:double");
        a.item("YAxisLabelRightMargin", "Number:double");
        a.item("YAxisLabelBottomMargin", "Number:double");
        a.item("XAxisLabelTextColor", "Brush");
        a.item("YAxisLabelTextColor", "Brush");
        a.item("ActualXAxisLabelTextColor", "Brush");
        a.item("ActualYAxisLabelTextColor", "Brush");
        a.item("XAxisTitleMargin", "Number:double");
        a.item("YAxisTitleMargin", "Number:double");
        a.item("XAxisTitleLeftMargin", "Number:double");
        a.item("YAxisTitleLeftMargin", "Number:double");
        a.item("XAxisTitleTopMargin", "Number:double");
        a.item("YAxisTitleTopMargin", "Number:double");
        a.item("XAxisTitleRightMargin", "Number:double");
        a.item("YAxisTitleRightMargin", "Number:double");
        a.item("XAxisTitleBottomMargin", "Number:double");
        a.item("YAxisTitleBottomMargin", "Number:double");
        a.item("XAxisTitleTextColor", "Brush");
        a.item("YAxisTitleTextColor", "Brush");
        a.item("XAxisLabelTextStyle", "String");
        a.item("YAxisLabelTextStyle", "String");
        a.item("XAxisTitleTextStyle", "String");
        a.item("YAxisTitleTextStyle", "String");
        a.item("XAxisLabelRef", "(w:XAxisLabel,wf:XAxisLabel)DataRef");
        a.item("YAxisLabelRef", "(w:YAxisLabel,wf:YAxisLabel)DataRef");
        a.item("XAxisMajorStroke", "Brush");
        a.item("YAxisMajorStroke", "Brush");
        a.item("XAxisMajorStrokeThickness", "Number:double");
        a.item("YAxisMajorStrokeThickness", "Number:double");
        a.item("XAxisMinorStrokeThickness", "Number:double");
        a.item("YAxisMinorStrokeThickness", "Number:double");
        a.item("XAxisStrip", "Brush");
        a.item("YAxisStrip", "Brush");
        a.item("XAxisStroke", "Brush");
        a.item("YAxisStroke", "Brush");
        a.item("XAxisStrokeThickness", "Number:double");
        a.item("YAxisStrokeThickness", "Number:double");
        a.item("XAxisTickLength", "Number:double");
        a.item("YAxisTickLength", "Number:double");
        a.item("XAxisTickStroke", "Brush");
        a.item("YAxisTickStroke", "Brush");
        a.item("XAxisTickStrokeThickness", "Number:double");
        a.item("YAxisTickStrokeThickness", "Number:double");
        a.item("XAxisTitle", "String");
        a.item("YAxisTitle", "String");
        a.item("XAxisMinorStroke", "Brush");
        a.item("YAxisMinorStroke", "Brush");
        a.item("XAxisLabelAngle", "Number:double");
        a.item("YAxisLabelAngle", "Number:double");
        a.item("XAxisExtent", "Number:double");
        a.item("YAxisExtent", "Number:double");
        a.item("XAxisTitleAngle", "Number:double");
        a.item("YAxisTitleAngle", "Number:double");
        a.item("XAxisInverted", "Boolean");
        a.item("YAxisInverted", "Boolean");
        a.item("XAxisTitleAlignment", "ExportedType:string:HorizontalAlignment");
        a.item("XAxisTitleAlignment@names", "Left;Center;Right;Stretch");
        a.item("YAxisTitleAlignment", "ExportedType:string:VerticalAlignment");
        a.item("YAxisTitleAlignment@names", "Top;Center;Bottom;Stretch");
        a.item("XAxisLabelHorizontalAlignment", "ExportedType:string:HorizontalAlignment");
        a.item("XAxisLabelHorizontalAlignment@names", "Left;Center;Right;Stretch");
        a.item("YAxisLabelHorizontalAlignment", "ExportedType:string:HorizontalAlignment");
        a.item("YAxisLabelHorizontalAlignment@names", "Left;Center;Right;Stretch");
        a.item("XAxisLabelVerticalAlignment", "ExportedType:string:VerticalAlignment");
        a.item("XAxisLabelVerticalAlignment@names", "Top;Center;Bottom;Stretch");
        a.item("YAxisLabelVerticalAlignment", "ExportedType:string:VerticalAlignment");
        a.item("YAxisLabelVerticalAlignment@names", "Top;Center;Bottom;Stretch");
        a.item("XAxisLabelVisibility", "ExportedType:string:Visibility");
        a.item("XAxisLabelVisibility@names", "Visible;Collapsed");
        a.item("YAxisLabelVisibility", "ExportedType:string:Visibility");
        a.item("YAxisLabelVisibility@names", "Visible;Collapsed");
        a.item("YAxisLabelLocation", "ExportedType:string:YAxisLabelLocation");
        a.item("YAxisLabelLocation@names", "OutsideLeft;OutsideRight;InsideLeft;InsideRight;Auto");
        a.item("XAxisLabelLocation", "ExportedType:string:XAxisLabelLocation");
        a.item("XAxisLabelLocation@names", "OutsideTop;OutsideBottom;InsideTop;InsideBottom;Auto");
        a.item("XAxisLabelFormat", "String");
        a.item("XAxisLabelFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("XAxisLabelFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
        a.item("YAxisLabelFormat", "String");
        a.item("YAxisLabelFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("YAxisLabelFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
    };
    XYChartDescriptionMetadata.d = function (a) {
        XYChartDescriptionMetadata.b(a);
        a.ad("XYChart", XYChartDescriptionMetadata.a);
    };
    XYChartDescriptionMetadata.$t = markType(XYChartDescriptionMetadata, 'XYChartDescriptionMetadata');
    XYChartDescriptionMetadata.a = null;
    return XYChartDescriptionMetadata;
}(Base));
export { XYChartDescriptionMetadata };
