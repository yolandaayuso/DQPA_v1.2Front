/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var PolarBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PolarBaseDescription, _super);
    function PolarBaseDescription() {
        var _this = _super.call(this) || this;
        _this.gg = null;
        _this.gp = null;
        _this.gk = null;
        _this.gj = null;
        _this.gd = null;
        _this.gm = null;
        _this.fw = false;
        _this.f4 = 0;
        _this.gr = null;
        _this.gq = null;
        _this.gc = null;
        _this.f1 = 0;
        _this.fr = null;
        _this.f5 = 0;
        _this.f6 = 0;
        _this.ft = false;
        _this.gb = null;
        _this.gl = null;
        _this.f3 = 0;
        _this.fv = false;
        _this.fu = false;
        _this.gn = null;
        _this.ge = null;
        _this.go = null;
        _this.gf = null;
        _this.gi = null;
        _this.gh = null;
        return _this;
    }
    PolarBaseDescription.prototype.get_type = function () {
        return "PolarBase";
    };
    Object.defineProperty(PolarBaseDescription.prototype, "angleMemberPath", {
        get: function () {
            return this.gg;
        },
        set: function (a) {
            this.gg = a;
            this.g("AngleMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "radiusMemberPath", {
        get: function () {
            return this.gp;
        },
        set: function (a) {
            this.gp = a;
            this.g("RadiusMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "highlightedRadiusMemberPath", {
        get: function () {
            return this.gk;
        },
        set: function (a) {
            this.gk = a;
            this.g("HighlightedRadiusMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "highlightedAngleMemberPath", {
        get: function () {
            return this.gj;
        },
        set: function (a) {
            this.gj = a;
            this.g("HighlightedAngleMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "angleAxisRef", {
        get: function () {
            return this.gd;
        },
        set: function (a) {
            this.gd = a;
            this.g("AngleAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "radiusAxisRef", {
        get: function () {
            return this.gm;
        },
        set: function (a) {
            this.gm = a;
            this.g("RadiusAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "useCartesianInterpolation", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            this.fw = a;
            this.g("UseCartesianInterpolation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "maximumMarkers", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.g("MaximumMarkers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineType", {
        get: function () {
            return this.gr;
        },
        set: function (a) {
            this.gr = a;
            this.g("TrendLineType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineBrush", {
        get: function () {
            return this.gq;
        },
        set: function (a) {
            this.gq = a;
            this.g("TrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "actualTrendLineBrush", {
        get: function () {
            return this.gc;
        },
        set: function (a) {
            this.gc = a;
            this.g("ActualTrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineThickness", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.g("TrendLineThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineDashArray", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.g("TrendLineDashArray");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLinePeriod", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.g("TrendLinePeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "trendLineZIndex", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.g("TrendLineZIndex");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "clipSeriesToBounds", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.g("ClipSeriesToBounds");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "actualItemSearchMode", {
        get: function () {
            return this.gb;
        },
        set: function (a) {
            this.gb = a;
            this.g("ActualItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "itemSearchMode", {
        get: function () {
            return this.gl;
        },
        set: function (a) {
            this.gl = a;
            this.g("ItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "itemSearchThreshold", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.g("ItemSearchThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "isCustomPolarStyleAllowed", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.g("IsCustomPolarStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "isCustomPolarMarkerStyleAllowed", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.g("IsCustomPolarMarkerStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "radiusMemberAsLegendLabel", {
        get: function () {
            return this.gn;
        },
        set: function (a) {
            this.gn = a;
            this.g("RadiusMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "angleMemberAsLegendLabel", {
        get: function () {
            return this.ge;
        },
        set: function (a) {
            this.ge = a;
            this.g("AngleMemberAsLegendLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "radiusMemberAsLegendUnit", {
        get: function () {
            return this.go;
        },
        set: function (a) {
            this.go = a;
            this.g("RadiusMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "angleMemberAsLegendUnit", {
        get: function () {
            return this.gf;
        },
        set: function (a) {
            this.gf = a;
            this.g("AngleMemberAsLegendUnit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "assigningPolarStyleRef", {
        get: function () {
            return this.gi;
        },
        set: function (a) {
            this.gi = a;
            this.g("AssigningPolarStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarBaseDescription.prototype, "assigningPolarMarkerStyleRef", {
        get: function () {
            return this.gh;
        },
        set: function (a) {
            this.gh = a;
            this.g("AssigningPolarMarkerStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    PolarBaseDescription.$t = markType(PolarBaseDescription, 'PolarBaseDescription', MarkerSeriesDescription.$);
    return PolarBaseDescription;
}(MarkerSeriesDescription));
export { PolarBaseDescription };
