/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { BrushScaleDescription } from "./BrushScaleDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ValueBrushScaleDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ValueBrushScaleDescription, _super);
    function ValueBrushScaleDescription() {
        var _this = _super.call(this) || this;
        _this.p = 0;
        _this.o = 0;
        _this.m = false;
        _this.s = 0;
        return _this;
    }
    ValueBrushScaleDescription.prototype.get_type = function () {
        return "ValueBrushScale";
    };
    Object.defineProperty(ValueBrushScaleDescription.prototype, "minimumValue", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("MinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueBrushScaleDescription.prototype, "maximumValue", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("MaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueBrushScaleDescription.prototype, "isLogarithmic", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("IsLogarithmic");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ValueBrushScaleDescription.prototype, "logarithmBase", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("LogarithmBase");
        },
        enumerable: false,
        configurable: true
    });
    ValueBrushScaleDescription.$t = markType(ValueBrushScaleDescription, 'ValueBrushScaleDescription', BrushScaleDescription.$);
    return ValueBrushScaleDescription;
}(BrushScaleDescription));
export { ValueBrushScaleDescription };
