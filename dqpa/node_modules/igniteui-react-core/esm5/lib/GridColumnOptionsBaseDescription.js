/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var GridColumnOptionsBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridColumnOptionsBaseDescription, _super);
    function GridColumnOptionsBaseDescription() {
        var _this = _super.call(this) || this;
        _this.j = false;
        _this.s = null;
        _this.t = null;
        _this.p = null;
        _this.u = null;
        _this.q = null;
        _this.v = null;
        _this.l = 0;
        _this.w = null;
        _this.x = null;
        _this.h = null;
        _this.y = null;
        _this.r = null;
        _this.z = null;
        _this.m = 0;
        _this.aa = null;
        _this.ab = null;
        _this.ac = null;
        return _this;
    }
    GridColumnOptionsBaseDescription.prototype.get_type = function () {
        return "GridColumnOptionsBase";
    };
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "autoSize", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("AutoSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "backgroundColor", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "baseTheme", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "actualBaseTheme", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("ActualBaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "buttonDensity", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("ButtonDensity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "actualButtonDensity", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("ActualButtonDensity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "buttonFontFamily", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("ButtonFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "buttonFontSize", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("ButtonFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "buttonFontStyle", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("ButtonFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "buttonFontWeight", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("ButtonFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "column", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Column");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "density", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "actualDensity", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("ActualDensity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "labelFontFamily", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("LabelFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "labelFontSize", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("LabelFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "labelFontStyle", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("LabelFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "labelFontWeight", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("LabelFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridColumnOptionsBaseDescription.prototype, "textColor", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    GridColumnOptionsBaseDescription.$t = markType(GridColumnOptionsBaseDescription, 'GridColumnOptionsBaseDescription', Description.$);
    return GridColumnOptionsBaseDescription;
}(Description));
export { GridColumnOptionsBaseDescription };
