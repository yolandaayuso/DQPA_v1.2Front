/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DateRangeDescriptorDescription } from "./DateRangeDescriptorDescription";
/**
 * @hidden
 */
var DateRangeDescriptorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DateRangeDescriptorDescriptionMetadata, _super);
    function DateRangeDescriptorDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DateRangeDescriptorDescriptionMetadata.b = function (a) {
        if (DateRangeDescriptorDescriptionMetadata.a == null) {
            DateRangeDescriptorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DateRangeDescriptorDescriptionMetadata.c(DateRangeDescriptorDescriptionMetadata.a);
        }
        if (a.k(DateRangeDescriptorDescriptionMetadata.a)) {
            return;
        }
        a.ac(DateRangeDescriptorDescriptionMetadata.a);
    };
    DateRangeDescriptorDescriptionMetadata.c = function (a) {
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("__marshalByValue", "Boolean");
        a.item("RangeType", "(wc:Type)ExportedType:string:DateRangeType");
        a.item("RangeType@names", "After;Before;Between;Specific;Weekdays;Weekends");
        a.item("DateRange", "Unknown");
    };
    DateRangeDescriptorDescriptionMetadata.d = function (a) {
        DateRangeDescriptorDescriptionMetadata.b(a);
        a.ae("DateRangeDescriptor", function () { return new DateRangeDescriptorDescription(); });
        a.ad("DateRangeDescriptor", DateRangeDescriptorDescriptionMetadata.a);
    };
    DateRangeDescriptorDescriptionMetadata.$t = markType(DateRangeDescriptorDescriptionMetadata, 'DateRangeDescriptorDescriptionMetadata');
    DateRangeDescriptorDescriptionMetadata.a = null;
    return DateRangeDescriptorDescriptionMetadata;
}(Base));
export { DateRangeDescriptorDescriptionMetadata };
