/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { RadialBaseChartDescription } from "./RadialBaseChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var DataPieBaseChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataPieBaseChartDescription, _super);
    function DataPieBaseChartDescription() {
        var _this = _super.call(this) || this;
        _this.xn = null;
        _this.wa = null;
        _this.xf = null;
        _this.v8 = null;
        _this.xk = null;
        _this.v9 = null;
        _this.xd = null;
        _this.v7 = null;
        _this.wp = 0;
        _this.xp = null;
        _this.xo = null;
        _this.xg = null;
        _this.w9 = null;
        _this.xr = null;
        _this.xc = null;
        _this.xb = null;
        _this.xj = null;
        _this.wq = 0;
        _this.xi = null;
        _this.xa = null;
        _this.wh = false;
        _this.xq = null;
        _this.wn = 0;
        _this.wo = 0;
        _this.wt = 0;
        _this.wi = false;
        _this.w7 = 0;
        _this.wv = 0;
        _this.wu = 0;
        _this.ww = 0;
        _this.wr = 0;
        _this.ws = 0;
        _this.xm = null;
        _this.xl = null;
        _this.xe = null;
        _this.wf = false;
        _this.wg = false;
        _this.xh = null;
        return _this;
    }
    DataPieBaseChartDescription.prototype.get_type = function () {
        return "DataPieBaseChart";
    };
    Object.defineProperty(DataPieBaseChartDescription.prototype, "sliceLabelFormat", {
        get: function () {
            return this.xn;
        },
        set: function (a) {
            this.xn = a;
            this.g("SliceLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "sliceLabelFormatSpecifiers", {
        get: function () {
            return this.wa;
        },
        set: function (a) {
            this.wa = a;
            this.g("SliceLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "legendSliceLabelFormat", {
        get: function () {
            return this.xf;
        },
        set: function (a) {
            this.xf = a;
            this.g("LegendSliceLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "legendSliceLabelFormatSpecifiers", {
        get: function () {
            return this.v8;
        },
        set: function (a) {
            this.v8 = a;
            this.g("LegendSliceLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "othersSliceLabelFormat", {
        get: function () {
            return this.xk;
        },
        set: function (a) {
            this.xk = a;
            this.g("OthersSliceLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "othersSliceLabelFormatSpecifiers", {
        get: function () {
            return this.v9;
        },
        set: function (a) {
            this.v9 = a;
            this.g("OthersSliceLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "legendOthersSliceLabelFormat", {
        get: function () {
            return this.xd;
        },
        set: function (a) {
            this.xd = a;
            this.g("LegendOthersSliceLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "legendOthersSliceLabelFormatSpecifiers", {
        get: function () {
            return this.v7;
        },
        set: function (a) {
            this.v7 = a;
            this.g("LegendOthersSliceLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "innerExtent", {
        get: function () {
            return this.wp;
        },
        set: function (a) {
            this.wp = a;
            this.g("InnerExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "sweepDirection", {
        get: function () {
            return this.xp;
        },
        set: function (a) {
            this.xp = a;
            this.g("SweepDirection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "sliceLabelPositionMode", {
        get: function () {
            return this.xo;
        },
        set: function (a) {
            this.xo = a;
            this.g("SliceLabelPositionMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "lightSliceLabelColor", {
        get: function () {
            return this.xg;
        },
        set: function (a) {
            this.xg = a;
            this.g("LightSliceLabelColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "darkSliceLabelColor", {
        get: function () {
            return this.w9;
        },
        set: function (a) {
            this.w9 = a;
            this.g("DarkSliceLabelColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueMemberPath", {
        get: function () {
            return this.xr;
        },
        set: function (a) {
            this.xr = a;
            this.g("ValueMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "legendLabelMemberPath", {
        get: function () {
            return this.xc;
        },
        set: function (a) {
            this.xc = a;
            this.g("LegendLabelMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "legendEmptyValuesMode", {
        get: function () {
            return this.xb;
        },
        set: function (a) {
            this.xb = a;
            this.g("LegendEmptyValuesMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "othersCategoryType", {
        get: function () {
            return this.xj;
        },
        set: function (a) {
            this.xj = a;
            this.g("OthersCategoryType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "othersCategoryThreshold", {
        get: function () {
            return this.wq;
        },
        set: function (a) {
            this.wq = a;
            this.g("OthersCategoryThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "othersCategoryText", {
        get: function () {
            return this.xi;
        },
        set: function (a) {
            this.xi = a;
            this.g("OthersCategoryText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "labelMemberPath", {
        get: function () {
            return this.xa;
        },
        set: function (a) {
            this.xa = a;
            this.g("LabelMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueAxisFavorLabellingScaleEnd", {
        get: function () {
            return this.wh;
        },
        set: function (a) {
            this.wh = a;
            this.g("ValueAxisFavorLabellingScaleEnd");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueAxisAutoRangeBufferMode", {
        get: function () {
            return this.xq;
        },
        set: function (a) {
            this.xq = a;
            this.g("ValueAxisAutoRangeBufferMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "angleAxisInterval", {
        get: function () {
            return this.wn;
        },
        set: function (a) {
            this.wn = a;
            this.g("AngleAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "angleAxisMinorInterval", {
        get: function () {
            return this.wo;
        },
        set: function (a) {
            this.wo = a;
            this.g("AngleAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueAxisInterval", {
        get: function () {
            return this.wt;
        },
        set: function (a) {
            this.wt = a;
            this.g("ValueAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueAxisIsLogarithmic", {
        get: function () {
            return this.wi;
        },
        set: function (a) {
            this.wi = a;
            this.g("ValueAxisIsLogarithmic");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueAxisLogarithmBase", {
        get: function () {
            return this.w7;
        },
        set: function (a) {
            this.w7 = a;
            this.g("ValueAxisLogarithmBase");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueAxisMinimumValue", {
        get: function () {
            return this.wv;
        },
        set: function (a) {
            this.wv = a;
            this.g("ValueAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueAxisMaximumValue", {
        get: function () {
            return this.wu;
        },
        set: function (a) {
            this.wu = a;
            this.g("ValueAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueAxisMinorInterval", {
        get: function () {
            return this.ww;
        },
        set: function (a) {
            this.ww = a;
            this.g("ValueAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "radiusExtent", {
        get: function () {
            return this.wr;
        },
        set: function (a) {
            this.wr = a;
            this.g("RadiusExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "startAngle", {
        get: function () {
            return this.ws;
        },
        set: function (a) {
            this.ws = a;
            this.g("StartAngle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "sliceLabelContentSeparator", {
        get: function () {
            return this.xm;
        },
        set: function (a) {
            this.xm = a;
            this.g("SliceLabelContentSeparator");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "sliceLabelContentMode", {
        get: function () {
            return this.xl;
        },
        set: function (a) {
            this.xl = a;
            this.g("SliceLabelContentMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "legendSliceLabelContentMode", {
        get: function () {
            return this.xe;
        },
        set: function (a) {
            this.xe = a;
            this.g("LegendSliceLabelContentMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "angleAxisFavorLabellingScaleEnd", {
        get: function () {
            return this.wf;
        },
        set: function (a) {
            this.wf = a;
            this.g("AngleAxisFavorLabellingScaleEnd");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "valueAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.wg;
        },
        set: function (a) {
            this.wg = a;
            this.g("ValueAxisAbbreviateLargeNumbers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChartDescription.prototype, "markerCollision", {
        get: function () {
            return this.xh;
        },
        set: function (a) {
            this.xh = a;
            this.g("MarkerCollision");
        },
        enumerable: false,
        configurable: true
    });
    DataPieBaseChartDescription.$t = markType(DataPieBaseChartDescription, 'DataPieBaseChartDescription', RadialBaseChartDescription.$);
    return DataPieBaseChartDescription;
}(RadialBaseChartDescription));
export { DataPieBaseChartDescription };
