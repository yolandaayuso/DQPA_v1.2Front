/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { ToolCommandArgumentDescriptionMetadata } from "./ToolCommandArgumentDescriptionMetadata";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolCommandDescription } from "./ToolCommandDescription";
/**
 * @hidden
 */
var ToolCommandDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolCommandDescriptionMetadata, _super);
    function ToolCommandDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolCommandDescriptionMetadata.b = function (a) {
        if (ToolCommandDescriptionMetadata.a == null) {
            ToolCommandDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ToolCommandDescriptionMetadata.c(ToolCommandDescriptionMetadata.a);
        }
        if (a.k(ToolCommandDescriptionMetadata.a)) {
            return;
        }
        a.ac(ToolCommandDescriptionMetadata.a);
        ToolCommandDescriptionMetadata.e(a);
    };
    ToolCommandDescriptionMetadata.c = function (a) {
        a.item("__marshalByValue", "Boolean");
        a.item("CommandId", "String");
        a.item("ArgumentsList", "Collection:ToolCommandArgument:ToolCommandArgumentCollection:ToolCommandArgument");
    };
    ToolCommandDescriptionMetadata.d = function (a) {
        ToolCommandDescriptionMetadata.b(a);
        a.ae("ToolCommand", function () { return new ToolCommandDescription(); });
        a.ad("ToolCommand", ToolCommandDescriptionMetadata.a);
    };
    ToolCommandDescriptionMetadata.e = function (a) {
        ToolCommandArgumentDescriptionMetadata.d(a);
    };
    ToolCommandDescriptionMetadata.$t = markType(ToolCommandDescriptionMetadata, 'ToolCommandDescriptionMetadata');
    ToolCommandDescriptionMetadata.a = null;
    return ToolCommandDescriptionMetadata;
}(Base));
export { ToolCommandDescriptionMetadata };
