/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebGridResourceStringsDescriptionMetadata } from "./WebGridResourceStringsDescriptionMetadata";
import { WebPivotDimensionDescriptionMetadata } from "./WebPivotDimensionDescriptionMetadata";
import { WebPivotDateDimensionOptionsDescriptionMetadata } from "./WebPivotDateDimensionOptionsDescriptionMetadata";
import { WebPivotDateDimensionDescription } from "./WebPivotDateDimensionDescription";
/**
 * @hidden
 */
var WebPivotDateDimensionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebPivotDateDimensionDescriptionMetadata, _super);
    function WebPivotDateDimensionDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebPivotDateDimensionDescriptionMetadata.b = function (a) {
        if (WebPivotDateDimensionDescriptionMetadata.a == null) {
            WebPivotDateDimensionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebPivotDateDimensionDescriptionMetadata.c(WebPivotDateDimensionDescriptionMetadata.a);
        }
        if (a.k(WebPivotDateDimensionDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebPivotDateDimensionDescriptionMetadata.a);
        WebPivotDateDimensionDescriptionMetadata.f(a);
        WebGridResourceStringsDescriptionMetadata.d(a);
        WebPivotDimensionDescriptionMetadata.d(a);
        WebPivotDateDimensionOptionsDescriptionMetadata.d(a);
    };
    WebPivotDateDimensionDescriptionMetadata.c = function (a) {
        WebPivotDimensionDescriptionMetadata.c(a);
        a.item("__qualifiedNameTS", "String:PivotDateDimension");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__skipSuffix", "Boolean");
        a.item("Enabled", "Boolean");
        a.item("DataType", "ExportedType:string:GridColumnDataType");
        a.item("DataType@stringUnion", "WebComponents;React");
        a.item("DataType@names", "String;Number;Boolean;Date;DateTime;Time;Currency;Percent;Image");
        a.item("ResourceStrings", "ExportedType:WebGridResourceStrings");
        a.item("BaseDimension", "ExportedType:WebPivotDimension");
        a.item("Options", "ExportedType:WebPivotDateDimensionOptions");
        a.item("DisplayName", "String");
        WebPivotDateDimensionDescriptionMetadata.e(a);
    };
    WebPivotDateDimensionDescriptionMetadata.d = function (a) {
        WebPivotDateDimensionDescriptionMetadata.b(a);
        a.ae("WebPivotDateDimension", function () { return new WebPivotDateDimensionDescription(); });
        a.ad("WebPivotDateDimension", WebPivotDateDimensionDescriptionMetadata.a);
    };
    WebPivotDateDimensionDescriptionMetadata.e = function (a) {
        if (a.containsKey("__isPlainObject")) {
            a.removeItem("__isPlainObject");
        }
        a.item("__qualifiedNameBlazorTS", "String:WebPivotDateDimension");
    };
    WebPivotDateDimensionDescriptionMetadata.f = function (a) {
    };
    WebPivotDateDimensionDescriptionMetadata.$t = markType(WebPivotDateDimensionDescriptionMetadata, 'WebPivotDateDimensionDescriptionMetadata');
    WebPivotDateDimensionDescriptionMetadata.a = null;
    return WebPivotDateDimensionDescriptionMetadata;
}(Base));
export { WebPivotDateDimensionDescriptionMetadata };
