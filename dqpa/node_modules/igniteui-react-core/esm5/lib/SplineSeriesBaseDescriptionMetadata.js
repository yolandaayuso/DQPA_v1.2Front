/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { HorizontalAnchoredCategorySeriesDescriptionMetadata } from "./HorizontalAnchoredCategorySeriesDescriptionMetadata";
/**
 * @hidden
 */
var SplineSeriesBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SplineSeriesBaseDescriptionMetadata, _super);
    function SplineSeriesBaseDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SplineSeriesBaseDescriptionMetadata.b = function (a) {
        if (SplineSeriesBaseDescriptionMetadata.a == null) {
            SplineSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            SplineSeriesBaseDescriptionMetadata.c(SplineSeriesBaseDescriptionMetadata.a);
        }
        if (a.k(SplineSeriesBaseDescriptionMetadata.a)) {
            return;
        }
        a.ac(SplineSeriesBaseDescriptionMetadata.a);
    };
    SplineSeriesBaseDescriptionMetadata.c = function (a) {
        HorizontalAnchoredCategorySeriesDescriptionMetadata.c(a);
        a.item("IsSplineShapePartOfRange", "Boolean");
        a.item("SplineType", "ExportedType:string:SplineType");
        a.item("SplineType@names", "Natural;Clamped");
    };
    SplineSeriesBaseDescriptionMetadata.d = function (a) {
        SplineSeriesBaseDescriptionMetadata.b(a);
        a.ad("SplineSeriesBase", SplineSeriesBaseDescriptionMetadata.a);
    };
    SplineSeriesBaseDescriptionMetadata.$t = markType(SplineSeriesBaseDescriptionMetadata, 'SplineSeriesBaseDescriptionMetadata');
    SplineSeriesBaseDescriptionMetadata.a = null;
    return SplineSeriesBaseDescriptionMetadata;
}(Base));
export { SplineSeriesBaseDescriptionMetadata };
