/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var LinearGaugeDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LinearGaugeDescription, _super);
    function LinearGaugeDescription() {
        var _this = _super.call(this) || this;
        _this.c6 = null;
        _this.ag = 0;
        _this.c8 = null;
        _this.c7 = null;
        _this.dp = null;
        _this.da = null;
        _this.c1 = null;
        _this.bh = 0;
        _this.dj = null;
        _this.k = null;
        _this.i = null;
        _this.j = null;
        _this.ap = 0;
        _this.ab = 0;
        _this.ao = 0;
        _this.aa = 0;
        _this.bi = 0;
        _this.di = null;
        _this.dg = null;
        _this.a5 = 0;
        _this.a8 = 0;
        _this.a6 = 0;
        _this.a9 = 0;
        _this.aw = 0;
        _this.a0 = 0;
        _this.av = 0;
        _this.az = 0;
        _this.ay = 0;
        _this.a2 = 0;
        _this.ax = 0;
        _this.a1 = 0;
        _this.aj = 0;
        _this.bd = 0;
        _this.be = 0;
        _this.al = 0;
        _this.ak = 0;
        _this.am = 0;
        _this.an = 0;
        _this.aq = 0;
        _this.bf = 0;
        _this.bc = 0;
        _this.bg = 0;
        _this.dm = null;
        _this.c5 = null;
        _this.au = 0;
        _this.df = null;
        _this.dh = null;
        _this.a3 = 0;
        _this.as = 0;
        _this.ar = 0;
        _this.at = 0;
        _this.de = null;
        _this.r = false;
        _this.c2 = null;
        _this.c3 = null;
        _this.af = 0;
        _this.ad = 0;
        _this.ae = 0;
        _this.ba = 0;
        _this.a7 = 0;
        _this.dk = null;
        _this.dl = null;
        _this.bb = 0;
        _this.s = false;
        _this.q = false;
        _this.p = false;
        _this.dd = null;
        _this.h = null;
        _this.cu = 0;
        _this.ah = 0;
        _this.z = 0;
        _this.ai = 0;
        _this.cx = null;
        _this.dc = null;
        _this.ct = 0;
        _this.t = false;
        _this.c4 = null;
        _this.a4 = 0;
        _this.ac = 0;
        _this.c9 = null;
        _this.c0 = null;
        _this.dn = null;
        _this.db = null;
        _this.cz = null;
        _this.cy = null;
        return _this;
    }
    Object.defineProperty(LinearGaugeDescription.prototype, "fontFamily", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            this.c6 = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "fontSize", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "fontWeight", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "fontStyle", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "width", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "height", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "background", {
        get: function () {
            return this.c1;
        },
        set: function (a) {
            this.c1 = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    LinearGaugeDescription.prototype.get_type = function () {
        return "LinearGauge";
    };
    Object.defineProperty(LinearGaugeDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "transitionProgress", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("TransitionProgress");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "orientation", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.g("Orientation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "ranges", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("Ranges");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "rangeBrushes", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("RangeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "rangeOutlines", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("RangeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "minimumValue", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("MinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "actualMinimumValue", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("ActualMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "maximumValue", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("MaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "actualMaximumValue", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("ActualMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "value", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleShape", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.g("NeedleShape");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleName", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.g("NeedleName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "rangeInnerExtent", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("RangeInnerExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "scaleInnerExtent", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("ScaleInnerExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "rangeOuterExtent", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("RangeOuterExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "scaleOuterExtent", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("ScaleOuterExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleInnerExtent", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("NeedleInnerExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleOuterExtent", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("NeedleOuterExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleInnerBaseWidth", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("NeedleInnerBaseWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleOuterBaseWidth", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("NeedleOuterBaseWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleInnerPointWidth", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("NeedleInnerPointWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleOuterPointWidth", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("NeedleOuterPointWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleInnerPointExtent", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("NeedleInnerPointExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleOuterPointExtent", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("NeedleOuterPointExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "interval", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("Interval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "ticksPostInitial", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("TicksPostInitial");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "ticksPreTerminal", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("TicksPreTerminal");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "labelInterval", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("LabelInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "labelExtent", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("LabelExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "labelsPostInitial", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("LabelsPostInitial");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "labelsPreTerminal", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("LabelsPreTerminal");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "minorTickCount", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("MinorTickCount");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "tickStartExtent", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("TickStartExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "tickEndExtent", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("TickEndExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "tickStrokeThickness", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("TickStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "tickBrush", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            this.dm = a;
            this.g("TickBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "fontBrush", {
        get: function () {
            return this.c5;
        },
        set: function (a) {
            this.c5 = a;
            this.g("FontBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleBreadth", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("NeedleBreadth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleBrush", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.g("NeedleBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleOutline", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.g("NeedleOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "needleStrokeThickness", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("NeedleStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "minorTickStartExtent", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("MinorTickStartExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "minorTickEndExtent", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("MinorTickEndExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "minorTickStrokeThickness", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("MinorTickStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "minorTickBrush", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            this.de = a;
            this.g("MinorTickBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "isScaleInverted", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("IsScaleInverted");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "backingBrush", {
        get: function () {
            return this.c2;
        },
        set: function (a) {
            this.c2 = a;
            this.g("BackingBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "backingOutline", {
        get: function () {
            return this.c3;
        },
        set: function (a) {
            this.c3 = a;
            this.g("BackingOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "backingStrokeThickness", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("BackingStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "backingInnerExtent", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("BackingInnerExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "backingOuterExtent", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("BackingOuterExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "scaleStartExtent", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("ScaleStartExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "scaleEndExtent", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("ScaleEndExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "scaleBrush", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.g("ScaleBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "scaleOutline", {
        get: function () {
            return this.dl;
        },
        set: function (a) {
            this.dl = a;
            this.g("ScaleOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "scaleStrokeThickness", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("ScaleStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "mergeViewports", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("MergeViewports");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "isNeedleDraggingEnabled", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("IsNeedleDraggingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "isHighlightNeedleDraggingEnabled", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("IsHighlightNeedleDraggingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "labelFormat", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            this.dd = a;
            this.g("LabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "labelFormatSpecifiers", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("LabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "transitionDuration", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.g("TransitionDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "highlightValue", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("HighlightValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "actualHighlightValueOpacity", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("ActualHighlightValueOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "highlightValueOpacity", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("HighlightValueOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "actualHighlightValueDisplayMode", {
        get: function () {
            return this.cx;
        },
        set: function (a) {
            this.cx = a;
            this.g("ActualHighlightValueDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "highlightValueDisplayMode", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.g("HighlightValueDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "showToolTipTimeout", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.g("ShowToolTipTimeout");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "showToolTip", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("ShowToolTip");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "font", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            this.c4 = a;
            this.g("Font");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "pixelScalingRatio", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("PixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "actualPixelScalingRatio", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("ActualPixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "formatLabelRef", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            this.c9 = a;
            this.g("FormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "alignLabelRef", {
        get: function () {
            return this.c0;
        },
        set: function (a) {
            this.c0 = a;
            this.g("AlignLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "valueChangedRef", {
        get: function () {
            return this.dn;
        },
        set: function (a) {
            this.dn = a;
            this.g("ValueChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "highlightValueChangedRef", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            this.db = a;
            this.g("HighlightValueChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "actualMinimumValueChangeRef", {
        get: function () {
            return this.cz;
        },
        set: function (a) {
            this.cz = a;
            this.g("ActualMinimumValueChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LinearGaugeDescription.prototype, "actualMaximumValueChangeRef", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            this.cy = a;
            this.g("ActualMaximumValueChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    LinearGaugeDescription.$t = markType(LinearGaugeDescription, 'LinearGaugeDescription', Description.$);
    return LinearGaugeDescription;
}(Description));
export { LinearGaugeDescription };
