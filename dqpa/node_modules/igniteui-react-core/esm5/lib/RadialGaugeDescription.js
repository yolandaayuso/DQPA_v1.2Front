/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var RadialGaugeDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialGaugeDescription, _super);
    function RadialGaugeDescription() {
        var _this = _super.call(this) || this;
        _this.eg = null;
        _this.a2 = 0;
        _this.ei = null;
        _this.eh = null;
        _this.fm = null;
        _this.en = null;
        _this.d9 = null;
        _this.j = null;
        _this.k = null;
        _this.bc = 0;
        _this.at = 0;
        _this.bb = 0;
        _this.as = 0;
        _this.a8 = 0;
        _this.a0 = 0;
        _this.a1 = 0;
        _this.cc = 0;
        _this.a6 = 0;
        _this.ar = 0;
        _this.a7 = 0;
        _this.d2 = null;
        _this.ev = null;
        _this.b0 = 0;
        _this.bx = 0;
        _this.e6 = null;
        _this.d0 = 0;
        _this.fk = null;
        _this.ey = null;
        _this.ez = null;
        _this.bq = 0;
        _this.bj = 0;
        _this.e3 = null;
        _this.br = 0;
        _this.bk = 0;
        _this.bi = 0;
        _this.bh = 0;
        _this.bp = 0;
        _this.bo = 0;
        _this.bn = 0;
        _this.bl = 0;
        _this.e2 = null;
        _this.b1 = 0;
        _this.e0 = null;
        _this.e1 = null;
        _this.bs = 0;
        _this.bm = 0;
        _this.by = 0;
        _this.a9 = 0;
        _this.ba = 0;
        _this.b6 = 0;
        _this.b5 = 0;
        _this.b7 = 0;
        _this.fd = null;
        _this.ef = null;
        _this.bf = 0;
        _this.be = 0;
        _this.bg = 0;
        _this.ex = null;
        _this.bd = 0;
        _this.e4 = null;
        _this.ea = null;
        _this.eb = null;
        _this.az = 0;
        _this.ax = 0;
        _this.ay = 0;
        _this.bz = 0;
        _this.e5 = null;
        _this.av = 0;
        _this.aw = 0;
        _this.ec = null;
        _this.l = null;
        _this.bw = 0;
        _this.ed = null;
        _this.aa = false;
        _this.z = false;
        _this.y = false;
        _this.x = false;
        _this.ee = null;
        _this.ew = null;
        _this.i = null;
        _this.cb = 0;
        _this.bv = 0;
        _this.au = 0;
        _this.bt = 0;
        _this.ab = false;
        _this.bu = 0;
        _this.fj = null;
        _this.fc = null;
        _this.b8 = 0;
        _this.b2 = 0;
        _this.b9 = 0;
        _this.b3 = 0;
        _this.fe = null;
        _this.e7 = null;
        _this.ae = false;
        _this.ac = false;
        _this.af = false;
        _this.ad = false;
        _this.fb = null;
        _this.m = null;
        _this.fi = null;
        _this.n = null;
        _this.et = null;
        _this.a3 = 0;
        _this.a4 = 0;
        _this.eo = null;
        _this.v = false;
        _this.w = false;
        _this.es = null;
        _this.h = null;
        _this.ep = null;
        _this.a5 = 0;
        _this.eq = null;
        _this.er = null;
        _this.e8 = null;
        _this.b4 = 0;
        _this.e9 = null;
        _this.fa = null;
        _this.ff = null;
        _this.ca = 0;
        _this.fg = null;
        _this.fh = null;
        _this.d8 = null;
        _this.d7 = null;
        _this.d5 = null;
        _this.em = null;
        _this.el = null;
        _this.ej = null;
        _this.ek = null;
        _this.d6 = null;
        _this.fl = null;
        _this.eu = null;
        _this.d4 = null;
        _this.d3 = null;
        return _this;
    }
    Object.defineProperty(RadialGaugeDescription.prototype, "fontFamily", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "fontSize", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "fontWeight", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "fontStyle", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "width", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "height", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            this.en = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "background", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    RadialGaugeDescription.prototype.get_type = function () {
        return "RadialGauge";
    };
    Object.defineProperty(RadialGaugeDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "rangeBrushes", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("RangeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "rangeOutlines", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("RangeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "minimumValue", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("MinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "actualMinimumValue", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("ActualMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "maximumValue", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("MaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "actualMaximumValue", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("ActualMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "interval", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("Interval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "centerX", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("CenterX");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "centerY", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("CenterY");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "value", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightValue", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("HighlightValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "actualHighlightValueOpacity", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("ActualHighlightValueOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightValueOpacity", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("HighlightValueOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "actualHighlightValueDisplayMode", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            this.d2 = a;
            this.g("ActualHighlightValueDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightValueDisplayMode", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.g("HighlightValueDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "scaleStartAngle", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("ScaleStartAngle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "scaleEndAngle", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("ScaleEndAngle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "scaleSweepDirection", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            this.e6 = a;
            this.g("ScaleSweepDirection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "transitionDuration", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.g("TransitionDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "transitionEasingFunctionRef", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            this.fk = a;
            this.g("TransitionEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleBrush", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            this.ey = a;
            this.g("NeedleBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleOutline", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.g("NeedleOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleStartExtent", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("NeedleStartExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleEndExtent", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("NeedleEndExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleShape", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.g("NeedleShape");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleStartWidthRatio", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("NeedleStartWidthRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleEndWidthRatio", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("NeedleEndWidthRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleBaseFeatureWidthRatio", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("NeedleBaseFeatureWidthRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleBaseFeatureExtent", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("NeedleBaseFeatureExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needlePointFeatureWidthRatio", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("NeedlePointFeatureWidthRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needlePointFeatureExtent", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("NeedlePointFeatureExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needlePivotWidthRatio", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("NeedlePivotWidthRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needlePivotInnerWidthRatio", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("NeedlePivotInnerWidthRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needlePivotShape", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            this.e2 = a;
            this.g("NeedlePivotShape");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "scaleStartExtent", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("ScaleStartExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needlePivotBrush", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.g("NeedlePivotBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needlePivotOutline", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            this.e1 = a;
            this.g("NeedlePivotOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needleStrokeThickness", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("NeedleStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "needlePivotStrokeThickness", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("NeedlePivotStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "scaleEndExtent", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("ScaleEndExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "labelExtent", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("LabelExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "labelInterval", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("LabelInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "tickStartExtent", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.g("TickStartExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "tickEndExtent", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            this.b5 = a;
            this.g("TickEndExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "tickStrokeThickness", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.g("TickStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "tickBrush", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.g("TickBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "fontBrush", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.g("FontBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "minorTickStartExtent", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("MinorTickStartExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "minorTickEndExtent", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("MinorTickEndExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "minorTickStrokeThickness", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("MinorTickStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "minorTickBrush", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.g("MinorTickBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "minorTickCount", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("MinorTickCount");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "scaleBrush", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            this.e4 = a;
            this.g("ScaleBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "backingBrush", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.g("BackingBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "backingOutline", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.g("BackingOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "backingStrokeThickness", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("BackingStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "backingOuterExtent", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("BackingOuterExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "backingOversweep", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("BackingOversweep");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "scaleOversweep", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("ScaleOversweep");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "scaleOversweepShape", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.g("ScaleOversweepShape");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "backingCornerRadius", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("BackingCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "backingInnerExtent", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("BackingInnerExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "backingShape", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            this.ec = a;
            this.g("BackingShape");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "ranges", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("Ranges");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "radiusMultiplier", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("RadiusMultiplier");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "duplicateLabelOmissionStrategy", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.g("DuplicateLabelOmissionStrategy");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "isNeedleDraggingEnabled", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("IsNeedleDraggingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "isNeedleDraggingConstrained", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("IsNeedleDraggingConstrained");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "isHighlightNeedleDraggingEnabled", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("IsHighlightNeedleDraggingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "isHighlightNeedleDraggingConstrained", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("IsHighlightNeedleDraggingConstrained");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "font", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.g("Font");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "labelFormat", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.g("LabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "labelFormatSpecifiers", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("LabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "transitionProgress", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.g("TransitionProgress");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "pixelScalingRatio", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("PixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "actualPixelScalingRatio", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("ActualPixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "opticalScalingRatio", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("OpticalScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "opticalScalingEnabled", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("OpticalScalingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "opticalScalingSize", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("OpticalScalingSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleText", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.g("TitleText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleText", {
        get: function () {
            return this.fc;
        },
        set: function (a) {
            this.fc = a;
            this.g("SubtitleText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleAngle", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.g("TitleAngle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleAngle", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.g("SubtitleAngle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleExtent", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.g("TitleExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleExtent", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.g("SubtitleExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleBrush", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.g("TitleBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleBrush", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.g("SubtitleBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleDisplaysValue", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("TitleDisplaysValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleDisplaysValue", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("SubtitleDisplaysValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleSnapsToNeedlePivot", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("TitleSnapsToNeedlePivot");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleSnapsToNeedlePivot", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("SubtitleSnapsToNeedlePivot");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleFormat", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.g("SubtitleFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleFormatSpecifiers", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("SubtitleFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleFormat", {
        get: function () {
            return this.fi;
        },
        set: function (a) {
            this.fi = a;
            this.g("TitleFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleFormatSpecifiers", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("TitleFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelText", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.g("HighlightLabelText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelAngle", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("HighlightLabelAngle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelExtent", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("HighlightLabelExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelBrush", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            this.eo = a;
            this.g("HighlightLabelBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelDisplaysValue", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("HighlightLabelDisplaysValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelSnapsToNeedlePivot", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("HighlightLabelSnapsToNeedlePivot");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelFormat", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.g("HighlightLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelFormatSpecifiers", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("HighlightLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelFontFamily", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.g("HighlightLabelFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelFontSize", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("HighlightLabelFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelFontStyle", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.g("HighlightLabelFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightLabelFontWeight", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("HighlightLabelFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleFontFamily", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.g("SubtitleFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleFontSize", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.g("SubtitleFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleFontStyle", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.g("SubtitleFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "subtitleFontWeight", {
        get: function () {
            return this.fa;
        },
        set: function (a) {
            this.fa = a;
            this.g("SubtitleFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleFontFamily", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.g("TitleFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleFontSize", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.g("TitleFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleFontStyle", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.g("TitleFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "titleFontWeight", {
        get: function () {
            return this.fh;
        },
        set: function (a) {
            this.fh = a;
            this.g("TitleFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "alignTitleRef", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.g("AlignTitleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "alignSubtitleRef", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.g("AlignSubtitleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "alignHighlightLabelRef", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.g("AlignHighlightLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "formatTitleRef", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.g("FormatTitleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "formatSubtitleRef", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("FormatSubtitleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "formatHighlightLabelRef", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.g("FormatHighlightLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "formatLabelRef", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.g("FormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "alignLabelRef", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.g("AlignLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "valueChangedRef", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("ValueChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "highlightValueChangedRef", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.g("HighlightValueChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "actualMinimumValueChangeRef", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.g("ActualMinimumValueChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialGaugeDescription.prototype, "actualMaximumValueChangeRef", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.g("ActualMaximumValueChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    RadialGaugeDescription.$t = markType(RadialGaugeDescription, 'RadialGaugeDescription', Description.$);
    return RadialGaugeDescription;
}(Description));
export { RadialGaugeDescription };
