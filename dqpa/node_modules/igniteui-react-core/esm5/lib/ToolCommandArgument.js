/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
/**
 * @hidden
 */
var ToolCommandArgument = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolCommandArgument, _super);
    function ToolCommandArgument() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._argumentName = null;
        _this._value = null;
        return _this;
    }
    Object.defineProperty(ToolCommandArgument.prototype, "argumentName", {
        get: function () {
            return this._argumentName;
        },
        set: function (a) {
            this._argumentName = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolCommandArgument.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (a) {
            this._value = a;
        },
        enumerable: false,
        configurable: true
    });
    ToolCommandArgument.$t = markType(ToolCommandArgument, 'ToolCommandArgument');
    return ToolCommandArgument;
}(Base));
export { ToolCommandArgument };
