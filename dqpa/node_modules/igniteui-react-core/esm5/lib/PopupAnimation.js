/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
import { List$1 } from "./List$1";
import { IKeyFrameAnimation_$type } from "./IKeyFrameAnimation";
/**
 * @hidden
 */
var PopupAnimation = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PopupAnimation, _super);
    function PopupAnimation() {
        var _this = _super.call(this) || this;
        _this.d = 0;
        _this.a = false;
        _this.b = false;
        _this.c = null;
        _this.c = new List$1(IKeyFrameAnimation_$type, 0);
        return _this;
    }
    PopupAnimation.prototype.f = function () {
        for (var a = 0; a < this.c.count; a++) {
            var b = this.c._inner[a];
            for (var c = 0; c < b.effect.h.length; c++) {
                for (var d = 0; d < b.effect.h[c].b.length; d++) {
                    var e = b.effect.h[c].b[d].a;
                    for (var f = 0; f < b.effect.f.length; f++) {
                        if (b.effect.f[f] == e) {
                            b.effect.g[f].c(b.effect.a4, b.effect.h[c].b[d].d);
                        }
                    }
                }
            }
        }
    };
    PopupAnimation.prototype.h = function (a) {
        var _this = this;
        this.a = false;
        this.d = 0;
        this.b = true;
        for (var b = 0; b < this.c.count; b++) {
            this.c._inner[b].play();
            this.c._inner[b].finished.f(function (c) {
                _this.d++;
                if (_this.d == _this.c.count && a != null) {
                    _this.b = false;
                    a(_this.a);
                }
            });
        }
    };
    PopupAnimation.prototype.e = function () {
        this.a = true;
        for (var a = 0; a < this.c.count; a++) {
            if (this.c._inner[a].playState == 1) {
                this.c._inner[a].cancel();
            }
        }
    };
    PopupAnimation.prototype.i = function () {
        for (var a = 0; a < this.c.count; a++) {
            this.c._inner[a].reverse();
        }
    };
    PopupAnimation.prototype.g = function () {
        for (var a = 0; a < this.c.count; a++) {
            this.c._inner[a].commitStyles();
        }
    };
    PopupAnimation.$t = markType(PopupAnimation, 'PopupAnimation');
    return PopupAnimation;
}(Base));
export { PopupAnimation };
