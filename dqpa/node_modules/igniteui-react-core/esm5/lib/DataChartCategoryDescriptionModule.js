/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
import { LineSeriesDescriptionModule } from "./LineSeriesDescriptionModule";
import { AreaSeriesDescriptionModule } from "./AreaSeriesDescriptionModule";
import { ColumnSeriesDescriptionModule } from "./ColumnSeriesDescriptionModule";
import { SplineSeriesDescriptionModule } from "./SplineSeriesDescriptionModule";
import { SplineAreaSeriesDescriptionModule } from "./SplineAreaSeriesDescriptionModule";
import { StepLineSeriesDescriptionModule } from "./StepLineSeriesDescriptionModule";
import { StepAreaSeriesDescriptionModule } from "./StepAreaSeriesDescriptionModule";
import { PointSeriesDescriptionModule } from "./PointSeriesDescriptionModule";
import { WaterfallSeriesDescriptionModule } from "./WaterfallSeriesDescriptionModule";
import { RangeAreaSeriesDescriptionModule } from "./RangeAreaSeriesDescriptionModule";
import { RangeColumnSeriesDescriptionModule } from "./RangeColumnSeriesDescriptionModule";
import { DataChartCategoryCoreDescriptionModule } from "./DataChartCategoryCoreDescriptionModule";
/**
 * @hidden
 */
var DataChartCategoryDescriptionModule = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataChartCategoryDescriptionModule, _super);
    function DataChartCategoryDescriptionModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataChartCategoryDescriptionModule.register = function (a) {
        LineSeriesDescriptionModule.register(a);
        AreaSeriesDescriptionModule.register(a);
        ColumnSeriesDescriptionModule.register(a);
        SplineSeriesDescriptionModule.register(a);
        SplineAreaSeriesDescriptionModule.register(a);
        StepLineSeriesDescriptionModule.register(a);
        StepAreaSeriesDescriptionModule.register(a);
        PointSeriesDescriptionModule.register(a);
        WaterfallSeriesDescriptionModule.register(a);
        RangeAreaSeriesDescriptionModule.register(a);
        RangeColumnSeriesDescriptionModule.register(a);
        DataChartCategoryCoreDescriptionModule.register(a);
    };
    DataChartCategoryDescriptionModule.$t = markType(DataChartCategoryDescriptionModule, 'DataChartCategoryDescriptionModule');
    return DataChartCategoryDescriptionModule;
}(Base));
export { DataChartCategoryDescriptionModule };
