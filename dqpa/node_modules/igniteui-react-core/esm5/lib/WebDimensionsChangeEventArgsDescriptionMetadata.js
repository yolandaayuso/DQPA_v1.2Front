/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebDimensionsChangeDetailDescriptionMetadata } from "./WebDimensionsChangeDetailDescriptionMetadata";
import { WebDimensionsChangeEventArgsDescription } from "./WebDimensionsChangeEventArgsDescription";
/**
 * @hidden
 */
var WebDimensionsChangeEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebDimensionsChangeEventArgsDescriptionMetadata, _super);
    function WebDimensionsChangeEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebDimensionsChangeEventArgsDescriptionMetadata.b = function (a) {
        if (WebDimensionsChangeEventArgsDescriptionMetadata.a == null) {
            WebDimensionsChangeEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebDimensionsChangeEventArgsDescriptionMetadata.c(WebDimensionsChangeEventArgsDescriptionMetadata.a);
        }
        if (a.k(WebDimensionsChangeEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebDimensionsChangeEventArgsDescriptionMetadata.a);
        WebDimensionsChangeDetailDescriptionMetadata.d(a);
    };
    WebDimensionsChangeEventArgsDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:DimensionsChangeEventArgs");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__marshalByValue", "Boolean");
        a.item("Detail", "ExportedType:WebDimensionsChangeDetail");
    };
    WebDimensionsChangeEventArgsDescriptionMetadata.d = function (a) {
        WebDimensionsChangeEventArgsDescriptionMetadata.b(a);
        a.ae("WebDimensionsChangeEventArgs", function () { return new WebDimensionsChangeEventArgsDescription(); });
        a.ad("WebDimensionsChangeEventArgs", WebDimensionsChangeEventArgsDescriptionMetadata.a);
    };
    WebDimensionsChangeEventArgsDescriptionMetadata.$t = markType(WebDimensionsChangeEventArgsDescriptionMetadata, 'WebDimensionsChangeEventArgsDescriptionMetadata');
    WebDimensionsChangeEventArgsDescriptionMetadata.a = null;
    return WebDimensionsChangeEventArgsDescriptionMetadata;
}(Base));
export { WebDimensionsChangeEventArgsDescriptionMetadata };
