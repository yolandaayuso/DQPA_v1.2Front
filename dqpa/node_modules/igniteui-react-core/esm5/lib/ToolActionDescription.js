/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolActionDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionDescription, _super);
    function ToolActionDescription() {
        var _this = _super.call(this) || this;
        _this.i = null;
        _this.h = null;
        _this.as = 0;
        _this.cb = null;
        _this.bu = null;
        _this.bs = null;
        _this.ca = null;
        _this.bw = null;
        _this.bv = null;
        _this.bh = null;
        _this.ao = 0;
        _this.aa = 0;
        _this.ap = 0;
        _this.ab = 0;
        _this.an = 0;
        _this.z = 0;
        _this.aq = 0;
        _this.ac = 0;
        _this.bn = null;
        _this.b3 = null;
        _this.bj = null;
        _this.bt = null;
        _this.br = null;
        _this.ci = null;
        _this.bq = null;
        _this.ch = null;
        _this.bl = null;
        _this.by = null;
        _this.bz = null;
        _this.ad = 0;
        _this.b0 = null;
        _this.b1 = null;
        _this.ce = null;
        _this.ar = 0;
        _this.cf = null;
        _this.cg = null;
        _this.q = false;
        _this.r = false;
        _this.bx = null;
        _this.bk = null;
        _this.b8 = null;
        _this.cj = null;
        _this.cd = null;
        _this.b6 = null;
        _this.b4 = null;
        _this.aj = 0;
        _this.ak = 0;
        _this.al = 0;
        _this.ai = 0;
        _this.b5 = null;
        _this.bo = null;
        _this.j = null;
        _this.b7 = null;
        _this.bp = null;
        _this.k = null;
        _this.ah = 0;
        _this.am = 0;
        _this.y = 0;
        _this.ag = 0;
        _this.x = 0;
        _this.ck = null;
        _this.p = false;
        _this.af = 0;
        _this.w = 0;
        _this.ae = 0;
        _this.v = 0;
        _this.b2 = null;
        _this.bm = null;
        _this.b9 = null;
        _this.cc = null;
        return _this;
    }
    ToolActionDescription.prototype.get_type = function () {
        return "ToolAction";
    };
    Object.defineProperty(ToolActionDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "contextBindings", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ContextBindings");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actions", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Actions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "width", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "parentId", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.g("ParentId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "beforeId", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("BeforeId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "afterId", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("AfterId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "overlayId", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.g("OverlayId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "commandId", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("CommandId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "commandArgument", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("CommandArgument");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "commandArgumentValue", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("CommandArgumentValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingLeft", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("PaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingLeft", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("ActualPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingRight", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("PaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingRight", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("ActualPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingBottom", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("PaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingBottom", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("ActualPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "paddingTop", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("PaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualPaddingTop", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("ActualPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualHoverBackground", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("ActualHoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "hoverBackground", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.g("HoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualBackground", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("ActualBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "background", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualTextColor", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("ActualTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "textColor", {
        get: function () {
            return this.ci;
        },
        set: function (a) {
            this.ci = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualSubtitleTextColor", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("ActualSubtitleTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "subtitleTextColor", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            this.ch = a;
            this.g("SubtitleTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualDisabledTextColor", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("ActualDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "disabledTextColor", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("DisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontFamily", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontSize", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontStyle", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "fontWeight", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "subtitleFontFamily", {
        get: function () {
            return this.ce;
        },
        set: function (a) {
            this.ce = a;
            this.g("SubtitleFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "subtitleFontSize", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("SubtitleFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "subtitleFontStyle", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            this.cf = a;
            this.g("SubtitleFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "subtitleFontWeight", {
        get: function () {
            return this.cg;
        },
        set: function (a) {
            this.cg = a;
            this.g("SubtitleFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "isDisabled", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("IsDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "isHighlighted", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("IsHighlighted");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "density", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualDensity", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("ActualDensity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "name", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.g("Name");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "title", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            this.cj = a;
            this.g("Title");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "subtitle", {
        get: function () {
            return this.cd;
        },
        set: function (a) {
            this.cd = a;
            this.g("Subtitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconName", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.g("IconName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconCollectionName", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.g("IconCollectionName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxLeft", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("IconViewBoxLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxTop", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("IconViewBoxTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxWidth", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("IconViewBoxWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconViewBoxHeight", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("IconViewBoxHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconFill", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            this.b5 = a;
            this.g("IconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualIconFill", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("ActualIconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconFillColors", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("IconFillColors");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconStroke", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.g("IconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualIconStroke", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("ActualIconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconStrokeColors", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("IconStrokeColors");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconStrokeWidth", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("IconStrokeWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconWidth", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("IconWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualIconWidth", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("ActualIconWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "iconHeight", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("IconHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualIconHeight", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("ActualIconHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "visibility", {
        get: function () {
            return this.ck;
        },
        set: function (a) {
            this.ck = a;
            this.g("Visibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "closeOnExecute", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("CloseOnExecute");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "highlightWidth", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("HighlightWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualHighlightWidth", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("ActualHighlightWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "highlightRadius", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("HighlightRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualHighlightRadius", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("ActualHighlightRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "highlightColor", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.g("HighlightColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "actualHighlightColor", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("ActualHighlightColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "onCommandRef", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.g("OnCommandRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionDescription.prototype, "performedRef", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.g("PerformedRef");
        },
        enumerable: false,
        configurable: true
    });
    ToolActionDescription.$t = markType(ToolActionDescription, 'ToolActionDescription', Description.$);
    return ToolActionDescription;
}(Description));
export { ToolActionDescription };
