/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ProvideCalculatorEventArgsDescriptionMetadata } from "./ProvideCalculatorEventArgsDescriptionMetadata";
import { DashboardTileSummaryDescriptionDescription } from "./DashboardTileSummaryDescriptionDescription";
/**
 * @hidden
 */
var DashboardTileSummaryDescriptionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DashboardTileSummaryDescriptionDescriptionMetadata, _super);
    function DashboardTileSummaryDescriptionDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DashboardTileSummaryDescriptionDescriptionMetadata.b = function (a) {
        if (DashboardTileSummaryDescriptionDescriptionMetadata.a == null) {
            DashboardTileSummaryDescriptionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DashboardTileSummaryDescriptionDescriptionMetadata.c(DashboardTileSummaryDescriptionDescriptionMetadata.a);
        }
        if (a.k(DashboardTileSummaryDescriptionDescriptionMetadata.a)) {
            return;
        }
        a.ac(DashboardTileSummaryDescriptionDescriptionMetadata.a);
        ProvideCalculatorEventArgsDescriptionMetadata.d(a);
    };
    DashboardTileSummaryDescriptionDescriptionMetadata.c = function (a) {
        a.item("__marshalByValue", "Boolean");
        a.item("Field", "String");
        a.item("Operand", "ExportedType:string:DataSourceSummaryOperand");
        a.item("Operand@names", "Min;Max;Sum;Average;Count;Custom");
        a.item("Alias", "String");
        a.item("CalculatorDisplayName", "String");
        a.item("ProvideCalculatorRef", "EventRef::provideCalculator");
    };
    DashboardTileSummaryDescriptionDescriptionMetadata.d = function (a) {
        DashboardTileSummaryDescriptionDescriptionMetadata.b(a);
        a.ae("DashboardTileSummaryDescription", function () { return new DashboardTileSummaryDescriptionDescription(); });
        a.ad("DashboardTileSummaryDescription", DashboardTileSummaryDescriptionDescriptionMetadata.a);
    };
    DashboardTileSummaryDescriptionDescriptionMetadata.$t = markType(DashboardTileSummaryDescriptionDescriptionMetadata, 'DashboardTileSummaryDescriptionDescriptionMetadata');
    DashboardTileSummaryDescriptionDescriptionMetadata.a = null;
    return DashboardTileSummaryDescriptionDescriptionMetadata;
}(Base));
export { DashboardTileSummaryDescriptionDescriptionMetadata };
