/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebDockManagerPointDescriptionMetadata } from "./WebDockManagerPointDescriptionMetadata";
import { WebPaneDragActionDescriptionMetadata } from "./WebPaneDragActionDescriptionMetadata";
import { WebFloatPaneActionDescription } from "./WebFloatPaneActionDescription";
/**
 * @hidden
 */
var WebFloatPaneActionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebFloatPaneActionDescriptionMetadata, _super);
    function WebFloatPaneActionDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebFloatPaneActionDescriptionMetadata.b = function (a) {
        if (WebFloatPaneActionDescriptionMetadata.a == null) {
            WebFloatPaneActionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebFloatPaneActionDescriptionMetadata.c(WebFloatPaneActionDescriptionMetadata.a);
        }
        if (a.k(WebFloatPaneActionDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebFloatPaneActionDescriptionMetadata.a);
        WebDockManagerPointDescriptionMetadata.d(a);
    };
    WebFloatPaneActionDescriptionMetadata.c = function (a) {
        WebPaneDragActionDescriptionMetadata.c(a);
        a.item("__qualifiedNameTS", "String:FloatPaneAction");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("__skipSuffix", "Boolean");
        a.item("ActionType", "(wc:Type)ExportedType:string:PaneDragActionType");
        a.item("ActionType@names", "FloatPane;MoveFloatingPane;DockPane;MoveTab");
        a.item("Location", "ExportedType:WebDockManagerPoint");
        a.item("Width", "Number:double");
        a.item("Height", "Number:double");
    };
    WebFloatPaneActionDescriptionMetadata.d = function (a) {
        WebFloatPaneActionDescriptionMetadata.b(a);
        a.ae("WebFloatPaneAction", function () { return new WebFloatPaneActionDescription(); });
        a.ad("WebFloatPaneAction", WebFloatPaneActionDescriptionMetadata.a);
    };
    WebFloatPaneActionDescriptionMetadata.$t = markType(WebFloatPaneActionDescriptionMetadata, 'WebFloatPaneActionDescriptionMetadata');
    WebFloatPaneActionDescriptionMetadata.a = null;
    return WebFloatPaneActionDescriptionMetadata;
}(Base));
export { WebFloatPaneActionDescriptionMetadata };
