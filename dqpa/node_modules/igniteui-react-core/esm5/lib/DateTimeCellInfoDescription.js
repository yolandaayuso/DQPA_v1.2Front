/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { CellInfoDescription } from "./CellInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var DateTimeCellInfoDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DateTimeCellInfoDescription, _super);
    function DateTimeCellInfoDescription() {
        var _this = _super.call(this) || this;
        _this.fq = new Date();
        _this.fv = null;
        _this.fl = null;
        _this.fu = null;
        _this.ft = null;
        _this.fo = false;
        return _this;
    }
    DateTimeCellInfoDescription.prototype.get_type = function () {
        return "DateTimeCellInfo";
    };
    Object.defineProperty(DateTimeCellInfoDescription.prototype, "dateTimeValue", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            this.fq = a;
            this.g("DateTimeValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeCellInfoDescription.prototype, "formatStringOverride", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.g("FormatStringOverride");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeCellInfoDescription.prototype, "formatSpecifiers", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("FormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeCellInfoDescription.prototype, "formatOverrideRef", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.g("FormatOverrideRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeCellInfoDescription.prototype, "dateTimeFormat", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.g("DateTimeFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DateTimeCellInfoDescription.prototype, "isOffsetValue", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.g("IsOffsetValue");
        },
        enumerable: false,
        configurable: true
    });
    DateTimeCellInfoDescription.$t = markType(DateTimeCellInfoDescription, 'DateTimeCellInfoDescription', CellInfoDescription.$);
    DateTimeCellInfoDescription.__marshalByValue1 = true;
    DateTimeCellInfoDescription.__marshalByValueAlias1 = "DateTimeCellModel";
    return DateTimeCellInfoDescription;
}(CellInfoDescription));
export { DateTimeCellInfoDescription };
