/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebGridSelectionRangeDetailDescriptionMetadata } from "./WebGridSelectionRangeDetailDescriptionMetadata";
import { WebGridSelectionRangeEventArgsDescription } from "./WebGridSelectionRangeEventArgsDescription";
/**
 * @hidden
 */
var WebGridSelectionRangeEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebGridSelectionRangeEventArgsDescriptionMetadata, _super);
    function WebGridSelectionRangeEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebGridSelectionRangeEventArgsDescriptionMetadata.b = function (a) {
        if (WebGridSelectionRangeEventArgsDescriptionMetadata.a == null) {
            WebGridSelectionRangeEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebGridSelectionRangeEventArgsDescriptionMetadata.c(WebGridSelectionRangeEventArgsDescriptionMetadata.a);
        }
        if (a.k(WebGridSelectionRangeEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebGridSelectionRangeEventArgsDescriptionMetadata.a);
        WebGridSelectionRangeDetailDescriptionMetadata.d(a);
    };
    WebGridSelectionRangeEventArgsDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:GridSelectionRangeEventArgs");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__marshalByValue", "Boolean");
        a.item("Detail", "ExportedType:WebGridSelectionRangeDetail");
    };
    WebGridSelectionRangeEventArgsDescriptionMetadata.d = function (a) {
        WebGridSelectionRangeEventArgsDescriptionMetadata.b(a);
        a.ae("WebGridSelectionRangeEventArgs", function () { return new WebGridSelectionRangeEventArgsDescription(); });
        a.ad("WebGridSelectionRangeEventArgs", WebGridSelectionRangeEventArgsDescriptionMetadata.a);
    };
    WebGridSelectionRangeEventArgsDescriptionMetadata.$t = markType(WebGridSelectionRangeEventArgsDescriptionMetadata, 'WebGridSelectionRangeEventArgsDescriptionMetadata');
    WebGridSelectionRangeEventArgsDescriptionMetadata.a = null;
    return WebGridSelectionRangeEventArgsDescriptionMetadata;
}(Base));
export { WebGridSelectionRangeEventArgsDescriptionMetadata };
