/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
import { stringReplace } from "./string";
/**
 * @hidden
 */
var FilterSyntaxPrintingHelper = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxPrintingHelper, _super);
    function FilterSyntaxPrintingHelper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilterSyntaxPrintingHelper.b = function (a) {
        switch (a) {
            case 52: return "and";
            case 53: return "or";
            case 54: return "eq";
            case 55: return "ne";
            case 56: return "lt";
            case 57: return "le";
            case 58: return "gt";
            case 59: return "ge";
            case 61: return "add";
            case 62: return "sub";
            case 63: return "mul";
            case 64: return "div";
            case 65: return "mod";
            case 66: return "not";
        }
        return "UNKNOWN";
    };
    FilterSyntaxPrintingHelper.a = function (a) {
        return a.c != null ? a.c.toString() : "";
    };
    FilterSyntaxPrintingHelper.c = function (a) {
        switch (a.b) {
            case 2:
                var b = "'" + stringReplace(a.c.toString(), "'", "''") + "'";
                return b;
            case 0: return a.c != null ? a.c.toString() : "";
            case 1: return a.c != null ? a.c.toString() : "";
            case 69: return "NaN";
            case 70: return "Infinity";
        }
        return "UNKNOWN";
    };
    FilterSyntaxPrintingHelper.$t = markType(FilterSyntaxPrintingHelper, 'FilterSyntaxPrintingHelper');
    return FilterSyntaxPrintingHelper;
}(Base));
export { FilterSyntaxPrintingHelper };
