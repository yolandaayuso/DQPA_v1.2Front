/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var PieChartBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PieChartBaseDescription, _super);
    function PieChartBaseDescription() {
        var _this = _super.call(this) || this;
        _this.cm = null;
        _this.bk = null;
        _this.ap = 0;
        _this.bm = null;
        _this.bl = null;
        _this.bj = null;
        _this.aq = 0;
        _this.cn = null;
        _this.bs = null;
        _this.b1 = null;
        _this.bu = null;
        _this.bt = null;
        _this.br = null;
        _this.bi = null;
        _this.bh = null;
        _this.bw = null;
        _this.bv = null;
        _this.as = 0;
        _this.av = 0;
        _this.b7 = null;
        _this.b6 = null;
        _this.ao = 0;
        _this.ax = 0;
        _this.ac = false;
        _this.ab = false;
        _this.k = null;
        _this.b3 = null;
        _this.ar = 0;
        _this.a0 = 0;
        _this.ck = null;
        _this.b4 = null;
        _this.b5 = null;
        _this.au = 0;
        _this.at = 0;
        _this.cd = null;
        _this.ce = null;
        _this.az = 0;
        _this.ay = 0;
        _this.j = null;
        _this.h = null;
        _this.p = null;
        _this.i = null;
        _this.bq = null;
        _this.l = null;
        _this.b8 = null;
        _this.o = null;
        _this.b0 = null;
        _this.m = null;
        _this.b2 = null;
        _this.n = null;
        _this.bz = null;
        _this.by = null;
        _this.ad = false;
        _this.ae = false;
        _this.af = false;
        _this.ag = false;
        _this.bx = null;
        _this.bn = null;
        _this.bo = null;
        _this.aw = 0;
        _this.an = 0;
        _this.cf = null;
        _this.bf = null;
        _this.q = null;
        _this.cl = null;
        _this.bp = null;
        _this.ca = null;
        _this.cc = null;
        _this.b9 = null;
        _this.cb = null;
        _this.cg = null;
        _this.ch = null;
        _this.cj = null;
        _this.ci = null;
        return _this;
    }
    Object.defineProperty(PieChartBaseDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.cm;
        },
        set: function (a) {
            this.cm = a;
            this.g("TooltipTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "fontFamily", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "fontSize", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "fontWeight", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "fontStyle", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    PieChartBaseDescription.prototype.get_type = function () {
        return "PieChartBase";
    };
    Object.defineProperty(PieChartBaseDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("DataSourceRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "innerExtent", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("InnerExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "valueMemberPath", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            this.cn = a;
            this.g("ValueMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "labelMemberPath", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("LabelMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "legendLabelMemberPath", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("LegendLabelMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "labelsPosition", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("LabelsPosition");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "labelOuterColor", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("LabelOuterColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "labelInnerColor", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("LabelInnerColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "actualLabelOuterColor", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("ActualLabelOuterColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "actualLabelInnerColor", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("ActualLabelInnerColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "leaderLineVisibility", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("LeaderLineVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "leaderLineType", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("LeaderLineType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "leaderLineMargin", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("LeaderLineMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "othersCategoryThreshold", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("OthersCategoryThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "othersCategoryType", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.g("OthersCategoryType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "othersCategoryText", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.g("OthersCategoryText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "explodedRadius", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("ExplodedRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "radiusFactor", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("RadiusFactor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "allowSliceSelection", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("AllowSliceSelection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "allowSliceExplosion", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("AllowSliceExplosion");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "explodedSlices", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("ExplodedSlices");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "legendRef", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.g("LegendRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "labelExtent", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("LabelExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "startAngle", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("StartAngle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "sweepDirection", {
        get: function () {
            return this.ck;
        },
        set: function (a) {
            this.ck = a;
            this.g("SweepDirection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "othersCategoryFill", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.g("OthersCategoryFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "othersCategoryStroke", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            this.b5 = a;
            this.g("OthersCategoryStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "othersCategoryStrokeThickness", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("OthersCategoryStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "othersCategoryOpacity", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("OthersCategoryOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedSliceFill", {
        get: function () {
            return this.cd;
        },
        set: function (a) {
            this.cd = a;
            this.g("SelectedSliceFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedSliceStroke", {
        get: function () {
            return this.ce;
        },
        set: function (a) {
            this.ce = a;
            this.g("SelectedSliceStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedSliceStrokeThickness", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("SelectedSliceStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedSliceOpacity", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("SelectedSliceOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "brushes", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("Brushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "actualBrushes", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ActualBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "outlines", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("Outlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "actualOutlines", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ActualOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "labelFormat", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("LabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "labelFormatSpecifiers", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("LabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "othersLabelFormat", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.g("OthersLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "othersLabelFormatSpecifiers", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("OthersLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "legendLabelFormat", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("LegendLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "legendLabelFormatSpecifiers", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("LegendLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "legendOthersLabelFormat", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.g("LegendOthersLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "legendOthersLabelFormatSpecifiers", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("LegendOthersLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "legendItemTemplateRef", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("LegendItemTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "legendItemBadgeTemplateRef", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("LegendItemBadgeTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "isDragInteractionEnabled", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("IsDragInteractionEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "isSurfaceInteractionDisabled", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("IsSurfaceInteractionDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "shouldDisplayMockData", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("ShouldDisplayMockData");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "shouldUseSkeletonStyleForMockData", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("ShouldUseSkeletonStyleForMockData");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "legendEmptyValuesMode", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("LegendEmptyValuesMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "formatLabelRef", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("FormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "formatLegendLabelRef", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("FormatLegendLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "pixelScalingRatio", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("PixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "actualPixelScalingRatio", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("ActualPixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectionMode", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            this.cf = a;
            this.g("SelectionMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedItem", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("SelectedItem");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedItems", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("SelectedItems");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "textStyle", {
        get: function () {
            return this.cl;
        },
        set: function (a) {
            this.cl = a;
            this.g("TextStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "labelClickRef", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("LabelClickRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedItemChangingRef", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.g("SelectedItemChangingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedItemsChangingRef", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.g("SelectedItemsChangingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedItemChangedRef", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.g("SelectedItemChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "selectedItemsChangedRef", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.g("SelectedItemsChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "sliceClickRef", {
        get: function () {
            return this.cg;
        },
        set: function (a) {
            this.cg = a;
            this.g("SliceClickRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "sliceEnterRef", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            this.ch = a;
            this.g("SliceEnterRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "sliceLeaveRef", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            this.cj = a;
            this.g("SliceLeaveRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PieChartBaseDescription.prototype, "sliceHoverRef", {
        get: function () {
            return this.ci;
        },
        set: function (a) {
            this.ci = a;
            this.g("SliceHoverRef");
        },
        enumerable: false,
        configurable: true
    });
    PieChartBaseDescription.$t = markType(PieChartBaseDescription, 'PieChartBaseDescription', Description.$);
    return PieChartBaseDescription;
}(Description));
export { PieChartBaseDescription };
