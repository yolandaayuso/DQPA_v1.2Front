/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { StackedSeriesCreatedEventArgsDescriptionMetadata } from "./StackedSeriesCreatedEventArgsDescriptionMetadata";
import { CategorySeriesDescriptionMetadata } from "./CategorySeriesDescriptionMetadata";
/**
 * @hidden
 */
var StackedSeriesBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedSeriesBaseDescriptionMetadata, _super);
    function StackedSeriesBaseDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StackedSeriesBaseDescriptionMetadata.b = function (a) {
        if (StackedSeriesBaseDescriptionMetadata.a == null) {
            StackedSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            StackedSeriesBaseDescriptionMetadata.c(StackedSeriesBaseDescriptionMetadata.a);
        }
        if (a.k(StackedSeriesBaseDescriptionMetadata.a)) {
            return;
        }
        a.ac(StackedSeriesBaseDescriptionMetadata.a);
        StackedSeriesCreatedEventArgsDescriptionMetadata.d(a);
    };
    StackedSeriesBaseDescriptionMetadata.c = function (a) {
        CategorySeriesDescriptionMetadata.c(a);
        a.item("Series", "Collection:StackedFragmentSeries:StackedSeriesCollection:StackedFragmentSeries");
        a.item("AutoGenerateSeries", "Boolean");
        a.item("ReverseLegendOrder", "Boolean");
        a.item("SeriesCreatedRef", "EventRef::seriesCreated");
        StackedSeriesBaseDescriptionMetadata.e(a);
    };
    StackedSeriesBaseDescriptionMetadata.d = function (a) {
        StackedSeriesBaseDescriptionMetadata.b(a);
        a.ad("StackedSeriesBase", StackedSeriesBaseDescriptionMetadata.a);
    };
    StackedSeriesBaseDescriptionMetadata.e = function (a) {
    };
    StackedSeriesBaseDescriptionMetadata.$t = markType(StackedSeriesBaseDescriptionMetadata, 'StackedSeriesBaseDescriptionMetadata');
    StackedSeriesBaseDescriptionMetadata.a = null;
    return StackedSeriesBaseDescriptionMetadata;
}(Base));
export { StackedSeriesBaseDescriptionMetadata };
