/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebTreeGridRecordDescription } from "./WebTreeGridRecordDescription";
/**
 * @hidden
 */
var WebTreeGridRecordDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebTreeGridRecordDescriptionMetadata, _super);
    function WebTreeGridRecordDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebTreeGridRecordDescriptionMetadata.b = function (a) {
        if (WebTreeGridRecordDescriptionMetadata.a == null) {
            WebTreeGridRecordDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebTreeGridRecordDescriptionMetadata.c(WebTreeGridRecordDescriptionMetadata.a);
        }
        if (a.k(WebTreeGridRecordDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebTreeGridRecordDescriptionMetadata.a);
        WebTreeGridRecordDescriptionMetadata.d(a);
    };
    WebTreeGridRecordDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:TreeGridRecord");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("Key", "Unknown");
        a.item("Data", "Unknown");
        a.item("Children", "Array:WebTreeGridRecordDescription:TreeGridRecord");
        a.item("RecordParent", "(wc:Parent)ExportedType:WebTreeGridRecord");
        a.item("Level", "Number:double");
        a.item("IsFilteredOutParent", "Boolean");
        a.item("Expanded", "Boolean");
    };
    WebTreeGridRecordDescriptionMetadata.d = function (a) {
        WebTreeGridRecordDescriptionMetadata.b(a);
        a.ae("WebTreeGridRecord", function () { return new WebTreeGridRecordDescription(); });
        a.ad("WebTreeGridRecord", WebTreeGridRecordDescriptionMetadata.a);
    };
    WebTreeGridRecordDescriptionMetadata.$t = markType(WebTreeGridRecordDescriptionMetadata, 'WebTreeGridRecordDescriptionMetadata');
    WebTreeGridRecordDescriptionMetadata.a = null;
    return WebTreeGridRecordDescriptionMetadata;
}(Base));
export { WebTreeGridRecordDescriptionMetadata };
