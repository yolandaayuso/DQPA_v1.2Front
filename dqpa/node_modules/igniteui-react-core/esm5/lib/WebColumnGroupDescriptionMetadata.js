/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebColumnDescriptionMetadata } from "./WebColumnDescriptionMetadata";
import { WebColumnGroupDescription } from "./WebColumnGroupDescription";
/**
 * @hidden
 */
var WebColumnGroupDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebColumnGroupDescriptionMetadata, _super);
    function WebColumnGroupDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebColumnGroupDescriptionMetadata.b = function (a) {
        if (WebColumnGroupDescriptionMetadata.a == null) {
            WebColumnGroupDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebColumnGroupDescriptionMetadata.c(WebColumnGroupDescriptionMetadata.a);
        }
        if (a.k(WebColumnGroupDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebColumnGroupDescriptionMetadata.a);
    };
    WebColumnGroupDescriptionMetadata.c = function (a) {
        WebColumnDescriptionMetadata.c(a);
        a.item("__qualifiedNameTS", "String:ColumnGroup");
        a.item("__tagNameWC", "String:igc-column-group");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__manageCollectionInMarkup", "Boolean");
        a.item("Children", "Collection:WebColumn:ColumnCollection:WebColumn");
        a.item("Collapsible", "Boolean");
        a.item("Expanded", "Boolean");
        a.item("CollapsibleIndicatorTemplateRef", "(w:CollapsibleIndicatorTemplate,wf:CollapsibleIndicatorTemplate)TemplateRef::object");
    };
    WebColumnGroupDescriptionMetadata.d = function (a) {
        WebColumnGroupDescriptionMetadata.b(a);
        a.ae("WebColumnGroup", function () { return new WebColumnGroupDescription(); });
        a.ad("WebColumnGroup", WebColumnGroupDescriptionMetadata.a);
    };
    WebColumnGroupDescriptionMetadata.$t = markType(WebColumnGroupDescriptionMetadata, 'WebColumnGroupDescriptionMetadata');
    WebColumnGroupDescriptionMetadata.a = null;
    return WebColumnGroupDescriptionMetadata;
}(Base));
export { WebColumnGroupDescriptionMetadata };
