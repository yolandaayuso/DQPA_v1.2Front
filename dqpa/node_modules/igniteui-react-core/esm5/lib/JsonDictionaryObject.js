/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { JsonDictionaryItem } from "./JsonDictionaryItem";
import { Dictionary$2 } from "./Dictionary$2";
import { List$1 } from "./List$1";
import { String_$type, markType } from "./type";
/**
 * @hidden
 */
var JsonDictionaryObject = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(JsonDictionaryObject, _super);
    function JsonDictionaryObject() {
        var _this = _super.call(this) || this;
        _this.i = new List$1(String_$type, 0);
        _this.h = new Dictionary$2(String_$type, JsonDictionaryItem.$, 0);
        return _this;
    }
    JsonDictionaryObject.prototype.j = function (a, b) {
        if (!this.h.containsKey(a)) {
            this.i.add(a);
        }
        this.h.item(a, b);
    };
    JsonDictionaryObject.prototype.l = function (a) {
        if (this.h.containsKey(a)) {
            this.i.remove(a);
        }
        this.h.removeItem(a);
    };
    JsonDictionaryObject.prototype.k = function () {
        this.i.clear();
        this.h.clear();
    };
    JsonDictionaryObject.prototype.item = function (a, b) {
        if (arguments.length === 2) {
            if (!this.h.containsKey(a)) {
                this.i.add(a);
            }
            this.h.item(a, b);
            return b;
        }
        else {
            return this.h.item(a);
        }
    };
    JsonDictionaryObject.prototype.g = function (a) {
        return this.h.containsKey(a);
    };
    JsonDictionaryObject.prototype.e = function () {
        return this.i.toArray();
    };
    JsonDictionaryObject.prototype.d = function (a) {
        a.i("{");
        a.h();
        a.g();
        var b = this.e();
        if (b != null) {
            for (var c = 0; c < b.length; c++) {
                if (c > 0) {
                    a.j(",");
                }
                var d = b[c];
                var e = this.h.item(d);
                a.i("\"" + this.a(d) + "\": ");
                if (e == null) {
                    a.i("null");
                }
                else {
                    e.d(a);
                }
            }
        }
        a.h();
        a.e();
        a.i("}");
    };
    JsonDictionaryObject.$t = markType(JsonDictionaryObject, 'JsonDictionaryObject', JsonDictionaryItem.$);
    return JsonDictionaryObject;
}(JsonDictionaryItem));
export { JsonDictionaryObject };
