/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { TimeAxisIntervalDescription } from "./TimeAxisIntervalDescription";
/**
 * @hidden
 */
var TimeAxisIntervalDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TimeAxisIntervalDescriptionMetadata, _super);
    function TimeAxisIntervalDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TimeAxisIntervalDescriptionMetadata.b = function (a) {
        if (TimeAxisIntervalDescriptionMetadata.a == null) {
            TimeAxisIntervalDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            TimeAxisIntervalDescriptionMetadata.c(TimeAxisIntervalDescriptionMetadata.a);
        }
        if (a.k(TimeAxisIntervalDescriptionMetadata.a)) {
            return;
        }
        a.ac(TimeAxisIntervalDescriptionMetadata.a);
    };
    TimeAxisIntervalDescriptionMetadata.c = function (a) {
        a.item("Range", "TimeSpan");
        a.item("Interval", "Number:double");
        a.item("IntervalType", "ExportedType:string:TimeAxisIntervalType");
        a.item("IntervalType@names", "Ticks;Milliseconds;Seconds;Minutes;Hours;Days;Weeks;Months;Years");
    };
    TimeAxisIntervalDescriptionMetadata.d = function (a) {
        TimeAxisIntervalDescriptionMetadata.b(a);
        a.ae("TimeAxisInterval", function () { return new TimeAxisIntervalDescription(); });
        a.ad("TimeAxisInterval", TimeAxisIntervalDescriptionMetadata.a);
    };
    TimeAxisIntervalDescriptionMetadata.$t = markType(TimeAxisIntervalDescriptionMetadata, 'TimeAxisIntervalDescriptionMetadata');
    TimeAxisIntervalDescriptionMetadata.a = null;
    return TimeAxisIntervalDescriptionMetadata;
}(Base));
export { TimeAxisIntervalDescriptionMetadata };
