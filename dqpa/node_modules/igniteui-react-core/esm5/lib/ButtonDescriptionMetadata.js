/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ButtonClickEventArgsDescriptionMetadata } from "./ButtonClickEventArgsDescriptionMetadata";
import { FocusEventArgsDescriptionMetadata } from "./FocusEventArgsDescriptionMetadata";
import { ButtonDescription } from "./ButtonDescription";
/**
 * @hidden
 */
var ButtonDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ButtonDescriptionMetadata, _super);
    function ButtonDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonDescriptionMetadata.b = function (a) {
        if (ButtonDescriptionMetadata.a == null) {
            ButtonDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ButtonDescriptionMetadata.c(ButtonDescriptionMetadata.a);
        }
        if (a.k(ButtonDescriptionMetadata.a)) {
            return;
        }
        a.ac(ButtonDescriptionMetadata.a);
        ButtonClickEventArgsDescriptionMetadata.d(a);
        FocusEventArgsDescriptionMetadata.d(a);
    };
    ButtonDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:XButton");
        a.item("MinWidth", "Number:double");
        a.item("MinHeight", "Number:double");
        a.item("DisplayType", "ExportedType:string:ButtonDisplayStyle");
        a.item("DisplayType@names", "Raised;Flat;Outlined;Fab;Icon");
        a.item("Density", "ExportedType:string:ControlDisplayDensity");
        a.item("Density@names", "Auto;Comfortable;Cosy;Compact;Minimal");
        a.item("BaseTheme", "ExportedType:string:BaseControlTheme");
        a.item("BaseTheme@names", "Default;DenaliLight;MaterialLight;SlingshotLight;SlingshotDark;RevealLight;RevealDark");
        a.item("ActualDensity", "ExportedType:string:ControlDisplayDensity");
        a.item("ActualDensity@names", "Auto;Comfortable;Cosy;Compact;Minimal");
        a.item("ActualBorderColor", "Brush");
        a.item("ActualUmbraShadowColor", "Brush");
        a.item("ActualPenumbraShadowColor", "Brush");
        a.item("ActualAmbientShadowColor", "Brush");
        a.item("ActualRestingElevation", "Number:int");
        a.item("ActualFocusElevation", "Number:int");
        a.item("ActualHoverElevation", "Number:int");
        a.item("ActualRippleColor", "Brush");
        a.item("ActualCornerRadiusBottomRight", "(w:ActualCornerRadius.BottomRight,wf:ActualCornerRadiusBottomRight)Number:double");
        a.item("ActualCornerRadiusBottomLeft", "(w:ActualCornerRadius.BottomLeft,wf:ActualCornerRadiusBottomLeft)Number:double");
        a.item("ActualCornerRadiusTopLeft", "(w:ActualCornerRadius.TopLeft,wf:ActualCornerRadiusTopLeft)Number:double");
        a.item("ActualCornerRadiusTopRight", "(w:ActualCornerRadius.TopRight,wf:ActualCornerRadiusTopRight)Number:double");
        a.item("ActualBackgroundColor", "Brush");
        a.item("ActualDisabledBackgroundColor", "Brush");
        a.item("ActualDisabledBorderColor", "Brush");
        a.item("ActualDisabledTextColor", "Brush");
        a.item("ActualDisabledElevation", "Number:int");
        a.item("ActualElevationMode", "ExportedType:string:ElevationMode");
        a.item("ActualElevationMode@names", "Auto;MaterialShadow;HaloShadow");
        a.item("ActualTextColor", "Brush");
        a.item("ActualHoverTextColor", "Brush");
        a.item("ActualFocusBackgroundColor", "Brush");
        a.item("ActualFocusTextColor", "Brush");
        a.item("ActualHoverBackgroundColor", "Brush");
        a.item("ActualBorderWidth", "Number:double");
        a.item("RaisedBackgroundColor", "Brush");
        a.item("RaisedDisabledBackgroundColor", "Brush");
        a.item("RaisedDisabledBorderColor", "Brush");
        a.item("RaisedDisabledTextColor", "Brush");
        a.item("RaisedDisabledElevation", "Number:int");
        a.item("RaisedHoverBackgroundColor", "Brush");
        a.item("RaisedBorderColor", "Brush");
        a.item("RaisedRestingElevation", "Number:int");
        a.item("RaisedHoverElevation", "Number:int");
        a.item("RaisedFocusElevation", "Number:int");
        a.item("RaisedBorderWidth", "Number:double");
        a.item("RaisedCornerRadiusBottomRight", "(w:RaisedCornerRadius.BottomRight,wf:RaisedCornerRadiusBottomRight)Number:double");
        a.item("RaisedCornerRadiusBottomLeft", "(w:RaisedCornerRadius.BottomLeft,wf:RaisedCornerRadiusBottomLeft)Number:double");
        a.item("RaisedCornerRadiusTopLeft", "(w:RaisedCornerRadius.TopLeft,wf:RaisedCornerRadiusTopLeft)Number:double");
        a.item("RaisedCornerRadiusTopRight", "(w:RaisedCornerRadius.TopRight,wf:RaisedCornerRadiusTopRight)Number:double");
        a.item("RaisedRippleColor", "Brush");
        a.item("FlatBackgroundColor", "Brush");
        a.item("FlatDisabledBackgroundColor", "Brush");
        a.item("FlatDisabledBorderColor", "Brush");
        a.item("FlatDisabledTextColor", "Brush");
        a.item("FlatDisabledElevation", "Number:int");
        a.item("FlatHoverBackgroundColor", "Brush");
        a.item("FlatBorderColor", "Brush");
        a.item("FlatRestingElevation", "Number:int");
        a.item("FlatHoverElevation", "Number:int");
        a.item("FlatFocusElevation", "Number:int");
        a.item("FlatRippleColor", "Brush");
        a.item("FlatTextColor", "Brush");
        a.item("FlatHoverTextColor", "Brush");
        a.item("FlatFocusBackgroundColor", "Brush");
        a.item("FlatFocusTextColor", "Brush");
        a.item("FlatBorderWidth", "Number:double");
        a.item("FlatCornerRadiusBottomRight", "(w:FlatCornerRadius.BottomRight,wf:FlatCornerRadiusBottomRight)Number:double");
        a.item("FlatCornerRadiusBottomLeft", "(w:FlatCornerRadius.BottomLeft,wf:FlatCornerRadiusBottomLeft)Number:double");
        a.item("FlatCornerRadiusTopLeft", "(w:FlatCornerRadius.TopLeft,wf:FlatCornerRadiusTopLeft)Number:double");
        a.item("FlatCornerRadiusTopRight", "(w:FlatCornerRadius.TopRight,wf:FlatCornerRadiusTopRight)Number:double");
        a.item("BackgroundColor", "Brush");
        a.item("DisabledBackgroundColor", "Brush");
        a.item("DisabledBorderColor", "Brush");
        a.item("DisabledTextColor", "Brush");
        a.item("DisabledElevation", "Number:int");
        a.item("ElevationMode", "ExportedType:string:ElevationMode");
        a.item("ElevationMode@names", "Auto;MaterialShadow;HaloShadow");
        a.item("HoverBackgroundColor", "Brush");
        a.item("BorderColor", "Brush");
        a.item("RestingElevation", "Number:int");
        a.item("HoverElevation", "Number:int");
        a.item("FocusElevation", "Number:int");
        a.item("FontFamily", "(w:FontFamily/FontFamilyTransform,xam:FontFamily,wf:FontFamily,web:textStyle/FontFamilyTransform)String");
        a.item("FontSize", "(w:FontSize,xam:FontSize,wf:FontSize,web:textStyle/FontSizeTransform)Number:double");
        a.item("FontStyle", "(w:FontStyle/FontStyleTransform,xam:FontFamily/FontStyleTransform,wf:FontFamily/FontStyleTransform,web:textStyle/FontStyleTransform)String");
        a.item("FontWeight", "(w:FontWeight/FontWeightTransform,xam:FontFamily/FontWeightTransform,wf:FontFamily/FontWeightTransform,web:textStyle/FontWeightTransform)String");
        a.item("TextColor", "Brush");
        a.item("HoverTextColor", "Brush");
        a.item("RippleColor", "Brush");
        a.item("RaisedTextColor", "Brush");
        a.item("RaisedHoverTextColor", "Brush");
        a.item("RaisedFocusBackgroundColor", "Brush");
        a.item("RaisedFocusTextColor", "Brush");
        a.item("FocusBackgroundColor", "Brush");
        a.item("FocusTextColor", "Brush");
        a.item("BorderWidth", "Number:double");
        a.item("CornerRadiusBottomRight", "(w:CornerRadius.BottomRight,wf:CornerRadiusBottomRight)Number:double");
        a.item("CornerRadiusBottomLeft", "(w:CornerRadius.BottomLeft,wf:CornerRadiusBottomLeft)Number:double");
        a.item("CornerRadiusTopLeft", "(w:CornerRadius.TopLeft,wf:CornerRadiusTopLeft)Number:double");
        a.item("CornerRadiusTopRight", "(w:CornerRadius.TopRight,wf:CornerRadiusTopRight)Number:double");
        a.item("OutlinedBackgroundColor", "Brush");
        a.item("OutlinedDisabledBackgroundColor", "Brush");
        a.item("OutlinedDisabledBorderColor", "Brush");
        a.item("OutlinedDisabledTextColor", "Brush");
        a.item("OutlinedDisabledElevation", "Number:int");
        a.item("OutlinedHoverBackgroundColor", "Brush");
        a.item("OutlinedBorderColor", "Brush");
        a.item("OutlinedRestingElevation", "Number:int");
        a.item("OutlinedHoverElevation", "Number:int");
        a.item("OutlinedFocusElevation", "Number:int");
        a.item("OutlinedBorderWidth", "Number:double");
        a.item("OutlinedCornerRadiusBottomRight", "(w:OutlinedCornerRadius.BottomRight,wf:OutlinedCornerRadiusBottomRight)Number:double");
        a.item("OutlinedCornerRadiusBottomLeft", "(w:OutlinedCornerRadius.BottomLeft,wf:OutlinedCornerRadiusBottomLeft)Number:double");
        a.item("OutlinedCornerRadiusTopLeft", "(w:OutlinedCornerRadius.TopLeft,wf:OutlinedCornerRadiusTopLeft)Number:double");
        a.item("OutlinedCornerRadiusTopRight", "(w:OutlinedCornerRadius.TopRight,wf:OutlinedCornerRadiusTopRight)Number:double");
        a.item("OutlinedRippleColor", "Brush");
        a.item("OutlinedTextColor", "Brush");
        a.item("OutlinedHoverTextColor", "Brush");
        a.item("OutlinedFocusBackgroundColor", "Brush");
        a.item("OutlinedFocusTextColor", "Brush");
        a.item("FabBackgroundColor", "Brush");
        a.item("FabDisabledBackgroundColor", "Brush");
        a.item("FabDisabledBorderColor", "Brush");
        a.item("FabDisabledTextColor", "Brush");
        a.item("FabDisabledElevation", "Number:int");
        a.item("FabHoverBackgroundColor", "Brush");
        a.item("FabBorderColor", "Brush");
        a.item("FabRestingElevation", "Number:int");
        a.item("FabHoverElevation", "Number:int");
        a.item("FabFocusElevation", "Number:int");
        a.item("FabBorderWidth", "Number:double");
        a.item("FabCornerRadiusBottomRight", "(w:FabCornerRadius.BottomRight,wf:FabCornerRadiusBottomRight)Number:double");
        a.item("FabCornerRadiusBottomLeft", "(w:FabCornerRadius.BottomLeft,wf:FabCornerRadiusBottomLeft)Number:double");
        a.item("FabCornerRadiusTopLeft", "(w:FabCornerRadius.TopLeft,wf:FabCornerRadiusTopLeft)Number:double");
        a.item("FabCornerRadiusTopRight", "(w:FabCornerRadius.TopRight,wf:FabCornerRadiusTopRight)Number:double");
        a.item("FabRippleColor", "Brush");
        a.item("FabTextColor", "Brush");
        a.item("FabHoverTextColor", "Brush");
        a.item("FabFocusBackgroundColor", "Brush");
        a.item("FabFocusTextColor", "Brush");
        a.item("IconBackgroundColor", "Brush");
        a.item("IconDisabledBackgroundColor", "Brush");
        a.item("IconDisabledBorderColor", "Brush");
        a.item("IconDisabledTextColor", "Brush");
        a.item("IconDisabledElevation", "Number:int");
        a.item("IconHoverBackgroundColor", "Brush");
        a.item("IconBorderColor", "Brush");
        a.item("IconRestingElevation", "Number:int");
        a.item("IconHoverElevation", "Number:int");
        a.item("IconFocusElevation", "Number:int");
        a.item("IconBorderWidth", "Number:double");
        a.item("IconCornerRadiusBottomRight", "(w:IconCornerRadius.BottomRight,wf:IconCornerRadiusBottomRight)Number:double");
        a.item("IconCornerRadiusBottomLeft", "(w:IconCornerRadius.BottomLeft,wf:IconCornerRadiusBottomLeft)Number:double");
        a.item("IconCornerRadiusTopLeft", "(w:IconCornerRadius.TopLeft,wf:IconCornerRadiusTopLeft)Number:double");
        a.item("IconCornerRadiusTopRight", "(w:IconCornerRadius.TopRight,wf:IconCornerRadiusTopRight)Number:double");
        a.item("IconRippleColor", "Brush");
        a.item("IconTextColor", "Brush");
        a.item("IconHoverTextColor", "Brush");
        a.item("IconFocusBackgroundColor", "Brush");
        a.item("IconFocusTextColor", "Brush");
        a.item("InputId", "String");
        a.item("Id", "String");
        a.item("Display", "String");
        a.item("FlexDirection", "String");
        a.item("FlexGrow", "String");
        a.item("AlignItems", "String");
        a.item("ValueRef", "(w:Value,wf:Value)DataRef");
        a.item("Name", "String");
        a.item("TabIndex", "Number:int");
        a.item("AriaLabel", "String");
        a.item("FillAvailableSpace", "Boolean");
        a.item("Focused", "(w:IsFocused,xam:IsFocused,wf:IsFocused)Boolean");
        a.item("IsFocusStyleEnabled", "Boolean");
        a.item("DisableRipple", "Boolean");
        a.item("ActualDisableRipple", "Boolean");
        a.item("DisableHover", "Boolean");
        a.item("IsHover", "Boolean");
        a.item("Disabled", "(w:IsDisabled,xam:IsDisabled,wf:IsDisabled)Boolean");
        a.item("DisableTransitions", "Boolean");
        a.item("DisablePointer", "Boolean");
        a.item("ContentPaddingLeft", "Number:double");
        a.item("ContentPaddingTop", "Number:double");
        a.item("ContentPaddingRight", "Number:double");
        a.item("ContentPaddingBottom", "Number:double");
        a.item("HorizontalContentAlignment", "ExportedType:string:HorizontalAlignment");
        a.item("HorizontalContentAlignment@names", "Left;Center;Right;Stretch");
        a.item("VerticalContentAlignment", "ExportedType:string:VerticalAlignment");
        a.item("VerticalContentAlignment@names", "Top;Center;Bottom;Stretch");
        a.item("ClickTunneling", "Boolean");
        a.item("ClickedRef", "EventRef::clicked");
        a.item("GotFocusRef", "EventRef::gotFocus");
        a.item("LostFocusRef", "EventRef::lostFocus");
    };
    ButtonDescriptionMetadata.d = function (a) {
        ButtonDescriptionMetadata.b(a);
        a.ae("Button", function () { return new ButtonDescription(); });
        a.ad("Button", ButtonDescriptionMetadata.a);
    };
    ButtonDescriptionMetadata.$t = markType(ButtonDescriptionMetadata, 'ButtonDescriptionMetadata');
    ButtonDescriptionMetadata.a = null;
    return ButtonDescriptionMetadata;
}(Base));
export { ButtonDescriptionMetadata };
