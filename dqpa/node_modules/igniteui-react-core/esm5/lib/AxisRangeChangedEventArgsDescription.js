/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var AxisRangeChangedEventArgsDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AxisRangeChangedEventArgsDescription, _super);
    function AxisRangeChangedEventArgsDescription() {
        var _this = _super.call(this) || this;
        _this.k = 0;
        _this.i = 0;
        _this.j = 0;
        _this.h = 0;
        return _this;
    }
    AxisRangeChangedEventArgsDescription.prototype.get_type = function () {
        return "AxisRangeChangedEventArgs";
    };
    Object.defineProperty(AxisRangeChangedEventArgsDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisRangeChangedEventArgsDescription.prototype, "oldMinimumValue", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("OldMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisRangeChangedEventArgsDescription.prototype, "minimumValue", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("MinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisRangeChangedEventArgsDescription.prototype, "oldMaximumValue", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("OldMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisRangeChangedEventArgsDescription.prototype, "maximumValue", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("MaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    AxisRangeChangedEventArgsDescription.$t = markType(AxisRangeChangedEventArgsDescription, 'AxisRangeChangedEventArgsDescription', Description.$);
    return AxisRangeChangedEventArgsDescription;
}(Description));
export { AxisRangeChangedEventArgsDescription };
