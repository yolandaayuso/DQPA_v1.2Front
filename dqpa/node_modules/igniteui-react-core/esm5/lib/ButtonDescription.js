/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ButtonDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ButtonDescription, _super);
    function ButtonDescription() {
        var _this = _super.call(this) || this;
        _this.a8 = 0;
        _this.a7 = 0;
        _this.e3 = null;
        _this.ey = null;
        _this.ev = null;
        _this.ef = null;
        _this.ee = null;
        _this.er = null;
        _this.eo = null;
        _this.ec = null;
        _this.cs = 0;
        _this.cq = 0;
        _this.cr = 0;
        _this.ep = null;
        _this.af = 0;
        _this.ae = 0;
        _this.ag = 0;
        _this.ah = 0;
        _this.ed = null;
        _this.eg = null;
        _this.eh = null;
        _this.ei = null;
        _this.cp = 0;
        _this.ej = null;
        _this.eq = null;
        _this.en = null;
        _this.ek = null;
        _this.el = null;
        _this.em = null;
        _this.ad = 0;
        _this.gs = null;
        _this.gu = null;
        _this.gv = null;
        _this.gw = null;
        _this.dc = 0;
        _this.gz = null;
        _this.gt = null;
        _this.df = 0;
        _this.de = 0;
        _this.dd = 0;
        _this.be = 0;
        _this.bg = 0;
        _this.bf = 0;
        _this.bh = 0;
        _this.bi = 0;
        _this.g1 = null;
        _this.fg = null;
        _this.fi = null;
        _this.fj = null;
        _this.fk = null;
        _this.cy = 0;
        _this.fn = null;
        _this.fh = null;
        _this.c1 = 0;
        _this.c0 = 0;
        _this.cz = 0;
        _this.fp = null;
        _this.fq = null;
        _this.fo = null;
        _this.fl = null;
        _this.fm = null;
        _this.aw = 0;
        _this.ay = 0;
        _this.ax = 0;
        _this.az = 0;
        _this.a0 = 0;
        _this.eu = null;
        _this.ez = null;
        _this.e0 = null;
        _this.e1 = null;
        _this.ct = 0;
        _this.e4 = null;
        _this.f0 = null;
        _this.ew = null;
        _this.dg = 0;
        _this.c3 = 0;
        _this.c2 = 0;
        _this.fv = null;
        _this.a1 = 0;
        _this.fw = null;
        _this.fx = null;
        _this.g4 = null;
        _this.f1 = null;
        _this.g3 = null;
        _this.g2 = null;
        _this.g0 = null;
        _this.gx = null;
        _this.gy = null;
        _this.ft = null;
        _this.fu = null;
        _this.ai = 0;
        _this.ao = 0;
        _this.an = 0;
        _this.ap = 0;
        _this.aq = 0;
        _this.gh = null;
        _this.gj = null;
        _this.gk = null;
        _this.gl = null;
        _this.c8 = 0;
        _this.go = null;
        _this.gi = null;
        _this.db = 0;
        _this.da = 0;
        _this.c9 = 0;
        _this.a9 = 0;
        _this.bb = 0;
        _this.ba = 0;
        _this.bc = 0;
        _this.bd = 0;
        _this.gq = null;
        _this.gr = null;
        _this.gp = null;
        _this.gm = null;
        _this.gn = null;
        _this.e5 = null;
        _this.e7 = null;
        _this.e8 = null;
        _this.e9 = null;
        _this.cu = 0;
        _this.fc = null;
        _this.e6 = null;
        _this.cx = 0;
        _this.cw = 0;
        _this.cv = 0;
        _this.ar = 0;
        _this.at = 0;
        _this.as = 0;
        _this.au = 0;
        _this.av = 0;
        _this.fe = null;
        _this.ff = null;
        _this.fd = null;
        _this.fa = null;
        _this.fb = null;
        _this.f2 = null;
        _this.f4 = null;
        _this.f5 = null;
        _this.f6 = null;
        _this.c4 = 0;
        _this.f9 = null;
        _this.f3 = null;
        _this.c7 = 0;
        _this.c6 = 0;
        _this.c5 = 0;
        _this.a2 = 0;
        _this.a4 = 0;
        _this.a3 = 0;
        _this.a5 = 0;
        _this.a6 = 0;
        _this.gb = null;
        _this.gc = null;
        _this.ga = null;
        _this.f7 = null;
        _this.f8 = null;
        _this.ge = null;
        _this.gd = null;
        _this.e2 = null;
        _this.fr = null;
        _this.fs = null;
        _this.es = null;
        _this.g5 = null;
        _this.gg = null;
        _this.dh = 0;
        _this.et = null;
        _this.o = false;
        _this.p = false;
        _this.q = false;
        _this.m = false;
        _this.h = false;
        _this.k = false;
        _this.r = false;
        _this.j = false;
        _this.n = false;
        _this.l = false;
        _this.ak = 0;
        _this.am = 0;
        _this.al = 0;
        _this.aj = 0;
        _this.fz = null;
        _this.g6 = null;
        _this.i = false;
        _this.ex = null;
        _this.fy = null;
        _this.gf = null;
        return _this;
    }
    ButtonDescription.prototype.get_type = function () {
        return "Button";
    };
    Object.defineProperty(ButtonDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "minWidth", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("MinWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "minHeight", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("MinHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "displayType", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.g("DisplayType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "density", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            this.ey = a;
            this.g("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "baseTheme", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.g("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDensity", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.g("ActualDensity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualBorderColor", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.g("ActualBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualUmbraShadowColor", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("ActualUmbraShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualPenumbraShadowColor", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            this.eo = a;
            this.g("ActualPenumbraShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualAmbientShadowColor", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            this.ec = a;
            this.g("ActualAmbientShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualRestingElevation", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.g("ActualRestingElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualFocusElevation", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            this.cq = a;
            this.g("ActualFocusElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualHoverElevation", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            this.cr = a;
            this.g("ActualHoverElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualRippleColor", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.g("ActualRippleColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualCornerRadiusBottomRight", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("ActualCornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualCornerRadiusBottomLeft", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("ActualCornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualCornerRadiusTopLeft", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("ActualCornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualCornerRadiusTopRight", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("ActualCornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualBackgroundColor", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.g("ActualBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisabledBackgroundColor", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.g("ActualDisabledBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisabledBorderColor", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.g("ActualDisabledBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisabledTextColor", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.g("ActualDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisabledElevation", {
        get: function () {
            return this.cp;
        },
        set: function (a) {
            this.cp = a;
            this.g("ActualDisabledElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualElevationMode", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.g("ActualElevationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualTextColor", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.g("ActualTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualHoverTextColor", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            this.en = a;
            this.g("ActualHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualFocusBackgroundColor", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.g("ActualFocusBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualFocusTextColor", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("ActualFocusTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualHoverBackgroundColor", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.g("ActualHoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualBorderWidth", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("ActualBorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedBackgroundColor", {
        get: function () {
            return this.gs;
        },
        set: function (a) {
            this.gs = a;
            this.g("RaisedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedDisabledBackgroundColor", {
        get: function () {
            return this.gu;
        },
        set: function (a) {
            this.gu = a;
            this.g("RaisedDisabledBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedDisabledBorderColor", {
        get: function () {
            return this.gv;
        },
        set: function (a) {
            this.gv = a;
            this.g("RaisedDisabledBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedDisabledTextColor", {
        get: function () {
            return this.gw;
        },
        set: function (a) {
            this.gw = a;
            this.g("RaisedDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedDisabledElevation", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.g("RaisedDisabledElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedHoverBackgroundColor", {
        get: function () {
            return this.gz;
        },
        set: function (a) {
            this.gz = a;
            this.g("RaisedHoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedBorderColor", {
        get: function () {
            return this.gt;
        },
        set: function (a) {
            this.gt = a;
            this.g("RaisedBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedRestingElevation", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.g("RaisedRestingElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedHoverElevation", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            this.de = a;
            this.g("RaisedHoverElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedFocusElevation", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            this.dd = a;
            this.g("RaisedFocusElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedBorderWidth", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("RaisedBorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedCornerRadiusBottomRight", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("RaisedCornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedCornerRadiusBottomLeft", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("RaisedCornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedCornerRadiusTopLeft", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("RaisedCornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedCornerRadiusTopRight", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("RaisedCornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedRippleColor", {
        get: function () {
            return this.g1;
        },
        set: function (a) {
            this.g1 = a;
            this.g("RaisedRippleColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatBackgroundColor", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.g("FlatBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatDisabledBackgroundColor", {
        get: function () {
            return this.fi;
        },
        set: function (a) {
            this.fi = a;
            this.g("FlatDisabledBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatDisabledBorderColor", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.g("FlatDisabledBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatDisabledTextColor", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            this.fk = a;
            this.g("FlatDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatDisabledElevation", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            this.cy = a;
            this.g("FlatDisabledElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatHoverBackgroundColor", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            this.fn = a;
            this.g("FlatHoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatBorderColor", {
        get: function () {
            return this.fh;
        },
        set: function (a) {
            this.fh = a;
            this.g("FlatBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatRestingElevation", {
        get: function () {
            return this.c1;
        },
        set: function (a) {
            this.c1 = a;
            this.g("FlatRestingElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatHoverElevation", {
        get: function () {
            return this.c0;
        },
        set: function (a) {
            this.c0 = a;
            this.g("FlatHoverElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatFocusElevation", {
        get: function () {
            return this.cz;
        },
        set: function (a) {
            this.cz = a;
            this.g("FlatFocusElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatRippleColor", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            this.fp = a;
            this.g("FlatRippleColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatTextColor", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            this.fq = a;
            this.g("FlatTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatHoverTextColor", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.g("FlatHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatFocusBackgroundColor", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("FlatFocusBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatFocusTextColor", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.g("FlatFocusTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatBorderWidth", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("FlatBorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatCornerRadiusBottomRight", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("FlatCornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatCornerRadiusBottomLeft", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("FlatCornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatCornerRadiusTopLeft", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("FlatCornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flatCornerRadiusTopRight", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("FlatCornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "backgroundColor", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.g("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabledBackgroundColor", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.g("DisabledBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabledBorderColor", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.g("DisabledBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabledTextColor", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            this.e1 = a;
            this.g("DisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabledElevation", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.g("DisabledElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "elevationMode", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            this.e4 = a;
            this.g("ElevationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "hoverBackgroundColor", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            this.f0 = a;
            this.g("HoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "borderColor", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.g("BorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "restingElevation", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.g("RestingElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "hoverElevation", {
        get: function () {
            return this.c3;
        },
        set: function (a) {
            this.c3 = a;
            this.g("HoverElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "focusElevation", {
        get: function () {
            return this.c2;
        },
        set: function (a) {
            this.c2 = a;
            this.g("FocusElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fontFamily", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fontSize", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fontStyle", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            this.fw = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fontWeight", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "textColor", {
        get: function () {
            return this.g4;
        },
        set: function (a) {
            this.g4 = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "hoverTextColor", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.g("HoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "rippleColor", {
        get: function () {
            return this.g3;
        },
        set: function (a) {
            this.g3 = a;
            this.g("RippleColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedTextColor", {
        get: function () {
            return this.g2;
        },
        set: function (a) {
            this.g2 = a;
            this.g("RaisedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedHoverTextColor", {
        get: function () {
            return this.g0;
        },
        set: function (a) {
            this.g0 = a;
            this.g("RaisedHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedFocusBackgroundColor", {
        get: function () {
            return this.gx;
        },
        set: function (a) {
            this.gx = a;
            this.g("RaisedFocusBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "raisedFocusTextColor", {
        get: function () {
            return this.gy;
        },
        set: function (a) {
            this.gy = a;
            this.g("RaisedFocusTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "focusBackgroundColor", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.g("FocusBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "focusTextColor", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.g("FocusTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "borderWidth", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("BorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "cornerRadiusBottomRight", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("CornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "cornerRadiusBottomLeft", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("CornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "cornerRadiusTopLeft", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("CornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "cornerRadiusTopRight", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("CornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedBackgroundColor", {
        get: function () {
            return this.gh;
        },
        set: function (a) {
            this.gh = a;
            this.g("OutlinedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedDisabledBackgroundColor", {
        get: function () {
            return this.gj;
        },
        set: function (a) {
            this.gj = a;
            this.g("OutlinedDisabledBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedDisabledBorderColor", {
        get: function () {
            return this.gk;
        },
        set: function (a) {
            this.gk = a;
            this.g("OutlinedDisabledBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedDisabledTextColor", {
        get: function () {
            return this.gl;
        },
        set: function (a) {
            this.gl = a;
            this.g("OutlinedDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedDisabledElevation", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.g("OutlinedDisabledElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedHoverBackgroundColor", {
        get: function () {
            return this.go;
        },
        set: function (a) {
            this.go = a;
            this.g("OutlinedHoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedBorderColor", {
        get: function () {
            return this.gi;
        },
        set: function (a) {
            this.gi = a;
            this.g("OutlinedBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedRestingElevation", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            this.db = a;
            this.g("OutlinedRestingElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedHoverElevation", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.g("OutlinedHoverElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedFocusElevation", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            this.c9 = a;
            this.g("OutlinedFocusElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedBorderWidth", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("OutlinedBorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedCornerRadiusBottomRight", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("OutlinedCornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedCornerRadiusBottomLeft", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("OutlinedCornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedCornerRadiusTopLeft", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("OutlinedCornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedCornerRadiusTopRight", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("OutlinedCornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedRippleColor", {
        get: function () {
            return this.gq;
        },
        set: function (a) {
            this.gq = a;
            this.g("OutlinedRippleColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedTextColor", {
        get: function () {
            return this.gr;
        },
        set: function (a) {
            this.gr = a;
            this.g("OutlinedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedHoverTextColor", {
        get: function () {
            return this.gp;
        },
        set: function (a) {
            this.gp = a;
            this.g("OutlinedHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedFocusBackgroundColor", {
        get: function () {
            return this.gm;
        },
        set: function (a) {
            this.gm = a;
            this.g("OutlinedFocusBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "outlinedFocusTextColor", {
        get: function () {
            return this.gn;
        },
        set: function (a) {
            this.gn = a;
            this.g("OutlinedFocusTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabBackgroundColor", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.g("FabBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabDisabledBackgroundColor", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.g("FabDisabledBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabDisabledBorderColor", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.g("FabDisabledBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabDisabledTextColor", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.g("FabDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabDisabledElevation", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.g("FabDisabledElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabHoverBackgroundColor", {
        get: function () {
            return this.fc;
        },
        set: function (a) {
            this.fc = a;
            this.g("FabHoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabBorderColor", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            this.e6 = a;
            this.g("FabBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabRestingElevation", {
        get: function () {
            return this.cx;
        },
        set: function (a) {
            this.cx = a;
            this.g("FabRestingElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabHoverElevation", {
        get: function () {
            return this.cw;
        },
        set: function (a) {
            this.cw = a;
            this.g("FabHoverElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabFocusElevation", {
        get: function () {
            return this.cv;
        },
        set: function (a) {
            this.cv = a;
            this.g("FabFocusElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabBorderWidth", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("FabBorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabCornerRadiusBottomRight", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("FabCornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabCornerRadiusBottomLeft", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("FabCornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabCornerRadiusTopLeft", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("FabCornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabCornerRadiusTopRight", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("FabCornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabRippleColor", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.g("FabRippleColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabTextColor", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.g("FabTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabHoverTextColor", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.g("FabHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabFocusBackgroundColor", {
        get: function () {
            return this.fa;
        },
        set: function (a) {
            this.fa = a;
            this.g("FabFocusBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fabFocusTextColor", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.g("FabFocusTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconBackgroundColor", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            this.f2 = a;
            this.g("IconBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconDisabledBackgroundColor", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.g("IconDisabledBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconDisabledBorderColor", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.g("IconDisabledBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconDisabledTextColor", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.g("IconDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconDisabledElevation", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            this.c4 = a;
            this.g("IconDisabledElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconHoverBackgroundColor", {
        get: function () {
            return this.f9;
        },
        set: function (a) {
            this.f9 = a;
            this.g("IconHoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconBorderColor", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.g("IconBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconRestingElevation", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.g("IconRestingElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconHoverElevation", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            this.c6 = a;
            this.g("IconHoverElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconFocusElevation", {
        get: function () {
            return this.c5;
        },
        set: function (a) {
            this.c5 = a;
            this.g("IconFocusElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconBorderWidth", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("IconBorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconCornerRadiusBottomRight", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("IconCornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconCornerRadiusBottomLeft", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("IconCornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconCornerRadiusTopLeft", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("IconCornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconCornerRadiusTopRight", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("IconCornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconRippleColor", {
        get: function () {
            return this.gb;
        },
        set: function (a) {
            this.gb = a;
            this.g("IconRippleColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconTextColor", {
        get: function () {
            return this.gc;
        },
        set: function (a) {
            this.gc = a;
            this.g("IconTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconHoverTextColor", {
        get: function () {
            return this.ga;
        },
        set: function (a) {
            this.ga = a;
            this.g("IconHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconFocusBackgroundColor", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.g("IconFocusBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "iconFocusTextColor", {
        get: function () {
            return this.f8;
        },
        set: function (a) {
            this.f8 = a;
            this.g("IconFocusTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "inputId", {
        get: function () {
            return this.ge;
        },
        set: function (a) {
            this.ge = a;
            this.g("InputId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "id", {
        get: function () {
            return this.gd;
        },
        set: function (a) {
            this.gd = a;
            this.g("Id");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "display", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            this.e2 = a;
            this.g("Display");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flexDirection", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.g("FlexDirection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "flexGrow", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.g("FlexGrow");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "alignItems", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.g("AlignItems");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "valueRef", {
        get: function () {
            return this.g5;
        },
        set: function (a) {
            this.g5 = a;
            this.g("ValueRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "name", {
        get: function () {
            return this.gg;
        },
        set: function (a) {
            this.gg = a;
            this.g("Name");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "tabIndex", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.g("TabIndex");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "ariaLabel", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.g("AriaLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "fillAvailableSpace", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("FillAvailableSpace");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "focused", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("Focused");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "isFocusStyleEnabled", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("IsFocusStyleEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disableRipple", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("DisableRipple");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "actualDisableRipple", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ActualDisableRipple");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disableHover", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("DisableHover");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "isHover", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("IsHover");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disabled", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("Disabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disableTransitions", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("DisableTransitions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "disablePointer", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("DisablePointer");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "contentPaddingLeft", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("ContentPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "contentPaddingTop", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("ContentPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "contentPaddingRight", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("ContentPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "contentPaddingBottom", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("ContentPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "horizontalContentAlignment", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.g("HorizontalContentAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "verticalContentAlignment", {
        get: function () {
            return this.g6;
        },
        set: function (a) {
            this.g6 = a;
            this.g("VerticalContentAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "clickTunneling", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ClickTunneling");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "clickedRef", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.g("ClickedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "gotFocusRef", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            this.fy = a;
            this.g("GotFocusRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ButtonDescription.prototype, "lostFocusRef", {
        get: function () {
            return this.gf;
        },
        set: function (a) {
            this.gf = a;
            this.g("LostFocusRef");
        },
        enumerable: false,
        configurable: true
    });
    ButtonDescription.$t = markType(ButtonDescription, 'ButtonDescription', Description.$);
    return ButtonDescription;
}(Description));
export { ButtonDescription };
