/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var MultiColumnComboBoxDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MultiColumnComboBoxDescription, _super);
    function MultiColumnComboBoxDescription() {
        var _this = _super.call(this) || this;
        _this.w = false;
        _this.j = null;
        _this.c5 = null;
        _this.cr = null;
        _this.c6 = null;
        _this.cs = null;
        _this.c7 = null;
        _this.ct = null;
        _this.az = 0;
        _this.ah = 0;
        _this.r = false;
        _this.a0 = 0;
        _this.a1 = 0;
        _this.a2 = 0;
        _this.a3 = 0;
        _this.ai = 0;
        _this.aj = 0;
        _this.ak = 0;
        _this.al = 0;
        _this.a5 = 0;
        _this.a4 = 0;
        _this.a6 = 0;
        _this.a7 = 0;
        _this.an = 0;
        _this.am = 0;
        _this.ao = 0;
        _this.ap = 0;
        _this.i = null;
        _this.db = null;
        _this.cu = null;
        _this.s = false;
        _this.dc = null;
        _this.cv = null;
        _this.a9 = 0;
        _this.aq = 0;
        _this.dd = null;
        _this.cw = null;
        _this.ba = 0;
        _this.ar = 0;
        _this.bb = 0;
        _this.as = 0;
        _this.di = null;
        _this.cx = null;
        _this.bd = 0;
        _this.at = 0;
        _this.be = 0;
        _this.au = 0;
        _this.da = null;
        _this.dk = null;
        _this.dp = null;
        _this.cy = null;
        _this.dl = null;
        _this.bf = 0;
        _this.dm = null;
        _this.dn = null;
        _this.p = false;
        _this.dr = null;
        _this.cz = null;
        _this.ds = null;
        _this.c0 = null;
        _this.dw = null;
        _this.c1 = null;
        _this.dt = null;
        _this.bg = 0;
        _this.du = null;
        _this.dv = null;
        _this.dx = null;
        _this.v = false;
        _this.d2 = null;
        _this.c2 = null;
        _this.de = null;
        _this.bc = 0;
        _this.df = null;
        _this.dg = null;
        _this.d5 = null;
        _this.c3 = null;
        _this.bh = 0;
        _this.av = 0;
        _this.d6 = null;
        _this.c4 = null;
        _this.bi = 0;
        _this.aw = 0;
        _this.bj = 0;
        _this.ax = 0;
        _this.bk = 0;
        _this.ay = 0;
        _this.q = false;
        _this.dz = null;
        _this.d3 = null;
        _this.d0 = null;
        _this.k = null;
        _this.h = null;
        _this.cp = null;
        _this.t = false;
        _this.u = false;
        _this.x = false;
        _this.dh = null;
        _this.dq = null;
        _this.d4 = null;
        _this.dy = null;
        _this.dj = null;
        _this.c8 = null;
        _this.c9 = null;
        _this.d1 = null;
        _this.d7 = null;
        _this.a8 = 0;
        return _this;
    }
    MultiColumnComboBoxDescription.prototype.get_type = function () {
        return "MultiColumnComboBox";
    };
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "showClearButton", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("ShowClearButton");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "fields", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("Fields");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "backgroundColor", {
        get: function () {
            return this.c5;
        },
        set: function (a) {
            this.c5 = a;
            this.g("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualBackgroundColor", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            this.cr = a;
            this.g("ActualBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "baseTheme", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            this.c6 = a;
            this.g("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualBaseTheme", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.g("ActualBaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "borderColor", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.g("BorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualBorderColor", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.g("ActualBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "borderWidth", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("BorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualBorderWidth", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("ActualBorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "columnHeadersVisible", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("ColumnHeadersVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "contentPaddingBottom", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("ContentPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "contentPaddingLeft", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("ContentPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "contentPaddingRight", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("ContentPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "contentPaddingTop", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("ContentPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualContentPaddingBottom", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("ActualContentPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualContentPaddingLeft", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("ActualContentPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualContentPaddingRight", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("ActualContentPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualContentPaddingTop", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("ActualContentPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "cornerRadiusBottomRight", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("CornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "cornerRadiusBottomLeft", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("CornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "cornerRadiusTopLeft", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("CornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "cornerRadiusTopRight", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("CornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualCornerRadiusBottomRight", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("ActualCornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualCornerRadiusBottomLeft", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("ActualCornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualCornerRadiusTopLeft", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("ActualCornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualCornerRadiusTopRight", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("ActualCornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "dataSourceDesiredProperties", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("DataSourceDesiredProperties");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "density", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            this.db = a;
            this.g("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualDensity", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.g("ActualDensity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "dropDownButtonVisible", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("DropDownButtonVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "focusBorderColor", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.g("FocusBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualFocusBorderColor", {
        get: function () {
            return this.cv;
        },
        set: function (a) {
            this.cv = a;
            this.g("ActualFocusBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "focusBorderWidth", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("FocusBorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualFocusBorderWidth", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("ActualFocusBorderWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "focusUnderlineColor", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            this.dd = a;
            this.g("FocusUnderlineColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualFocusUnderlineColor", {
        get: function () {
            return this.cw;
        },
        set: function (a) {
            this.cw = a;
            this.g("ActualFocusUnderlineColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "focusUnderlineOpacity", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("FocusUnderlineOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualFocusUnderlineOpacity", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("ActualFocusUnderlineOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "focusUnderlineRippleOpacity", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("FocusUnderlineRippleOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualFocusUnderlineRippleOpacity", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("ActualFocusUnderlineRippleOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "hoverUnderlineColor", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.g("HoverUnderlineColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualHoverUnderlineColor", {
        get: function () {
            return this.cx;
        },
        set: function (a) {
            this.cx = a;
            this.g("ActualHoverUnderlineColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "hoverUnderlineOpacity", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("HoverUnderlineOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualHoverUnderlineOpacity", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("ActualHoverUnderlineOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "hoverUnderlineWidth", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("HoverUnderlineWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualHoverUnderlineWidth", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("ActualHoverUnderlineWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.g("DataSourceRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "label", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.g("Label");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "labelTextColor", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.g("LabelTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualLabelTextColor", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            this.cy = a;
            this.g("ActualLabelTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "labelFontFamily", {
        get: function () {
            return this.dl;
        },
        set: function (a) {
            this.dl = a;
            this.g("LabelFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "labelFontSize", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("LabelFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "labelFontStyle", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            this.dm = a;
            this.g("LabelFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "labelFontWeight", {
        get: function () {
            return this.dn;
        },
        set: function (a) {
            this.dn = a;
            this.g("LabelFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualLabelVisible", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("ActualLabelVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "noMatchesFoundLabel", {
        get: function () {
            return this.dr;
        },
        set: function (a) {
            this.dr = a;
            this.g("NoMatchesFoundLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualNoMatchesFoundLabel", {
        get: function () {
            return this.cz;
        },
        set: function (a) {
            this.cz = a;
            this.g("ActualNoMatchesFoundLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "noMatchesFoundLabelBackgroundColor", {
        get: function () {
            return this.ds;
        },
        set: function (a) {
            this.ds = a;
            this.g("NoMatchesFoundLabelBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualNoMatchesFoundLabelBackgroundColor", {
        get: function () {
            return this.c0;
        },
        set: function (a) {
            this.c0 = a;
            this.g("ActualNoMatchesFoundLabelBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "noMatchesFoundLabelTextColor", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            this.dw = a;
            this.g("NoMatchesFoundLabelTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualNoMatchesFoundLabelTextColor", {
        get: function () {
            return this.c1;
        },
        set: function (a) {
            this.c1 = a;
            this.g("ActualNoMatchesFoundLabelTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "noMatchesFoundLabelFontFamily", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.g("NoMatchesFoundLabelFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "noMatchesFoundLabelFontSize", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("NoMatchesFoundLabelFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "noMatchesFoundLabelFontStyle", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            this.du = a;
            this.g("NoMatchesFoundLabelFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "noMatchesFoundLabelFontWeight", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.g("NoMatchesFoundLabelFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "placeholder", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.g("Placeholder");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "rowSeparatorsVisible", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("RowSeparatorsVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "textColor", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            this.d2 = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualTextColor", {
        get: function () {
            return this.c2;
        },
        set: function (a) {
            this.c2 = a;
            this.g("ActualTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "fontFamily", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            this.de = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "fontSize", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "fontStyle", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "fontWeight", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "underlineColor", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.g("UnderlineColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualUnderlineColor", {
        get: function () {
            return this.c3;
        },
        set: function (a) {
            this.c3 = a;
            this.g("ActualUnderlineColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "underlineOpacity", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("UnderlineOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualUnderlineOpacity", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("ActualUnderlineOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "underlineRippleColor", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.g("UnderlineRippleColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualUnderlineRippleColor", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            this.c4 = a;
            this.g("ActualUnderlineRippleColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "underlineRippleOpacity", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("UnderlineRippleOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualUnderlineRippleOpacity", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("ActualUnderlineRippleOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "underlineRippleWidth", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("UnderlineRippleWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualUnderlineRippleWidth", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("ActualUnderlineRippleWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "underlineWidth", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("UnderlineWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualUnderlineWidth", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("ActualUnderlineWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "allowFilter", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("AllowFilter");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "sortMode", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.g("SortMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "textField", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.g("TextField");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "text", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.g("Text");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "valueField", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("ValueField");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "actualValueField", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ActualValueField");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "value", {
        get: function () {
            return this.cp;
        },
        set: function (a) {
            this.cp = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "isFixed", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("IsFixed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "openAsChild", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("OpenAsChild");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "useTopLayer", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("UseTopLayer");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "gotFocusRef", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.g("GotFocusRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "lostFocusRef", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.g("LostFocusRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "textValueChangedRef", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.g("TextValueChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "selectedValueChangedRef", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.g("SelectedValueChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "keyDownRef", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.g("KeyDownRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "changeRef", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.g("ChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "changingRef", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            this.c9 = a;
            this.g("ChangingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "textChangeRef", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            this.d1 = a;
            this.g("TextChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "valueChangeRef", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.g("ValueChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiColumnComboBoxDescription.prototype, "defaultColumnWidth", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("DefaultColumnWidth");
        },
        enumerable: false,
        configurable: true
    });
    MultiColumnComboBoxDescription.$t = markType(MultiColumnComboBoxDescription, 'MultiColumnComboBoxDescription', Description.$);
    return MultiColumnComboBoxDescription;
}(Description));
export { MultiColumnComboBoxDescription };
