/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ToolActionInfo } from "./ToolActionInfo";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolActionButtonPairInfo = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionButtonPairInfo, _super);
    function ToolActionButtonPairInfo() {
        var _this = _super.call(this) || this;
        _this._leftTitle = null;
        _this._leftCommandArgument = null;
        _this._leftIconName = null;
        _this._leftIconCollectionName = null;
        _this._isToggleDisabled = false;
        _this._leftIconViewBoxLeft = 0;
        _this._leftIconViewBoxTop = 0;
        _this._leftIconViewBoxWidth = 0;
        _this._leftIconViewBoxHeight = 0;
        _this._rightTitle = null;
        _this._rightCommandArgument = null;
        _this._rightIconName = null;
        _this._rightIconCollectionName = null;
        _this._rightIconViewBoxLeft = 0;
        _this._rightIconViewBoxTop = 0;
        _this._rightIconViewBoxWidth = 0;
        _this._rightIconViewBoxHeight = 0;
        _this.leftIconViewBoxLeft = NaN;
        _this.leftIconViewBoxTop = NaN;
        _this.leftIconViewBoxWidth = NaN;
        _this.leftIconViewBoxHeight = NaN;
        _this.rightIconViewBoxLeft = NaN;
        _this.rightIconViewBoxTop = NaN;
        _this.rightIconViewBoxWidth = NaN;
        _this.rightIconViewBoxHeight = NaN;
        return _this;
    }
    ToolActionButtonPairInfo.prototype.get_d = function () {
        return 12;
    };
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "leftTitle", {
        get: function () {
            return this._leftTitle;
        },
        set: function (a) {
            this._leftTitle = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "leftCommandArgument", {
        get: function () {
            return this._leftCommandArgument;
        },
        set: function (a) {
            this._leftCommandArgument = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "leftIconName", {
        get: function () {
            return this._leftIconName;
        },
        set: function (a) {
            this._leftIconName = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "leftIconCollectionName", {
        get: function () {
            return this._leftIconCollectionName;
        },
        set: function (a) {
            this._leftIconCollectionName = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "isToggleDisabled", {
        get: function () {
            return this._isToggleDisabled;
        },
        set: function (a) {
            this._isToggleDisabled = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "leftIconViewBoxLeft", {
        get: function () {
            return this._leftIconViewBoxLeft;
        },
        set: function (a) {
            this._leftIconViewBoxLeft = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "leftIconViewBoxTop", {
        get: function () {
            return this._leftIconViewBoxTop;
        },
        set: function (a) {
            this._leftIconViewBoxTop = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "leftIconViewBoxWidth", {
        get: function () {
            return this._leftIconViewBoxWidth;
        },
        set: function (a) {
            this._leftIconViewBoxWidth = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "leftIconViewBoxHeight", {
        get: function () {
            return this._leftIconViewBoxHeight;
        },
        set: function (a) {
            this._leftIconViewBoxHeight = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "rightTitle", {
        get: function () {
            return this._rightTitle;
        },
        set: function (a) {
            this._rightTitle = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "rightCommandArgument", {
        get: function () {
            return this._rightCommandArgument;
        },
        set: function (a) {
            this._rightCommandArgument = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "rightIconName", {
        get: function () {
            return this._rightIconName;
        },
        set: function (a) {
            this._rightIconName = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "rightIconCollectionName", {
        get: function () {
            return this._rightIconCollectionName;
        },
        set: function (a) {
            this._rightIconCollectionName = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "rightIconViewBoxLeft", {
        get: function () {
            return this._rightIconViewBoxLeft;
        },
        set: function (a) {
            this._rightIconViewBoxLeft = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "rightIconViewBoxTop", {
        get: function () {
            return this._rightIconViewBoxTop;
        },
        set: function (a) {
            this._rightIconViewBoxTop = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "rightIconViewBoxWidth", {
        get: function () {
            return this._rightIconViewBoxWidth;
        },
        set: function (a) {
            this._rightIconViewBoxWidth = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfo.prototype, "rightIconViewBoxHeight", {
        get: function () {
            return this._rightIconViewBoxHeight;
        },
        set: function (a) {
            this._rightIconViewBoxHeight = a;
        },
        enumerable: false,
        configurable: true
    });
    ToolActionButtonPairInfo.$t = markType(ToolActionButtonPairInfo, 'ToolActionButtonPairInfo', ToolActionInfo.$);
    return ToolActionButtonPairInfo;
}(ToolActionInfo));
export { ToolActionButtonPairInfo };
