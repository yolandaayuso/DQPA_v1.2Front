/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var SparklineDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SparklineDescription, _super);
    function SparklineDescription() {
        var _this = _super.call(this) || this;
        _this.as = null;
        _this.bc = null;
        _this.ba = null;
        _this.bd = null;
        _this.av = null;
        _this.a6 = null;
        _this.az = null;
        _this.a8 = null;
        _this.bh = null;
        _this.a1 = null;
        _this.bl = null;
        _this.bf = null;
        _this.a3 = null;
        _this.bn = null;
        _this.bb = null;
        _this.be = null;
        _this.aw = null;
        _this.a7 = null;
        _this.a9 = null;
        _this.a0 = null;
        _this.bg = null;
        _this.l = false;
        _this.t = 0;
        _this.o = 0;
        _this.q = 0;
        _this.p = 0;
        _this.s = 0;
        _this.w = 0;
        _this.r = 0;
        _this.v = 0;
        _this.u = 0;
        _this.at = null;
        _this.bk = null;
        _this.a5 = null;
        _this.bi = null;
        _this.ap = 0;
        _this.aa = 0;
        _this.y = 0;
        _this.x = 0;
        _this.au = null;
        _this.bj = null;
        _this.bm = null;
        _this.a2 = null;
        _this.ax = null;
        _this.a4 = null;
        _this.h = null;
        _this.bo = null;
        _this.i = null;
        _this.z = 0;
        _this.n = 0;
        _this.bp = null;
        _this.ay = null;
        _this.ar = null;
        return _this;
    }
    SparklineDescription.prototype.get_type = function () {
        return "Sparkline";
    };
    Object.defineProperty(SparklineDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "brush", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("Brush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "negativeBrush", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("NegativeBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "markerBrush", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("MarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "negativeMarkerBrush", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("NegativeMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "firstMarkerBrush", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("FirstMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "lastMarkerBrush", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("LastMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "highMarkerBrush", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("HighMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "lowMarkerBrush", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("LowMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "trendLineBrush", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("TrendLineBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "horizontalAxisBrush", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("HorizontalAxisBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "verticalAxisBrush", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("VerticalAxisBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "normalRangeFill", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("NormalRangeFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "horizontalAxisVisibility", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("HorizontalAxisVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "verticalAxisVisibility", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("VerticalAxisVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "markerVisibility", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("MarkerVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "negativeMarkerVisibility", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("NegativeMarkerVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "firstMarkerVisibility", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("FirstMarkerVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "lastMarkerVisibility", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("LastMarkerVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "lowMarkerVisibility", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("LowMarkerVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "highMarkerVisibility", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("HighMarkerVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "normalRangeVisibility", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("NormalRangeVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "displayNormalRangeInFront", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("DisplayNormalRangeInFront");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "markerSize", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("MarkerSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "firstMarkerSize", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("FirstMarkerSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "lastMarkerSize", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("LastMarkerSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "highMarkerSize", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("HighMarkerSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "lowMarkerSize", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("LowMarkerSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "negativeMarkerSize", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("NegativeMarkerSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "lineThickness", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("LineThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "minimum", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("Minimum");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "maximum", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("Maximum");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("DataSourceRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "valueMemberPath", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("ValueMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "labelMemberPath", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("LabelMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "trendLineType", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("TrendLineType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "trendLinePeriod", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("TrendLinePeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "trendLineThickness", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("TrendLineThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "normalRangeMinimum", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("NormalRangeMinimum");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "normalRangeMaximum", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("NormalRangeMaximum");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "displayType", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("DisplayType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "unknownValuePlotting", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("UnknownValuePlotting");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "verticalAxisLabelRef", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("VerticalAxisLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "horizontalAxisLabelRef", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("HorizontalAxisLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "formatLabelRef", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("FormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "horizontalLabelFormat", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("HorizontalLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "horizontalLabelFormatSpecifiers", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("HorizontalLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "verticalLabelFormat", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("VerticalLabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "verticalLabelFormatSpecifiers", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("VerticalLabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "pixelScalingRatio", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("PixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "actualPixelScalingRatio", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("ActualPixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "width", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "height", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineDescription.prototype, "background", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    SparklineDescription.$t = markType(SparklineDescription, 'SparklineDescription', Description.$);
    return SparklineDescription;
}(Description));
export { SparklineDescription };
