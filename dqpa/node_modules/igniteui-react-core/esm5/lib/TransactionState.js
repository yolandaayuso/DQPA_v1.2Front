/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
/**
 * @hidden
 */
var TransactionState = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TransactionState, _super);
    function TransactionState(a, b, c) {
        var _this = _super.call(this) || this;
        _this._id = null;
        _this._transactionType = 0;
        _this._value = null;
        _this._version = null;
        _this.id = a;
        _this.transactionType = b;
        _this.value = c;
        return _this;
    }
    Object.defineProperty(TransactionState.prototype, "id", {
        get: function () {
            return this._id;
        },
        set: function (a) {
            this._id = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionState.prototype, "transactionType", {
        get: function () {
            return this._transactionType;
        },
        set: function (a) {
            this._transactionType = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionState.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (a) {
            this._value = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TransactionState.prototype, "version", {
        get: function () {
            return this._version;
        },
        set: function (a) {
            this._version = a;
        },
        enumerable: false,
        configurable: true
    });
    TransactionState.$t = markType(TransactionState, 'TransactionState');
    return TransactionState;
}(Base));
export { TransactionState };
