/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
/**
 * @hidden
 */
var BreakEvenItem = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(BreakEvenItem, _super);
    function BreakEvenItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._FixedCost = 0;
        _this._VariableCost = 0;
        _this._SalesRevenue = 0;
        _this._MarginalProfit = 0;
        _this._Units = 0;
        _this._Ratio = 0;
        return _this;
    }
    Object.defineProperty(BreakEvenItem.prototype, "FixedCost", {
        get: function () {
            return this._FixedCost;
        },
        set: function (a) {
            this._FixedCost = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BreakEvenItem.prototype, "VariableCost", {
        get: function () {
            return this._VariableCost;
        },
        set: function (a) {
            this._VariableCost = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BreakEvenItem.prototype, "SalesRevenue", {
        get: function () {
            return this._SalesRevenue;
        },
        set: function (a) {
            this._SalesRevenue = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BreakEvenItem.prototype, "MarginalProfit", {
        get: function () {
            return this._MarginalProfit;
        },
        set: function (a) {
            this._MarginalProfit = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BreakEvenItem.prototype, "Units", {
        get: function () {
            return this._Units;
        },
        set: function (a) {
            this._Units = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BreakEvenItem.prototype, "Ratio", {
        get: function () {
            return this._Ratio;
        },
        set: function (a) {
            this._Ratio = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BreakEvenItem.prototype, "ActualProfit", {
        get: function () {
            return this.SalesRevenue - this.VariableCost - this.FixedCost;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(BreakEvenItem.prototype, "TotalCost", {
        get: function () {
            return this.FixedCost + this.VariableCost;
        },
        enumerable: false,
        configurable: true
    });
    BreakEvenItem.$t = markType(BreakEvenItem, 'BreakEvenItem');
    return BreakEvenItem;
}(Base));
export { BreakEvenItem };
