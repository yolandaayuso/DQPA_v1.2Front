/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ToolActionInfoDescription } from "./ToolActionInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolActionButtonPairInfoDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionButtonPairInfoDescription, _super);
    function ToolActionButtonPairInfoDescription() {
        var _this = _super.call(this) || this;
        _this.bz = null;
        _this.bw = null;
        _this.by = null;
        _this.bx = null;
        _this.bd = false;
        _this.bg = 0;
        _this.bh = 0;
        _this.bi = 0;
        _this.bf = 0;
        _this.b3 = null;
        _this.b0 = null;
        _this.b2 = null;
        _this.b1 = null;
        _this.bk = 0;
        _this.bl = 0;
        _this.bm = 0;
        _this.bj = 0;
        return _this;
    }
    ToolActionButtonPairInfoDescription.prototype.get_type = function () {
        return "ToolActionButtonPairInfo";
    };
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "leftTitle", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("LeftTitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "leftCommandArgument", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("LeftCommandArgument");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "leftIconName", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("LeftIconName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "leftIconCollectionName", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("LeftIconCollectionName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "isToggleDisabled", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("IsToggleDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "leftIconViewBoxLeft", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("LeftIconViewBoxLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "leftIconViewBoxTop", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("LeftIconViewBoxTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "leftIconViewBoxWidth", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("LeftIconViewBoxWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "leftIconViewBoxHeight", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("LeftIconViewBoxHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "rightTitle", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.g("RightTitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "rightCommandArgument", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("RightCommandArgument");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "rightIconName", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.g("RightIconName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "rightIconCollectionName", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("RightIconCollectionName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "rightIconViewBoxLeft", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("RightIconViewBoxLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "rightIconViewBoxTop", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("RightIconViewBoxTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "rightIconViewBoxWidth", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("RightIconViewBoxWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairInfoDescription.prototype, "rightIconViewBoxHeight", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("RightIconViewBoxHeight");
        },
        enumerable: false,
        configurable: true
    });
    ToolActionButtonPairInfoDescription.$t = markType(ToolActionButtonPairInfoDescription, 'ToolActionButtonPairInfoDescription', ToolActionInfoDescription.$);
    ToolActionButtonPairInfoDescription.__marshalByValue1 = true;
    ToolActionButtonPairInfoDescription.__marshalByValueAlias1 = "ToolActionButtonPairInfo";
    return ToolActionButtonPairInfoDescription;
}(ToolActionInfoDescription));
export { ToolActionButtonPairInfoDescription };
