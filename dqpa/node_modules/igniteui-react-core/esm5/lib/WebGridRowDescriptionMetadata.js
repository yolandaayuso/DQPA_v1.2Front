/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebRowDirectiveDescriptionMetadata } from "./WebRowDirectiveDescriptionMetadata";
import { WebGridRowDescription } from "./WebGridRowDescription";
/**
 * @hidden
 */
var WebGridRowDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebGridRowDescriptionMetadata, _super);
    function WebGridRowDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebGridRowDescriptionMetadata.b = function (a) {
        if (WebGridRowDescriptionMetadata.a == null) {
            WebGridRowDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebGridRowDescriptionMetadata.c(WebGridRowDescriptionMetadata.a);
        }
        if (a.k(WebGridRowDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebGridRowDescriptionMetadata.a);
    };
    WebGridRowDescriptionMetadata.c = function (a) {
        WebRowDirectiveDescriptionMetadata.c(a);
        a.item("__qualifiedNameTS", "String:GridRow");
        a.item("__tagNameWC", "String:igc-grid-row");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        if (a.containsKey("__skipSuffix")) {
            a.removeItem("__skipSuffix");
        }
    };
    WebGridRowDescriptionMetadata.d = function (a) {
        WebGridRowDescriptionMetadata.b(a);
        a.ae("WebGridRow", function () { return new WebGridRowDescription(); });
        a.ad("WebGridRow", WebGridRowDescriptionMetadata.a);
    };
    WebGridRowDescriptionMetadata.$t = markType(WebGridRowDescriptionMetadata, 'WebGridRowDescriptionMetadata');
    WebGridRowDescriptionMetadata.a = null;
    return WebGridRowDescriptionMetadata;
}(Base));
export { WebGridRowDescriptionMetadata };
