/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ButtonGroupSelectionChangedEventArgsDescriptionMetadata } from "./ButtonGroupSelectionChangedEventArgsDescriptionMetadata";
import { ButtonGroupDescription } from "./ButtonGroupDescription";
/**
 * @hidden
 */
var ButtonGroupDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ButtonGroupDescriptionMetadata, _super);
    function ButtonGroupDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonGroupDescriptionMetadata.b = function (a) {
        if (ButtonGroupDescriptionMetadata.a == null) {
            ButtonGroupDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ButtonGroupDescriptionMetadata.c(ButtonGroupDescriptionMetadata.a);
        }
        if (a.k(ButtonGroupDescriptionMetadata.a)) {
            return;
        }
        a.ac(ButtonGroupDescriptionMetadata.a);
        ButtonGroupSelectionChangedEventArgsDescriptionMetadata.d(a);
    };
    ButtonGroupDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:XButtonGroup");
        a.item("DisplayType", "ExportedType:string:ButtonGroupDisplayStyle");
        a.item("DisplayType@names", "Flat;Outlined");
        a.item("BaseTheme", "ExportedType:string:BaseControlTheme");
        a.item("BaseTheme@names", "Default;DenaliLight;MaterialLight;SlingshotLight;SlingshotDark;RevealLight;RevealDark");
        a.item("Density", "ExportedType:string:ControlDisplayDensity");
        a.item("Density@names", "Auto;Comfortable;Cosy;Compact;Minimal");
        a.item("ActualDensity", "ExportedType:string:ControlDisplayDensity");
        a.item("ActualDensity@names", "Auto;Comfortable;Cosy;Compact;Minimal");
        a.item("SelectedIndices", "Array:int");
        a.item("ActualItemCornerRadius", "Number:double");
        a.item("ActualItemBackgroundColor", "Brush");
        a.item("ActualItemDisabledBackgroundColor", "Brush");
        a.item("ActualItemTextColor", "Brush");
        a.item("ActualItemDisabledTextColor", "Brush");
        a.item("ActualItemBorderColor", "Brush");
        a.item("ActualItemDisabledBorderColor", "Brush");
        a.item("ActualItemBorderWidth", "Number:double");
        a.item("ActualSelectedItemBackgroundColor", "Brush");
        a.item("ActualSelectedItemTextColor", "Brush");
        a.item("ActualItemHoverBackgroundColor", "Brush");
        a.item("ActualItemHoverTextColor", "Brush");
        a.item("ActualSelectedItemHoverBackgroundColor", "Brush");
        a.item("ActualSelectedItemHoverTextColor", "Brush");
        a.item("ItemCornerRadius", "Number:double");
        a.item("ItemBackgroundColor", "Brush");
        a.item("ItemDisabledBackgroundColor", "Brush");
        a.item("ItemTextColor", "Brush");
        a.item("ItemDisabledTextColor", "Brush");
        a.item("ItemHoverBackgroundColor", "Brush");
        a.item("ItemBorderColor", "Brush");
        a.item("ItemDisabledBorderColor", "Brush");
        a.item("ItemBorderWidth", "Number:double");
        a.item("ItemHoverTextColor", "Brush");
        a.item("SelectedItemBackgroundColor", "Brush");
        a.item("SelectedItemTextColor", "Brush");
        a.item("SelectedItemHoverBackgroundColor", "Brush");
        a.item("SelectedItemHoverTextColor", "Brush");
        a.item("OutlinedItemCornerRadius", "Number:double");
        a.item("OutlinedItemBackgroundColor", "Brush");
        a.item("OutlinedItemDisabledBackgroundColor", "Brush");
        a.item("OutlinedItemTextColor", "Brush");
        a.item("OutlinedItemDisabledTextColor", "Brush");
        a.item("OutlinedItemHoverBackgroundColor", "Brush");
        a.item("OutlinedItemBorderColor", "Brush");
        a.item("OutlinedItemDisabledBorderColor", "Brush");
        a.item("OutlinedItemBorderWidth", "Number:double");
        a.item("OutlinedItemHoverTextColor", "Brush");
        a.item("OutlinedSelectedItemBackgroundColor", "Brush");
        a.item("OutlinedSelectedItemTextColor", "Brush");
        a.item("OutlinedSelectedItemHoverBackgroundColor", "Brush");
        a.item("OutlinedSelectedItemHoverTextColor", "Brush");
        a.item("FlatItemCornerRadius", "Number:double");
        a.item("FlatItemBackgroundColor", "Brush");
        a.item("FlatItemDisabledBackgroundColor", "Brush");
        a.item("FlatItemTextColor", "Brush");
        a.item("FlatItemDisabledTextColor", "Brush");
        a.item("FlatItemHoverBackgroundColor", "Brush");
        a.item("FlatItemBorderColor", "Brush");
        a.item("FlatItemDisabledBorderColor", "Brush");
        a.item("FlatItemBorderWidth", "Number:double");
        a.item("FlatItemHoverTextColor", "Brush");
        a.item("FlatSelectedItemBackgroundColor", "Brush");
        a.item("FlatSelectedItemTextColor", "Brush");
        a.item("FlatSelectedItemHoverBackgroundColor", "Brush");
        a.item("FlatSelectedItemHoverTextColor", "Brush");
        a.item("Orientation", "ExportedType:string:ButtonGroupOrientation");
        a.item("Orientation@names", "Horizontal;Vertical");
        a.item("Id", "String");
        a.item("Disabled", "(w:IsDisabled,xam:IsDisabled,wf:IsDisabled)Boolean");
        a.item("IsMultiSelect", "Boolean");
        a.item("Buttons", "Collection:Button:ButtonGroupButtonCollection:Button");
        a.item("SelectionChangedRef", "EventRef::selectionChanged");
    };
    ButtonGroupDescriptionMetadata.d = function (a) {
        ButtonGroupDescriptionMetadata.b(a);
        a.ae("ButtonGroup", function () { return new ButtonGroupDescription(); });
        a.ad("ButtonGroup", ButtonGroupDescriptionMetadata.a);
    };
    ButtonGroupDescriptionMetadata.$t = markType(ButtonGroupDescriptionMetadata, 'ButtonGroupDescriptionMetadata');
    ButtonGroupDescriptionMetadata.a = null;
    return ButtonGroupDescriptionMetadata;
}(Base));
export { ButtonGroupDescriptionMetadata };
