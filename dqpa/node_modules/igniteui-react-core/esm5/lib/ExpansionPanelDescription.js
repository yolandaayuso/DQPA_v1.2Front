/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ExpansionPanelDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ExpansionPanelDescription, _super);
    function ExpansionPanelDescription() {
        var _this = _super.call(this) || this;
        _this.t = null;
        _this.w = null;
        _this.o = null;
        _this.u = null;
        _this.v = null;
        _this.x = null;
        _this.aa = null;
        _this.p = null;
        _this.y = null;
        _this.z = null;
        _this.k = 0;
        _this.j = 0;
        _this.h = false;
        _this.ab = null;
        _this.q = null;
        _this.ac = null;
        _this.ad = null;
        _this.s = null;
        _this.r = null;
        _this.n = null;
        _this.ae = null;
        _this.af = null;
        return _this;
    }
    ExpansionPanelDescription.prototype.get_type = function () {
        return "ExpansionPanel";
    };
    Object.defineProperty(ExpansionPanelDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "caption", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("Caption");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "captionTextColor", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("CaptionTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "actualCaptionTextColor", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("ActualCaptionTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "captionCollapsedTextColor", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("CaptionCollapsedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "captionExpandedTextColor", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("CaptionExpandedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "description", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("Description");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "descriptionTextColor", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("DescriptionTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "actualDescriptionTextColor", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("ActualDescriptionTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "descriptionCollapsedTextColor", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("DescriptionCollapsedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "descriptionExpandedTextColor", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("DescriptionExpandedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "elevation", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("Elevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "actualElevation", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("ActualElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "expanded", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Expanded");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "headerBackgroundColor", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("HeaderBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "actualHeaderBackgroundColor", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("ActualHeaderBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "headerCollapsedBackgroundColor", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("HeaderCollapsedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "headerExpandedBackgroundColor", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("HeaderExpandedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "actualUmbraShadowColor", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("ActualUmbraShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "actualPenumbraShadowColor", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("ActualPenumbraShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "actualAmbientShadowColor", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("ActualAmbientShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "onCollapsedRef", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("OnCollapsedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ExpansionPanelDescription.prototype, "onExpandedRef", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("OnExpandedRef");
        },
        enumerable: false,
        configurable: true
    });
    ExpansionPanelDescription.$t = markType(ExpansionPanelDescription, 'ExpansionPanelDescription', Description.$);
    return ExpansionPanelDescription;
}(Description));
export { ExpansionPanelDescription };
