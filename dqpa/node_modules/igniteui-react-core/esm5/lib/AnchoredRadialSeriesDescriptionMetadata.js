/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { RadialBaseDescriptionMetadata } from "./RadialBaseDescriptionMetadata";
/**
 * @hidden
 */
var AnchoredRadialSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AnchoredRadialSeriesDescriptionMetadata, _super);
    function AnchoredRadialSeriesDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AnchoredRadialSeriesDescriptionMetadata.b = function (a) {
        if (AnchoredRadialSeriesDescriptionMetadata.a == null) {
            AnchoredRadialSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            AnchoredRadialSeriesDescriptionMetadata.c(AnchoredRadialSeriesDescriptionMetadata.a);
        }
        if (a.k(AnchoredRadialSeriesDescriptionMetadata.a)) {
            return;
        }
        a.ac(AnchoredRadialSeriesDescriptionMetadata.a);
    };
    AnchoredRadialSeriesDescriptionMetadata.c = function (a) {
        RadialBaseDescriptionMetadata.c(a);
        a.item("UseCategoryNormalizedValues", "Boolean");
        a.item("ValueMemberPath", "String");
        a.item("HighlightedValueMemberPath", "String");
        a.item("ValueMemberAsLegendLabel", "String");
        a.item("ValueMemberAsLegendUnit", "String");
        a.item("TrendLineType", "ExportedType:string:TrendLineType");
        a.item("TrendLineType@names", "None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage");
        a.item("TrendLineBrush", "Brush");
        a.item("ActualTrendLineBrush", "Brush");
        a.item("TrendLineThickness", "Number:double");
        a.item("TrendLineDashArray", "DoubleCollection:double");
        a.item("TrendLinePeriod", "Number:int");
        a.item("TrendLineZIndex", "Number:int");
    };
    AnchoredRadialSeriesDescriptionMetadata.d = function (a) {
        AnchoredRadialSeriesDescriptionMetadata.b(a);
        a.ad("AnchoredRadialSeries", AnchoredRadialSeriesDescriptionMetadata.a);
    };
    AnchoredRadialSeriesDescriptionMetadata.$t = markType(AnchoredRadialSeriesDescriptionMetadata, 'AnchoredRadialSeriesDescriptionMetadata');
    AnchoredRadialSeriesDescriptionMetadata.a = null;
    return AnchoredRadialSeriesDescriptionMetadata;
}(Base));
export { AnchoredRadialSeriesDescriptionMetadata };
