/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { CategoryAxisBaseDescriptionMetadata } from "./CategoryAxisBaseDescriptionMetadata";
import { CategoryYAxisDescription } from "./CategoryYAxisDescription";
/**
 * @hidden
 */
var CategoryYAxisDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryYAxisDescriptionMetadata, _super);
    function CategoryYAxisDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CategoryYAxisDescriptionMetadata.b = function (a) {
        if (CategoryYAxisDescriptionMetadata.a == null) {
            CategoryYAxisDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            CategoryYAxisDescriptionMetadata.c(CategoryYAxisDescriptionMetadata.a);
        }
        if (a.k(CategoryYAxisDescriptionMetadata.a)) {
            return;
        }
        a.ac(CategoryYAxisDescriptionMetadata.a);
    };
    CategoryYAxisDescriptionMetadata.c = function (a) {
        CategoryAxisBaseDescriptionMetadata.c(a);
        a.item("Interval", "Number:double");
        a.item("ActualInterval", "Number:double");
        a.item("MinorInterval", "Number:double");
        a.item("ActualMinorInterval", "Number:double");
        a.item("ZoomMaximumCategoryRange", "Number:double");
        a.item("ZoomMaximumItemSpan", "Number:double");
        a.item("ZoomToCategoryRange", "Number:double");
        a.item("ZoomToCategoryStart", "Number:double");
        a.item("ZoomToItemSpan", "Number:double");
        a.item("ActualIntervalChangeRef", "EventRef::actualIntervalChange");
        a.item("ActualMinorIntervalChangeRef", "EventRef::actualMinorIntervalChange");
    };
    CategoryYAxisDescriptionMetadata.d = function (a) {
        CategoryYAxisDescriptionMetadata.b(a);
        a.ae("CategoryYAxis", function () { return new CategoryYAxisDescription(); });
        a.ad("CategoryYAxis", CategoryYAxisDescriptionMetadata.a);
    };
    CategoryYAxisDescriptionMetadata.$t = markType(CategoryYAxisDescriptionMetadata, 'CategoryYAxisDescriptionMetadata');
    CategoryYAxisDescriptionMetadata.a = null;
    return CategoryYAxisDescriptionMetadata;
}(Base));
export { CategoryYAxisDescriptionMetadata };
