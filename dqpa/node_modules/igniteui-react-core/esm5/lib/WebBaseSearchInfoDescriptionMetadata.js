/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebBaseSearchInfoDescription } from "./WebBaseSearchInfoDescription";
/**
 * @hidden
 */
var WebBaseSearchInfoDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebBaseSearchInfoDescriptionMetadata, _super);
    function WebBaseSearchInfoDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebBaseSearchInfoDescriptionMetadata.b = function (a) {
        if (WebBaseSearchInfoDescriptionMetadata.a == null) {
            WebBaseSearchInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebBaseSearchInfoDescriptionMetadata.c(WebBaseSearchInfoDescriptionMetadata.a);
        }
        if (a.k(WebBaseSearchInfoDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebBaseSearchInfoDescriptionMetadata.a);
    };
    WebBaseSearchInfoDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:BaseSearchInfo");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("SearchText", "String");
        a.item("CaseSensitive", "Boolean");
        a.item("ExactMatch", "Boolean");
        a.item("MatchCount", "Number:double");
        a.item("Content", "String");
    };
    WebBaseSearchInfoDescriptionMetadata.d = function (a) {
        WebBaseSearchInfoDescriptionMetadata.b(a);
        a.ae("WebBaseSearchInfo", function () { return new WebBaseSearchInfoDescription(); });
        a.ad("WebBaseSearchInfo", WebBaseSearchInfoDescriptionMetadata.a);
    };
    WebBaseSearchInfoDescriptionMetadata.$t = markType(WebBaseSearchInfoDescriptionMetadata, 'WebBaseSearchInfoDescriptionMetadata');
    WebBaseSearchInfoDescriptionMetadata.a = null;
    return WebBaseSearchInfoDescriptionMetadata;
}(Base));
export { WebBaseSearchInfoDescriptionMetadata };
