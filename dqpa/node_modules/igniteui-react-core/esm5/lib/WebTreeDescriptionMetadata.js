/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebTreeSelectionChangeEventArgsDescriptionMetadata } from "./WebTreeSelectionChangeEventArgsDescriptionMetadata";
import { WebTreeItemComponentEventArgsDescriptionMetadata } from "./WebTreeItemComponentEventArgsDescriptionMetadata";
import { WebTreeDescription } from "./WebTreeDescription";
/**
 * @hidden
 */
var WebTreeDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebTreeDescriptionMetadata, _super);
    function WebTreeDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebTreeDescriptionMetadata.b = function (a) {
        if (WebTreeDescriptionMetadata.a == null) {
            WebTreeDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebTreeDescriptionMetadata.c(WebTreeDescriptionMetadata.a);
        }
        if (a.k(WebTreeDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebTreeDescriptionMetadata.a);
        WebTreeSelectionChangeEventArgsDescriptionMetadata.d(a);
        WebTreeItemComponentEventArgsDescriptionMetadata.d(a);
    };
    WebTreeDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:Tree");
        a.item("__tagNameWC", "String:igc-tree");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("SingleBranchExpand", "Boolean");
        a.item("ToggleNodeOnClick", "Boolean");
        a.item("Selection", "ExportedType:string:TreeSelection");
        a.item("Selection@stringUnion", "WebComponents;React");
        a.item("Selection@names", "None;Multiple;Cascade");
        a.item("SelectionChangedRef", "EventRef::selectionChanged");
        a.item("ItemExpandingRef", "EventRef::itemExpanding");
        a.item("ItemExpandedRef", "EventRef::itemExpanded");
        a.item("ItemCollapsingRef", "EventRef::itemCollapsing");
        a.item("ItemCollapsedRef", "EventRef::itemCollapsed");
        a.item("ActiveItemRef", "EventRef::activeItem");
    };
    WebTreeDescriptionMetadata.d = function (a) {
        WebTreeDescriptionMetadata.b(a);
        a.ae("WebTree", function () { return new WebTreeDescription(); });
        a.ad("WebTree", WebTreeDescriptionMetadata.a);
    };
    WebTreeDescriptionMetadata.$t = markType(WebTreeDescriptionMetadata, 'WebTreeDescriptionMetadata');
    WebTreeDescriptionMetadata.a = null;
    return WebTreeDescriptionMetadata;
}(Base));
export { WebTreeDescriptionMetadata };
