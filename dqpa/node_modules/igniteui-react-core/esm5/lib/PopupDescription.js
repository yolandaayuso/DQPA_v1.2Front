/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var PopupDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PopupDescription, _super);
    function PopupDescription() {
        var _this = _super.call(this) || this;
        _this.l = false;
        _this.ae = 0;
        _this.h = false;
        _this.am = null;
        _this.af = 0;
        _this.ad = 0;
        _this.al = null;
        _this.ak = null;
        _this.aj = null;
        _this.an = null;
        _this.z = 0;
        _this.m = false;
        _this.i = false;
        _this.n = false;
        _this.as = null;
        _this.ar = null;
        _this.aa = 0;
        _this.o = false;
        _this.j = false;
        _this.k = false;
        _this.p = false;
        _this.ap = null;
        _this.aq = null;
        _this.at = null;
        _this.au = null;
        _this.ao = null;
        return _this;
    }
    PopupDescription.prototype.get_type = function () {
        return "Popup";
    };
    Object.defineProperty(PopupDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "isFocusable", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("IsFocusable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "animationDuration", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("AnimationDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "animationEnabled", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("AnimationEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "animationType", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("AnimationType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "elevation", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("Elevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "actualElevation", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("ActualElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "actualUmbraShadowColor", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("ActualUmbraShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "actualPenumbraShadowColor", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("ActualPenumbraShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "actualAmbientShadowColor", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("ActualAmbientShadowColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "background", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "cornerRadius", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("CornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "isHitTestVisible", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("IsHitTestVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "disableHitTestDuringAnimation", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("DisableHitTestDuringAnimation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "isPointerEnabled", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("IsPointerEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "pointerPosition", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("PointerPosition");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "pointerBackground", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("PointerBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "pointerSize", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("PointerSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "isShowing", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("IsShowing");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "isClosing", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("IsClosing");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "isFixed", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("IsFixed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "useTopLayer", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("UseTopLayer");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "onClosedRef", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("OnClosedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "onPopupRef", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("OnPopupRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "popupGotFocusRef", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("PopupGotFocusRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "popupLostFocusRef", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("PopupLostFocusRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PopupDescription.prototype, "measuringContentSizeRef", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("MeasuringContentSizeRef");
        },
        enumerable: false,
        configurable: true
    });
    PopupDescription.$t = markType(PopupDescription, 'PopupDescription', Description.$);
    return PopupDescription;
}(Description));
export { PopupDescription };
