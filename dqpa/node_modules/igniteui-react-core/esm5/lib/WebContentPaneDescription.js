/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { WebDockManagerPaneDescription } from "./WebDockManagerPaneDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var WebContentPaneDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebContentPaneDescription, _super);
    function WebContentPaneDescription() {
        var _this = _super.call(this) || this;
        _this.as = null;
        _this.at = null;
        _this.ao = null;
        _this.aq = null;
        _this.ar = null;
        _this.au = null;
        _this.av = null;
        _this.ap = null;
        _this.aj = 0;
        _this.o = false;
        _this.r = false;
        _this.s = false;
        _this.p = false;
        _this.n = false;
        _this.q = false;
        _this.ak = 0;
        _this.x = false;
        _this.w = false;
        _this.aw = null;
        _this.v = false;
        _this.t = false;
        _this.u = false;
        return _this;
    }
    WebContentPaneDescription.prototype.get_type = function () {
        return "WebContentPane";
    };
    Object.defineProperty(WebContentPaneDescription.prototype, "id", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("Id");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "paneType", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("PaneType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "contentId", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("ContentId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "header", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("Header");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "headerId", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("HeaderId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "tabHeaderId", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("TabHeaderId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "unpinnedHeaderId", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("UnpinnedHeaderId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "floatingHeaderId", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("FloatingHeaderId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "size", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("Size");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "allowClose", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("AllowClose");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "allowMaximize", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("AllowMaximize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "allowPinning", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("AllowPinning");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "allowDocking", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("AllowDocking");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "acceptsInnerDock", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("AcceptsInnerDock");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "allowFloating", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("AllowFloating");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "unpinnedSize", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("UnpinnedSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "isPinned", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("IsPinned");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "isMaximized", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("IsMaximized");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "unpinnedLocation", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("UnpinnedLocation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "hidden", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("Hidden");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "disabled", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("Disabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebContentPaneDescription.prototype, "documentOnly", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("DocumentOnly");
        },
        enumerable: false,
        configurable: true
    });
    WebContentPaneDescription.$t = markType(WebContentPaneDescription, 'WebContentPaneDescription', WebDockManagerPaneDescription.$);
    WebContentPaneDescription.__marshalByValue1 = true;
    WebContentPaneDescription.__marshalByValueAlias1 = "ContentPane";
    return WebContentPaneDescription;
}(WebDockManagerPaneDescription));
export { WebContentPaneDescription };
