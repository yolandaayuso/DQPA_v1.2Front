/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Type, Base, String_$type, fromEnum, markType, IEnumerable_$type, typeCast, Array_$type, runOn, EnumUtil, Number_$type, typeGetValue, INotifyPropertyChanged_$type, PropertyChangedEventArgs, delegateCombine, delegateRemove } from "./type";
import { DataSeriesCollection } from "./DataSeriesCollection";
import { Stack$1 } from "./Stack$1";
import { IDataSourceLocalDataProvider_$type } from "./IDataSourceLocalDataProvider";
import { HashSet$1 } from "./HashSet$1";
import { DataSeriesType_$type } from "./DataSeriesType";
import { DataSeriesAdapterProviderInfo } from "./DataSeriesAdapterProviderInfo";
import { DataSeries } from "./DataSeries";
import { List$1 } from "./List$1";
import { Matcher } from "./Matcher";
import { DataSeriesIntent_$type } from "./DataSeriesIntent";
import { stringIsNullOrEmpty, stringReplace, stringEmpty } from "./string";
import { dateMinValue } from "./date";
import { isNaN_ } from "./number";
import { IDataSourceDataProviderUpdateNotifier_$type } from "./IDataSourceDataProviderUpdateNotifier";
import { ObservableCollection$1 } from "./ObservableCollection$1";
import { SortDescriptionCollection } from "./SortDescriptionCollection";
import { FilterExpressionCollection } from "./FilterExpressionCollection";
import { SummaryDescriptionCollection } from "./SummaryDescriptionCollection";
import { Dictionary$2 } from "./Dictionary$2";
import { Tuple$2 } from "./Tuple$2";
import { IDataSource_$type } from "./IDataSource";
import { AggregatedDataProvider } from "./AggregatedDataProvider";
import { FlatDataProvider } from "./FlatDataProvider";
/**
 * @hidden
 */
export var IDataSeriesAdapterRule_$type = /*@__PURE__*/ new Type(null, 'IDataSeriesAdapterRule');
/**
 * @hidden
 */
var DataSeriesAdapterRunContext = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataSeriesAdapterRunContext, _super);
    function DataSeriesAdapterRunContext(a) {
        var _this = _super.call(this) || this;
        _this.g = null;
        _this._analyzer = null;
        _this.h = null;
        _this.p = null;
        _this.q = null;
        _this.s = null;
        _this.r = null;
        _this.b = null;
        _this.a = null;
        _this.o = null;
        _this.l = false;
        _this.g = a;
        _this.analyzer = new DataSeriesDataProviderAnalyzer(_this);
        _this.analyzer.includedProperties = _this.g.includedProperties;
        _this.analyzer.excludedProperties = _this.g.excludedProperties;
        _this.h = new DataSeriesCollection();
        _this.p = new Stack$1(IDataSourceLocalDataProvider_$type);
        _this.q = new Stack$1(IDataSourceLocalDataProvider_$type);
        _this.s = new Stack$1(String_$type);
        _this.r = new Stack$1(String_$type);
        _this.b = _this.g.includedProperties;
        _this.a = _this.g.excludedProperties;
        _this.o = null;
        _this.l = _this.g.adjustPrioritiesBasedOnFitness;
        if (_this.g.supportedSeriesTypes != null) {
            _this.o = new HashSet$1(DataSeriesType_$type, 0);
            for (var b = 0; b < _this.g.supportedSeriesTypes.length; b++) {
                _this.o.add_1(_this.g.supportedSeriesTypes[b]);
            }
        }
        return _this;
    }
    Object.defineProperty(DataSeriesAdapterRunContext.prototype, "analyzer", {
        get: function () {
            return this._analyzer;
        },
        set: function (a) {
            this._analyzer = a;
        },
        enumerable: false,
        configurable: true
    });
    DataSeriesAdapterRunContext.prototype.getSubProvider = function (a, b) {
        var c = this.g.h(a, false);
        this.pushDataSource(c.c);
        if (c.b != null) {
            this.pushHighlightingDataSource(c.b);
        }
        else {
            this.pushHighlightingDataSource(null);
        }
        this.pushPath(b);
        return c.c;
    };
    DataSeriesAdapterRunContext.prototype.popSubProvider = function () {
        this.popDataSource();
        this.popHighlightingDataSource();
        this.popPath();
    };
    DataSeriesAdapterRunContext.prototype.ab = function (a, b) {
        return this.g.aq(a, b);
    };
    DataSeriesAdapterRunContext.prototype.recurseRules = function (a, b, c) {
        this.g.bc(this, a, b, c);
    };
    Object.defineProperty(DataSeriesAdapterRunContext.prototype, "adjustPrioritiesBasedOnFitness", {
        get: function () {
            return this.l;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterRunContext.prototype, "includedProperties", {
        get: function () {
            return this.b;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterRunContext.prototype, "excludedProperties", {
        get: function () {
            return this.a;
        },
        enumerable: false,
        configurable: true
    });
    DataSeriesAdapterRunContext.prototype.getCurrentDataSource = function () {
        return this.p.d();
    };
    DataSeriesAdapterRunContext.prototype.getCurrentHighlightingDataSource = function () {
        return this.q.d();
    };
    DataSeriesAdapterRunContext.prototype.pushDataSource = function (a) {
        this.p.h(a);
    };
    DataSeriesAdapterRunContext.prototype.pushHighlightingDataSource = function (a) {
        this.q.h(a);
    };
    DataSeriesAdapterRunContext.prototype.hasValidType = function (a) {
        if (this.o == null) {
            return true;
        }
        if (this.o.contains(a.suggestedSeries)) {
            return true;
        }
        return false;
    };
    DataSeriesAdapterRunContext.prototype.popDataSource = function () {
        return this.p.e();
    };
    DataSeriesAdapterRunContext.prototype.popHighlightingDataSource = function () {
        return this.q.e();
    };
    DataSeriesAdapterRunContext.prototype.getCurrentPathSegment = function () {
        return this.s.d();
    };
    DataSeriesAdapterRunContext.prototype.getCurrentPath = function () {
        var e_1, _a;
        var a = "";
        var b = true;
        try {
            for (var _b = __values(fromEnum(this.s)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                if (b) {
                    b = false;
                }
                else {
                    a += ".";
                }
                a += c;
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return a;
    };
    DataSeriesAdapterRunContext.prototype.getParentTitle = function () {
        if (this.r.f == 0) {
            return null;
        }
        return this.r.d();
    };
    DataSeriesAdapterRunContext.prototype.pushPath = function (a) {
        this.s.h(a);
    };
    DataSeriesAdapterRunContext.prototype.popPath = function () {
        return this.s.e();
    };
    DataSeriesAdapterRunContext.prototype.pushParentTitle = function (a) {
        this.r.h(a);
    };
    DataSeriesAdapterRunContext.prototype.popParentTitle = function () {
        return this.r.e();
    };
    DataSeriesAdapterRunContext.prototype.ag = function (a, b) {
        if (a.priority == -1) {
            a.priority = b.priority;
        }
        if (a.dataPath == null) {
            a.dataPath = this.getCurrentPath();
        }
        if (a.data == null) {
            a.data = this.getCurrentDataSource().dataSource;
        }
        if (a.highlightedData == null) {
            var c = this.getCurrentHighlightingDataSource();
            if (c != null) {
                a.highlightedData = c.dataSource;
            }
        }
    };
    DataSeriesAdapterRunContext.prototype.addDataSeries = function (a, b) {
        this.ag(a, b);
        this.h.add(a);
    };
    DataSeriesAdapterRunContext.prototype.removeDataSeries = function (a) {
        this.h.remove(a);
    };
    DataSeriesAdapterRunContext.prototype.insertDataSeries = function (a, b, c) {
        this.ag(b, c);
        this.h.insert(a, b);
    };
    DataSeriesAdapterRunContext.prototype.clearDataSeries = function () {
        this.h.clear();
    };
    DataSeriesAdapterRunContext.prototype.getDataSeriesCount = function () {
        return this.h.count;
    };
    DataSeriesAdapterRunContext.prototype.getDataSeriesAt = function (a) {
        return this.h._inner[a];
    };
    DataSeriesAdapterRunContext.$t = markType(DataSeriesAdapterRunContext, 'DataSeriesAdapterRunContext');
    return DataSeriesAdapterRunContext;
}(Base));
export { DataSeriesAdapterRunContext };
/**
 * @hidden
 */
var DataSeriesDataProviderAnalyzer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataSeriesDataProviderAnalyzer, _super);
    function DataSeriesDataProviderAnalyzer(a) {
        var _this = _super.call(this) || this;
        _this.u = null;
        _this.b = null;
        _this.a = null;
        _this.x = false;
        _this.w = false;
        _this.at = new HashSet$1(String_$type, 0);
        _this.av = new List$1(Matcher.$, 0);
        _this.as = new HashSet$1(String_$type, 0);
        _this.au = new List$1(Matcher.$, 0);
        _this.u = a;
        return _this;
    }
    Object.defineProperty(DataSeriesDataProviderAnalyzer.prototype, "includedProperties", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            this.b = a;
            this.at.clear();
            if (this.b == null) {
                this.x = false;
            }
            else {
                this.x = true;
                var d = this.b;
                for (var c = 0; c < d.length; c++) {
                    var b = d[c];
                    if (Matcher.a(b)) {
                        this.av.add(new Matcher(b));
                    }
                    else {
                        this.at.add_1(b);
                    }
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesDataProviderAnalyzer.prototype, "excludedProperties", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            this.a = a;
            this.as.clear();
            if (this.a == null) {
                this.w = false;
            }
            else {
                this.w = true;
                var d = this.a;
                for (var c = 0; c < d.length; c++) {
                    var b = d[c];
                    if (Matcher.a(b)) {
                        this.au.add(new Matcher(b));
                    }
                    else {
                        this.as.add_1(b);
                    }
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    DataSeriesDataProviderAnalyzer.prototype.getParentTitle = function () {
        return this.u.getParentTitle();
    };
    DataSeriesDataProviderAnalyzer.prototype.shouldIncludeProperty = function (a, b) {
        if (!stringIsNullOrEmpty(b)) {
            a = b + "." + a;
        }
        if (this.x && !this.at.contains(a) && !this.ad(a)) {
            return false;
        }
        if (this.w && (this.as.contains(a) || this.z(a))) {
            return false;
        }
        return true;
    };
    DataSeriesDataProviderAnalyzer.prototype.z = function (a) {
        for (var b = 0; b < this.au.count; b++) {
            if (this.au._inner[b].b(a)) {
                return true;
            }
        }
        return false;
    };
    DataSeriesDataProviderAnalyzer.prototype.ad = function (a) {
        for (var b = 0; b < this.av.count; b++) {
            if (this.av._inner[b].b(a)) {
                return true;
            }
        }
        return false;
    };
    DataSeriesDataProviderAnalyzer.prototype.expandCamelCasedWords = function (a) {
        if (a == null) {
            return null;
        }
        a = stringReplace(stringReplace(a, "[", ""), "]", "");
        var b = new List$1(String_$type, 0);
        var c = 0;
        for (var d = 0; d < a.length; d++) {
            var e = a.charAt(d);
            var f = e.toUpperCase();
            var g = e.toLowerCase();
            if (d == 0) {
                e = f;
            }
            var h = (c == 0 && b.count > 0);
            var i = (c > 1);
            if (f == e) {
                if (h) {
                    b.add(' ');
                }
                c++;
            }
            else if (g == e) {
                if (i) {
                    b.insert(b.count - 1, ' ');
                }
                c = 0;
            }
            else {
                c = 0;
            }
            b.add(e);
        }
        var j = stringEmpty();
        for (var k = 0; k < b.count; k++) {
            j += b._inner[k];
        }
        return j;
    };
    DataSeriesDataProviderAnalyzer.prototype.hasStringProperties = function () {
        return this.getAllStringProperties().length > 0;
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllStringProperties = function () {
        return this.s(function (a) { return a == 0; }, null);
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllExcludedStringProperties = function () {
        return this.r(function (a) { return a == 0; }, null);
    };
    DataSeriesDataProviderAnalyzer.prototype.isCollection = function (a) {
        if (typeCast(IEnumerable_$type, a) !== null || typeCast(Array_$type, a) !== null) {
            return true;
        }
        return false;
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllPropertiesWithName = function (a) {
        return this.s(null, function (b) { return b == a; });
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllNumericProperties = function () {
        return this.s(runOn(this, this.ak), null);
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllObjectProperties = function () {
        return this.s(runOn(this, this.al), null);
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllCollectionProperties = function () {
        var a = this.getAllObjectProperties();
        if (a.length == 0) {
            return new Array(0);
        }
        var b = this.u.getCurrentDataSource();
        var c = new List$1(String_$type, 0);
        for (var d = 0; d < b.actualCount; d++) {
            if (this.isCollection(b.getItemAtIndex(d))) {
                c.add(b.actualSchema.propertyNames[d]);
            }
        }
        return c.toArray();
    };
    DataSeriesDataProviderAnalyzer.prototype.getFirstNumericProperty = function () {
        var a = this.getAllNumericProperties();
        if (a.length == 0) {
            return null;
        }
        return a[0];
    };
    DataSeriesDataProviderAnalyzer.prototype.hasNumericProperties = function () {
        return this.getAllNumericProperties().length > 0;
    };
    DataSeriesDataProviderAnalyzer.prototype.ag = function (a) {
        if (a == 8 || a == 9) {
            return true;
        }
        return false;
    };
    DataSeriesDataProviderAnalyzer.prototype.v = function (a) {
        var b = this.u.getCurrentDataSource();
        if (b == null) {
            return 11;
        }
        var c = b.actualSchema;
        if (c == null) {
            return 11;
        }
        var d = -1;
        for (var e = 0; e < c.propertyNames.length; e++) {
            if (Base.equalsStatic(c.propertyNames[e], a)) {
                d = e;
                break;
            }
        }
        if (d == -1) {
            if (b.actualCount > 0) {
                return b.resolveSchemaPropertyType(a);
            }
            return 11;
        }
        return c.propertyTypes[d];
    };
    DataSeriesDataProviderAnalyzer.prototype.s = function (a, b) {
        var c = this.u.getCurrentDataSource();
        var d = c.actualSchema;
        if (d == null) {
            return new Array(0);
        }
        var e = this.u.getCurrentPath();
        var f = 0;
        for (var g = 0; g < d.propertyTypes.length; g++) {
            if ((a == null || a(d.propertyTypes[g])) && (b == null || b(d.propertyNames[g])) && this.aq(d.propertyDataIntents, g) && this.shouldIncludeProperty(d.propertyNames[g], e)) {
                f++;
            }
        }
        var h = new Array(f);
        f = 0;
        for (var i = 0; i < d.propertyTypes.length; i++) {
            if ((a == null || a(d.propertyTypes[i])) && (b == null || b(d.propertyNames[i])) && this.aq(d.propertyDataIntents, i) && this.shouldIncludeProperty(d.propertyNames[i], e)) {
                h[f] = d.propertyNames[i];
                f++;
            }
        }
        return h;
    };
    DataSeriesDataProviderAnalyzer.prototype.r = function (a, b) {
        var c = this.u.getCurrentDataSource();
        var d = c.actualSchema;
        if (d == null) {
            return new Array(0);
        }
        var e = this.u.getCurrentPath();
        var f = 0;
        for (var g = 0; g < d.propertyTypes.length; g++) {
            if ((a == null || a(d.propertyTypes[g])) && (b == null || b(d.propertyNames[g])) && this.aq(d.propertyDataIntents, g) && !this.shouldIncludeProperty(d.propertyNames[g], e)) {
                f++;
            }
        }
        var h = new Array(f);
        f = 0;
        for (var i = 0; i < d.propertyTypes.length; i++) {
            if ((a == null || a(d.propertyTypes[i])) && (b == null || b(d.propertyNames[i])) && this.aq(d.propertyDataIntents, i) && !this.shouldIncludeProperty(d.propertyNames[i], e)) {
                h[f] = d.propertyNames[i];
                f++;
            }
        }
        return h;
    };
    DataSeriesDataProviderAnalyzer.prototype.aq = function (a, b) {
        if (a == null) {
            return true;
        }
        return !this.y(a, b, "DontPlot");
    };
    DataSeriesDataProviderAnalyzer.prototype.y = function (a, b, c) {
        if (a == null) {
            return false;
        }
        for (var d = 0; d < a[b].length; d++) {
            var e = a[b][d];
            if (Base.equalsStatic(e.toLowerCase(), c.toLowerCase())) {
                return true;
            }
        }
        return false;
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllPropertiesWithIntent = function (a) {
        return this.m(a, false, false);
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllPropertiesWithValuelessIntent = function (a) {
        return this.m(a, true, false);
    };
    DataSeriesDataProviderAnalyzer.prototype.getPropertyIntentValue = function (a, b) {
        var c = this.u.getCurrentDataSource();
        if (c == null) {
            return null;
        }
        var d = c.actualSchema;
        if (d == null) {
            return null;
        }
        var e = d.propertyDataIntents;
        if (e == null || d.propertyNames == null) {
            return null;
        }
        for (var f = 0; f < d.propertyNames.length; f++) {
            if (d.propertyNames[f] != null && Base.equalsStatic(d.propertyNames[f], b)) {
                for (var g = 0; g < e[f].length; g++) {
                    var h = e[f][g];
                    var i = h.split('/');
                    if (i.length == 2 && i[0] != null && Base.equalsStatic(i[0], a)) {
                        return i[1];
                    }
                }
            }
        }
        return null;
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllPropertiesWithValuedIntent = function (a) {
        return this.m(a, false, true);
    };
    DataSeriesDataProviderAnalyzer.prototype.m = function (a, b, c) {
        var d = this.u.getCurrentDataSource();
        if (d == null) {
            return new Array(0);
        }
        var e = d.actualSchema;
        if (e == null) {
            return new Array(0);
        }
        var f = e.propertyDataIntents;
        if (f == null || e.propertyNames == null) {
            return new Array(0);
        }
        var g = 0;
        for (var h = 0; h < e.propertyNames.length; h++) {
            for (var i = 0; i < f[h].length; i++) {
                var j = f[h][i];
                var k = j.split('/');
                if (b && k.length > 1) {
                    continue;
                }
                if (c && k.length < 2) {
                    continue;
                }
                if (Base.equalsStatic(a.toLowerCase(), k[0].toLowerCase())) {
                    g++;
                }
            }
        }
        var l = new Array(g);
        g = 0;
        for (var m = 0; m < e.propertyNames.length; m++) {
            for (var n = 0; n < f[m].length; n++) {
                var o = f[m][n];
                var p = o.split('/');
                if (b && p.length > 1) {
                    continue;
                }
                if (c && p.length < 2) {
                    continue;
                }
                if (Base.equalsStatic(a.toLowerCase(), o.toLowerCase())) {
                    l[g] = e.propertyNames[m];
                    g++;
                }
            }
        }
        return l;
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllDateTimeProperties = function () {
        return this.s(runOn(this, this.ag), null);
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllExcludedDateTimeProperties = function () {
        return this.r(runOn(this, this.ag), null);
    };
    DataSeriesDataProviderAnalyzer.prototype.getFirstDateTimeProperty = function () {
        var a = this.getAllDateTimeProperties();
        if (a.length == 0) {
            return null;
        }
        return a[0];
    };
    DataSeriesDataProviderAnalyzer.prototype.getFirstStringProperty = function () {
        var a = this.getAllStringProperties();
        if (a.length == 0) {
            return null;
        }
        return a[0];
    };
    DataSeriesDataProviderAnalyzer.prototype.hasDateTimeProperties = function () {
        return this.getAllDateTimeProperties().length > 0;
    };
    DataSeriesDataProviderAnalyzer.prototype.ak = function (a) {
        return a == 1 || a == 3 || a == 4 || a == 7 || a == 5 || a == 6 || a == 10;
    };
    DataSeriesDataProviderAnalyzer.prototype.al = function (a) {
        return a == 11;
    };
    DataSeriesDataProviderAnalyzer.prototype.isMonotonic = function (a, b, c) {
        if (a == null) {
            return false;
        }
        var d = false;
        var e = false;
        var f = a.actualCount;
        for (var g = 0; g < Math.min(f, c); g++) {
            if (g == 0) {
                continue;
            }
            var h = this.coerceToDouble(a.getItemValue(a.getItemAtIndex(g - 1), b));
            var i = this.coerceToDouble(a.getItemValue(a.getItemAtIndex(g), b));
            if (!e && h != i) {
                d = i > h;
                e = true;
            }
            if (h == i) {
                continue;
            }
            if (e) {
                var j = i > h;
                if (j != d) {
                    return false;
                }
            }
        }
        return true;
    };
    DataSeriesDataProviderAnalyzer.prototype.isEvenlySpaced = function (a, b, c) {
        if (a == null) {
            return false;
        }
        var d = false;
        var e = 0;
        var f = a.actualCount;
        for (var g = 0; g < Math.min(f, c); g++) {
            if (g == 0) {
                continue;
            }
            var h = this.coerceToDouble(a.getItemValue(a.getItemAtIndex(g - 1), b));
            var i = this.coerceToDouble(a.getItemValue(a.getItemAtIndex(g), b));
            if (!d && h != i) {
                var j = Math.abs(i - h);
                e = j;
                d = true;
                continue;
            }
            if (d) {
                var k = Math.abs(i - h);
                if (Math.abs(k - e) > 1E-06) {
                    return false;
                }
            }
        }
        return true;
    };
    DataSeriesDataProviderAnalyzer.prototype.a6 = function (a, b, c) {
        var d = this.u.getCurrentDataSource();
        var e = d.actualSchema;
        if (e == null) {
            return null;
        }
        var f = this.s(b, null);
        if (f.length == 0) {
            return null;
        }
        if (d.actualCount > a) {
            return null;
        }
        for (var g = 0; g < f.length; g++) {
            if (c(f[g], this.v(f[g]))) {
                return f[g];
            }
        }
        return null;
    };
    DataSeriesDataProviderAnalyzer.prototype.getFirstDistinctStringProperty = function (a) {
        return this.a6(a, function (b) { return b == 0; }, runOn(this, this.am));
    };
    DataSeriesDataProviderAnalyzer.prototype.getFirstDistinctNumericProperty = function (a) {
        return this.a6(a, runOn(this, this.ak), runOn(this, this.aj));
    };
    DataSeriesDataProviderAnalyzer.prototype.getFirstDistinctMonotonicNumericProperty = function (a) {
        var _this = this;
        var b = this.u.getCurrentDataSource();
        return this.a6(a, runOn(this, this.ak), function (c, d) { return _this.aj(c, d) && _this.isMonotonic(b, c, a); });
    };
    DataSeriesDataProviderAnalyzer.prototype.getFirstDistinctMonotonicNumericPropertyWithEvenSpacing = function (a) {
        var _this = this;
        var b = this.u.getCurrentDataSource();
        return this.a6(a, runOn(this, this.ak), function (c, d) { return _this.aj(c, d) && _this.isMonotonic(b, c, a) && _this.isEvenlySpaced(b, c, a); });
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllDistinctMonotonicNumericProperties = function (a) {
        var _this = this;
        var b = this.u.getCurrentDataSource();
        return this.s(runOn(this, this.ak), function (c) { return _this.aj(c, _this.v(c)) && _this.isMonotonic(b, c, a); });
    };
    DataSeriesDataProviderAnalyzer.prototype.getAllExcludedDistinctMonotonicNumericProperties = function (a) {
        var _this = this;
        var b = this.u.getCurrentDataSource();
        return this.r(runOn(this, this.ak), function (c) { return _this.aj(c, _this.v(c)) && _this.isMonotonic(b, c, a); });
    };
    DataSeriesDataProviderAnalyzer.prototype.getFirstDistinctDateTimeProperty = function (a) {
        return this.a6(a, runOn(this, this.ag), runOn(this, this.af));
    };
    DataSeriesDataProviderAnalyzer.prototype.getFirstStringPropertyPreferringDistinct = function (a) {
        var b = this.getFirstDistinctStringProperty(a);
        if (b != null) {
            return b;
        }
        var c = this.getAllStringProperties();
        if (c.length == 0) {
            return null;
        }
        return c[0];
    };
    DataSeriesDataProviderAnalyzer.prototype.getTitleString = function (a, b) {
        return this.getTitleStringWithSeparator(a, b, " - ");
    };
    DataSeriesDataProviderAnalyzer.prototype.getTitleStringWithSeparator = function (a, b, c) {
        var d = this.u.getCurrentDataSource();
        var e = null;
        if (e == null && b != null) {
            var f = null;
            for (var g = 0; g < b.length; g++) {
                var h = this.getPropertyIntentValue(EnumUtil.getName(DataSeriesIntent_$type, (10)), b[g]);
                if (e == null) {
                    e = h;
                    f = h;
                }
                else {
                    if (h != null) {
                        if (h.trim().length > 0 && h != f) {
                            e += c + h;
                        }
                        f = h;
                    }
                }
            }
        }
        if (e == null) {
            var i = this.getAllPropertiesWithValuelessIntent(EnumUtil.getName(DataSeriesIntent_$type, (10)));
            if (i != null && i.length > 0) {
                e = i[0];
                e = this.az(a, d, e);
            }
        }
        if (e == null) {
            if (this.getParentTitle() != null) {
                e = this.getParentTitle();
            }
        }
        if (e == null && a != null) {
            var j = this.getAllStringProperties();
            for (var l = 0; l < j.length; l++) {
                var k = j[l];
                if (k != null && (Base.equalsStatic(k.toLowerCase(), "label") || Base.equalsStatic(k.toLowerCase(), "title"))) {
                    e = k;
                }
            }
            if (e != null) {
                e = this.az(a, d, e);
            }
        }
        return e;
    };
    DataSeriesDataProviderAnalyzer.prototype.az = function (a, b, c) {
        if (a != null) {
            var d = b.getItemValue(a, c);
            if (d != null) {
                c = d.toString();
            }
        }
        else {
            c = this.getNonNullPropertyValue(c).toString();
        }
        return c;
    };
    DataSeriesDataProviderAnalyzer.prototype.getNonNullPropertyValue = function (a) {
        var b = this.u.getCurrentDataSource();
        for (var c = 0; c < b.actualCount; c++) {
            var d = b.getItemValue(b.getItemAtIndex(c), a);
            if (d != null) {
                return d;
            }
        }
        return null;
    };
    DataSeriesDataProviderAnalyzer.prototype.am = function (a, b) {
        var c = this.u.getCurrentDataSource();
        var d = new HashSet$1(String_$type, 0);
        for (var e = 0; e < c.actualCount; e++) {
            var f = c.getItemValue(c.getItemAtIndex(e), a);
            var g = f;
            if (d.contains(g)) {
                return false;
            }
            d.add_1(g);
        }
        return true;
    };
    DataSeriesDataProviderAnalyzer.prototype.af = function (a, b) {
        var c = this.u.getCurrentDataSource();
        var d = new HashSet$1(Number_$type, 0);
        for (var e = 0; e < c.actualCount; e++) {
            var f = void 0;
            var g = c.getItemValue(c.getItemAtIndex(e), a);
            if (g == null) {
                f = dateMinValue();
            }
            else {
                f = g;
            }
            if (d.contains(f.getTime())) {
                return false;
            }
            d.add_1(f.getTime());
        }
        return true;
    };
    DataSeriesDataProviderAnalyzer.prototype.coerceToDouble = function (value_) {
        return (+value_);
    };
    DataSeriesDataProviderAnalyzer.prototype.aj = function (a, b) {
        var c = this.u.getCurrentDataSource();
        if (b == 4 || b == 1 || b == 3) {
            var d = new HashSet$1(Number_$type, 0);
            for (var e = 0; e < c.actualCount; e++) {
                var f = void 0;
                var g = c.getItemValue(c.getItemAtIndex(e), a);
                if (g == null) {
                    f = -9.2233720368547758E+18;
                }
                else {
                    f = typeGetValue(g);
                }
                if (d.contains(f)) {
                    return false;
                }
                d.add_1(f);
            }
            return true;
        }
        if (b == 7 || b == 5 || b == 6) {
            var h = new HashSet$1(Number_$type, 0);
            for (var i = 0; i < c.actualCount; i++) {
                var j = void 0;
                var k = c.getItemValue(c.getItemAtIndex(i), a);
                if (k == null) {
                    j = NaN;
                }
                else {
                    j = this.coerceToDouble(k);
                }
                if (h.contains(j)) {
                    return false;
                }
                h.add_1(j);
            }
            return true;
        }
        return false;
    };
    DataSeriesDataProviderAnalyzer.prototype.numericColumnHasDiverseValues = function (a) {
        var b = this.u.getCurrentDataSource();
        var c = this.v(a);
        var d = a;
        var e = new List$1(Number_$type, 0);
        if (c == 4 || c == 1 || c == 3) {
            for (var f = 0; f < b.actualCount; f++) {
                var g = void 0;
                var h = b.getItemValue(b.getItemAtIndex(f), d);
                if (h == null) {
                    g = -9.2233720368547758E+18;
                }
                else {
                    g = typeGetValue(h);
                }
                e.add(g);
            }
        }
        if (c == 7 || c == 5 || c == 6) {
            for (var i = 0; i < b.actualCount; i++) {
                var j = void 0;
                var k = b.getItemValue(b.getItemAtIndex(i), d);
                if (k == null) {
                    j = NaN;
                }
                else {
                    j = this.coerceToDouble(k);
                }
                e.add(j);
            }
        }
        e.y();
        for (var l = 1; l < e.count; l++) {
            var m = e._inner[l - 1];
            var n = e._inner[l];
            if (Math.abs(n - m) / n < 0.05) {
                return false;
            }
        }
        return true;
    };
    DataSeriesDataProviderAnalyzer.prototype.numericColumnHasNoRange = function (a, b, c) {
        var d = this.v(b);
        var e = b;
        var f = new List$1(Number_$type, 0);
        if (d == 4 || d == 1 || d == 3) {
            for (var g = 0; g < a.actualCount; g++) {
                var h = void 0;
                var i = a.getItemValue(a.getItemAtIndex(g), e);
                if (i == null) {
                    h = -9.2233720368547758E+18;
                }
                else {
                    h = typeGetValue(i);
                }
                f.add(h);
            }
        }
        if (d == 7 || d == 5 || d == 6) {
            for (var j = 0; j < a.actualCount; j++) {
                var k = void 0;
                var l = a.getItemValue(a.getItemAtIndex(j), e);
                if (l == null) {
                    k = NaN;
                }
                else {
                    k = this.coerceToDouble(l);
                }
                f.add(k);
            }
        }
        var m = 1.7976931348623157E+308;
        var n = -1.7976931348623157E+308;
        for (var o = 0; o < Math.min(f.count, c); o++) {
            var p = f._inner[o];
            if (isNaN_(p)) {
                continue;
            }
            m = Math.min(p, m);
            n = Math.max(p, n);
            if (n - m > 1E-07) {
                return false;
            }
        }
        if (n - m < 1E-07) {
            return true;
        }
        return false;
    };
    DataSeriesDataProviderAnalyzer.prototype.shouldUseLogarithmicScale = function (a, b) {
        return true;
    };
    DataSeriesDataProviderAnalyzer.$t = markType(DataSeriesDataProviderAnalyzer, 'DataSeriesDataProviderAnalyzer');
    return DataSeriesDataProviderAnalyzer;
}(Base));
export { DataSeriesDataProviderAnalyzer };
/**
 * @hidden
 */
var DataSeriesAdapterUpdateNotifier = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataSeriesAdapterUpdateNotifier, _super);
    function DataSeriesAdapterUpdateNotifier(a, b) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.b = null;
        _this.a = a;
        _this.b = b;
        return _this;
    }
    DataSeriesAdapterUpdateNotifier.prototype.notifyClearItems = function () {
        this.a.a5(this.b);
    };
    DataSeriesAdapterUpdateNotifier.prototype.notifyInsertItem = function (a, b) {
        this.a.a6(this.b, a, b);
    };
    DataSeriesAdapterUpdateNotifier.prototype.notifyRemoveItem = function (a, b) {
        this.a.a7(this.b, a, b);
    };
    DataSeriesAdapterUpdateNotifier.prototype.notifySetItem = function (a, b, c) {
        this.a.a8(this.b, a, b, c);
    };
    DataSeriesAdapterUpdateNotifier.$t = markType(DataSeriesAdapterUpdateNotifier, 'DataSeriesAdapterUpdateNotifier', Base.$, [IDataSourceDataProviderUpdateNotifier_$type]);
    return DataSeriesAdapterUpdateNotifier;
}(Base));
export { DataSeriesAdapterUpdateNotifier };
/**
 * @hidden
 */
var DataSeriesAdapterRuleCollection = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataSeriesAdapterRuleCollection, _super);
    function DataSeriesAdapterRuleCollection() {
        return _super.call(this, IDataSeriesAdapterRule_$type, 0) || this;
    }
    DataSeriesAdapterRuleCollection.$t = markType(DataSeriesAdapterRuleCollection, 'DataSeriesAdapterRuleCollection', ObservableCollection$1.$.specialize(IDataSeriesAdapterRule_$type));
    return DataSeriesAdapterRuleCollection;
}(ObservableCollection$1));
export { DataSeriesAdapterRuleCollection };
/**
 * @hidden
 */
var DataSeriesAdapterRemovingDuplicatesEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataSeriesAdapterRemovingDuplicatesEventArgs, _super);
    function DataSeriesAdapterRemovingDuplicatesEventArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.b = null;
        _this.d = null;
        _this.e = null;
        _this.a = null;
        _this.c = false;
        return _this;
    }
    DataSeriesAdapterRemovingDuplicatesEventArgs.$t = markType(DataSeriesAdapterRemovingDuplicatesEventArgs, 'DataSeriesAdapterRemovingDuplicatesEventArgs');
    return DataSeriesAdapterRemovingDuplicatesEventArgs;
}(Base));
export { DataSeriesAdapterRemovingDuplicatesEventArgs };
/**
 * @hidden
 */
var DataSeriesAdapterRunEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataSeriesAdapterRunEventArgs, _super);
    function DataSeriesAdapterRunEventArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = null;
        _this.b = false;
        return _this;
    }
    DataSeriesAdapterRunEventArgs.$t = markType(DataSeriesAdapterRunEventArgs, 'DataSeriesAdapterRunEventArgs');
    return DataSeriesAdapterRunEventArgs;
}(Base));
export { DataSeriesAdapterRunEventArgs };
/**
 * @hidden
 */
var DataSeriesAdapterImplementation = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataSeriesAdapterImplementation, _super);
    function DataSeriesAdapterImplementation() {
        var _this = _super.call(this) || this;
        _this.ab = false;
        _this.z = false;
        _this.aa = false;
        _this.aj = null;
        _this.al = null;
        _this.ai = new Dictionary$2(Base.$, DataSeriesAdapterProviderInfo.$, 0);
        _this.ah = new Dictionary$2(Base.$, DataSeriesAdapterProviderInfo.$, 0);
        _this.ak = null;
        _this.propertyChanged = null;
        _this.c = null;
        _this.b = null;
        _this.a = null;
        _this.t = null;
        _this.s = null;
        _this.r = null;
        _this.m = null;
        _this.n = null;
        _this.x = null;
        _this._rules = null;
        _this._dataSeries = null;
        _this.ac = false;
        _this.removingUnsupported = null;
        _this.removingDuplicates = null;
        _this._adjustPrioritiesBasedOnFitness = false;
        _this.t = new SortDescriptionCollection();
        _this.r = new SortDescriptionCollection();
        _this.x = new SummaryDescriptionCollection();
        _this.m = new FilterExpressionCollection();
        _this.n = new FilterExpressionCollection();
        _this.s = new SortDescriptionCollection();
        _this.t.n(runOn(_this, _this.at));
        _this.r.n(runOn(_this, _this.at));
        _this.x.n(runOn(_this, _this.at));
        _this.m.n(runOn(_this, _this.at));
        _this.n.n(runOn(_this, _this.at));
        _this.s.n(runOn(_this, _this.at));
        _this.rules = new DataSeriesAdapterRuleCollection();
        _this.dataSeries = new DataSeriesCollection();
        _this.a9(_this.rules);
        var a = _this.rules;
        a.collectionChanged = delegateCombine(a.collectionChanged, runOn(_this, _this.bh));
        return _this;
    }
    DataSeriesAdapterImplementation.prototype.at = function (a, b) {
        var c = this.ae;
        var d = this.ag();
        var e = this.af();
        if (c != this.z || d != this.ab || e != this.aa) {
            this.z = c;
            this.ab = d;
            this.aa = e;
            this.refresh();
        }
    };
    DataSeriesAdapterImplementation.prototype.aq = function (a, b) {
        var c = stringEmpty();
        if (this.aj != null) {
            c = this.aj(a);
        }
        if (stringIsNullOrEmpty(c)) {
            return b;
        }
        return c;
    };
    DataSeriesAdapterImplementation.prototype.a9 = function (a) {
    };
    DataSeriesAdapterImplementation.prototype.bh = function (a, b) {
        this.refresh();
    };
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "g", {
        get: function () {
            return this.al;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "itemsSource", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            var b = this.ak;
            this.ak = a;
            if (b != this.ak) {
                this.a4("ItemsSource", b, this.ak);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "supportedSeriesTypes", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            var b = this.c;
            this.c = a;
            if (b != this.c) {
                this.a4("SupportedSeriesTypes", b, this.c);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "includedProperties", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            var b = this.b;
            this.b = a;
            if (b != this.b) {
                this.a4("IncludedProperties", b, this.b);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "excludedProperties", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            var b = this.a;
            this.a = a;
            if (b != this.a) {
                this.a4("ExcludedProperties", b, this.a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "sortDescriptions", {
        get: function () {
            return this.t;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "postSortDescriptions", {
        get: function () {
            return this.s;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "groupDescriptions", {
        get: function () {
            return this.r;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "filterExpressions", {
        get: function () {
            return this.m;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "highlightFilterExpressions", {
        get: function () {
            return this.n;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "summaryDescriptions", {
        get: function () {
            return this.x;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "rules", {
        get: function () {
            return this._rules;
        },
        set: function (a) {
            this._rules = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "dataSeries", {
        get: function () {
            return this._dataSeries;
        },
        set: function (a) {
            this._dataSeries = a;
        },
        enumerable: false,
        configurable: true
    });
    DataSeriesAdapterImplementation.prototype.a4 = function (a, b, c) {
        this.ba(a, b, c);
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
    };
    DataSeriesAdapterImplementation.prototype.ba = function (a, b, c) {
        switch (a) {
            case "ItemsSource":
                this.refresh();
                break;
            case "SupportedSeriesTypes":
                this.refresh();
                break;
            case "IncludedProperties":
                this.refresh();
                break;
            case "ExcludedProperties":
                this.refresh();
                break;
        }
    };
    DataSeriesAdapterImplementation.prototype.refresh = function () {
        this.ac = true;
        this.bg();
        var a = new DataSeriesAdapterRunContext(this);
        var b = this.h(this.itemsSource, true);
        this.au(this.itemsSource, b, null, false);
        a.pushDataSource(b.c);
        if (b.b != null) {
            a.pushHighlightingDataSource(b.b);
        }
        else {
            a.pushHighlightingDataSource(null);
        }
        this.bj(a);
        this.bl(a);
        this.av();
        this.ac = false;
    };
    DataSeriesAdapterImplementation.prototype.az = function (a, b) {
        var c = new DataSeriesAdapterRunContext(this);
        var d = this.h(this.itemsSource, true);
        c.pushDataSource(d.c);
        a.clear();
        var e = new HashSet$1(String_$type, 0);
        b.clear();
        for (var f = 0; f < this.rules.count; f++) {
            var g = this.rules._inner[f];
            var h = g.getPrimaryAxisLabelsStrings(c);
            if (h != null) {
                for (var j = 0; j < h.length; j++) {
                    var i = h[j];
                    if (i == null) {
                        continue;
                    }
                    e.add_1(i);
                    a.add_1(new Tuple$2(String_$type, String_$type, i, c.analyzer.expandCamelCasedWords(i)));
                }
            }
        }
        for (var k = 0; k < this.rules.count; k++) {
            var l = this.rules._inner[k];
            var m = l.getAdditionalValuePropertyStrings(c);
            if (m != null) {
                for (var o = 0; o < m.length; o++) {
                    var n = m[o];
                    if (n == null) {
                        continue;
                    }
                    if (e.contains(n)) {
                        continue;
                    }
                    b.add_1(new Tuple$2(String_$type, String_$type, n, c.analyzer.expandCamelCasedWords(n)));
                }
            }
        }
        if (d.c.actualSchema != null) {
            var p = d.c.actualSchema.propertyNames;
            for (var r = 0; r < p.length; r++) {
                var q = p[r];
                if (e.contains(q) && p.length > 1) {
                    continue;
                }
                b.add_1(new Tuple$2(String_$type, String_$type, q, c.analyzer.expandCamelCasedWords(q)));
            }
        }
    };
    DataSeriesAdapterImplementation.prototype.bg = function () {
        var e_2, _a;
        try {
            for (var _b = __values(fromEnum(this.ai.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                var b = this.ai.item(a);
                b.d = false;
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
    };
    DataSeriesAdapterImplementation.prototype.av = function () {
        var e_3, _a;
        var a = new List$1(Base.$, 0);
        try {
            for (var _b = __values(fromEnum(this.ai.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                var c = this.ai.item(b);
                if (!c.d) {
                    a.add1(b);
                    this.aw(c);
                }
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
        for (var d = 0; d < a.count; d++) {
            var e = a._inner[d];
            this.ai.removeItem(e);
        }
    };
    DataSeriesAdapterImplementation.prototype.bl = function (a) {
        this.bf(a);
        this.be(a);
        this.bk(a);
    };
    DataSeriesAdapterImplementation.prototype.bf = function (a) {
        var b = true;
        if (this.removingUnsupported != null) {
            var c = ((function () {
                var $ret = new DataSeriesAdapterRunEventArgs();
                $ret.a = a;
                return $ret;
            })());
            this.removingUnsupported(this, c);
            b = !c.b;
        }
        if (b) {
            if (this.supportedSeriesTypes == null) {
                return;
            }
            var d = new HashSet$1(DataSeriesType_$type, 0);
            for (var e = 0; e < this.supportedSeriesTypes.length; e++) {
                d.add_1(this.supportedSeriesTypes[e]);
            }
            for (var f = a.getDataSeriesCount() - 1; f >= 0; f--) {
                var g = a.getDataSeriesAt(f);
                if (!d.contains(g.suggestedSeries)) {
                    a.removeDataSeries(g);
                }
            }
        }
    };
    DataSeriesAdapterImplementation.prototype.bk = function (a) {
        var b = 0;
        for (; b < Math.min(this.dataSeries.count, a.getDataSeriesCount()); b++) {
            if (!this.dataSeries._inner[b].equals(a.getDataSeriesAt(b))) {
                this.dataSeries.removeAt(b);
                b--;
            }
        }
        for (; b < a.getDataSeriesCount(); b++) {
            this.dataSeries.insert(b, a.getDataSeriesAt(b));
        }
        for (; b < this.dataSeries.count; b++) {
            this.dataSeries.removeAt(b);
            b--;
        }
    };
    DataSeriesAdapterImplementation.prototype.be = function (a) {
        var e_4, _a;
        var b = new Dictionary$2(String_$type, List$1.$.specialize(DataSeries.$), 0);
        for (var c = 0; c < a.getDataSeriesCount(); c++) {
            var d = a.getDataSeriesAt(c);
            var e = d.l();
            for (var f = 0; f < e.count; f++) {
                if (e.item(f).intent == 16 || e.item(f).intent == 17) {
                    continue;
                }
                var g = (d.dataPath != null ? (d.dataPath + ".") : "") + e.item(f).path;
                if (e.item(f).intent == 25) {
                    g = e.item(f).path;
                }
                if (!b.containsKey(g)) {
                    b.item(g, new List$1(DataSeries.$, 0));
                }
                b.item(g).add(d);
            }
        }
        var _loop_1 = function (h) {
            if (b.item(h).count > 1) {
                var i_1 = new Array(b.item(h).count);
                var j = b.item(h);
                var k = j.count;
                for (var l = 0; l < k; l++) {
                    i_1[l] = j._inner[l];
                }
                var m = true;
                if (this_1.removingDuplicates != null) {
                    var n = ((function () {
                        var $ret = new DataSeriesAdapterRemovingDuplicatesEventArgs();
                        $ret.e = h;
                        $ret.b = a;
                        $ret.a = i_1;
                        return $ret;
                    })());
                    m = !n.c;
                }
                if (m) {
                    var o = -1;
                    var p = null;
                    j = b.item(h);
                    k = j.count;
                    for (var q = 0; q < k; q++) {
                        var r = j._inner[q];
                        if (r.priority > o) {
                            o = r.priority;
                            p = r;
                        }
                    }
                    for (var s = 0; s < k; s++) {
                        var t = j._inner[s];
                        if (t != p) {
                            a.removeDataSeries(t);
                        }
                    }
                }
            }
        };
        var this_1 = this;
        try {
            for (var _b = __values(fromEnum(b.keys)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var h = _c.value;
                _loop_1(h);
            }
        }
        catch (e_4_1) {
            e_4 = { error: e_4_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_4)
                    throw e_4.error;
            }
        }
    };
    DataSeriesAdapterImplementation.prototype.bj = function (a) {
        for (var b = 0; b < this.rules.count; b++) {
            this.bi(a, this.rules._inner[b]);
        }
    };
    DataSeriesAdapterImplementation.prototype.bi = function (a, b) {
        b.evaluate(a);
    };
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "ae", {
        get: function () {
            return this.sortDescriptions.k.count > 0 || this.groupDescriptions.k.count > 0 || this.filterExpressions.k.count > 0 || this.highlightFilterExpressions.k.count > 0 || this.summaryDescriptions.k.count > 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataSeriesAdapterImplementation.prototype, "adjustPrioritiesBasedOnFitness", {
        get: function () {
            return this._adjustPrioritiesBasedOnFitness;
        },
        set: function (a) {
            this._adjustPrioritiesBasedOnFitness = a;
        },
        enumerable: false,
        configurable: true
    });
    DataSeriesAdapterImplementation.prototype.ag = function () {
        return this.groupDescriptions.k.count > 0 && this.postSortDescriptions.k.count > 0;
    };
    DataSeriesAdapterImplementation.prototype.af = function () {
        return this.highlightFilterExpressions.k.count > 0;
    };
    DataSeriesAdapterImplementation.prototype.h = function (a, b) {
        var _this = this;
        var c = new DataSeriesAdapterProviderInfo();
        var d = this.ag();
        var e = this.af();
        var f = 0;
        if (typeCast(IDataSource_$type, a) !== null || (b && this.ae)) {
            if (d || e) {
                f = 2;
            }
            else {
                f = 1;
            }
        }
        if (a != null && this.ai.containsKey(a)) {
            var g = this.ai.item(a);
            g.d = true;
            if (g.a != f) {
                this.ax(this.ai, a, g);
            }
            else {
                return g;
            }
        }
        if (typeCast(IDataSourceLocalDataProvider_$type, a) !== null) {
            c.c = a;
            return c;
        }
        if (typeCast(IDataSource_$type, a) !== null) {
            var h_1 = new AggregatedDataProvider();
            h_1.targetDataSource = a;
            this.sortDescriptions.o(h_1.targetDataSource.sortDescriptions);
            this.groupDescriptions.o(h_1.targetDataSource.groupDescriptions);
            this.filterExpressions.o(h_1.targetDataSource.filterExpressions);
            this.summaryDescriptions.o(h_1.targetDataSource.summaryDescriptions);
            c.e.add(function () {
                _this.sortDescriptions.s(h_1.targetDataSource.sortDescriptions);
                _this.groupDescriptions.s(h_1.targetDataSource.groupDescriptions);
                _this.filterExpressions.s(h_1.targetDataSource.filterExpressions);
                _this.summaryDescriptions.s(h_1.targetDataSource.summaryDescriptions);
            });
            if (f == 2) {
                var i = this.q(c, h_1);
                c.c = i;
                if (e) {
                    this.ay(c);
                }
                else if (c.c != null) {
                    c.c.flushAutoRefresh();
                }
                return c;
            }
            c.c = h_1;
            if (c.c != null) {
                c.c.flushAutoRefresh();
            }
            return c;
        }
        if (b && this.ae) {
            var j = this.g.getLocalDataSource(a);
            j.deferAutoRefresh = true;
            var k_1 = new AggregatedDataProvider();
            k_1.targetDataSource = j;
            this.sortDescriptions.o(k_1.targetDataSource.sortDescriptions);
            this.groupDescriptions.o(k_1.targetDataSource.groupDescriptions);
            this.filterExpressions.o(k_1.targetDataSource.filterExpressions);
            this.summaryDescriptions.o(k_1.targetDataSource.summaryDescriptions);
            c.e.add(function () {
                _this.sortDescriptions.s(k_1.targetDataSource.sortDescriptions);
                _this.groupDescriptions.s(k_1.targetDataSource.groupDescriptions);
                _this.filterExpressions.s(k_1.targetDataSource.filterExpressions);
                _this.summaryDescriptions.s(k_1.targetDataSource.summaryDescriptions);
            });
            j.deferAutoRefresh = false;
            if (f == 2) {
                var l = this.q(c, k_1);
                c.c = l;
                if (e) {
                    this.ay(c);
                }
                return c;
            }
            c.c = k_1;
            return c;
        }
        var m = this.g.getDataProvider(a);
        c.c = m;
        return c;
    };
    DataSeriesAdapterImplementation.prototype.ay = function (a) {
        var _this = this;
        var b = new DataSeriesAdapterRunContext(this);
        a.c.flushAutoRefresh();
        b.pushDataSource(a.c);
        var c = this.ar(b, a);
        if (c == null) {
            return;
        }
        if (typeCast(FlatDataProvider.$, a.c) !== null) {
            var d = a.c;
            var e = d.targetDataSource;
            var f = e.clone();
            var g = f.dataProvider;
            var h_2 = g.targetDataSource;
            this.highlightFilterExpressions.o(h_2.filterExpressions);
            this.groupDescriptions.o(h_2.groupDescriptions);
            this.sortDescriptions.o(h_2.sortDescriptions);
            this.summaryDescriptions.o(h_2.summaryDescriptions);
            a.e.add(function () {
                _this.highlightFilterExpressions.s(h_2.filterExpressions);
                _this.groupDescriptions.s(h_2.groupDescriptions);
                _this.sortDescriptions.s(h_2.sortDescriptions);
                _this.summaryDescriptions.s(h_2.summaryDescriptions);
            });
            f.flushAutoRefresh();
            var i = new FlatDataProvider();
            i.targetDataSource = e;
            i.rightDataSource = f;
            d.joinType = 1;
            d.rightDataSource = f;
            d.leftJoinProperty = c;
            d.rightJoinProperty = c;
            d.joinCollisionType = 1;
            i.joinType = 1;
            i.rightDataSource = f;
            i.leftJoinProperty = c;
            i.rightJoinProperty = c;
            i.joinCollisionType = 2;
            d.broadcastChangesToRightDataSource = true;
            a.c = d;
            i.flushAutoRefresh();
            a.b = i;
        }
    };
    DataSeriesAdapterImplementation.prototype.ar = function (a, b) {
        var c = -1;
        var d = null;
        for (var e = 0; e < this.rules.count; e++) {
            var f = this.rules._inner[e].priority;
            var g = this.rules._inner[e].getPrimaryAxisLabelsString(a);
            if (g != null && f > c) {
                d = g;
                c = f;
            }
        }
        return d;
    };
    DataSeriesAdapterImplementation.prototype.q = function (a, b) {
        var _this = this;
        var c = this.g.getLocalDataSource(null);
        c.dataProvider = b;
        var d = new FlatDataProvider();
        d.targetDataSource = c;
        this.postSortDescriptions.o(d.targetDataSource.sortDescriptions);
        a.e.add(function () { return _this.postSortDescriptions.s(d.targetDataSource.sortDescriptions); });
        return d;
    };
    DataSeriesAdapterImplementation.prototype.ax = function (a, b, c) {
        this.aw(c);
        a.removeItem(b);
    };
    DataSeriesAdapterImplementation.prototype.aw = function (a) {
        if (a.e.count > 0) {
            for (var b = 0; b < a.e.count; b++) {
                var c = a.e._inner[b];
                c();
            }
            a.e.clear();
        }
        var d = a.c;
        d.updateNotifier = null;
        d.schemaChanged = delegateRemove(d.schemaChanged, runOn(this, this.bb));
        var e = a.b;
        if (e != null) {
            e.updateNotifier = null;
            e.schemaChanged = delegateRemove(e.schemaChanged, runOn(this, this.bb));
        }
    };
    DataSeriesAdapterImplementation.prototype.bc = function (a, b, c, d) {
        var e = this.h(b, false);
        this.au(b, e, a.getCurrentDataSource(), d);
        a.pushDataSource(e.c);
        if (e.b != null) {
            a.pushHighlightingDataSource(e.b);
        }
        else {
            a.pushHighlightingDataSource(null);
        }
        a.pushPath(c);
        this.bj(a);
        a.popPath();
        a.popDataSource();
        a.popHighlightingDataSource();
    };
    DataSeriesAdapterImplementation.prototype.au = function (a, b, c, d) {
        if (a != null && !this.ai.containsKey(a)) {
            b.a = 0;
            if (typeCast(AggregatedDataProvider.$, b.c) !== null) {
                b.a = 1;
            }
            else if (typeCast(FlatDataProvider.$, b.c) !== null) {
                b.a = 2;
            }
            b.d = true;
            this.ai.addItem(a, b);
            var e = b.c;
            e.schemaChanged = delegateCombine(e.schemaChanged, runOn(this, this.bb));
            if (b.b != null) {
                var f = b.b;
                f.schemaChanged = delegateCombine(f.schemaChanged, runOn(this, this.bb));
            }
            if (c != null) {
                var g = new DataSeriesAdapterUpdateNotifier(this, b.c);
                c.updateNotifier = g;
            }
            if (d) {
                var h = new DataSeriesAdapterUpdateNotifier(this, b.c);
                b.c.updateNotifier = h;
                if (b.b != null) {
                    var i = new DataSeriesAdapterUpdateNotifier(this, b.b);
                    b.b.updateNotifier = h;
                }
            }
        }
    };
    DataSeriesAdapterImplementation.prototype.bb = function (a, b) {
        if (!this.ac) {
            this.refresh();
        }
    };
    DataSeriesAdapterImplementation.prototype.a5 = function (a) {
        this.refresh();
    };
    DataSeriesAdapterImplementation.prototype.a6 = function (a, b, c) {
        this.refresh();
    };
    DataSeriesAdapterImplementation.prototype.a7 = function (a, b, c) {
        this.refresh();
    };
    DataSeriesAdapterImplementation.prototype.a8 = function (a, b, c, d) {
        this.refresh();
    };
    DataSeriesAdapterImplementation.prototype.notifyClearItems = function (a) {
        if (this.ai.containsKey(a)) {
            this.ai.item(a).c.notifyClearItems();
        }
    };
    DataSeriesAdapterImplementation.prototype.notifyInsertItem = function (a, b, c) {
        if (this.ai.containsKey(a)) {
            this.ai.item(a).c.notifyInsertItem(b, c);
        }
    };
    DataSeriesAdapterImplementation.prototype.notifyRemoveItem = function (a, b, c) {
        if (this.ai.containsKey(a)) {
            this.ai.item(a).c.notifyRemoveItem(b, c);
        }
    };
    DataSeriesAdapterImplementation.prototype.notifySetItem = function (a, b, c, d) {
        if (this.ai.containsKey(a)) {
            this.ai.item(a).c.notifySetItem(b, c, d);
        }
    };
    DataSeriesAdapterImplementation.$t = markType(DataSeriesAdapterImplementation, 'DataSeriesAdapterImplementation', Base.$, [INotifyPropertyChanged_$type]);
    return DataSeriesAdapterImplementation;
}(Base));
export { DataSeriesAdapterImplementation };
