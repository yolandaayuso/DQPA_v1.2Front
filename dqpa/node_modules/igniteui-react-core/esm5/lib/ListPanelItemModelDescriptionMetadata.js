/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ListPanelItemModelDescription } from "./ListPanelItemModelDescription";
/**
 * @hidden
 */
var ListPanelItemModelDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ListPanelItemModelDescriptionMetadata, _super);
    function ListPanelItemModelDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ListPanelItemModelDescriptionMetadata.b = function (a) {
        if (ListPanelItemModelDescriptionMetadata.a == null) {
            ListPanelItemModelDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ListPanelItemModelDescriptionMetadata.c(ListPanelItemModelDescriptionMetadata.a);
        }
        if (a.k(ListPanelItemModelDescriptionMetadata.a)) {
            return;
        }
        a.ac(ListPanelItemModelDescriptionMetadata.a);
    };
    ListPanelItemModelDescriptionMetadata.c = function (a) {
        a.item("DataRow", "Number:int");
        a.item("RowHeight", "Number:double");
        a.item("RowObjectRef", "(w:RowObject,wf:RowObject)DataRef");
        a.item("IsModelDirty", "Boolean");
        a.item("Left", "Number:double");
        a.item("Top", "Number:double");
        a.item("IsActivated", "Boolean");
        a.item("IsActivationSupported", "Boolean");
        a.item("IsSelected", "Boolean");
    };
    ListPanelItemModelDescriptionMetadata.d = function (a) {
        ListPanelItemModelDescriptionMetadata.b(a);
        a.ae("ListPanelItemModel", function () { return new ListPanelItemModelDescription(); });
        a.ad("ListPanelItemModel", ListPanelItemModelDescriptionMetadata.a);
    };
    ListPanelItemModelDescriptionMetadata.$t = markType(ListPanelItemModelDescriptionMetadata, 'ListPanelItemModelDescriptionMetadata');
    ListPanelItemModelDescriptionMetadata.a = null;
    return ListPanelItemModelDescriptionMetadata;
}(Base));
export { ListPanelItemModelDescriptionMetadata };
