/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { RippleDescription } from "./RippleDescription";
/**
 * @hidden
 */
var RippleDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RippleDescriptionMetadata, _super);
    function RippleDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RippleDescriptionMetadata.b = function (a) {
        if (RippleDescriptionMetadata.a == null) {
            RippleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            RippleDescriptionMetadata.c(RippleDescriptionMetadata.a);
        }
        if (a.k(RippleDescriptionMetadata.a)) {
            return;
        }
        a.ac(RippleDescriptionMetadata.a);
    };
    RippleDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:XRipple");
        a.item("EventSourceRef", "(w:EventSource,wf:EventSource)DataRef");
        a.item("RippleColor", "Brush");
        a.item("HoverColor", "Brush");
        a.item("ActualHoverColor", "Brush");
        a.item("ActualRippleColor", "Brush");
        a.item("RippleDuration", "Number:double");
        a.item("IsDisabled", "Boolean");
        a.item("IsCentered", "Boolean");
        a.item("IsHoverEnabled", "Boolean");
    };
    RippleDescriptionMetadata.d = function (a) {
        RippleDescriptionMetadata.b(a);
        a.ae("Ripple", function () { return new RippleDescription(); });
        a.ad("Ripple", RippleDescriptionMetadata.a);
    };
    RippleDescriptionMetadata.$t = markType(RippleDescriptionMetadata, 'RippleDescriptionMetadata');
    RippleDescriptionMetadata.a = null;
    return RippleDescriptionMetadata;
}(Base));
export { RippleDescriptionMetadata };
