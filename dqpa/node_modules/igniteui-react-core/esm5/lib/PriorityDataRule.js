/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { IDataSeriesAdapterRule_$type } from "./IDataSeriesAdapterRule";
import { List$1 } from "./List$1";
/**
 * @hidden
 */
var PriorityDataRule = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PriorityDataRule, _super);
    function PriorityDataRule() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._priority = 0;
        return _this;
    }
    Object.defineProperty(PriorityDataRule.prototype, "priority", {
        get: function () {
            return this._priority;
        },
        set: function (a) {
            this._priority = a;
        },
        enumerable: false,
        configurable: true
    });
    PriorityDataRule.prototype.evaluate = function (a) {
    };
    PriorityDataRule.prototype.getPrimaryAxisLabelsString = function (a) {
        return null;
    };
    PriorityDataRule.prototype.a = function (a) {
        var b = new List$1(String_$type, 0);
        for (var d = 0; d < a.length; d++) {
            var c = a[d];
            b.add(c);
        }
        return b;
    };
    PriorityDataRule.prototype.getPrimaryAxisLabelsStrings = function (a) {
        var b = this.getPrimaryAxisLabelsString(a);
        if (b == null) {
            return null;
        }
        return [b];
    };
    PriorityDataRule.prototype.getAdditionalValuePropertyStrings = function (a) {
        return null;
    };
    PriorityDataRule.$t = markType(PriorityDataRule, 'PriorityDataRule', Base.$, [IDataSeriesAdapterRule_$type]);
    return PriorityDataRule;
}(Base));
export { PriorityDataRule };
