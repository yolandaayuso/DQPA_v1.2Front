/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { CellInfoDescription } from "./CellInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var FilterCellInfoDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterCellInfoDescription, _super);
    function FilterCellInfoDescription() {
        var _this = _super.call(this) || this;
        _this.f5 = null;
        _this.fn = null;
        _this.fp = null;
        _this.fl = null;
        _this.f7 = null;
        _this.f6 = null;
        _this.fx = 0;
        _this.fw = 0;
        _this.fv = 0;
        _this.fu = 0;
        _this.ft = 0;
        _this.fs = 0;
        return _this;
    }
    FilterCellInfoDescription.prototype.get_type = function () {
        return "FilterCellInfo";
    };
    Object.defineProperty(FilterCellInfoDescription.prototype, "dataType", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.g("DataType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "filter", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            this.fn = a;
            this.g("Filter");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "filterExpression", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            this.fp = a;
            this.g("FilterExpression");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "filterOperands", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("FilterOperands");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "operatorType", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.g("OperatorType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "filterValueRef", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.g("FilterValueRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "selectorTop", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.g("SelectorTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "selectorLeft", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            this.fw = a;
            this.g("SelectorLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "editorTop", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.g("EditorTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "editorLeft", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.g("EditorLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "clearIconTop", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.g("ClearIconTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterCellInfoDescription.prototype, "clearIconLeft", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.g("ClearIconLeft");
        },
        enumerable: false,
        configurable: true
    });
    FilterCellInfoDescription.$t = markType(FilterCellInfoDescription, 'FilterCellInfoDescription', CellInfoDescription.$);
    FilterCellInfoDescription.__marshalByValue1 = true;
    FilterCellInfoDescription.__marshalByValueAlias1 = "FilterCellModel";
    return FilterCellInfoDescription;
}(CellInfoDescription));
export { FilterCellInfoDescription };
