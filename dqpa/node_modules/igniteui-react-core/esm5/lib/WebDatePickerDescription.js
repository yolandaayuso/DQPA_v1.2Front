/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { WebBaseComboBoxLikeDescription } from "./WebBaseComboBoxLikeDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var WebDatePickerDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebDatePickerDescription, _super);
    function WebDatePickerDescription() {
        var _this = _super.call(this) || this;
        _this.a7 = null;
        _this.a9 = null;
        _this.aa = false;
        _this.ac = false;
        _this.ar = new Date();
        _this.ao = new Date();
        _this.aq = new Date();
        _this.ap = new Date();
        _this.a4 = null;
        _this.bd = null;
        _this.x = false;
        _this.y = false;
        _this.q = null;
        _this.r = null;
        _this.ab = false;
        _this.be = null;
        _this.aw = 0;
        _this.ae = false;
        _this.a3 = null;
        _this.a6 = null;
        _this.a8 = null;
        _this.bf = null;
        _this.u = null;
        _this.bg = null;
        _this.w = false;
        _this.ad = false;
        _this.ay = null;
        _this.ba = null;
        _this.z = false;
        _this.bc = null;
        _this.bb = null;
        _this.a2 = null;
        _this.a1 = null;
        _this.a0 = null;
        _this.a5 = null;
        return _this;
    }
    WebDatePickerDescription.prototype.get_type = function () {
        return "WebDatePicker";
    };
    Object.defineProperty(WebDatePickerDescription.prototype, "label", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("Label");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "mode", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("Mode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "nonEditable", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("NonEditable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "readOnly", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("ReadOnly");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "value", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "activeDate", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("ActiveDate");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "min", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("Min");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "max", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("Max");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "headerOrientation", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("HeaderOrientation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "orientation", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("Orientation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "hideHeader", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("HideHeader");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "hideOutsideDays", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("HideOutsideDays");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "disabledDates", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("DisabledDates");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "specialDates", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("SpecialDates");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "outlined", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("Outlined");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "placeholder", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("Placeholder");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "visibleMonths", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("VisibleMonths");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "showWeekNumbers", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("ShowWeekNumbers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "displayFormat", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("DisplayFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "inputFormat", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("InputFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "locale", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("Locale");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "prompt", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("Prompt");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "resourceStrings", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("ResourceStrings");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "weekStart", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("WeekStart");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "disabled", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("Disabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "required", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("Required");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "defaultValue", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("DefaultValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "name", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("Name");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "invalid", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("Invalid");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "openingRef", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("OpeningRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "openedRef", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("OpenedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "closingRef", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("ClosingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "closedRef", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("ClosedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "changeRef", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("ChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDatePickerDescription.prototype, "inputRef", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("InputRef");
        },
        enumerable: false,
        configurable: true
    });
    WebDatePickerDescription.$t = markType(WebDatePickerDescription, 'WebDatePickerDescription', WebBaseComboBoxLikeDescription.$);
    return WebDatePickerDescription;
}(WebBaseComboBoxLikeDescription));
export { WebDatePickerDescription };
