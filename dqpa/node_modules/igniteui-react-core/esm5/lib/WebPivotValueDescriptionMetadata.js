/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotAggregatorDescriptionMetadata } from "./WebPivotAggregatorDescriptionMetadata";
import { WebPivotValueDescription } from "./WebPivotValueDescription";
/**
 * @hidden
 */
var WebPivotValueDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebPivotValueDescriptionMetadata, _super);
    function WebPivotValueDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebPivotValueDescriptionMetadata.b = function (a) {
        if (WebPivotValueDescriptionMetadata.a == null) {
            WebPivotValueDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebPivotValueDescriptionMetadata.c(WebPivotValueDescriptionMetadata.a);
        }
        if (a.k(WebPivotValueDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebPivotValueDescriptionMetadata.a);
        WebPivotAggregatorDescriptionMetadata.d(a);
    };
    WebPivotValueDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:PivotValue");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("Member", "String");
        a.item("DisplayName", "String");
        a.item("Aggregate", "ExportedType:WebPivotAggregator");
        a.item("AggregateList", "Array:WebPivotAggregatorDescription:PivotAggregator");
        a.item("Enabled", "Boolean");
        a.item("Styles", "Unknown");
        a.item("DataType", "ExportedType:string:GridColumnDataType");
        a.item("DataType@stringUnion", "WebComponents;React");
        a.item("DataType@names", "String;Number;Boolean;Date;DateTime;Time;Currency;Percent;Image");
        a.item("FormatterRef", "EventRef::formatter");
    };
    WebPivotValueDescriptionMetadata.d = function (a) {
        WebPivotValueDescriptionMetadata.b(a);
        a.ae("WebPivotValue", function () { return new WebPivotValueDescription(); });
        a.ad("WebPivotValue", WebPivotValueDescriptionMetadata.a);
    };
    WebPivotValueDescriptionMetadata.$t = markType(WebPivotValueDescriptionMetadata, 'WebPivotValueDescriptionMetadata');
    WebPivotValueDescriptionMetadata.a = null;
    return WebPivotValueDescriptionMetadata;
}(Base));
export { WebPivotValueDescriptionMetadata };
