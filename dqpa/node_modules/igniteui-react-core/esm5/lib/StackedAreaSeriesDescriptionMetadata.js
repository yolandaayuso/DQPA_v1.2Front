/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { HorizontalStackedSeriesBaseDescriptionMetadata } from "./HorizontalStackedSeriesBaseDescriptionMetadata";
import { StackedAreaSeriesDescription } from "./StackedAreaSeriesDescription";
/**
 * @hidden
 */
var StackedAreaSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedAreaSeriesDescriptionMetadata, _super);
    function StackedAreaSeriesDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StackedAreaSeriesDescriptionMetadata.b = function (a) {
        if (StackedAreaSeriesDescriptionMetadata.a == null) {
            StackedAreaSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            StackedAreaSeriesDescriptionMetadata.c(StackedAreaSeriesDescriptionMetadata.a);
        }
        if (a.k(StackedAreaSeriesDescriptionMetadata.a)) {
            return;
        }
        a.ac(StackedAreaSeriesDescriptionMetadata.a);
    };
    StackedAreaSeriesDescriptionMetadata.c = function (a) {
        HorizontalStackedSeriesBaseDescriptionMetadata.c(a);
    };
    StackedAreaSeriesDescriptionMetadata.d = function (a) {
        StackedAreaSeriesDescriptionMetadata.b(a);
        a.ae("StackedAreaSeries", function () { return new StackedAreaSeriesDescription(); });
        a.ad("StackedAreaSeries", StackedAreaSeriesDescriptionMetadata.a);
    };
    StackedAreaSeriesDescriptionMetadata.$t = markType(StackedAreaSeriesDescriptionMetadata, 'StackedAreaSeriesDescriptionMetadata');
    StackedAreaSeriesDescriptionMetadata.a = null;
    return StackedAreaSeriesDescriptionMetadata;
}(Base));
export { StackedAreaSeriesDescriptionMetadata };
