/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DataGridExpansionIndicatorDescription } from "./DataGridExpansionIndicatorDescription";
/**
 * @hidden
 */
var DataGridExpansionIndicatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataGridExpansionIndicatorDescriptionMetadata, _super);
    function DataGridExpansionIndicatorDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGridExpansionIndicatorDescriptionMetadata.b = function (a) {
        if (DataGridExpansionIndicatorDescriptionMetadata.a == null) {
            DataGridExpansionIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DataGridExpansionIndicatorDescriptionMetadata.c(DataGridExpansionIndicatorDescriptionMetadata.a);
        }
        if (a.k(DataGridExpansionIndicatorDescriptionMetadata.a)) {
            return;
        }
        a.ac(DataGridExpansionIndicatorDescriptionMetadata.a);
    };
    DataGridExpansionIndicatorDescriptionMetadata.c = function (a) {
        a.item("IsExpanded", "Boolean");
        a.item("IconColor", "Brush");
        a.item("IsAnimationEnabled", "Boolean");
        a.item("PixelScalingRatio", "Number:double");
        a.item("ActualPixelScalingRatio", "Number:double");
    };
    DataGridExpansionIndicatorDescriptionMetadata.d = function (a) {
        DataGridExpansionIndicatorDescriptionMetadata.b(a);
        a.ae("DataGridExpansionIndicator", function () { return new DataGridExpansionIndicatorDescription(); });
        a.ad("DataGridExpansionIndicator", DataGridExpansionIndicatorDescriptionMetadata.a);
    };
    DataGridExpansionIndicatorDescriptionMetadata.$t = markType(DataGridExpansionIndicatorDescriptionMetadata, 'DataGridExpansionIndicatorDescriptionMetadata');
    DataGridExpansionIndicatorDescriptionMetadata.a = null;
    return DataGridExpansionIndicatorDescriptionMetadata;
}(Base));
export { DataGridExpansionIndicatorDescriptionMetadata };
