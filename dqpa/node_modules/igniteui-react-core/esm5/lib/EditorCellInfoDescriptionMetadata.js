/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { CellInfoDescriptionMetadata } from "./CellInfoDescriptionMetadata";
import { EditorCellInfoDescription } from "./EditorCellInfoDescription";
/**
 * @hidden
 */
var EditorCellInfoDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(EditorCellInfoDescriptionMetadata, _super);
    function EditorCellInfoDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EditorCellInfoDescriptionMetadata.b = function (a) {
        if (EditorCellInfoDescriptionMetadata.a == null) {
            EditorCellInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            EditorCellInfoDescriptionMetadata.c(EditorCellInfoDescriptionMetadata.a);
        }
        if (a.k(EditorCellInfoDescriptionMetadata.a)) {
            return;
        }
        a.ac(EditorCellInfoDescriptionMetadata.a);
        CellInfoDescriptionMetadata.d(a);
    };
    EditorCellInfoDescriptionMetadata.c = function (a) {
        CellInfoDescriptionMetadata.c(a);
        a.item("EditTarget", "ExportedType:CellModel");
        a.item("DataType", "ExportedType:string:DataSourceSchemaPropertyType");
        a.item("DataType@names", "StringValue;IntValue;BooleanValue;LongValue;ShortValue;DoubleValue;DecimalValue;SingleValue;DateTimeValue;DateTimeOffsetValue;ByteValue;ObjectValue");
        a.item("ErrorMessage", "String");
        a.item("EditValueRef", "(w:EditValue,wf:EditValue)DataRef");
        a.item("EditorType", "ExportedType:string:EditorType");
        a.item("EditorType@names", "Default;Text;Numeric;Date;Combo");
        a.item("EditorDataSourceRef", "(w:EditorItemsSource,xam:EditorItemsSource,wf:EditorItemsSource)DataRef");
        a.item("EditorTextField", "String");
        a.item("EditorValueField", "Array:string");
        a.item("DateFormatString", "String");
        a.item("ShowTodayButton", "Boolean");
    };
    EditorCellInfoDescriptionMetadata.d = function (a) {
        EditorCellInfoDescriptionMetadata.b(a);
        a.ae("EditorCellInfo", function () { return new EditorCellInfoDescription(); });
        a.ad("EditorCellInfo", EditorCellInfoDescriptionMetadata.a);
    };
    EditorCellInfoDescriptionMetadata.$t = markType(EditorCellInfoDescriptionMetadata, 'EditorCellInfoDescriptionMetadata');
    EditorCellInfoDescriptionMetadata.a = null;
    return EditorCellInfoDescriptionMetadata;
}(Base));
export { EditorCellInfoDescriptionMetadata };
