/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GridCellPositionDescriptionMetadata } from "./GridCellPositionDescriptionMetadata";
import { GridActiveCellChangedEventArgsDescription } from "./GridActiveCellChangedEventArgsDescription";
/**
 * @hidden
 */
var GridActiveCellChangedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridActiveCellChangedEventArgsDescriptionMetadata, _super);
    function GridActiveCellChangedEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridActiveCellChangedEventArgsDescriptionMetadata.b = function (a) {
        if (GridActiveCellChangedEventArgsDescriptionMetadata.a == null) {
            GridActiveCellChangedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridActiveCellChangedEventArgsDescriptionMetadata.c(GridActiveCellChangedEventArgsDescriptionMetadata.a);
        }
        if (a.k(GridActiveCellChangedEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(GridActiveCellChangedEventArgsDescriptionMetadata.a);
        GridCellPositionDescriptionMetadata.d(a);
    };
    GridActiveCellChangedEventArgsDescriptionMetadata.c = function (a) {
        a.item("NewActiveCell", "ExportedType:GridCellPosition");
        a.item("OldActiveCell", "ExportedType:GridCellPosition");
    };
    GridActiveCellChangedEventArgsDescriptionMetadata.d = function (a) {
        GridActiveCellChangedEventArgsDescriptionMetadata.b(a);
        a.ae("GridActiveCellChangedEventArgs", function () { return new GridActiveCellChangedEventArgsDescription(); });
        a.ad("GridActiveCellChangedEventArgs", GridActiveCellChangedEventArgsDescriptionMetadata.a);
    };
    GridActiveCellChangedEventArgsDescriptionMetadata.$t = markType(GridActiveCellChangedEventArgsDescriptionMetadata, 'GridActiveCellChangedEventArgsDescriptionMetadata');
    GridActiveCellChangedEventArgsDescriptionMetadata.a = null;
    return GridActiveCellChangedEventArgsDescriptionMetadata;
}(Base));
export { GridActiveCellChangedEventArgsDescriptionMetadata };
