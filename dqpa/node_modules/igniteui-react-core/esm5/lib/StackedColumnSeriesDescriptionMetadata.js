/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { HorizontalStackedSeriesBaseDescriptionMetadata } from "./HorizontalStackedSeriesBaseDescriptionMetadata";
import { StackedColumnSeriesDescription } from "./StackedColumnSeriesDescription";
/**
 * @hidden
 */
var StackedColumnSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StackedColumnSeriesDescriptionMetadata, _super);
    function StackedColumnSeriesDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StackedColumnSeriesDescriptionMetadata.b = function (a) {
        if (StackedColumnSeriesDescriptionMetadata.a == null) {
            StackedColumnSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            StackedColumnSeriesDescriptionMetadata.c(StackedColumnSeriesDescriptionMetadata.a);
        }
        if (a.k(StackedColumnSeriesDescriptionMetadata.a)) {
            return;
        }
        a.ac(StackedColumnSeriesDescriptionMetadata.a);
    };
    StackedColumnSeriesDescriptionMetadata.c = function (a) {
        HorizontalStackedSeriesBaseDescriptionMetadata.c(a);
        a.item("RadiusX", "Number:double");
        a.item("RadiusY", "Number:double");
    };
    StackedColumnSeriesDescriptionMetadata.d = function (a) {
        StackedColumnSeriesDescriptionMetadata.b(a);
        a.ae("StackedColumnSeries", function () { return new StackedColumnSeriesDescription(); });
        a.ad("StackedColumnSeries", StackedColumnSeriesDescriptionMetadata.a);
    };
    StackedColumnSeriesDescriptionMetadata.$t = markType(StackedColumnSeriesDescriptionMetadata, 'StackedColumnSeriesDescriptionMetadata');
    StackedColumnSeriesDescriptionMetadata.a = null;
    return StackedColumnSeriesDescriptionMetadata;
}(Base));
export { StackedColumnSeriesDescriptionMetadata };
