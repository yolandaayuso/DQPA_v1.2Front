/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var TreemapNodeStyleDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TreemapNodeStyleDescription, _super);
    function TreemapNodeStyleDescription() {
        var _this = _super.call(this) || this;
        _this.aj = null;
        _this.ai = null;
        _this.al = null;
        _this.am = null;
        _this.aq = null;
        _this.ak = null;
        _this.m = 0;
        _this.o = 0;
        _this.n = 0;
        _this.l = 0;
        _this.q = 0;
        _this.s = 0;
        _this.r = 0;
        _this.p = 0;
        _this.k = 0;
        _this.an = null;
        _this.ao = null;
        _this.ah = null;
        _this.ap = null;
        _this.u = 0;
        _this.t = 0;
        _this.j = 0;
        _this.h = false;
        return _this;
    }
    TreemapNodeStyleDescription.prototype.get_type = function () {
        return "TreemapNodeStyle";
    };
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "headerHoverBackground", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("HeaderHoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "headerBackground", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("HeaderBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "headerTextColor", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("HeaderTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "label", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("Label");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "textColor", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "headerHoverTextColor", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("HeaderHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "headerLabelLeftMargin", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("HeaderLabelLeftMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "headerLabelTopMargin", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("HeaderLabelTopMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "headerLabelRightMargin", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("HeaderLabelRightMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "headerLabelBottomMargin", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("HeaderLabelBottomMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "labelLeftMargin", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("LabelLeftMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "labelTopMargin", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("LabelTopMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "labelRightMargin", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("LabelRightMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "labelBottomMargin", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("LabelBottomMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "headerHeight", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("HeaderHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "labelHorizontalAlignment", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("LabelHorizontalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "labelVerticalAlignment", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("LabelVerticalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "fill", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("Fill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "outline", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("Outline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "strokeThickness", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("StrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "opacity", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("Opacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "fadeOpacity", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("FadeOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStyleDescription.prototype, "highlightingHandled", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("HighlightingHandled");
        },
        enumerable: false,
        configurable: true
    });
    TreemapNodeStyleDescription.$t = markType(TreemapNodeStyleDescription, 'TreemapNodeStyleDescription', Description.$);
    return TreemapNodeStyleDescription;
}(Description));
export { TreemapNodeStyleDescription };
