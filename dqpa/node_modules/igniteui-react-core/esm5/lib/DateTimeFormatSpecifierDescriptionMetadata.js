/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FormatSpecifierDescriptionMetadata } from "./FormatSpecifierDescriptionMetadata";
import { DateTimeFormatSpecifierDescription } from "./DateTimeFormatSpecifierDescription";
/**
 * @hidden
 */
var DateTimeFormatSpecifierDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DateTimeFormatSpecifierDescriptionMetadata, _super);
    function DateTimeFormatSpecifierDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DateTimeFormatSpecifierDescriptionMetadata.b = function (a) {
        if (DateTimeFormatSpecifierDescriptionMetadata.a == null) {
            DateTimeFormatSpecifierDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DateTimeFormatSpecifierDescriptionMetadata.c(DateTimeFormatSpecifierDescriptionMetadata.a);
        }
        if (a.k(DateTimeFormatSpecifierDescriptionMetadata.a)) {
            return;
        }
        a.ac(DateTimeFormatSpecifierDescriptionMetadata.a);
    };
    DateTimeFormatSpecifierDescriptionMetadata.c = function (a) {
        FormatSpecifierDescriptionMetadata.c(a);
        a.item("Locale", "String");
        a.item("DateStyle", "String");
        a.item("TimeStyle", "String");
        a.item("FractionalSecondDigits", "Number:int");
        a.item("Calendar", "String");
        a.item("DayPeriod", "String");
        a.item("NumberingSystem", "String");
        a.item("LocaleMatcher", "String");
        a.item("TimeZone", "String");
        a.item("Hour12", "String");
        a.item("HourCycle", "String");
        a.item("FormatMatcher", "String");
        a.item("WeekDay", "String");
        a.item("Era", "String");
        a.item("Year", "String");
        a.item("Month", "String");
        a.item("Day", "String");
        a.item("Hour", "String");
        a.item("Minute", "String");
        a.item("Second", "String");
        a.item("TimeZoneName", "String");
        DateTimeFormatSpecifierDescriptionMetadata.e(a);
    };
    DateTimeFormatSpecifierDescriptionMetadata.d = function (a) {
        DateTimeFormatSpecifierDescriptionMetadata.b(a);
        a.ae("DateTimeFormatSpecifier", function () { return new DateTimeFormatSpecifierDescription(); });
        a.ad("DateTimeFormatSpecifier", DateTimeFormatSpecifierDescriptionMetadata.a);
    };
    DateTimeFormatSpecifierDescriptionMetadata.e = function (a) {
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-core");
        a.item("__importTypesReact", "String:igniteui-react-core");
        a.item("__importTypesAngular", "String:igniteui-angular-core");
        a.item("__skipSuffix", "Boolean");
    };
    DateTimeFormatSpecifierDescriptionMetadata.$t = markType(DateTimeFormatSpecifierDescriptionMetadata, 'DateTimeFormatSpecifierDescriptionMetadata');
    DateTimeFormatSpecifierDescriptionMetadata.a = null;
    return DateTimeFormatSpecifierDescriptionMetadata;
}(Base));
export { DateTimeFormatSpecifierDescriptionMetadata };
