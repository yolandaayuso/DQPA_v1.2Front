/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolActionDescriptionMetadata } from "./ToolActionDescriptionMetadata";
import { ToolActionPopupOpeningEventArgsDescription } from "./ToolActionPopupOpeningEventArgsDescription";
/**
 * @hidden
 */
var ToolActionPopupOpeningEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionPopupOpeningEventArgsDescriptionMetadata, _super);
    function ToolActionPopupOpeningEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolActionPopupOpeningEventArgsDescriptionMetadata.b = function (a) {
        if (ToolActionPopupOpeningEventArgsDescriptionMetadata.a == null) {
            ToolActionPopupOpeningEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ToolActionPopupOpeningEventArgsDescriptionMetadata.c(ToolActionPopupOpeningEventArgsDescriptionMetadata.a);
        }
        if (a.k(ToolActionPopupOpeningEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(ToolActionPopupOpeningEventArgsDescriptionMetadata.a);
        ToolActionDescriptionMetadata.d(a);
    };
    ToolActionPopupOpeningEventArgsDescriptionMetadata.c = function (a) {
        a.item("SourceAction", "ExportedType:ToolAction");
        a.item("Cancel", "Boolean");
    };
    ToolActionPopupOpeningEventArgsDescriptionMetadata.d = function (a) {
        ToolActionPopupOpeningEventArgsDescriptionMetadata.b(a);
        a.ae("ToolActionPopupOpeningEventArgs", function () { return new ToolActionPopupOpeningEventArgsDescription(); });
        a.ad("ToolActionPopupOpeningEventArgs", ToolActionPopupOpeningEventArgsDescriptionMetadata.a);
    };
    ToolActionPopupOpeningEventArgsDescriptionMetadata.$t = markType(ToolActionPopupOpeningEventArgsDescriptionMetadata, 'ToolActionPopupOpeningEventArgsDescriptionMetadata');
    ToolActionPopupOpeningEventArgsDescriptionMetadata.a = null;
    return ToolActionPopupOpeningEventArgsDescriptionMetadata;
}(Base));
export { ToolActionPopupOpeningEventArgsDescriptionMetadata };
