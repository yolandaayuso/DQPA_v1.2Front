/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { AnnotationLayerDescriptionMetadata } from "./AnnotationLayerDescriptionMetadata";
import { ValueLayerDescription } from "./ValueLayerDescription";
/**
 * @hidden
 */
var ValueLayerDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ValueLayerDescriptionMetadata, _super);
    function ValueLayerDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ValueLayerDescriptionMetadata.b = function (a) {
        if (ValueLayerDescriptionMetadata.a == null) {
            ValueLayerDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ValueLayerDescriptionMetadata.c(ValueLayerDescriptionMetadata.a);
        }
        if (a.k(ValueLayerDescriptionMetadata.a)) {
            return;
        }
        a.ac(ValueLayerDescriptionMetadata.a);
    };
    ValueLayerDescriptionMetadata.c = function (a) {
        AnnotationLayerDescriptionMetadata.c(a);
        a.item("ValueMode", "ExportedType:string:ValueLayerValueMode");
        a.item("ValueMode@names", "Auto;Minimum;Maximum;Average;GlobalMinimum;GlobalMaximum;GlobalAverage");
        a.item("HorizontalLineStroke", "Brush");
        a.item("VerticalLineStroke", "Brush");
        a.item("TargetSeriesName", "String");
        a.item("TargetSeriesRef", "(w:TargetSeries,wf:TargetSeries)DataRef::object");
        a.item("TargetAxisName", "String");
        a.item("TargetAxisRef", "(w:TargetAxis,wf:TargetAxis)DataRef::object");
        a.item("UseInterpolation", "Boolean");
        a.item("IsAxisAnnotationEnabled", "Boolean");
        a.item("XAxisAnnotationFormatLabelRef", "(w:XAxisAnnotationFormatLabel,wf:XAxisAnnotationFormatLabel)MethodRef");
        a.item("YAxisAnnotationFormatLabelRef", "(w:YAxisAnnotationFormatLabel,wf:YAxisAnnotationFormatLabel)MethodRef");
        a.item("XAxisAnnotationTextColor", "Brush");
        a.item("XAxisAnnotationBackground", "Brush");
        a.item("XAxisAnnotationBackgroundCornerRadius", "Number:double");
        a.item("XAxisAnnotationInterpolatedValuePrecision", "Number:int");
        a.item("XAxisAnnotationOutline", "Brush");
        a.item("XAxisAnnotationPaddingLeft", "Number:double");
        a.item("XAxisAnnotationPaddingTop", "Number:double");
        a.item("XAxisAnnotationPaddingRight", "Number:double");
        a.item("XAxisAnnotationPaddingBottom", "Number:double");
        a.item("YAxisAnnotationPaddingLeft", "Number:double");
        a.item("YAxisAnnotationPaddingTop", "Number:double");
        a.item("YAxisAnnotationPaddingRight", "Number:double");
        a.item("YAxisAnnotationPaddingBottom", "Number:double");
        a.item("XAxisAnnotationStrokeThickness", "Number:double");
        a.item("YAxisAnnotationTextColor", "Brush");
        a.item("YAxisAnnotationBackground", "Brush");
        a.item("YAxisAnnotationBackgroundCornerRadius", "Number:double");
        a.item("YAxisAnnotationInterpolatedValuePrecision", "Number:int");
        a.item("YAxisAnnotationOutline", "Brush");
        a.item("YAxisAnnotationStrokeThickness", "Number:double");
        a.item("SkipUnknownValues", "Boolean");
    };
    ValueLayerDescriptionMetadata.d = function (a) {
        ValueLayerDescriptionMetadata.b(a);
        a.ae("ValueLayer", function () { return new ValueLayerDescription(); });
        a.ad("ValueLayer", ValueLayerDescriptionMetadata.a);
    };
    ValueLayerDescriptionMetadata.$t = markType(ValueLayerDescriptionMetadata, 'ValueLayerDescriptionMetadata');
    ValueLayerDescriptionMetadata.a = null;
    return ValueLayerDescriptionMetadata;
}(Base));
export { ValueLayerDescriptionMetadata };
