/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { WebMaskInputBaseDescription } from "./WebMaskInputBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var WebMaskInputDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebMaskInputDescription, _super);
    function WebMaskInputDescription() {
        var _this = _super.call(this) || this;
        _this.al = null;
        _this.ak = null;
        _this.aj = null;
        _this.ai = null;
        return _this;
    }
    WebMaskInputDescription.prototype.get_type = function () {
        return "WebMaskInput";
    };
    Object.defineProperty(WebMaskInputDescription.prototype, "valueMode", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("ValueMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebMaskInputDescription.prototype, "value", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebMaskInputDescription.prototype, "mask", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("Mask");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebMaskInputDescription.prototype, "changeRef", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("ChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    WebMaskInputDescription.$t = markType(WebMaskInputDescription, 'WebMaskInputDescription', WebMaskInputBaseDescription.$);
    return WebMaskInputDescription;
}(WebMaskInputBaseDescription));
export { WebMaskInputDescription };
