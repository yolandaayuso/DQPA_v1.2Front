/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
import { List$1 } from "./List$1";
import { RefValueChangedTarget } from "./RefValueChangedTarget";
import { DescriptionRefValueChangedEventArgs } from "./DescriptionRefValueChangedEventArgs";
/**
 * @hidden
 */
var DescriptionRef = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DescriptionRef, _super);
    function DescriptionRef(a) {
        var _this = _super.call(this) || this;
        _this.d = null;
        _this.b = null;
        _this.a = false;
        _this.d = a;
        _this.b = new List$1(RefValueChangedTarget.$, 0);
        return _this;
    }
    Object.defineProperty(DescriptionRef.prototype, "e", {
        get: function () {
            return this.d;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DescriptionRef.prototype, "c", {
        get: function () {
            return this.b.count;
        },
        enumerable: false,
        configurable: true
    });
    DescriptionRef.prototype.g = function (a, b, c, d) {
        this.b.add(((function () {
            var $ret = new RefValueChangedTarget();
            $ret.b = a;
            $ret.c = b;
            $ret.d = c;
            $ret.a = d;
            return $ret;
        })()));
    };
    DescriptionRef.prototype.j = function (a, b, c) {
        for (var d = this.b.count - 1; d >= 0; d--) {
            if (this.b._inner[d].c == b && this.b._inner[d].d == c) {
                this.b.removeAt(d);
            }
        }
    };
    DescriptionRef.prototype.l = function (a) {
        for (var b = this.b.count - 1; b >= 0; b--) {
            if (this.b._inner[b].c == a) {
                this.b.removeAt(b);
            }
        }
    };
    DescriptionRef.prototype.k = function (a) {
        for (var b = this.b.count - 1; b >= 0; b--) {
            if (this.b._inner[b].b == a) {
                this.b.removeAt(b);
            }
        }
    };
    DescriptionRef.prototype.h = function () {
        this.b.clear();
    };
    DescriptionRef.prototype.i = function (a) {
        for (var b = this.b.count - 1; b >= 0; b--) {
            if (this.b._inner[b].c == a) {
                this.b.removeAt(b);
            }
        }
    };
    DescriptionRef.prototype.f = function (a, b) {
        for (var c = 0; c < this.b.count; c++) {
            this.b._inner[c].a(this, ((function () {
                var $ret = new DescriptionRefValueChangedEventArgs();
                $ret.b = a;
                $ret.a = b;
                return $ret;
            })()));
        }
    };
    DescriptionRef.$t = markType(DescriptionRef, 'DescriptionRef');
    return DescriptionRef;
}(Base));
export { DescriptionRef };
