/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebColumnStateDescription } from "./WebColumnStateDescription";
/**
 * @hidden
 */
var WebColumnStateDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebColumnStateDescriptionMetadata, _super);
    function WebColumnStateDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebColumnStateDescriptionMetadata.b = function (a) {
        if (WebColumnStateDescriptionMetadata.a == null) {
            WebColumnStateDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebColumnStateDescriptionMetadata.c(WebColumnStateDescriptionMetadata.a);
        }
        if (a.k(WebColumnStateDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebColumnStateDescriptionMetadata.a);
    };
    WebColumnStateDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:ColumnState");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("__isTSPlainInterface", "Boolean");
        a.item("Pinned", "Boolean");
        a.item("Sortable", "Boolean");
        a.item("Filterable", "Boolean");
        a.item("Editable", "Boolean");
        a.item("SortingIgnoreCase", "Boolean");
        a.item("FilteringIgnoreCase", "Boolean");
        a.item("HeaderClasses", "String");
        a.item("HeaderGroupClasses", "String");
        a.item("MaxWidth", "String");
        a.item("Groupable", "Boolean");
        a.item("Hidden", "Boolean");
        a.item("DataType", "ExportedType:string:GridColumnDataType");
        a.item("DataType@stringUnion", "WebComponents;React");
        a.item("DataType@names", "String;Number;Boolean;Date;DateTime;Time;Currency;Percent;Image");
        a.item("HasSummary", "Boolean");
        a.item("Field", "String");
        a.item("Width", "Unknown");
        a.item("Header", "String");
        a.item("Resizable", "Boolean");
        a.item("Searchable", "Boolean");
        a.item("ColumnGroup", "Boolean");
        a.item("ColumnLayout", "Boolean");
        a.item("RowStart", "Number:double");
        a.item("RowEnd", "Number:double");
        a.item("ColStart", "Number:double");
        a.item("ColEnd", "Number:double");
        a.item("Parent", "Unknown");
        a.item("Key", "String");
        a.item("ParentKey", "String");
        a.item("DisableHiding", "Boolean");
        a.item("DisablePinning", "Boolean");
        a.item("Collapsible", "Boolean");
        a.item("Expanded", "Boolean");
        a.item("VisibleWhenCollapsed", "Boolean");
    };
    WebColumnStateDescriptionMetadata.d = function (a) {
        WebColumnStateDescriptionMetadata.b(a);
        a.ae("WebColumnState", function () { return new WebColumnStateDescription(); });
        a.ad("WebColumnState", WebColumnStateDescriptionMetadata.a);
    };
    WebColumnStateDescriptionMetadata.$t = markType(WebColumnStateDescriptionMetadata, 'WebColumnStateDescriptionMetadata');
    WebColumnStateDescriptionMetadata.a = null;
    return WebColumnStateDescriptionMetadata;
}(Base));
export { WebColumnStateDescriptionMetadata };
