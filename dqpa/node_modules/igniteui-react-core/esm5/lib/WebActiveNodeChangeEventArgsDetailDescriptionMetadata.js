/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebBaseEventArgsDetailDescriptionMetadata } from "./WebBaseEventArgsDetailDescriptionMetadata";
import { WebActiveNodeChangeEventArgsDetailDescription } from "./WebActiveNodeChangeEventArgsDetailDescription";
/**
 * @hidden
 */
var WebActiveNodeChangeEventArgsDetailDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebActiveNodeChangeEventArgsDetailDescriptionMetadata, _super);
    function WebActiveNodeChangeEventArgsDetailDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebActiveNodeChangeEventArgsDetailDescriptionMetadata.b = function (a) {
        if (WebActiveNodeChangeEventArgsDetailDescriptionMetadata.a == null) {
            WebActiveNodeChangeEventArgsDetailDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebActiveNodeChangeEventArgsDetailDescriptionMetadata.c(WebActiveNodeChangeEventArgsDetailDescriptionMetadata.a);
        }
        if (a.k(WebActiveNodeChangeEventArgsDetailDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebActiveNodeChangeEventArgsDetailDescriptionMetadata.a);
    };
    WebActiveNodeChangeEventArgsDetailDescriptionMetadata.c = function (a) {
        WebBaseEventArgsDetailDescriptionMetadata.c(a);
        a.item("__qualifiedNameTS", "String:ActiveNodeChangeEventArgsDetail");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("Row", "Number:double");
        a.item("Column", "Number:double");
        a.item("Level", "Number:double");
        a.item("Tag", "ExportedType:string:GridKeydownTargetType");
        a.item("Tag@stringUnion", "WebComponents;React");
        a.item("Tag@names", "DataCell;SummaryCell;GroupRow;HierarchicalRow;HeaderCell;MasterDetailRow");
    };
    WebActiveNodeChangeEventArgsDetailDescriptionMetadata.d = function (a) {
        WebActiveNodeChangeEventArgsDetailDescriptionMetadata.b(a);
        a.ae("WebActiveNodeChangeEventArgsDetail", function () { return new WebActiveNodeChangeEventArgsDetailDescription(); });
        a.ad("WebActiveNodeChangeEventArgsDetail", WebActiveNodeChangeEventArgsDetailDescriptionMetadata.a);
    };
    WebActiveNodeChangeEventArgsDetailDescriptionMetadata.$t = markType(WebActiveNodeChangeEventArgsDetailDescriptionMetadata, 'WebActiveNodeChangeEventArgsDetailDescriptionMetadata');
    WebActiveNodeChangeEventArgsDetailDescriptionMetadata.a = null;
    return WebActiveNodeChangeEventArgsDetailDescriptionMetadata;
}(Base));
export { WebActiveNodeChangeEventArgsDetailDescriptionMetadata };
