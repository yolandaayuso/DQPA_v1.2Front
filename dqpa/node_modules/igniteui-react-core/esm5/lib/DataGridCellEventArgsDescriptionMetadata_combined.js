/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { CellInfoDescriptionMetadata } from "./CellInfoDescriptionMetadata";
import { DataGridCellEventArgsDescription } from "./DataGridCellEventArgsDescription";
import { CellKeyDescriptionMetadata } from "./CellKeyDescriptionMetadata";
import { PrimaryKeyValueDescriptionMetadata } from "./PrimaryKeyValueDescriptionMetadata";
import { SectionHeaderDescriptionMetadata } from "./SectionHeaderDescriptionMetadata";
import { SummaryRowRootDescriptionMetadata } from "./SummaryRowRootDescriptionMetadata";
import { SummaryRowSectionDescriptionMetadata } from "./SummaryRowSectionDescriptionMetadata";
import { RowSeparatorDescriptionMetadata } from "./RowSeparatorDescriptionMetadata";
import { HeaderRowSeparatorDescriptionMetadata } from "./HeaderRowSeparatorDescriptionMetadata";
import { HeaderSeparatorDescriptionMetadata } from "./HeaderSeparatorDescriptionMetadata";
import { ColumnResizingSeparatorDescriptionMetadata } from "./ColumnResizingSeparatorDescriptionMetadata";
import { ColumnMovingSeparatorDescriptionMetadata } from "./ColumnMovingSeparatorDescriptionMetadata";
import { PinnedAreaSeparatorDescriptionMetadata } from "./PinnedAreaSeparatorDescriptionMetadata";
import { GridAnimationSettingsDescriptionMetadata } from "./GridAnimationSettingsDescriptionMetadata";
import { GridCellPositionDescriptionMetadata } from "./GridCellPositionDescriptionMetadata";
import { GridFilterExpressionsEventArgsDescriptionMetadata } from "./GridFilterExpressionsEventArgsDescriptionMetadata";
import { GridSortDescriptionsChangedEventArgsDescriptionMetadata } from "./GridSortDescriptionsChangedEventArgsDescriptionMetadata";
import { GridGroupDescriptionsChangedEventArgsDescriptionMetadata } from "./GridGroupDescriptionsChangedEventArgsDescriptionMetadata";
import { GridSummaryDescriptionsChangedEventArgsDescriptionMetadata } from "./GridSummaryDescriptionsChangedEventArgsDescriptionMetadata";
import { ColumnHiddenChangedEventArgsDescriptionMetadata } from "./ColumnHiddenChangedEventArgsDescriptionMetadata";
import { ColumnPinnedChangedEventArgsDescriptionMetadata } from "./ColumnPinnedChangedEventArgsDescriptionMetadata";
import { GridCellValueChangingEventArgsDescriptionMetadata } from "./GridCellValueChangingEventArgsDescriptionMetadata";
import { GridDataCommittedEventArgsDescriptionMetadata } from "./GridDataCommittedEventArgsDescriptionMetadata";
import { GridDataCommittingEventArgsDescriptionMetadata } from "./GridDataCommittingEventArgsDescriptionMetadata";
import { DataSourceRootSummariesChangedEventArgsDescriptionMetadata } from "./DataSourceRootSummariesChangedEventArgsDescriptionMetadata";
import { GridSizeChangedEventArgsDescriptionMetadata } from "./GridSizeChangedEventArgsDescriptionMetadata";
import { GridColumnsChangedEventArgsDescriptionMetadata } from "./GridColumnsChangedEventArgsDescriptionMetadata";
import { GridColumnsAutoGeneratedEventArgsDescriptionMetadata } from "./GridColumnsAutoGeneratedEventArgsDescriptionMetadata";
import { GridSelectedItemsChangedEventArgsDescriptionMetadata } from "./GridSelectedItemsChangedEventArgsDescriptionMetadata";
import { GridSelectedKeysChangedEventArgsDescriptionMetadata } from "./GridSelectedKeysChangedEventArgsDescriptionMetadata";
import { GridSelectedCellsChangedEventArgsDescriptionMetadata } from "./GridSelectedCellsChangedEventArgsDescriptionMetadata";
import { GridSelectionChangedEventArgsDescriptionMetadata } from "./GridSelectionChangedEventArgsDescriptionMetadata";
import { GridActiveCellChangedEventArgsDescriptionMetadata } from "./GridActiveCellChangedEventArgsDescriptionMetadata";
import { GridSelectedCellRangesChangedEventArgsDescriptionMetadata } from "./GridSelectedCellRangesChangedEventArgsDescriptionMetadata";
import { GridColumnWidthChangedEventArgsDescriptionMetadata } from "./GridColumnWidthChangedEventArgsDescriptionMetadata";
import { GridCellEditStartedEventArgsDescriptionMetadata } from "./GridCellEditStartedEventArgsDescriptionMetadata";
import { GridCellEditEndedEventArgsDescriptionMetadata } from "./GridCellEditEndedEventArgsDescriptionMetadata";
import { GridRowEditStartedEventArgsDescriptionMetadata } from "./GridRowEditStartedEventArgsDescriptionMetadata";
import { GridRowEditEndedEventArgsDescriptionMetadata } from "./GridRowEditEndedEventArgsDescriptionMetadata";
import { GridCustomFilterRequestedEventArgsDescriptionMetadata } from "./GridCustomFilterRequestedEventArgsDescriptionMetadata";
import { DataGridDescription } from "./DataGridDescription";
/**
 * @hidden
 */
var DataGridCellEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataGridCellEventArgsDescriptionMetadata, _super);
    function DataGridCellEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGridCellEventArgsDescriptionMetadata.b = function (a) {
        if (DataGridCellEventArgsDescriptionMetadata.a == null) {
            DataGridCellEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DataGridCellEventArgsDescriptionMetadata.c(DataGridCellEventArgsDescriptionMetadata.a);
        }
        if (a.k(DataGridCellEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(DataGridCellEventArgsDescriptionMetadata.a);
        CellInfoDescriptionMetadata.d(a);
        DataGridDescriptionMetadata.d(a);
    };
    DataGridCellEventArgsDescriptionMetadata.c = function (a) {
        a.item("CellInfo", "ExportedType:CellModel");
        a.item("Grid", "ExportedType:DataGrid");
        a.item("Button", "ExportedType:string:MouseButton");
        a.item("Button@names", "Left;Middle;Right;Unkown");
        a.item("IsDoubleClick", "Boolean");
    };
    DataGridCellEventArgsDescriptionMetadata.d = function (a) {
        DataGridCellEventArgsDescriptionMetadata.b(a);
        a.ae("DataGridCellEventArgs", function () { return new DataGridCellEventArgsDescription(); });
        a.ad("DataGridCellEventArgs", DataGridCellEventArgsDescriptionMetadata.a);
    };
    DataGridCellEventArgsDescriptionMetadata.$t = markType(DataGridCellEventArgsDescriptionMetadata, 'DataGridCellEventArgsDescriptionMetadata');
    DataGridCellEventArgsDescriptionMetadata.a = null;
    return DataGridCellEventArgsDescriptionMetadata;
}(Base));
export { DataGridCellEventArgsDescriptionMetadata };
/**
 * @hidden
 */
var DataGridDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataGridDescriptionMetadata, _super);
    function DataGridDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGridDescriptionMetadata.e = function (a) {
        a.item("_qualifiedName", "String:Infragistics.Controls.Grids.XamXGrid");
        a.item("Width", "(w:Width/DimensionTransform,xam:Width/DimensionTransform)String");
        a.item("Height", "(w:Height/DimensionTransform,xam:Height/DimensionTransform)String");
        a.item("Background", "(wf:BackColor/ColorTransform)Brush");
        a.item("IsGroupByAreaVisible", "Boolean");
        a.item("IsPagerVisible", "Boolean");
        a.item("IsToolbarVisible", "Boolean");
    };
    DataGridDescriptionMetadata.f = function (a) {
        CellKeyDescriptionMetadata.d(a);
        PrimaryKeyValueDescriptionMetadata.d(a);
    };
    DataGridDescriptionMetadata.b = function (a) {
        if (DataGridDescriptionMetadata.a == null) {
            DataGridDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DataGridDescriptionMetadata.c(DataGridDescriptionMetadata.a);
        }
        if (a.k(DataGridDescriptionMetadata.a)) {
            return;
        }
        a.ac(DataGridDescriptionMetadata.a);
        DataGridDescriptionMetadata.f(a);
        SectionHeaderDescriptionMetadata.d(a);
        SummaryRowRootDescriptionMetadata.d(a);
        SummaryRowSectionDescriptionMetadata.d(a);
        RowSeparatorDescriptionMetadata.d(a);
        HeaderRowSeparatorDescriptionMetadata.d(a);
        HeaderSeparatorDescriptionMetadata.d(a);
        ColumnResizingSeparatorDescriptionMetadata.d(a);
        ColumnMovingSeparatorDescriptionMetadata.d(a);
        PinnedAreaSeparatorDescriptionMetadata.d(a);
        GridAnimationSettingsDescriptionMetadata.d(a);
        GridCellPositionDescriptionMetadata.d(a);
        GridFilterExpressionsEventArgsDescriptionMetadata.d(a);
        DataGridCellEventArgsDescriptionMetadata.d(a);
        GridSortDescriptionsChangedEventArgsDescriptionMetadata.d(a);
        GridGroupDescriptionsChangedEventArgsDescriptionMetadata.d(a);
        GridSummaryDescriptionsChangedEventArgsDescriptionMetadata.d(a);
        ColumnHiddenChangedEventArgsDescriptionMetadata.d(a);
        ColumnPinnedChangedEventArgsDescriptionMetadata.d(a);
        GridCellValueChangingEventArgsDescriptionMetadata.d(a);
        GridDataCommittedEventArgsDescriptionMetadata.d(a);
        GridDataCommittingEventArgsDescriptionMetadata.d(a);
        DataSourceRootSummariesChangedEventArgsDescriptionMetadata.d(a);
        GridSizeChangedEventArgsDescriptionMetadata.d(a);
        GridColumnsChangedEventArgsDescriptionMetadata.d(a);
        GridColumnsAutoGeneratedEventArgsDescriptionMetadata.d(a);
        GridSelectedItemsChangedEventArgsDescriptionMetadata.d(a);
        GridSelectedKeysChangedEventArgsDescriptionMetadata.d(a);
        GridSelectedCellsChangedEventArgsDescriptionMetadata.d(a);
        GridSelectionChangedEventArgsDescriptionMetadata.d(a);
        GridActiveCellChangedEventArgsDescriptionMetadata.d(a);
        GridSelectedCellRangesChangedEventArgsDescriptionMetadata.d(a);
        GridColumnWidthChangedEventArgsDescriptionMetadata.d(a);
        GridCellEditStartedEventArgsDescriptionMetadata.d(a);
        GridCellEditEndedEventArgsDescriptionMetadata.d(a);
        GridRowEditStartedEventArgsDescriptionMetadata.d(a);
        GridRowEditEndedEventArgsDescriptionMetadata.d(a);
        GridCustomFilterRequestedEventArgsDescriptionMetadata.d(a);
    };
    DataGridDescriptionMetadata.c = function (a) {
        a.item("ColumnResizingMode", "ExportedType:string:ColumnResizingMode");
        a.item("ColumnResizingMode@names", "Deferred;Immediate;None");
        a.item("ColumnMovingMode", "ExportedType:string:ColumnMovingMode");
        a.item("ColumnMovingMode@names", "Deferred;None");
        a.item("IsRowHoverEnabled", "Boolean");
        a.item("RowHoverBackground", "Brush");
        a.item("RowHoverTextColor", "Brush");
        a.item("EditRowBorder", "Brush");
        a.item("EditRowBorderWidthBottom", "(w:EditRowBorderWidth.Bottom,wf:EditRowBorderWidthBottom)Number:double");
        a.item("EditRowBorderWidthLeft", "(w:EditRowBorderWidth.Left,wf:EditRowBorderWidthLeft)Number:double");
        a.item("EditRowBorderWidthRight", "(w:EditRowBorderWidth.Right,wf:EditRowBorderWidthRight)Number:double");
        a.item("EditRowBorderWidthTop", "(w:EditRowBorderWidth.Top,wf:EditRowBorderWidthTop)Number:double");
        a.item("SectionHeader", "ExportedType:SectionHeader");
        a.item("SummaryRowRoot", "ExportedType:SummaryRowRoot");
        a.item("SummaryRowSection", "ExportedType:SummaryRowSection");
        a.item("RowSeparator", "ExportedType:RowSeparator");
        a.item("HeaderRowSeparator", "ExportedType:HeaderRowSeparator");
        a.item("HeaderSeparator", "ExportedType:HeaderSeparator");
        a.item("ColumnResizingSeparator", "ExportedType:ColumnResizingSeparator");
        a.item("ColumnMovingSeparator", "ExportedType:ColumnMovingSeparator");
        a.item("PinnedAreaSeparator", "ExportedType:PinnedAreaSeparator");
        a.item("AutoGenerateDesiredProperties", "Array:string");
        a.item("DataSourceDesiredProperties", "Array:string");
        a.item("Density", "ExportedType:string:ControlDisplayDensity");
        a.item("Density@names", "Auto;Comfortable;Cosy;Compact;Minimal");
        a.item("ActualRowHeight", "Number:int");
        a.item("RowHeight", "Number:int");
        a.item("DefaultColumnMinWidth", "Number:double");
        a.item("ActualHeaderHeight", "Number:int");
        a.item("HeaderHeight", "Number:int");
        a.item("DataSourceRef", "(w:ItemsSource,xam:ItemsSource,wf:ItemsSource)DataRef::object");
        a.item("DataSource", "(w:ItemsSource,xam:ItemsSource,wf:ItemsSource)ExportedType:BaseDataSource:BaseDataSource");
        a.item("HeaderClickAction", "ExportedType:string:HeaderClickAction");
        a.item("HeaderClickAction@names", "SortByOneColumnOnly;SortByMultipleColumns;SortByOneColumnOnlyTriState;SortByMultipleColumnsTriState;None");
        a.item("EditMode", "ExportedType:string:EditModeType");
        a.item("EditMode@names", "None;Cell;CellBatch;Row");
        a.item("EditModeClickAction", "ExportedType:string:EditModeClickAction");
        a.item("EditModeClickAction@names", "None;SingleClick;DoubleClick");
        a.item("EditOnKeyPress", "Boolean");
        a.item("AutoGenerateColumns", "Boolean");
        a.item("RowSeparatorHeight", "Number:int");
        a.item("IsPlaceholderRenderingEnabled", "Boolean");
        a.item("ColumnAddingAnimationMode", "ExportedType:string:ColumnShowingAnimationMode");
        a.item("ColumnAddingAnimationMode@names", "Auto;None;SlideFromLeft;SlideFromRight;SlideFromTop;SlideFromBottom;FadeIn;SlideFromLeftAndFadeIn;SlideFromRightAndFadeIn;SlideFromTopAndFadeIn;SlideFromBottomAndFadeIn");
        a.item("ColumnPropertyUpdatingAnimationMode", "ExportedType:string:ColumnPropertyUpdatingAnimationMode");
        a.item("ColumnPropertyUpdatingAnimationMode@names", "Auto;None;Interpolate;InterpolateDeep");
        a.item("CellDataLoadedAnimationMode", "ExportedType:string:CellDataLoadedAnimationMode");
        a.item("CellDataLoadedAnimationMode@names", "Auto;None;CrossFade");
        a.item("RowSelectionAnimationMode", "ExportedType:string:RowSelectionAnimationMode");
        a.item("RowSelectionAnimationMode@names", "Auto;None;ColorBlend");
        a.item("RowHoverAnimationMode", "ExportedType:string:RowHoverAnimationMode");
        a.item("RowHoverAnimationMode@names", "Auto;None;ColorBlend");
        a.item("CellSelectionAnimationMode", "ExportedType:string:CellSelectionAnimationMode");
        a.item("CellSelectionAnimationMode@names", "Auto;None;ColorBlend");
        a.item("AnimationSettings", "ExportedType:GridAnimationSettings");
        a.item("ColumnResizingAnimationMode", "ExportedType:string:ColumnResizingAnimationMode");
        a.item("ColumnResizingAnimationMode@names", "Auto;None;Interpolate");
        a.item("ColumnShowingAnimationMode", "ExportedType:string:ColumnShowingAnimationMode");
        a.item("ColumnShowingAnimationMode@names", "Auto;None;SlideFromLeft;SlideFromRight;SlideFromTop;SlideFromBottom;FadeIn;SlideFromLeftAndFadeIn;SlideFromRightAndFadeIn;SlideFromTopAndFadeIn;SlideFromBottomAndFadeIn");
        a.item("ColumnMovingAnimationMode", "ExportedType:string:ColumnMovingAnimationMode");
        a.item("ColumnMovingAnimationMode@names", "Auto;None;SlideOver");
        a.item("ColumnHidingAnimationMode", "ExportedType:string:ColumnHidingAnimationMode");
        a.item("ColumnHidingAnimationMode@names", "Auto;None;SlideToLeft;SlideToRight;SlideToTop;SlideToBottom;FadeOut;SlideToLeftAndFadeOut;SlideToRightAndFadeOut;SlideToTopAndFadeOut;SlideToBottomAndFadeOut");
        a.item("ColumnExchangingAnimationMode", "ExportedType:string:ColumnExchangingAnimationMode");
        a.item("ColumnExchangingAnimationMode@names", "Auto;None;SlideToLeft;SlideToRight;SlideToTop;SlideToBottom;Crossfade;SlideToLeftAndCrossfade;SlideToRightAndCrossfade;SlideToTopAndCrossfade;SlideToBottomAndCrossfade");
        a.item("SelectionMode", "ExportedType:string:DataGridSelectionMode");
        a.item("SelectionMode@names", "None;SingleRow;MultipleRow;SingleCell;MultipleCell;RangeCell");
        a.item("ActivationMode", "ExportedType:string:GridActivationMode");
        a.item("ActivationMode@names", "None;Cell");
        a.item("SelectionBehavior", "ExportedType:string:GridSelectionBehavior");
        a.item("SelectionBehavior@names", "Toggle;ModifierBased");
        a.item("MouseDragSelectionEnabled", "Boolean");
        a.item("SelectedItems", "Collection:object:GridSelectedItemsCollection:Object");
        a.item("SelectedKeys", "Collection:PrimaryKeyValue:GridSelectedKeysCollection:PrimaryKeyValue");
        a.item("SelectedCells", "Collection:CellKey:GridSelectedCellsCollection:CellKey");
        a.item("SelectedCellRanges", "Collection:CellRange:GridSelectedCellRangesCollection:CellRange");
        a.item("PinnedItems", "Collection:object:GridSelectedItemsCollection:Object");
        a.item("PinnedKeys", "Collection:PrimaryKeyValue:GridSelectedKeysCollection:PrimaryKeyValue");
        a.item("IsColumnOptionsEnabled", "Boolean");
        a.item("IsGroupRowSticky", "Boolean");
        a.item("IsHeaderSeparatorVisible", "Boolean");
        a.item("CellSelectedBackground", "Brush");
        a.item("SectionHeaderSelectedBackground", "Brush");
        a.item("SummaryRootBackground", "Brush");
        a.item("SummarySectionBackground", "Brush");
        a.item("PinnedRowOpacity", "Number:double");
        a.item("EditFontFamily", "(w:EditFontFamily/FontFamilyTransform,xam:EditFontFamily,wf:EditFontFamily,web:editTextStyle/FontFamilyTransform)String");
        a.item("EditFontSize", "(w:EditFontSize,xam:EditFontSize,wf:EditFontSize,web:editTextStyle/FontSizeTransform)Number:double");
        a.item("EditFontStyle", "(w:EditFontStyle/FontStyleTransform,xam:EditFontFamily/FontStyleTransform,wf:EditFontFamily/FontStyleTransform,web:editTextStyle/FontStyleTransform)String");
        a.item("EditFontWeight", "(w:EditFontWeight/FontWeightTransform,xam:EditFontFamily/FontWeightTransform,wf:EditFontFamily/FontWeightTransform,web:editTextStyle/FontWeightTransform)String");
        a.item("EditOpacity", "Number:double");
        a.item("DeletedTextColor", "Brush");
        a.item("StickyRowBackground", "Brush");
        a.item("PinnedRowBackground", "Brush");
        a.item("LastStickyRowBackground", "Brush");
        a.item("ActiveCell", "ExportedType:GridCellPosition");
        a.item("CellBackground", "Brush");
        a.item("CellTextColor", "Brush");
        a.item("HeaderSortIndicatorColor", "Brush");
        a.item("HeaderSortIndicatorStyle", "ExportedType:string:SortIndicatorStyle");
        a.item("HeaderSortIndicatorStyle@names", "Default;FadingUpDownArrows;FadingSimpleUpDownArrows;Unset");
        a.item("CellFontFamily", "(w:CellFontFamily/FontFamilyTransform,xam:CellFontFamily,wf:CellFontFamily,web:cellTextStyle/FontFamilyTransform)String");
        a.item("CellFontSize", "(w:CellFontSize,xam:CellFontSize,wf:CellFontSize,web:cellTextStyle/FontSizeTransform)Number:double");
        a.item("CellFontStyle", "(w:CellFontStyle/FontStyleTransform,xam:CellFontFamily/FontStyleTransform,wf:CellFontFamily/FontStyleTransform,web:cellTextStyle/FontStyleTransform)String");
        a.item("CellFontWeight", "(w:CellFontWeight/FontWeightTransform,xam:CellFontFamily/FontWeightTransform,wf:CellFontFamily/FontWeightTransform,web:cellTextStyle/FontWeightTransform)String");
        a.item("SectionHeaderBackground", "Brush");
        a.item("SectionHeaderTextColor", "Brush");
        a.item("SectionHeaderFontFamily", "(w:SectionHeaderFontFamily/FontFamilyTransform,xam:SectionHeaderFontFamily,wf:SectionHeaderFontFamily,web:sectionHeaderTextStyle/FontFamilyTransform)String");
        a.item("SectionHeaderFontSize", "(w:SectionHeaderFontSize,xam:SectionHeaderFontSize,wf:SectionHeaderFontSize,web:sectionHeaderTextStyle/FontSizeTransform)Number:double");
        a.item("SectionHeaderFontStyle", "(w:SectionHeaderFontStyle/FontStyleTransform,xam:SectionHeaderFontFamily/FontStyleTransform,wf:SectionHeaderFontFamily/FontStyleTransform,web:sectionHeaderTextStyle/FontStyleTransform)String");
        a.item("SectionHeaderFontWeight", "(w:SectionHeaderFontWeight/FontWeightTransform,xam:SectionHeaderFontFamily/FontWeightTransform,wf:SectionHeaderFontFamily/FontWeightTransform,web:sectionHeaderTextStyle/FontWeightTransform)String");
        a.item("SummaryRootLabelFontFamily", "(w:SummaryRootLabelFontFamily/FontFamilyTransform,xam:SummaryRootLabelFontFamily,wf:SummaryRootLabelFontFamily,web:summaryRootLabelTextStyle/FontFamilyTransform)String");
        a.item("SummaryRootLabelFontSize", "(w:SummaryRootLabelFontSize,xam:SummaryRootLabelFontSize,wf:SummaryRootLabelFontSize,web:summaryRootLabelTextStyle/FontSizeTransform)Number:double");
        a.item("SummaryRootLabelFontStyle", "(w:SummaryRootLabelFontStyle/FontStyleTransform,xam:SummaryRootLabelFontFamily/FontStyleTransform,wf:SummaryRootLabelFontFamily/FontStyleTransform,web:summaryRootLabelTextStyle/FontStyleTransform)String");
        a.item("SummaryRootLabelFontWeight", "(w:SummaryRootLabelFontWeight/FontWeightTransform,xam:SummaryRootLabelFontFamily/FontWeightTransform,wf:SummaryRootLabelFontFamily/FontWeightTransform,web:summaryRootLabelTextStyle/FontWeightTransform)String");
        a.item("SummarySectionLabelFontFamily", "(w:SummarySectionLabelFontFamily/FontFamilyTransform,xam:SummarySectionLabelFontFamily,wf:SummarySectionLabelFontFamily,web:summarySectionLabelTextStyle/FontFamilyTransform)String");
        a.item("SummarySectionLabelFontSize", "(w:SummarySectionLabelFontSize,xam:SummarySectionLabelFontSize,wf:SummarySectionLabelFontSize,web:summarySectionLabelTextStyle/FontSizeTransform)Number:double");
        a.item("SummarySectionLabelFontStyle", "(w:SummarySectionLabelFontStyle/FontStyleTransform,xam:SummarySectionLabelFontFamily/FontStyleTransform,wf:SummarySectionLabelFontFamily/FontStyleTransform,web:summarySectionLabelTextStyle/FontStyleTransform)String");
        a.item("SummarySectionLabelFontWeight", "(w:SummarySectionLabelFontWeight/FontWeightTransform,xam:SummarySectionLabelFontFamily/FontWeightTransform,wf:SummarySectionLabelFontFamily/FontWeightTransform,web:summarySectionLabelTextStyle/FontWeightTransform)String");
        a.item("SummaryRootValueTextColor", "Brush");
        a.item("SummaryRootValueFontFamily", "(w:SummaryRootValueFontFamily/FontFamilyTransform,xam:SummaryRootValueFontFamily,wf:SummaryRootValueFontFamily,web:summaryRootValueTextStyle/FontFamilyTransform)String");
        a.item("SummaryRootValueFontSize", "(w:SummaryRootValueFontSize,xam:SummaryRootValueFontSize,wf:SummaryRootValueFontSize,web:summaryRootValueTextStyle/FontSizeTransform)Number:double");
        a.item("SummaryRootValueFontStyle", "(w:SummaryRootValueFontStyle/FontStyleTransform,xam:SummaryRootValueFontFamily/FontStyleTransform,wf:SummaryRootValueFontFamily/FontStyleTransform,web:summaryRootValueTextStyle/FontStyleTransform)String");
        a.item("SummaryRootValueFontWeight", "(w:SummaryRootValueFontWeight/FontWeightTransform,xam:SummaryRootValueFontFamily/FontWeightTransform,wf:SummaryRootValueFontFamily/FontWeightTransform,web:summaryRootValueTextStyle/FontWeightTransform)String");
        a.item("SummarySectionValueFontFamily", "(w:SummarySectionValueFontFamily/FontFamilyTransform,xam:SummarySectionValueFontFamily,wf:SummarySectionValueFontFamily,web:summarySectionValueTextStyle/FontFamilyTransform)String");
        a.item("SummarySectionValueFontSize", "(w:SummarySectionValueFontSize,xam:SummarySectionValueFontSize,wf:SummarySectionValueFontSize,web:summarySectionValueTextStyle/FontSizeTransform)Number:double");
        a.item("SummarySectionValueFontStyle", "(w:SummarySectionValueFontStyle/FontStyleTransform,xam:SummarySectionValueFontFamily/FontStyleTransform,wf:SummarySectionValueFontFamily/FontStyleTransform,web:summarySectionValueTextStyle/FontStyleTransform)String");
        a.item("SummarySectionValueFontWeight", "(w:SummarySectionValueFontWeight/FontWeightTransform,xam:SummarySectionValueFontFamily/FontWeightTransform,wf:SummarySectionValueFontFamily/FontWeightTransform,web:summarySectionValueTextStyle/FontWeightTransform)String");
        a.item("SummarySectionValueTextColor", "Brush");
        a.item("SummaryRootLabelTextColor", "Brush");
        a.item("SummarySectionLabelTextColor", "Brush");
        a.item("SummaryRootSelectedBackground", "Brush");
        a.item("SummarySectionSelectedBackground", "Brush");
        a.item("PinnedAreaSeparatorWidth", "Number:int");
        a.item("HeaderSeparatorWidth", "Number:int");
        a.item("HeaderSeparatorBackground", "Brush");
        a.item("HeaderBackground", "Brush");
        a.item("HeaderTextColor", "Brush");
        a.item("HeaderFontFamily", "(w:HeaderFontFamily/FontFamilyTransform,xam:HeaderFontFamily,wf:HeaderFontFamily,web:headerTextStyle/FontFamilyTransform)String");
        a.item("HeaderFontSize", "(w:HeaderFontSize,xam:HeaderFontSize,wf:HeaderFontSize,web:headerTextStyle/FontSizeTransform)Number:double");
        a.item("HeaderFontStyle", "(w:HeaderFontStyle/FontStyleTransform,xam:HeaderFontFamily/FontStyleTransform,wf:HeaderFontFamily/FontStyleTransform,web:headerTextStyle/FontStyleTransform)String");
        a.item("HeaderFontWeight", "(w:HeaderFontWeight/FontWeightTransform,xam:HeaderFontFamily/FontWeightTransform,wf:HeaderFontFamily/FontWeightTransform,web:headerTextStyle/FontWeightTransform)String");
        a.item("RowSeparatorBackground", "Brush");
        a.item("HeaderRowSeparatorBackground", "Brush");
        a.item("RowSeparatorStickyRowBackground", "Brush");
        a.item("RowSeparatorLastStickyRowBackground", "Brush");
        a.item("RowSeparatorPinnedRowBackground", "Brush");
        a.item("ColumnResizingSeparatorWidth", "Number:int");
        a.item("ColumnResizingSeparatorOpacity", "Number:double");
        a.item("ColumnMovingSeparatorWidth", "Number:int");
        a.item("ColumnMovingSeparatorOpacity", "Number:double");
        a.item("ColumnResizingSeparatorBackground", "Brush");
        a.item("ColumnMovingSeparatorBackground", "Brush");
        a.item("ShiftSectionContent", "Boolean");
        a.item("ColumnOptionsIconAlignment", "ExportedType:string:ColumnOptionsIconAlignment");
        a.item("ColumnOptionsIconAlignment@names", "Unset;None;Opposite");
        a.item("ColumnOptionsIconColor", "Brush");
        a.item("ColumnOptionsIconBehavior", "ExportedType:string:ColumnOptionsIconBehavior");
        a.item("ColumnOptionsIconBehavior@names", "Unset;AlwaysVisible;AppearOnHover;AppearOnHoverAnimate");
        a.item("Border", "Brush");
        a.item("BorderWidthBottom", "(w:BorderWidth.Bottom,wf:BorderWidthBottom)Number:double");
        a.item("BorderWidthLeft", "(w:BorderWidth.Left,wf:BorderWidthLeft)Number:double");
        a.item("BorderWidthRight", "(w:BorderWidth.Right,wf:BorderWidthRight)Number:double");
        a.item("BorderWidthTop", "(w:BorderWidth.Top,wf:BorderWidthTop)Number:double");
        a.item("NotifyOnAllSelectionChanges", "Boolean");
        a.item("CornerRadiusBottomRight", "(w:CornerRadius.BottomRight,wf:CornerRadiusBottomRight)Number:double");
        a.item("CornerRadiusBottomLeft", "(w:CornerRadius.BottomLeft,wf:CornerRadiusBottomLeft)Number:double");
        a.item("CornerRadiusTopLeft", "(w:CornerRadius.TopLeft,wf:CornerRadiusTopLeft)Number:double");
        a.item("CornerRadiusTopRight", "(w:CornerRadius.TopRight,wf:CornerRadiusTopRight)Number:double");
        a.item("IsActiveCellStyleEnabled", "Boolean");
        a.item("ResponsiveStates", "Collection:ResponsiveState:ResponsiveStatesCollection:ResponsiveState");
        a.item("InitialSortDescriptions", "Collection:ColumnSortDescription:ColumnSortDescriptionCollection:ColumnSortDescription");
        a.item("InitialGroupDescriptions", "Collection:ColumnGroupDescription:ColumnGroupDescriptionCollection:ColumnGroupDescription");
        a.item("InitialSummaryDescriptions", "Collection:ColumnSummaryDescription:ColumnSummaryDescriptionCollection:ColumnSummaryDescription");
        a.item("InitialSorts", "String");
        a.item("InitialGroups", "String");
        a.item("InitialSummaries", "String");
        a.item("SortDescriptions", "Collection:ColumnSortDescription:ColumnSortDescriptionCollection:ColumnSortDescription");
        a.item("GroupDescriptions", "Collection:ColumnGroupDescription:ColumnGroupDescriptionCollection:ColumnGroupDescription");
        a.item("FilterExpressions", "Collection:FilterExpression:FilterExpressionCollection:FilterExpression");
        a.item("SummaryDescriptions", "Collection:ColumnSummaryDescription:ColumnSummaryDescriptionCollection:ColumnSummaryDescription");
        a.item("SummaryScope", "ExportedType:string:SummaryScope");
        a.item("SummaryScope@names", "Both;Root;Groups;None");
        a.item("IsGroupCollapsable", "Boolean");
        a.item("GroupHeaderDisplayMode", "ExportedType:string:GroupHeaderDisplayMode");
        a.item("GroupHeaderDisplayMode@names", "Combined;Split");
        a.item("IsGroupExpandedDefault", "Boolean");
        a.item("GroupSummaryDisplayMode", "ExportedType:string:GroupSummaryDisplayMode");
        a.item("GroupSummaryDisplayMode@names", "List;Cells;RowTop;RowBottom;None");
        a.item("AutoAcceptEdits", "Boolean");
        a.item("PrimaryKey", "Array:string");
        a.item("ActualPrimaryKey", "Array:string");
        a.item("ActualColumns", "Collection:DataGridColumn:GridColumnCollection:DataGridColumn");
        a.item("Columns", "Collection:DataGridColumn:GridColumnCollection:DataGridColumn");
        a.item("ReactsToSortChanges", "Boolean");
        a.item("ReactsToGroupChanges", "Boolean");
        a.item("ReactsToFilterChanges", "Boolean");
        a.item("EnterBehavior", "ExportedType:string:EnterKeyBehaviors");
        a.item("EnterBehavior@names", "None;Edit;MoveDown;MoveRight;MoveUp;MoveLeft");
        a.item("EnterBehaviorAfterEdit", "ExportedType:string:EnterKeyBehaviorAfterEdit");
        a.item("EnterBehaviorAfterEdit@names", "None;MoveDown;MoveRight;MoveUp;MoveLeft");
        a.item("IsColumnOptionsSummariesEnabled", "Boolean");
        a.item("IsColumnOptionsGroupingEnabled", "Boolean");
        a.item("MergedCellMode", "ExportedType:string:MergedCellMode");
        a.item("MergedCellMode@names", "Default;Never;Always;OnlyWhenSorted");
        a.item("MergedCellEvaluationCriteria", "ExportedType:string:MergedCellEvaluationCriteria");
        a.item("MergedCellEvaluationCriteria@names", "Default;RawValue;FormattedText");
        a.item("MergedCellVerticalAlignment", "ExportedType:string:CellContentVerticalAlignment");
        a.item("MergedCellVerticalAlignment@names", "Top;Center;Bottom;Stretch;Auto");
        a.item("FilterUIType", "ExportedType:string:FilterUIType");
        a.item("FilterUIType@names", "ColumnOptions;FilterRow;None");
        a.item("FilterLogicalOperator", "ExportedType:string:FilterLogicalOperator");
        a.item("FilterLogicalOperator@names", "And;Or");
        a.item("FilterComparisonType", "ExportedType:string:FilterComparisonType");
        a.item("FilterComparisonType@names", "Default;CaseInsensitive;CaseSensitive");
        a.item("TodayOverride", "Date");
        a.item("ClearSelectionOnEscape", "Boolean");
        a.item("PageSize", "Number:int");
        a.item("IsToolbarColumnChooserVisible", "Boolean");
        a.item("IsToolbarColumnPinningVisible", "Boolean");
        a.item("ToolbarTitle", "String");
        a.item("ToolbarColumnChooserText", "String");
        a.item("ToolbarColumnChooserTitle", "String");
        a.item("ToolbarColumnPinningText", "String");
        a.item("ToolbarColumnPinningTitle", "String");
        a.item("ScrollbarStyle", "ExportedType:string:ScrollbarStyle");
        a.item("ScrollbarStyle@names", "Default;Fading;Thin");
        a.item("ScrollbarBackground", "Brush");
        a.item("AllowCopyOperation", "Boolean");
        a.item("DeferEventForRowDragSelection", "Boolean");
        a.item("FilterExpressionsChangingRef", "EventRef::filterExpressionsChanging");
        a.item("FilterExpressionsChangedRef", "EventRef::filterExpressionsChanged");
        a.item("CellPreviewPointerDownRef", "EventRef::cellPreviewPointerDown");
        a.item("CellPreviewPointerUpRef", "EventRef::cellPreviewPointerUp");
        a.item("CellPointerDownRef", "EventRef::cellPointerDown");
        a.item("CellPointerUpRef", "EventRef::cellPointerUp");
        a.item("CellClickedRef", "EventRef::cellClicked");
        a.item("SortDescriptionsChangedRef", "EventRef::sortDescriptionsChanged");
        a.item("GroupDescriptionsChangedRef", "EventRef::groupDescriptionsChanged");
        a.item("SummaryDescriptionsChangedRef", "EventRef::summaryDescriptionsChanged");
        a.item("ColumnHiddenChangedRef", "EventRef::columnHiddenChanged");
        a.item("ColumnPinnedChangedRef", "EventRef::columnPinnedChanged");
        a.item("CellValueChangingRef", "EventRef::cellValueChanging");
        a.item("DataCommittedRef", "EventRef::dataCommitted");
        a.item("DataCommittingRef", "EventRef::dataCommitting");
        a.item("RootSummariesChangedRef", "EventRef::rootSummariesChanged");
        a.item("SizeChangedRef", "EventRef::sizeChanged");
        a.item("ActualColumnsChangedRef", "EventRef::actualColumnsChanged");
        a.item("ColumnsAutoGeneratedRef", "EventRef::columnsAutoGenerated");
        a.item("SelectedItemsChangedRef", "EventRef::selectedItemsChanged");
        a.item("SelectedKeysChangedRef", "EventRef::selectedKeysChanged");
        a.item("SelectedCellsChangedRef", "EventRef::selectedCellsChanged");
        a.item("SelectionChangedRef", "EventRef::selectionChanged");
        a.item("ActiveCellChangedRef", "EventRef::activeCellChanged");
        a.item("SelectedCellRangesChangedRef", "EventRef::selectedCellRangesChanged");
        a.item("ColumnWidthChangedRef", "EventRef::columnWidthChanged");
        a.item("CellEditStartedRef", "EventRef::cellEditStarted");
        a.item("CellEditEndedRef", "EventRef::cellEditEnded");
        a.item("RowEditStartedRef", "EventRef::rowEditStarted");
        a.item("RowEditEndedRef", "EventRef::rowEditEnded");
        a.item("CustomFilterRequestedRef", "EventRef::customFilterRequested");
        a.item("ActualPrimaryKeyChangeRef", "EventRef::actualPrimaryKeyChange");
        DataGridDescriptionMetadata.e(a);
    };
    DataGridDescriptionMetadata.d = function (a) {
        DataGridDescriptionMetadata.b(a);
        a.ae("DataGrid", function () { return new DataGridDescription(); });
        a.ad("DataGrid", DataGridDescriptionMetadata.a);
    };
    DataGridDescriptionMetadata.$t = markType(DataGridDescriptionMetadata, 'DataGridDescriptionMetadata');
    DataGridDescriptionMetadata.a = null;
    return DataGridDescriptionMetadata;
}(Base));
export { DataGridDescriptionMetadata };
