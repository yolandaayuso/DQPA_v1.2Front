/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DataSourceAggregatedResultDescriptionMetadata } from "./DataSourceAggregatedResultDescriptionMetadata";
import { GridDataCommittingEventArgsDescription } from "./GridDataCommittingEventArgsDescription";
/**
 * @hidden
 */
var GridDataCommittingEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridDataCommittingEventArgsDescriptionMetadata, _super);
    function GridDataCommittingEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridDataCommittingEventArgsDescriptionMetadata.b = function (a) {
        if (GridDataCommittingEventArgsDescriptionMetadata.a == null) {
            GridDataCommittingEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridDataCommittingEventArgsDescriptionMetadata.c(GridDataCommittingEventArgsDescriptionMetadata.a);
        }
        if (a.k(GridDataCommittingEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(GridDataCommittingEventArgsDescriptionMetadata.a);
        DataSourceAggregatedResultDescriptionMetadata.d(a);
    };
    GridDataCommittingEventArgsDescriptionMetadata.c = function (a) {
        a.item("Changes", "Array:DataSourceAggregatedResultDescription:DataSourceAggregatedResult");
        a.item("CommitID", "Number:int");
    };
    GridDataCommittingEventArgsDescriptionMetadata.d = function (a) {
        GridDataCommittingEventArgsDescriptionMetadata.b(a);
        a.ae("GridDataCommittingEventArgs", function () { return new GridDataCommittingEventArgsDescription(); });
        a.ad("GridDataCommittingEventArgs", GridDataCommittingEventArgsDescriptionMetadata.a);
    };
    GridDataCommittingEventArgsDescriptionMetadata.$t = markType(GridDataCommittingEventArgsDescriptionMetadata, 'GridDataCommittingEventArgsDescriptionMetadata');
    GridDataCommittingEventArgsDescriptionMetadata.a = null;
    return GridDataCommittingEventArgsDescriptionMetadata;
}(Base));
export { GridDataCommittingEventArgsDescriptionMetadata };
