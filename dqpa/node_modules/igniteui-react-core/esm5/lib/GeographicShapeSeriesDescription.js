/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { GeographicShapeSeriesBaseDescription } from "./GeographicShapeSeriesBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var GeographicShapeSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GeographicShapeSeriesDescription, _super);
    function GeographicShapeSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.gf = null;
        _this.gd = null;
        _this.ge = null;
        _this.fz = 0;
        _this.fy = 0;
        _this.gc = null;
        _this.ga = null;
        _this.f8 = null;
        _this.gb = null;
        _this.f6 = null;
        _this.f9 = null;
        _this.fx = 0;
        _this.f7 = null;
        _this.f5 = null;
        _this.f3 = null;
        _this.f4 = null;
        _this.gg = null;
        return _this;
    }
    GeographicShapeSeriesDescription.prototype.get_type = function () {
        return "GeographicShapeSeries";
    };
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "shapeStyleSelectorRef", {
        get: function () {
            return this.gf;
        },
        set: function (a) {
            this.gf = a;
            this.g("ShapeStyleSelectorRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "shapeFill", {
        get: function () {
            return this.gd;
        },
        set: function (a) {
            this.gd = a;
            this.g("ShapeFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "shapeStroke", {
        get: function () {
            return this.ge;
        },
        set: function (a) {
            this.ge = a;
            this.g("ShapeStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "shapeStrokeThickness", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.g("ShapeStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "shapeOpacity", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            this.fy = a;
            this.g("ShapeOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "markerType", {
        get: function () {
            return this.gc;
        },
        set: function (a) {
            this.gc = a;
            this.g("MarkerType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "markerOutlineMode", {
        get: function () {
            return this.ga;
        },
        set: function (a) {
            this.ga = a;
            this.g("MarkerOutlineMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "markerFillMode", {
        get: function () {
            return this.f8;
        },
        set: function (a) {
            this.f8 = a;
            this.g("MarkerFillMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "markerTemplateRef", {
        get: function () {
            return this.gb;
        },
        set: function (a) {
            this.gb = a;
            this.g("MarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "markerBrush", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.g("MarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "markerOutline", {
        get: function () {
            return this.f9;
        },
        set: function (a) {
            this.f9 = a;
            this.g("MarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "markerThickness", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.g("MarkerThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.g("MarkerCollisionAvoidance");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "actualMarkerTemplateRef", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.g("ActualMarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "actualMarkerBrush", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.g("ActualMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "actualMarkerOutline", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.g("ActualMarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicShapeSeriesDescription.prototype, "styleShapeRef", {
        get: function () {
            return this.gg;
        },
        set: function (a) {
            this.gg = a;
            this.g("StyleShapeRef");
        },
        enumerable: false,
        configurable: true
    });
    GeographicShapeSeriesDescription.$t = markType(GeographicShapeSeriesDescription, 'GeographicShapeSeriesDescription', GeographicShapeSeriesBaseDescription.$);
    return GeographicShapeSeriesDescription;
}(GeographicShapeSeriesBaseDescription));
export { GeographicShapeSeriesDescription };
