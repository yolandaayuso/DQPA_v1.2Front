/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
import { GridConditionalStylePropertyDescriptionModule } from "./GridConditionalStylePropertyDescriptionModule";
import { GridConditionalStyleDescriptionModule } from "./GridConditionalStyleDescriptionModule";
import { NumericColumnDescriptionModule } from "./NumericColumnDescriptionModule";
import { DateTimeColumnDescriptionModule } from "./DateTimeColumnDescriptionModule";
import { ImageColumnDescriptionModule } from "./ImageColumnDescriptionModule";
import { TemplateColumnDescriptionModule } from "./TemplateColumnDescriptionModule";
import { TemplateContentDescriptionModule } from "./TemplateContentDescriptionModule";
import { TextColumnDescriptionModule } from "./TextColumnDescriptionModule";
import { TemplateHeaderDescriptionModule } from "./TemplateHeaderDescriptionModule";
import { ComboBoxColumnDescriptionModule } from "./ComboBoxColumnDescriptionModule";
import { DataGridCoreDescriptionModule } from "./DataGridCoreDescriptionModule";
/**
 * @hidden
 */
var DataGridAllColumnsDescriptionModule = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataGridAllColumnsDescriptionModule, _super);
    function DataGridAllColumnsDescriptionModule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGridAllColumnsDescriptionModule.register = function (a) {
        GridConditionalStylePropertyDescriptionModule.register(a);
        GridConditionalStyleDescriptionModule.register(a);
        NumericColumnDescriptionModule.register(a);
        DateTimeColumnDescriptionModule.register(a);
        ImageColumnDescriptionModule.register(a);
        TemplateColumnDescriptionModule.register(a);
        TemplateContentDescriptionModule.register(a);
        TextColumnDescriptionModule.register(a);
        TemplateHeaderDescriptionModule.register(a);
        ComboBoxColumnDescriptionModule.register(a);
        DataGridCoreDescriptionModule.register(a);
    };
    DataGridAllColumnsDescriptionModule.$t = markType(DataGridAllColumnsDescriptionModule, 'DataGridAllColumnsDescriptionModule');
    return DataGridAllColumnsDescriptionModule;
}(Base));
export { DataGridAllColumnsDescriptionModule };
