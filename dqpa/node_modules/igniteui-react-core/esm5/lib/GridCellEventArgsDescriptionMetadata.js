/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { CellInfoDescriptionMetadata } from "./CellInfoDescriptionMetadata";
import { DataGridDescriptionMetadata } from "./DataGridDescriptionMetadata";
import { GridCellEventArgsDescription } from "./GridCellEventArgsDescription";
/**
 * @hidden
 */
var GridCellEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridCellEventArgsDescriptionMetadata, _super);
    function GridCellEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridCellEventArgsDescriptionMetadata.b = function (a) {
        if (GridCellEventArgsDescriptionMetadata.a == null) {
            GridCellEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridCellEventArgsDescriptionMetadata.c(GridCellEventArgsDescriptionMetadata.a);
        }
        if (a.k(GridCellEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(GridCellEventArgsDescriptionMetadata.a);
        CellInfoDescriptionMetadata.d(a);
        DataGridDescriptionMetadata.d(a);
    };
    GridCellEventArgsDescriptionMetadata.c = function (a) {
        a.item("CellInfo", "ExportedType:CellModel");
        a.item("Grid", "ExportedType:Grid");
        a.item("Button", "ExportedType:string:MouseButton");
        a.item("Button@names", "Left;Middle;Right;Unkown");
        a.item("IsDoubleClick", "Boolean");
    };
    GridCellEventArgsDescriptionMetadata.d = function (a) {
        GridCellEventArgsDescriptionMetadata.b(a);
        a.ae("GridCellEventArgs", function () { return new GridCellEventArgsDescription(); });
        a.ad("GridCellEventArgs", GridCellEventArgsDescriptionMetadata.a);
    };
    GridCellEventArgsDescriptionMetadata.$t = markType(GridCellEventArgsDescriptionMetadata, 'GridCellEventArgsDescriptionMetadata');
    GridCellEventArgsDescriptionMetadata.a = null;
    return GridCellEventArgsDescriptionMetadata;
}(Base));
export { GridCellEventArgsDescriptionMetadata };
