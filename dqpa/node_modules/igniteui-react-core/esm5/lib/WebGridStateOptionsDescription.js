/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var WebGridStateOptionsDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebGridStateOptionsDescription, _super);
    function WebGridStateOptionsDescription() {
        var _this = _super.call(this) || this;
        _this.j = false;
        _this.m = false;
        _this.h = false;
        _this.v = false;
        _this.n = false;
        _this.p = false;
        _this.i = false;
        _this.u = false;
        _this.k = false;
        _this.t = false;
        _this.q = false;
        _this.l = false;
        _this.s = false;
        _this.o = false;
        _this.r = false;
        return _this;
    }
    WebGridStateOptionsDescription.prototype.get_type = function () {
        return "WebGridStateOptions";
    };
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "columns", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("Columns");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "filtering", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("Filtering");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "advancedFiltering", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("AdvancedFiltering");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "sorting", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("Sorting");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "groupBy", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("GroupBy");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "paging", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("Paging");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "cellSelection", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("CellSelection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "rowSelection", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("RowSelection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "columnSelection", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("ColumnSelection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "rowPinning", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("RowPinning");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "pinningConfig", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("PinningConfig");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "expansion", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("Expansion");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "rowIslands", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("RowIslands");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "moving", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("Moving");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebGridStateOptionsDescription.prototype, "pivotConfiguration", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("PivotConfiguration");
        },
        enumerable: false,
        configurable: true
    });
    WebGridStateOptionsDescription.$t = markType(WebGridStateOptionsDescription, 'WebGridStateOptionsDescription', Description.$);
    return WebGridStateOptionsDescription;
}(Description));
export { WebGridStateOptionsDescription };
