/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebDividerDescription } from "./WebDividerDescription";
/**
 * @hidden
 */
var WebDividerDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebDividerDescriptionMetadata, _super);
    function WebDividerDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebDividerDescriptionMetadata.b = function (a) {
        if (WebDividerDescriptionMetadata.a == null) {
            WebDividerDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebDividerDescriptionMetadata.c(WebDividerDescriptionMetadata.a);
        }
        if (a.k(WebDividerDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebDividerDescriptionMetadata.a);
    };
    WebDividerDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:Divider");
        a.item("__tagNameWC", "String:igc-divider");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("Vertical", "Boolean");
        a.item("Middle", "Boolean");
        a.item("LineType", "(wc:Type)ExportedType:string:DividerType");
        a.item("LineType@stringUnion", "WebComponents;React");
        a.item("LineType@names", "Solid;Dashed");
    };
    WebDividerDescriptionMetadata.d = function (a) {
        WebDividerDescriptionMetadata.b(a);
        a.ae("WebDivider", function () { return new WebDividerDescription(); });
        a.ad("WebDivider", WebDividerDescriptionMetadata.a);
    };
    WebDividerDescriptionMetadata.$t = markType(WebDividerDescriptionMetadata, 'WebDividerDescriptionMetadata');
    WebDividerDescriptionMetadata.a = null;
    return WebDividerDescriptionMetadata;
}(Base));
export { WebDividerDescriptionMetadata };
