/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var CalendarDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CalendarDescription, _super);
    function CalendarDescription() {
        var _this = _super.call(this) || this;
        _this.o = new Date();
        _this.n = new Date();
        _this.m = new Date();
        _this.l = new Date();
        _this.z = null;
        _this.w = null;
        _this.v = null;
        _this.ai = null;
        _this.ak = null;
        _this.ac = null;
        _this.ah = null;
        _this.am = null;
        _this.aj = null;
        _this.ad = null;
        _this.y = null;
        _this.x = null;
        _this.h = false;
        _this.ae = null;
        _this.t = 0;
        _this.af = null;
        _this.ag = null;
        _this.aa = null;
        _this.ab = null;
        _this.i = false;
        _this.al = null;
        _this.an = null;
        return _this;
    }
    CalendarDescription.prototype.get_type = function () {
        return "Calendar";
    };
    Object.defineProperty(CalendarDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "value", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "today", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("Today");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "minDate", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("MinDate");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "maxDate", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("MaxDate");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "density", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "baseTheme", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "backgroundColor", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "selectedDateBackgroundColor", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("SelectedDateBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "selectedFocusDateBackgroundColor", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("SelectedFocusDateBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "focusDateBackgroundColor", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("FocusDateBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "hoverBackgroundColor", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("HoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "textColor", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "selectedDateTextColor", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("SelectedDateTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "focusDateTextColor", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("FocusDateTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "currentDateTextColor", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("CurrentDateTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "currentDateBorderColor", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("CurrentDateBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "showTodayButton", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ShowTodayButton");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "fontFamily", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "fontSize", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "fontStyle", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "fontWeight", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "firstDayOfWeek", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("FirstDayOfWeek");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "firstWeekOfYear", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("FirstWeekOfYear");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "showWeekNumbers", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ShowWeekNumbers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "selectedValueChangedRef", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("SelectedValueChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalendarDescription.prototype, "valueChangeRef", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("ValueChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    CalendarDescription.$t = markType(CalendarDescription, 'CalendarDescription', Description.$);
    return CalendarDescription;
}(Description));
export { CalendarDescription };
