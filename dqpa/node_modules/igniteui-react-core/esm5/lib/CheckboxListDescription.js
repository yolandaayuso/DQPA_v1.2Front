/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var CheckboxListDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CheckboxListDescription, _super);
    function CheckboxListDescription() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.i = null;
        _this.ak = null;
        _this.aj = null;
        _this.a6 = null;
        _this.am = null;
        _this.az = null;
        _this.v = 0;
        _this.aa = null;
        _this.r = 0;
        _this.ab = null;
        _this.ac = null;
        _this.an = null;
        _this.z = null;
        _this.al = null;
        _this.ay = null;
        _this.at = null;
        _this.a0 = null;
        _this.au = null;
        _this.av = null;
        _this.s = 0;
        _this.aw = null;
        _this.ax = null;
        _this.af = null;
        _this.ad = null;
        _this.ag = null;
        _this.ae = null;
        _this.ah = null;
        _this.as = null;
        _this.ar = null;
        _this.a1 = null;
        _this.a2 = null;
        _this.x = null;
        _this.n = false;
        _this.y = null;
        _this.aq = null;
        _this.a7 = null;
        _this.m = false;
        _this.l = false;
        _this.a4 = null;
        _this.a5 = null;
        _this.ai = null;
        _this.ao = null;
        _this.ap = null;
        _this.a3 = null;
        return _this;
    }
    CheckboxListDescription.prototype.get_type = function () {
        return "CheckboxList";
    };
    Object.defineProperty(CheckboxListDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "keys", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Keys");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "primaryKey", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("PrimaryKey");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("DataSourceRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "dataMemberPath", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("DataMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectedMemberPath", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("SelectedMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "filterPlaceholderText", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("FilterPlaceholderText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchInputType", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("SearchInputType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "rowHeight", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("RowHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "cellFontFamily", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("CellFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "cellFontSize", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("CellFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "cellFontStyle", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("CellFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "cellFontWeight", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("CellFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "indexType", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("IndexType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "baseTheme", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "density", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchIconColor", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("SearchIconColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchBackgroundColor", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("SearchBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchTextColor", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("SearchTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchBorderColor", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("SearchBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchFontFamily", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("SearchFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchFontSize", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("SearchFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchFontStyle", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("SearchFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "searchFontWeight", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("SearchFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "checkboxTickColor", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("CheckboxTickColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "checkboxCheckedBackgroundColor", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("CheckboxCheckedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "checkboxUncheckedBackgroundColor", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("CheckboxUncheckedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "checkboxCheckedBorderColor", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("CheckboxCheckedBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "checkboxUncheckedBorderColor", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("CheckboxUncheckedBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "scrollbarStyle", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("ScrollbarStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "scrollbarBackground", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("ScrollbarBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectAllCaption", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("SelectAllCaption");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectAllCaptionTextColor", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("SelectAllCaptionTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "actualSelectAllCaptionTextColor", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("ActualSelectAllCaptionTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "showSelectAll", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("ShowSelectAll");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "backgroundColor", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "rowHoverBackgroundColor", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("RowHoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "textColor", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "showFilter", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("ShowFilter");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "isRowHoverEnabled", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("IsRowHoverEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectedKeyAddedRef", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("SelectedKeyAddedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectedKeyRemovedRef", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("SelectedKeyRemovedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "checkedChangedRef", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("CheckedChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "indexTypeChangedRef", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("IndexTypeChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "keysClearedRef", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("KeysClearedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CheckboxListDescription.prototype, "selectAllCheckboxChangedRef", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("SelectAllCheckboxChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    CheckboxListDescription.$t = markType(CheckboxListDescription, 'CheckboxListDescription', Description.$);
    return CheckboxListDescription;
}(Description));
export { CheckboxListDescription };
