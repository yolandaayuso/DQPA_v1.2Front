/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { GeographicMarkerSeriesDescription } from "./GeographicMarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var GeographicSymbolSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GeographicSymbolSeriesDescription, _super);
    function GeographicSymbolSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.f2 = null;
        _this.f3 = null;
        _this.f4 = null;
        _this.fu = false;
        _this.ft = false;
        _this.f1 = null;
        _this.fx = 0;
        _this.f0 = null;
        _this.fz = null;
        return _this;
    }
    GeographicSymbolSeriesDescription.prototype.get_type = function () {
        return "GeographicSymbolSeries";
    };
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "latitudeMemberPath", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            this.f2 = a;
            this.g("LatitudeMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "longitudeMemberPath", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.g("LongitudeMemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.g("MarkerCollisionAvoidance");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "isCustomScatterStyleAllowed", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.g("IsCustomScatterStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "isCustomScatterMarkerStyleAllowed", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.g("IsCustomScatterMarkerStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "itemSearchMode", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.g("ItemSearchMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "itemSearchThreshold", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.g("ItemSearchThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "assigningScatterStyleRef", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            this.f0 = a;
            this.g("AssigningScatterStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GeographicSymbolSeriesDescription.prototype, "assigningScatterMarkerStyleRef", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.g("AssigningScatterMarkerStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    GeographicSymbolSeriesDescription.$t = markType(GeographicSymbolSeriesDescription, 'GeographicSymbolSeriesDescription', GeographicMarkerSeriesDescription.$);
    return GeographicSymbolSeriesDescription;
}(GeographicMarkerSeriesDescription));
export { GeographicSymbolSeriesDescription };
