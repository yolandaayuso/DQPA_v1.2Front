/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
/**
 * @hidden
 */
var WebBaseOptionLikeDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebBaseOptionLikeDescriptionMetadata, _super);
    function WebBaseOptionLikeDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebBaseOptionLikeDescriptionMetadata.b = function (a) {
        if (WebBaseOptionLikeDescriptionMetadata.a == null) {
            WebBaseOptionLikeDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebBaseOptionLikeDescriptionMetadata.c(WebBaseOptionLikeDescriptionMetadata.a);
        }
        if (a.k(WebBaseOptionLikeDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebBaseOptionLikeDescriptionMetadata.a);
    };
    WebBaseOptionLikeDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:BaseOptionLike");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("Active", "Boolean");
        a.item("Disabled", "Boolean");
        a.item("Selected", "Boolean");
        a.item("Value", "String");
    };
    WebBaseOptionLikeDescriptionMetadata.d = function (a) {
        WebBaseOptionLikeDescriptionMetadata.b(a);
        a.ad("WebBaseOptionLike", WebBaseOptionLikeDescriptionMetadata.a);
    };
    WebBaseOptionLikeDescriptionMetadata.$t = markType(WebBaseOptionLikeDescriptionMetadata, 'WebBaseOptionLikeDescriptionMetadata');
    WebBaseOptionLikeDescriptionMetadata.a = null;
    return WebBaseOptionLikeDescriptionMetadata;
}(Base));
export { WebBaseOptionLikeDescriptionMetadata };
