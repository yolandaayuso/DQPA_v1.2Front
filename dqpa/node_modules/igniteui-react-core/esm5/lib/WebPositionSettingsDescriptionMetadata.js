/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebSizeDescriptionMetadata } from "./WebSizeDescriptionMetadata";
import { WebPositionSettingsDescription } from "./WebPositionSettingsDescription";
/**
 * @hidden
 */
var WebPositionSettingsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebPositionSettingsDescriptionMetadata, _super);
    function WebPositionSettingsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebPositionSettingsDescriptionMetadata.b = function (a) {
        if (WebPositionSettingsDescriptionMetadata.a == null) {
            WebPositionSettingsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebPositionSettingsDescriptionMetadata.c(WebPositionSettingsDescriptionMetadata.a);
        }
        if (a.k(WebPositionSettingsDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebPositionSettingsDescriptionMetadata.a);
        WebSizeDescriptionMetadata.d(a);
    };
    WebPositionSettingsDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:PositionSettings");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("HorizontalDirection", "ExportedType:string:GridHorizontalAlignment");
        a.item("HorizontalDirection@names", "Left;Center;Right");
        a.item("VerticalDirection", "ExportedType:string:GridVerticalAlignment");
        a.item("VerticalDirection@names", "Top;Middle;Bottom");
        a.item("HorizontalStartPoint", "ExportedType:string:GridHorizontalAlignment");
        a.item("HorizontalStartPoint@names", "Left;Center;Right");
        a.item("VerticalStartPoint", "ExportedType:string:GridVerticalAlignment");
        a.item("VerticalStartPoint@names", "Top;Middle;Bottom");
        a.item("MinSize", "ExportedType:WebSize");
    };
    WebPositionSettingsDescriptionMetadata.d = function (a) {
        WebPositionSettingsDescriptionMetadata.b(a);
        a.ae("WebPositionSettings", function () { return new WebPositionSettingsDescription(); });
        a.ad("WebPositionSettings", WebPositionSettingsDescriptionMetadata.a);
    };
    WebPositionSettingsDescriptionMetadata.$t = markType(WebPositionSettingsDescriptionMetadata, 'WebPositionSettingsDescriptionMetadata');
    WebPositionSettingsDescriptionMetadata.a = null;
    return WebPositionSettingsDescriptionMetadata;
}(Base));
export { WebPositionSettingsDescriptionMetadata };
