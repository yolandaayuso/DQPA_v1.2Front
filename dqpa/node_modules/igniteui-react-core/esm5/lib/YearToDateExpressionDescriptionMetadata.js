/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WrapperExpressionDescriptionMetadata } from "./WrapperExpressionDescriptionMetadata";
import { YearToDateExpressionDescription } from "./YearToDateExpressionDescription";
/**
 * @hidden
 */
var YearToDateExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(YearToDateExpressionDescriptionMetadata, _super);
    function YearToDateExpressionDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    YearToDateExpressionDescriptionMetadata.b = function (a) {
        if (YearToDateExpressionDescriptionMetadata.a == null) {
            YearToDateExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            YearToDateExpressionDescriptionMetadata.c(YearToDateExpressionDescriptionMetadata.a);
        }
        if (a.k(YearToDateExpressionDescriptionMetadata.a)) {
            return;
        }
        a.ac(YearToDateExpressionDescriptionMetadata.a);
    };
    YearToDateExpressionDescriptionMetadata.c = function (a) {
        WrapperExpressionDescriptionMetadata.c(a);
    };
    YearToDateExpressionDescriptionMetadata.d = function (a) {
        YearToDateExpressionDescriptionMetadata.b(a);
        a.ae("YearToDateExpression", function () { return new YearToDateExpressionDescription(); });
        a.ad("YearToDateExpression", YearToDateExpressionDescriptionMetadata.a);
    };
    YearToDateExpressionDescriptionMetadata.$t = markType(YearToDateExpressionDescriptionMetadata, 'YearToDateExpressionDescriptionMetadata');
    YearToDateExpressionDescriptionMetadata.a = null;
    return YearToDateExpressionDescriptionMetadata;
}(Base));
export { YearToDateExpressionDescriptionMetadata };
