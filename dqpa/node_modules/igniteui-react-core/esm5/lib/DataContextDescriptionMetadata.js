/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DataContextDescription } from "./DataContextDescription";
/**
 * @hidden
 */
var DataContextDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataContextDescriptionMetadata, _super);
    function DataContextDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataContextDescriptionMetadata.b = function (a) {
        if (DataContextDescriptionMetadata.a == null) {
            DataContextDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DataContextDescriptionMetadata.c(DataContextDescriptionMetadata.a);
        }
        if (a.k(DataContextDescriptionMetadata.a)) {
            return;
        }
        a.ac(DataContextDescriptionMetadata.a);
    };
    DataContextDescriptionMetadata.c = function (a) {
        a.item("__marshalByValue", "Boolean");
        a.item("ItemRef", "(w:Item,wf:Item)DataRef");
        a.item("ActualItemBrush", "Brush");
        a.item("Outline", "Brush");
        a.item("ItemLabelRef", "(w:ItemLabel,wf:ItemLabel)DataRef");
        a.item("ItemBrush", "Brush");
        a.item("Thickness", "Number:double");
        a.item("LegendLabelRef", "(w:LegendLabel,wf:LegendLabel)DataRef");
    };
    DataContextDescriptionMetadata.d = function (a) {
        DataContextDescriptionMetadata.b(a);
        a.ae("DataContext", function () { return new DataContextDescription(); });
        a.ad("DataContext", DataContextDescriptionMetadata.a);
    };
    DataContextDescriptionMetadata.$t = markType(DataContextDescriptionMetadata, 'DataContextDescriptionMetadata');
    DataContextDescriptionMetadata.a = null;
    return DataContextDescriptionMetadata;
}(Base));
export { DataContextDescriptionMetadata };
