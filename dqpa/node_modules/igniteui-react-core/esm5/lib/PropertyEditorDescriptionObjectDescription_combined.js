/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var PropertyEditorDescriptionObjectDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PropertyEditorDescriptionObjectDescription, _super);
    function PropertyEditorDescriptionObjectDescription() {
        var _this = _super.call(this) || this;
        _this.j = null;
        _this.h = null;
        return _this;
    }
    PropertyEditorDescriptionObjectDescription.prototype.get_type = function () {
        return "PropertyEditorDescriptionObject";
    };
    Object.defineProperty(PropertyEditorDescriptionObjectDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorDescriptionObjectDescription.prototype, "descriptionType", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("DescriptionType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorDescriptionObjectDescription.prototype, "properties", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Properties");
        },
        enumerable: false,
        configurable: true
    });
    PropertyEditorDescriptionObjectDescription.$t = markType(PropertyEditorDescriptionObjectDescription, 'PropertyEditorDescriptionObjectDescription', Description.$);
    return PropertyEditorDescriptionObjectDescription;
}(Description));
export { PropertyEditorDescriptionObjectDescription };
/**
 * @hidden
 */
var PropertyEditorPropertyDescriptionDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PropertyEditorPropertyDescriptionDescription, _super);
    function PropertyEditorPropertyDescriptionDescription() {
        var _this = _super.call(this) || this;
        _this.au = null;
        _this.as = null;
        _this.av = null;
        _this.ax = null;
        _this.ap = null;
        _this.at = null;
        _this.v = false;
        _this.ar = null;
        _this.j = null;
        _this.k = null;
        _this.ak = null;
        _this.aj = null;
        _this.ac = 0;
        _this.z = 0;
        _this.aa = 0;
        _this.ab = 0;
        _this.ad = 0;
        _this.s = null;
        _this.r = null;
        _this.i = null;
        _this.h = null;
        _this.w = false;
        _this.l = null;
        _this.an = null;
        _this.ao = null;
        _this.aw = null;
        _this.aq = null;
        return _this;
    }
    PropertyEditorPropertyDescriptionDescription.prototype.get_type = function () {
        return "PropertyEditorPropertyDescription";
    };
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "propertyPath", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("PropertyPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "label", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("Label");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "subtitle", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("Subtitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "valueType", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("ValueType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "coercedValueType", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("CoercedValueType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "propertyDescriptionType", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("PropertyDescriptionType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "shouldOverrideDefaultEditor", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("ShouldOverrideDefaultEditor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "elementDescriptionType", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("ElementDescriptionType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "dropDownNames", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("DropDownNames");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "dropDownValues", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("DropDownValues");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "primitiveValue", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("PrimitiveValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "coercedPrimitiveValue", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("CoercedPrimitiveValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "min", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("Min");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "editorWidth", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("EditorWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "labelWidth", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("LabelWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "max", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("Max");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "step", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("Step");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "complexValue", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("ComplexValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "coercedComplexValue", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("CoercedComplexValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "complexValues", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ComplexValues");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "coercedComplexValues", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("CoercedComplexValues");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "useCoercedValue", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("UseCoercedValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "properties", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("Properties");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "buttonClickedRef", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("ButtonClickedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "changedRef", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("ChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "targetPropertyUpdatingRef", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("TargetPropertyUpdatingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PropertyEditorPropertyDescriptionDescription.prototype, "coercingValueRef", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("CoercingValueRef");
        },
        enumerable: false,
        configurable: true
    });
    PropertyEditorPropertyDescriptionDescription.$t = markType(PropertyEditorPropertyDescriptionDescription, 'PropertyEditorPropertyDescriptionDescription', Description.$);
    return PropertyEditorPropertyDescriptionDescription;
}(Description));
export { PropertyEditorPropertyDescriptionDescription };
