/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebBaseExporterDescriptionMetadata } from "./WebBaseExporterDescriptionMetadata";
import { WebExporterOptionsBaseDescriptionMetadata } from "./WebExporterOptionsBaseDescriptionMetadata";
import { WebGridBaseDirectiveDescriptionMetadata } from "./WebGridBaseDirectiveDescriptionMetadata";
import { WebExporterEventArgsDetailDescription } from "./WebExporterEventArgsDetailDescription";
/**
 * @hidden
 */
var WebExporterEventArgsDetailDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebExporterEventArgsDetailDescriptionMetadata, _super);
    function WebExporterEventArgsDetailDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebExporterEventArgsDetailDescriptionMetadata.b = function (a) {
        if (WebExporterEventArgsDetailDescriptionMetadata.a == null) {
            WebExporterEventArgsDetailDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebExporterEventArgsDetailDescriptionMetadata.c(WebExporterEventArgsDetailDescriptionMetadata.a);
        }
        if (a.k(WebExporterEventArgsDetailDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebExporterEventArgsDetailDescriptionMetadata.a);
        WebBaseExporterDescriptionMetadata.d(a);
        WebExporterOptionsBaseDescriptionMetadata.d(a);
        WebGridBaseDirectiveDescriptionMetadata.d(a);
    };
    WebExporterEventArgsDetailDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:ExporterEventArgsDetail");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("Exporter", "ExportedType:WebBaseExporter");
        a.item("Options", "ExportedType:WebExporterOptionsBase");
        a.item("Grid", "ExportedType:WebGridBaseDirective");
        a.item("Cancel", "Boolean");
    };
    WebExporterEventArgsDetailDescriptionMetadata.d = function (a) {
        WebExporterEventArgsDetailDescriptionMetadata.b(a);
        a.ae("WebExporterEventArgsDetail", function () { return new WebExporterEventArgsDetailDescription(); });
        a.ad("WebExporterEventArgsDetail", WebExporterEventArgsDetailDescriptionMetadata.a);
    };
    WebExporterEventArgsDetailDescriptionMetadata.$t = markType(WebExporterEventArgsDetailDescriptionMetadata, 'WebExporterEventArgsDetailDescriptionMetadata');
    WebExporterEventArgsDetailDescriptionMetadata.a = null;
    return WebExporterEventArgsDetailDescriptionMetadata;
}(Base));
export { WebExporterEventArgsDetailDescriptionMetadata };
