/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SeriesMatcherDescription } from "./SeriesMatcherDescription";
/**
 * @hidden
 */
var SeriesMatcherDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SeriesMatcherDescriptionMetadata, _super);
    function SeriesMatcherDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SeriesMatcherDescriptionMetadata.b = function (a) {
        if (SeriesMatcherDescriptionMetadata.a == null) {
            SeriesMatcherDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            SeriesMatcherDescriptionMetadata.c(SeriesMatcherDescriptionMetadata.a);
        }
        if (a.k(SeriesMatcherDescriptionMetadata.a)) {
            return;
        }
        a.ac(SeriesMatcherDescriptionMetadata.a);
    };
    SeriesMatcherDescriptionMetadata.c = function (a) {
        a.item("__marshalByValue", "Boolean");
        a.item("Name", "String");
        a.item("Title", "String");
        a.item("Index", "Number:int");
        a.item("MemberPathType", "String");
        a.item("MemberPath", "String");
    };
    SeriesMatcherDescriptionMetadata.d = function (a) {
        SeriesMatcherDescriptionMetadata.b(a);
        a.ae("SeriesMatcher", function () { return new SeriesMatcherDescription(); });
        a.ad("SeriesMatcher", SeriesMatcherDescriptionMetadata.a);
    };
    SeriesMatcherDescriptionMetadata.$t = markType(SeriesMatcherDescriptionMetadata, 'SeriesMatcherDescriptionMetadata');
    SeriesMatcherDescriptionMetadata.a = null;
    return SeriesMatcherDescriptionMetadata;
}(Base));
export { SeriesMatcherDescriptionMetadata };
