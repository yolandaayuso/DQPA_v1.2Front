/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ChartSortDescriptionDescription } from "./ChartSortDescriptionDescription";
/**
 * @hidden
 */
var ChartSortDescriptionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ChartSortDescriptionDescriptionMetadata, _super);
    function ChartSortDescriptionDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChartSortDescriptionDescriptionMetadata.b = function (a) {
        if (ChartSortDescriptionDescriptionMetadata.a == null) {
            ChartSortDescriptionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ChartSortDescriptionDescriptionMetadata.c(ChartSortDescriptionDescriptionMetadata.a);
        }
        if (a.k(ChartSortDescriptionDescriptionMetadata.a)) {
            return;
        }
        a.ac(ChartSortDescriptionDescriptionMetadata.a);
    };
    ChartSortDescriptionDescriptionMetadata.c = function (a) {
        a.item("__marshalByValue", "Boolean");
        a.item("Field", "String");
        a.item("SortDirection", "ExportedType:string:ListSortDirection");
        a.item("SortDirection@names", "Ascending;Descending");
    };
    ChartSortDescriptionDescriptionMetadata.d = function (a) {
        ChartSortDescriptionDescriptionMetadata.b(a);
        a.ae("ChartSortDescription", function () { return new ChartSortDescriptionDescription(); });
        a.ad("ChartSortDescription", ChartSortDescriptionDescriptionMetadata.a);
    };
    ChartSortDescriptionDescriptionMetadata.$t = markType(ChartSortDescriptionDescriptionMetadata, 'ChartSortDescriptionDescriptionMetadata');
    ChartSortDescriptionDescriptionMetadata.a = null;
    return ChartSortDescriptionDescriptionMetadata;
}(Base));
export { ChartSortDescriptionDescriptionMetadata };
