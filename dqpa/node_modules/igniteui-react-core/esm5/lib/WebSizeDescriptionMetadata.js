/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebSizeDescription } from "./WebSizeDescription";
/**
 * @hidden
 */
var WebSizeDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebSizeDescriptionMetadata, _super);
    function WebSizeDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebSizeDescriptionMetadata.b = function (a) {
        if (WebSizeDescriptionMetadata.a == null) {
            WebSizeDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebSizeDescriptionMetadata.c(WebSizeDescriptionMetadata.a);
        }
        if (a.k(WebSizeDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebSizeDescriptionMetadata.a);
    };
    WebSizeDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:Size");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("Width", "Number:double");
        a.item("Height", "Number:double");
    };
    WebSizeDescriptionMetadata.d = function (a) {
        WebSizeDescriptionMetadata.b(a);
        a.ae("WebSize", function () { return new WebSizeDescription(); });
        a.ad("WebSize", WebSizeDescriptionMetadata.a);
    };
    WebSizeDescriptionMetadata.$t = markType(WebSizeDescriptionMetadata, 'WebSizeDescriptionMetadata');
    WebSizeDescriptionMetadata.a = null;
    return WebSizeDescriptionMetadata;
}(Base));
export { WebSizeDescriptionMetadata };
