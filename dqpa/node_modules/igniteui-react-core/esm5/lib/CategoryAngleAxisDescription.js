/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { CategoryAxisBaseDescription } from "./CategoryAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CategoryAngleAxisDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryAngleAxisDescription, _super);
    function CategoryAngleAxisDescription() {
        var _this = _super.call(this) || this;
        _this.d7 = 0;
        _this.ee = null;
        _this.d5 = 0;
        _this.d3 = 0;
        _this.d6 = 0;
        _this.d4 = 0;
        _this.ed = null;
        return _this;
    }
    CategoryAngleAxisDescription.prototype.get_type = function () {
        return "CategoryAngleAxis";
    };
    Object.defineProperty(CategoryAngleAxisDescription.prototype, "startAngleOffset", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.g("StartAngleOffset");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryAngleAxisDescription.prototype, "labelMode", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.g("LabelMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryAngleAxisDescription.prototype, "interval", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.g("Interval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryAngleAxisDescription.prototype, "actualInterval", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.g("ActualInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryAngleAxisDescription.prototype, "minorInterval", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.g("MinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryAngleAxisDescription.prototype, "actualMinorInterval", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.g("ActualMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryAngleAxisDescription.prototype, "actualIntervalChangeRef", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.g("ActualIntervalChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    CategoryAngleAxisDescription.$t = markType(CategoryAngleAxisDescription, 'CategoryAngleAxisDescription', CategoryAxisBaseDescription.$);
    return CategoryAngleAxisDescription;
}(CategoryAxisBaseDescription));
export { CategoryAngleAxisDescription };
