/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolActionDescriptionMetadata } from "./ToolActionDescriptionMetadata";
import { ToolActionCheckboxListDescription } from "./ToolActionCheckboxListDescription";
/**
 * @hidden
 */
var ToolActionCheckboxListDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionCheckboxListDescriptionMetadata, _super);
    function ToolActionCheckboxListDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolActionCheckboxListDescriptionMetadata.b = function (a) {
        if (ToolActionCheckboxListDescriptionMetadata.a == null) {
            ToolActionCheckboxListDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ToolActionCheckboxListDescriptionMetadata.c(ToolActionCheckboxListDescriptionMetadata.a);
        }
        if (a.k(ToolActionCheckboxListDescriptionMetadata.a)) {
            return;
        }
        a.ac(ToolActionCheckboxListDescriptionMetadata.a);
    };
    ToolActionCheckboxListDescriptionMetadata.c = function (a) {
        ToolActionDescriptionMetadata.c(a);
        a.item("DataSourceRef", "(w:ItemsSource,xam:ItemsSource,wf:ItemsSource)DataRef::object");
        a.item("SelectedMemberPath", "String");
        a.item("ShowSelectAll", "Boolean");
        a.item("DataMemberPath", "String");
        a.item("PrimaryKey", "Array:string");
        a.item("SelectedKeys", "Collection:LayoutPrimaryKeyValue:LayoutSelectedKeysCollection:LayoutPrimaryKeyValue");
        a.item("IndexType", "ExportedType:string:ToolActionCheckboxListIndexType");
        a.item("IndexType@names", "Selected;DeSelected");
    };
    ToolActionCheckboxListDescriptionMetadata.d = function (a) {
        ToolActionCheckboxListDescriptionMetadata.b(a);
        a.ae("ToolActionCheckboxList", function () { return new ToolActionCheckboxListDescription(); });
        a.ad("ToolActionCheckboxList", ToolActionCheckboxListDescriptionMetadata.a);
    };
    ToolActionCheckboxListDescriptionMetadata.$t = markType(ToolActionCheckboxListDescriptionMetadata, 'ToolActionCheckboxListDescriptionMetadata');
    ToolActionCheckboxListDescriptionMetadata.a = null;
    return ToolActionCheckboxListDescriptionMetadata;
}(Base));
export { ToolActionCheckboxListDescriptionMetadata };
