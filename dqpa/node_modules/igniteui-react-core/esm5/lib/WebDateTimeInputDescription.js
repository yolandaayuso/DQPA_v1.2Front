/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { WebMaskInputBaseDescription } from "./WebMaskInputBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var WebDateTimeInputDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebDateTimeInputDescription, _super);
    function WebDateTimeInputDescription() {
        var _this = _super.call(this) || this;
        _this.au = null;
        _this.ao = new Date();
        _this.an = new Date();
        _this.am = new Date();
        _this.at = null;
        _this.ai = null;
        _this.ak = false;
        _this.av = null;
        _this.as = null;
        return _this;
    }
    WebDateTimeInputDescription.prototype.get_type = function () {
        return "WebDateTimeInput";
    };
    Object.defineProperty(WebDateTimeInputDescription.prototype, "inputFormat", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("InputFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDateTimeInputDescription.prototype, "value", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDateTimeInputDescription.prototype, "min", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("Min");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDateTimeInputDescription.prototype, "max", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("Max");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDateTimeInputDescription.prototype, "displayFormat", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("DisplayFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDateTimeInputDescription.prototype, "spinDelta", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("SpinDelta");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDateTimeInputDescription.prototype, "spinLoop", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("SpinLoop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDateTimeInputDescription.prototype, "locale", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("Locale");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDateTimeInputDescription.prototype, "changeRef", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("ChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    WebDateTimeInputDescription.$t = markType(WebDateTimeInputDescription, 'WebDateTimeInputDescription', WebMaskInputBaseDescription.$);
    return WebDateTimeInputDescription;
}(WebMaskInputBaseDescription));
export { WebDateTimeInputDescription };
