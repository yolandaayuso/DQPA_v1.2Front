/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { NativeUIElementBridge } from "./NativeUIElementBridge";
import { List$1 } from "./List$1";
import { NativeUIComponent } from "./NativeUIComponent";
import { markType } from "./type";
/**
 * @hidden
 */
var PanelBridge = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PanelBridge, _super);
    function PanelBridge() {
        var _this = _super.call(this) || this;
        _this.t = null;
        _this.t = new List$1(NativeUIComponent.$, 0);
        return _this;
    }
    PanelBridge.prototype.v = function (a, b) {
        this.t.add(b);
        a.append(b.an);
    };
    PanelBridge.prototype.w = function (a, b, c) {
        this.t.insert(b, c);
        if (this.t.count - 1 >= (b + 1)) {
            this.t._inner[b + 1].an.before(c.an);
        }
        else {
            a.append(c.an);
        }
    };
    PanelBridge.prototype.s = function (a, b) {
        return this.t._inner[b];
    };
    PanelBridge.prototype.u = function (a) {
        return a.getChildCount();
    };
    PanelBridge.prototype.x = function (a, b) {
        this.t.remove(b);
        a.removeChild(b.an);
    };
    PanelBridge.prototype.y = function (a, b) {
        this.t.removeAt(b);
        a.getChildAt(b).remove();
    };
    PanelBridge.$t = markType(PanelBridge, 'PanelBridge', NativeUIElementBridge.$);
    return PanelBridge;
}(NativeUIElementBridge));
export { PanelBridge };
