/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { PropertyUpdatedEventArgsDescriptionMetadata } from "./PropertyUpdatedEventArgsDescriptionMetadata";
import { MultiSliderThumbDescription } from "./MultiSliderThumbDescription";
import { MultiSliderTrackThumbRangeDescription } from "./MultiSliderTrackThumbRangeDescription";
/**
 * @hidden
 */
var MultiSliderThumbDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MultiSliderThumbDescriptionMetadata, _super);
    function MultiSliderThumbDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MultiSliderThumbDescriptionMetadata.b = function (a) {
        if (MultiSliderThumbDescriptionMetadata.a == null) {
            MultiSliderThumbDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            MultiSliderThumbDescriptionMetadata.c(MultiSliderThumbDescriptionMetadata.a);
        }
        if (a.k(MultiSliderThumbDescriptionMetadata.a)) {
            return;
        }
        a.ac(MultiSliderThumbDescriptionMetadata.a);
        MultiSliderTrackThumbRangeDescriptionMetadata.d(a);
        PropertyUpdatedEventArgsDescriptionMetadata.d(a);
    };
    MultiSliderThumbDescriptionMetadata.c = function (a) {
        a.item("Value", "Number:double");
        a.item("RangePosition", "ExportedType:string:MultiSliderThumbRangePosition");
        a.item("RangePosition@names", "PinnedLower;PinnedHigher");
        a.item("Range", "ExportedType:MultiSliderTrackThumbRange");
        a.item("PropertyUpdatedRef", "EventRef::propertyUpdated");
    };
    MultiSliderThumbDescriptionMetadata.d = function (a) {
        MultiSliderThumbDescriptionMetadata.b(a);
        a.ae("MultiSliderThumb", function () { return new MultiSliderThumbDescription(); });
        a.ad("MultiSliderThumb", MultiSliderThumbDescriptionMetadata.a);
    };
    MultiSliderThumbDescriptionMetadata.$t = markType(MultiSliderThumbDescriptionMetadata, 'MultiSliderThumbDescriptionMetadata');
    MultiSliderThumbDescriptionMetadata.a = null;
    return MultiSliderThumbDescriptionMetadata;
}(Base));
export { MultiSliderThumbDescriptionMetadata };
/**
 * @hidden
 */
var MultiSliderTrackThumbRangeDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MultiSliderTrackThumbRangeDescriptionMetadata, _super);
    function MultiSliderTrackThumbRangeDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MultiSliderTrackThumbRangeDescriptionMetadata.b = function (a) {
        if (MultiSliderTrackThumbRangeDescriptionMetadata.a == null) {
            MultiSliderTrackThumbRangeDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            MultiSliderTrackThumbRangeDescriptionMetadata.c(MultiSliderTrackThumbRangeDescriptionMetadata.a);
        }
        if (a.k(MultiSliderTrackThumbRangeDescriptionMetadata.a)) {
            return;
        }
        a.ac(MultiSliderTrackThumbRangeDescriptionMetadata.a);
        MultiSliderThumbDescriptionMetadata.d(a);
    };
    MultiSliderTrackThumbRangeDescriptionMetadata.c = function (a) {
        a.item("Position", "Number:double");
        a.item("Width", "Number:double");
        a.item("MinWidth", "Number:double");
        a.item("MaxWidth", "Number:double");
        a.item("LowerThumb", "ExportedType:MultiSliderThumb");
        a.item("HigherThumb", "ExportedType:MultiSliderThumb");
    };
    MultiSliderTrackThumbRangeDescriptionMetadata.d = function (a) {
        MultiSliderTrackThumbRangeDescriptionMetadata.b(a);
        a.ae("MultiSliderTrackThumbRange", function () { return new MultiSliderTrackThumbRangeDescription(); });
        a.ad("MultiSliderTrackThumbRange", MultiSliderTrackThumbRangeDescriptionMetadata.a);
    };
    MultiSliderTrackThumbRangeDescriptionMetadata.$t = markType(MultiSliderTrackThumbRangeDescriptionMetadata, 'MultiSliderTrackThumbRangeDescriptionMetadata');
    MultiSliderTrackThumbRangeDescriptionMetadata.a = null;
    return MultiSliderTrackThumbRangeDescriptionMetadata;
}(Base));
export { MultiSliderTrackThumbRangeDescriptionMetadata };
