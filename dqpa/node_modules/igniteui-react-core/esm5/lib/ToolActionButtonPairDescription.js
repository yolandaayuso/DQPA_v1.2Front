/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ToolActionDescription } from "./ToolActionDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolActionButtonPairDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionButtonPairDescription, _super);
    function ToolActionButtonPairDescription() {
        var _this = _super.call(this) || this;
        _this.dz = false;
        _this.d1 = false;
        _this.dy = false;
        _this.d0 = false;
        _this.e1 = null;
        _this.ey = null;
        _this.dx = false;
        _this.ez = null;
        _this.ea = 0;
        _this.eb = 0;
        _this.ec = 0;
        _this.d9 = 0;
        _this.e0 = null;
        _this.et = null;
        _this.dp = null;
        _this.e2 = null;
        _this.eu = null;
        _this.dq = null;
        _this.d8 = 0;
        _this.e3 = null;
        _this.e7 = null;
        _this.e4 = null;
        _this.e5 = null;
        _this.ef = 0;
        _this.eg = 0;
        _this.eh = 0;
        _this.ee = 0;
        _this.e6 = null;
        _this.ev = null;
        _this.dr = null;
        _this.e8 = null;
        _this.ew = null;
        _this.ds = null;
        _this.ed = 0;
        _this.e9 = null;
        _this.ex = null;
        _this.d7 = 0;
        return _this;
    }
    ToolActionButtonPairDescription.prototype.get_type = function () {
        return "ToolActionButtonPair";
    };
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIsSelected", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.g("LeftIsSelected");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIsSelected", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            this.d1 = a;
            this.g("RightIsSelected");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIsDisabled", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.g("LeftIsDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIsDisabled", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.g("RightIsDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconName", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            this.e1 = a;
            this.g("LeftIconName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftCommandArgument", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            this.ey = a;
            this.g("LeftCommandArgument");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "isToggleDisabled", {
        get: function () {
            return this.dx;
        },
        set: function (a) {
            this.dx = a;
            this.g("IsToggleDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconCollectionName", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.g("LeftIconCollectionName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconViewBoxLeft", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.g("LeftIconViewBoxLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconViewBoxTop", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.g("LeftIconViewBoxTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconViewBoxWidth", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            this.ec = a;
            this.g("LeftIconViewBoxWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconViewBoxHeight", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.g("LeftIconViewBoxHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconFill", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.g("LeftIconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "actualLeftIconFill", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.g("ActualLeftIconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconFillColors", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.g("LeftIconFillColors");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconStroke", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            this.e2 = a;
            this.g("LeftIconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "actualLeftIconStroke", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.g("ActualLeftIconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconStrokeColors", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.g("LeftIconStrokeColors");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftIconStrokeWidth", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.g("LeftIconStrokeWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "leftTitle", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.g("LeftTitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconName", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.g("RightIconName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightCommandArgument", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            this.e4 = a;
            this.g("RightCommandArgument");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconCollectionName", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.g("RightIconCollectionName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconViewBoxLeft", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.g("RightIconViewBoxLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconViewBoxTop", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.g("RightIconViewBoxTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconViewBoxWidth", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.g("RightIconViewBoxWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconViewBoxHeight", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.g("RightIconViewBoxHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconFill", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            this.e6 = a;
            this.g("RightIconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "actualRightIconFill", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.g("ActualRightIconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconFillColors", {
        get: function () {
            return this.dr;
        },
        set: function (a) {
            this.dr = a;
            this.g("RightIconFillColors");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconStroke", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.g("RightIconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "actualRightIconStroke", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.g("ActualRightIconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconStrokeColors", {
        get: function () {
            return this.ds;
        },
        set: function (a) {
            this.ds = a;
            this.g("RightIconStrokeColors");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightIconStrokeWidth", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.g("RightIconStrokeWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "rightTitle", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.g("RightTitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "displayType", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.g("DisplayType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionButtonPairDescription.prototype, "cornerRadius", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.g("CornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    ToolActionButtonPairDescription.$t = markType(ToolActionButtonPairDescription, 'ToolActionButtonPairDescription', ToolActionDescription.$);
    return ToolActionButtonPairDescription;
}(ToolActionDescription));
export { ToolActionButtonPairDescription };
