/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var MultiSliderDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MultiSliderDescription, _super);
    function MultiSliderDescription() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.t = 0;
        _this.s = 0;
        _this.x = 0;
        _this.ae = 0;
        _this.af = 0;
        _this.ag = 0;
        _this.u = 0;
        _this.n = 0;
        _this.j = null;
        _this.aj = 0;
        _this.w = 0;
        _this.r = 0;
        _this.ad = 0;
        _this.ac = 0;
        _this.ai = 0;
        _this.ah = 0;
        _this.o = 0;
        _this.bc = null;
        _this.bh = null;
        _this.aa = 0;
        _this.bl = null;
        _this.ab = 0;
        _this.z = 0;
        _this.a7 = null;
        _this.a8 = null;
        _this.p = 0;
        _this.bd = null;
        _this.be = null;
        _this.v = 0;
        _this.bf = null;
        _this.bm = null;
        _this.a9 = null;
        _this.bb = null;
        _this.ba = null;
        _this.q = 0;
        _this.l = false;
        _this.bi = null;
        _this.y = 0;
        _this.bj = null;
        _this.bk = null;
        _this.bg = null;
        _this.bo = null;
        _this.bn = null;
        _this.bq = null;
        _this.bp = null;
        return _this;
    }
    MultiSliderDescription.prototype.get_type = function () {
        return "MultiSlider";
    };
    Object.defineProperty(MultiSliderDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbs", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Thumbs");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "min", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("Min");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "max", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("Max");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "step", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("Step");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "yMax", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("YMax");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "yMin", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("YMin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "yStep", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("YStep");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "pixelScalingRatio", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("PixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "actualPixelScalingRatio", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("ActualPixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "windowRect", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("WindowRect");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "yValue", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("YValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "startInset", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("StartInset");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "endInset", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("EndInset");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "trackStartInset", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("TrackStartInset");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "trackEndInset", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("TrackEndInset");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "yTrackStartInset", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("YTrackStartInset");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "yTrackEndInset", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("YTrackEndInset");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "barExtent", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("BarExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "orientation", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("Orientation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbBrush", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("ThumbBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbStrokeThickness", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("ThumbStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbOutline", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("ThumbOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbWidth", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("ThumbWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbHeight", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("ThumbHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "barBrush", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("BarBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "barOutline", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("BarOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "barStrokeThickness", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("BarStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "rangeThumbBrush", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("RangeThumbBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "rangeThumbOutline", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("RangeThumbOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "rangeThumbStrokeThickness", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("RangeThumbStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "rangeThumbRidgesBrush", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("RangeThumbRidgesBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbRidgesBrush", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("ThumbRidgesBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "calloutBrush", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("CalloutBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "calloutTextColor", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("CalloutTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "calloutOutline", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("CalloutOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "calloutStrokeThickness", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("CalloutStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "areThumbCalloutsEnabled", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("AreThumbCalloutsEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbCalloutFontFamily", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("ThumbCalloutFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbCalloutFontSize", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("ThumbCalloutFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbCalloutFontStyle", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("ThumbCalloutFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbCalloutFontWeight", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("ThumbCalloutFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "resolvingToolTipValueRef", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("ResolvingToolTipValueRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbValueChangingRef", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("ThumbValueChangingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "thumbValueChangedRef", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("ThumbValueChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "yValueChangingRef", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("YValueChangingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderDescription.prototype, "yValueChangedRef", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("YValueChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    MultiSliderDescription.$t = markType(MultiSliderDescription, 'MultiSliderDescription', Description.$);
    return MultiSliderDescription;
}(Description));
export { MultiSliderDescription };
