/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FilterOperandDescription } from "./FilterOperandDescription";
import { DataGridColumnDescriptionMetadata } from "./DataGridColumnDescriptionMetadata";
import { FilterExpressionDescriptionMetadata } from "./FilterExpressionDescriptionMetadata";
import { GridCustomFilterRequestedEventArgsDescription } from "./GridCustomFilterRequestedEventArgsDescription";
/**
 * @hidden
 */
var FilterOperandDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterOperandDescriptionMetadata, _super);
    function FilterOperandDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilterOperandDescriptionMetadata.b = function (a) {
        if (FilterOperandDescriptionMetadata.a == null) {
            FilterOperandDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            FilterOperandDescriptionMetadata.c(FilterOperandDescriptionMetadata.a);
        }
        if (a.k(FilterOperandDescriptionMetadata.a)) {
            return;
        }
        a.ac(FilterOperandDescriptionMetadata.a);
        GridCustomFilterRequestedEventArgsDescriptionMetadata.d(a);
    };
    FilterOperandDescriptionMetadata.c = function (a) {
        a.item("__marshalByValue", "Boolean");
        a.item("ID", "String");
        a.item("DisplayName", "String");
        a.item("Icon", "String");
        a.item("IsInputRequired", "Boolean");
        a.item("EditorType", "ExportedType:string:EditorType");
        a.item("EditorType@names", "Default;Text;Numeric;Date;Combo");
        a.item("FilterRequestedRef", "EventRef::filterRequested");
    };
    FilterOperandDescriptionMetadata.d = function (a) {
        FilterOperandDescriptionMetadata.b(a);
        a.ae("FilterOperand", function () { return new FilterOperandDescription(); });
        a.ad("FilterOperand", FilterOperandDescriptionMetadata.a);
    };
    FilterOperandDescriptionMetadata.$t = markType(FilterOperandDescriptionMetadata, 'FilterOperandDescriptionMetadata');
    FilterOperandDescriptionMetadata.a = null;
    return FilterOperandDescriptionMetadata;
}(Base));
export { FilterOperandDescriptionMetadata };
/**
 * @hidden
 */
var GridCustomFilterRequestedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridCustomFilterRequestedEventArgsDescriptionMetadata, _super);
    function GridCustomFilterRequestedEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridCustomFilterRequestedEventArgsDescriptionMetadata.b = function (a) {
        if (GridCustomFilterRequestedEventArgsDescriptionMetadata.a == null) {
            GridCustomFilterRequestedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridCustomFilterRequestedEventArgsDescriptionMetadata.c(GridCustomFilterRequestedEventArgsDescriptionMetadata.a);
        }
        if (a.k(GridCustomFilterRequestedEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(GridCustomFilterRequestedEventArgsDescriptionMetadata.a);
        DataGridColumnDescriptionMetadata.d(a);
        FilterOperandDescriptionMetadata.d(a);
        FilterExpressionDescriptionMetadata.d(a);
    };
    GridCustomFilterRequestedEventArgsDescriptionMetadata.c = function (a) {
        a.item("Column", "ExportedType:DataGridColumn");
        a.item("Filter", "ExportedType:FilterOperand");
        a.item("ValueRef", "(w:Value,wf:Value)DataRef");
        a.item("Expression", "ExportedType:IFilterExpression");
    };
    GridCustomFilterRequestedEventArgsDescriptionMetadata.d = function (a) {
        GridCustomFilterRequestedEventArgsDescriptionMetadata.b(a);
        a.ae("GridCustomFilterRequestedEventArgs", function () { return new GridCustomFilterRequestedEventArgsDescription(); });
        a.ad("GridCustomFilterRequestedEventArgs", GridCustomFilterRequestedEventArgsDescriptionMetadata.a);
    };
    GridCustomFilterRequestedEventArgsDescriptionMetadata.$t = markType(GridCustomFilterRequestedEventArgsDescriptionMetadata, 'GridCustomFilterRequestedEventArgsDescriptionMetadata');
    GridCustomFilterRequestedEventArgsDescriptionMetadata.a = null;
    return GridCustomFilterRequestedEventArgsDescriptionMetadata;
}(Base));
export { GridCustomFilterRequestedEventArgsDescriptionMetadata };
