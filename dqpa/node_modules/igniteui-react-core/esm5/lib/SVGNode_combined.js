/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
import { List$1 } from "./List$1";
import { BrushUtil } from "./BrushUtil";
import { isNaN_ } from "./number";
/**
 * @hidden
 */
var SVGNode = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SVGNode, _super);
    function SVGNode(a) {
        var _this = _super.call(this) || this;
        _this.c = 0;
        _this.g = null;
        _this.h = null;
        _this.f = null;
        _this.b = null;
        _this.e = null;
        _this.e = new List$1(SVGNode.$, 0);
        _this.b = a;
        return _this;
    }
    SVGNode.prototype.a = function (a) {
        return null;
    };
    SVGNode.prototype.d = function () {
        return this.c == 4 || this.c == 3 || this.c == 5 || this.c == 6 || this.c == 7 || this.c == 1 || this.c == 2;
    };
    SVGNode.$t = markType(SVGNode, 'SVGNode');
    return SVGNode;
}(Base));
export { SVGNode };
/**
 * @hidden
 */
var SVGPresentationNode = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SVGPresentationNode, _super);
    function SVGPresentationNode(a) {
        var _this = _super.call(this, a) || this;
        _this.j = null;
        _this.k = null;
        _this.t = 0;
        _this.r = 0;
        _this.v = 0;
        _this.u = 0;
        _this.q = 0;
        _this.i = null;
        _this.o = NaN;
        _this.n = NaN;
        _this.t = 1;
        _this.r = 4;
        _this.q = 1;
        _this.l = ((function () {
            var $ret = new SVGBrush();
            $ret.b = 1;
            $ret.c = _this;
            $ret.a = 0;
            return $ret;
        })());
        _this.m = ((function () {
            var $ret = new SVGBrush();
            $ret.b = 1;
            $ret.c = _this;
            $ret.a = 1;
            return $ret;
        })());
        return _this;
    }
    Object.defineProperty(SVGPresentationNode.prototype, "l", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            if (this.j != null) {
                this.j.c = this;
                this.j.a = 0;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SVGPresentationNode.prototype, "m", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            if (this.k != null) {
                this.k.c = this;
                this.k.a = 1;
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SVGPresentationNode.prototype, "s", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SVGPresentationNode.prototype, "p", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
        },
        enumerable: false,
        configurable: true
    });
    SVGPresentationNode.prototype.a = function (a) {
        if (this.b == null) {
            return null;
        }
        var b = this.b;
        while (b != null) {
            if (b.d()) {
                var c = b;
                if (a == 0 && c.l != null) {
                    switch (c.l.b) {
                        case 0:
                        case 2: return c.l;
                    }
                }
                else if (a == 1 && c.m != null) {
                    switch (c.m.b) {
                        case 0:
                        case 2: return c.m;
                    }
                }
            }
            b = b.b;
        }
        return _super.prototype.a.call(this, a);
    };
    SVGPresentationNode.$t = markType(SVGPresentationNode, 'SVGPresentationNode', SVGNode.$);
    return SVGPresentationNode;
}(SVGNode));
export { SVGPresentationNode };
/**
 * @hidden
 */
var SVGBrush = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SVGBrush, _super);
    function SVGBrush() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.e = null;
        _this.b = 0;
        _this.c = null;
        _this.a = 0;
        return _this;
    }
    SVGBrush.prototype.f = function (a) {
        switch (this.b) {
            case 0: return null;
            case 1:
                {
                    if (this.c != null) {
                        var b = this.c.a(this.a);
                        if (b != null) {
                            switch (b.b) {
                                case 0: return null;
                                case 1: return this.d(a);
                                default: return this.d(b.e);
                            }
                        }
                    }
                    return this.d(a);
                }
            default: return this.d(this.e);
        }
    };
    SVGBrush.prototype.d = function (a) {
        if (this.c.d()) {
            var b = this.c;
            if (this.a == 0 && !isNaN_(b.p)) {
                return BrushUtil.q(a, b.p);
            }
            else if (this.a == 1 && !isNaN_(b.s)) {
                return BrushUtil.q(a, b.s);
            }
        }
        return a;
    };
    SVGBrush.$t = markType(SVGBrush, 'SVGBrush');
    return SVGBrush;
}(Base));
export { SVGBrush };
