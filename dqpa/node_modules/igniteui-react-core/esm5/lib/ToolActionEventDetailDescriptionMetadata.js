/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolActionEventDetailDescription } from "./ToolActionEventDetailDescription";
/**
 * @hidden
 */
var ToolActionEventDetailDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionEventDetailDescriptionMetadata, _super);
    function ToolActionEventDetailDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolActionEventDetailDescriptionMetadata.b = function (a) {
        if (ToolActionEventDetailDescriptionMetadata.a == null) {
            ToolActionEventDetailDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ToolActionEventDetailDescriptionMetadata.c(ToolActionEventDetailDescriptionMetadata.a);
        }
        if (a.k(ToolActionEventDetailDescriptionMetadata.a)) {
            return;
        }
        a.ac(ToolActionEventDetailDescriptionMetadata.a);
    };
    ToolActionEventDetailDescriptionMetadata.c = function (a) {
        a.item("ActionId", "String");
        a.item("ActionType", "ExportedType:string:ToolActionType");
        a.item("ActionType@names", "Unknown;GroupHeader;Checkbox;IconButton;Label;NumberInput;Radio;Separator;IconMenu;Button;SubPanel;CheckboxList;ButtonPair;Combo;TextInput;ColorEditor");
        a.item("IsModified", "Boolean");
        a.item("BoolValue", "Boolean");
        a.item("NumberValue", "Number:double");
        a.item("DateTimeValue", "Date");
        a.item("UntypedValueRef", "(w:UntypedValue,wf:UntypedValue)DataRef");
        a.item("StringValue", "String");
    };
    ToolActionEventDetailDescriptionMetadata.d = function (a) {
        ToolActionEventDetailDescriptionMetadata.b(a);
        a.ae("ToolActionEventDetail", function () { return new ToolActionEventDetailDescription(); });
        a.ad("ToolActionEventDetail", ToolActionEventDetailDescriptionMetadata.a);
    };
    ToolActionEventDetailDescriptionMetadata.$t = markType(ToolActionEventDetailDescriptionMetadata, 'ToolActionEventDetailDescriptionMetadata');
    ToolActionEventDetailDescriptionMetadata.a = null;
    return ToolActionEventDetailDescriptionMetadata;
}(Base));
export { ToolActionEventDetailDescriptionMetadata };
