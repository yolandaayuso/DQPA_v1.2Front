/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var DataLegendDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataLegendDescription, _super);
    function DataLegendDescription() {
        var _this = _super.call(this) || this;
        _this.t = false;
        _this.ah = 0;
        _this.l = null;
        _this.i = null;
        _this.k = null;
        _this.h = null;
        _this.w = false;
        _this.fp = null;
        _this.dy = 0;
        _this.dz = 0;
        _this.fs = null;
        _this.fq = null;
        _this.fr = null;
        _this.x = false;
        _this.ft = null;
        _this.m = null;
        _this.by = 0;
        _this.bz = 0;
        _this.b0 = 0;
        _this.b1 = 0;
        _this.y = false;
        _this.fy = null;
        _this.z = false;
        _this.b3 = 0;
        _this.b4 = 0;
        _this.b5 = 0;
        _this.b6 = 0;
        _this.fu = null;
        _this.fv = null;
        _this.b2 = 0;
        _this.fw = null;
        _this.fx = null;
        _this.ea = null;
        _this.j = null;
        _this.d8 = null;
        _this.d9 = null;
        _this.eb = null;
        _this.ec = null;
        _this.ed = null;
        _this.a0 = 0;
        _this.a1 = 0;
        _this.a2 = 0;
        _this.a3 = 0;
        _this.av = 0;
        _this.aw = 0;
        _this.ax = 0;
        _this.ay = 0;
        _this.v = false;
        _this.ee = null;
        _this.az = 0;
        _this.ef = null;
        _this.eg = null;
        _this.u = false;
        _this.d4 = null;
        _this.ar = 0;
        _this.as = 0;
        _this.at = 0;
        _this.au = 0;
        _this.am = 0;
        _this.an = 0;
        _this.ao = 0;
        _this.ap = 0;
        _this.d5 = null;
        _this.aq = 0;
        _this.d6 = null;
        _this.d7 = null;
        _this.e0 = null;
        _this.e1 = null;
        _this.bf = 0;
        _this.e2 = null;
        _this.e3 = null;
        _this.e4 = null;
        _this.ez = null;
        _this.bg = 0;
        _this.bh = 0;
        _this.bi = 0;
        _this.bj = 0;
        _this.bb = 0;
        _this.bc = 0;
        _this.bd = 0;
        _this.be = 0;
        _this.fa = null;
        _this.fb = null;
        _this.bl = 0;
        _this.fc = null;
        _this.fd = null;
        _this.eu = null;
        _this.ev = null;
        _this.ew = null;
        _this.ba = 0;
        _this.ex = null;
        _this.ey = null;
        _this.e5 = null;
        _this.e6 = null;
        _this.e7 = null;
        _this.bk = 0;
        _this.e8 = null;
        _this.e9 = null;
        _this.ai = 0;
        _this.aj = 0;
        _this.ak = 0;
        _this.al = 0;
        _this.d2 = null;
        _this.bm = 0;
        _this.bn = 0;
        _this.fe = null;
        _this.fj = null;
        _this.fk = null;
        _this.fl = null;
        _this.bu = 0;
        _this.bv = 0;
        _this.bw = 0;
        _this.bx = 0;
        _this.fm = null;
        _this.bt = 0;
        _this.fn = null;
        _this.fo = null;
        _this.bp = 0;
        _this.bq = 0;
        _this.br = 0;
        _this.bs = 0;
        _this.ff = null;
        _this.fg = null;
        _this.bo = 0;
        _this.fh = null;
        _this.fi = null;
        _this.ei = null;
        _this.ej = null;
        _this.a5 = 0;
        _this.a6 = 0;
        _this.a7 = 0;
        _this.a8 = 0;
        _this.ek = null;
        _this.a4 = 0;
        _this.el = null;
        _this.em = null;
        _this.a9 = 0;
        _this.en = null;
        _this.d3 = null;
        _this.ep = null;
        _this.eo = null;
        _this.er = null;
        _this.et = null;
        _this.eq = null;
        _this.es = null;
        _this.fz = null;
        _this.eh = null;
        return _this;
    }
    DataLegendDescription.prototype.get_type = function () {
        return "DataLegend";
    };
    Object.defineProperty(DataLegendDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "actualBadgesVisible", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("ActualBadgesVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "actualPixelScalingRatio", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("ActualPixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "includedSeries", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("IncludedSeries");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "excludedSeries", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ExcludedSeries");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "includedColumns", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("IncludedColumns");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "excludedColumns", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ExcludedColumns");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "shouldUpdateWhenSeriesDataChanges", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("ShouldUpdateWhenSeriesDataChanges");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueFormatAbbreviation", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            this.fp = a;
            this.g("ValueFormatAbbreviation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueFormatMaxFractions", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            this.dy = a;
            this.g("ValueFormatMaxFractions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueFormatMinFractions", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            this.dz = a;
            this.g("ValueFormatMinFractions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueFormatMode", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.g("ValueFormatMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueFormatCulture", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            this.fq = a;
            this.g("ValueFormatCulture");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueFormatCurrencyCode", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.g("ValueFormatCurrencyCode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueFormatUseGrouping", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("ValueFormatUseGrouping");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueFormatString", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.g("ValueFormatString");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueFormatSpecifiers", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("ValueFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueRowMarginBottom", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("ValueRowMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueRowMarginLeft", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("ValueRowMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueRowMarginRight", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("ValueRowMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueRowMarginTop", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("ValueRowMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueRowVisible", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("ValueRowVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextWhenMissingData", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            this.fy = a;
            this.g("ValueTextWhenMissingData");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextUseSeriesColors", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("ValueTextUseSeriesColors");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextMarginBottom", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.g("ValueTextMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextMarginLeft", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.g("ValueTextMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextMarginRight", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            this.b5 = a;
            this.g("ValueTextMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextMarginTop", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.g("ValueTextMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextColor", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.g("ValueTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextFontFamily", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.g("ValueTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextFontSize", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.g("ValueTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextFontStyle", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            this.fw = a;
            this.g("ValueTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "valueTextFontWeight", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.g("ValueTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerFormatString", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.g("HeaderFormatString");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerFormatSpecifiers", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("HeaderFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerFormatCulture", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.g("HeaderFormatCulture");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerFormatDate", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.g("HeaderFormatDate");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerFormatTime", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.g("HeaderFormatTime");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerText", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            this.ec = a;
            this.g("HeaderText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerTextColor", {
        get: function () {
            return this.ed;
        },
        set: function (a) {
            this.ed = a;
            this.g("HeaderTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerTextMarginBottom", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("HeaderTextMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerTextMarginLeft", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("HeaderTextMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerTextMarginRight", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("HeaderTextMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerTextMarginTop", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("HeaderTextMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerRowMarginBottom", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("HeaderRowMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerRowMarginLeft", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("HeaderRowMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerRowMarginRight", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("HeaderRowMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerRowMarginTop", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("HeaderRowMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerRowVisible", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("HeaderRowVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerTextFontFamily", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            this.ee = a;
            this.g("HeaderTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerTextFontSize", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("HeaderTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerTextFontStyle", {
        get: function () {
            return this.ef;
        },
        set: function (a) {
            this.ef = a;
            this.g("HeaderTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "headerTextFontWeight", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            this.eg = a;
            this.g("HeaderTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupRowVisible", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("GroupRowVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupTextColor", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.g("GroupTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupTextMarginBottom", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("GroupTextMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupTextMarginLeft", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("GroupTextMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupTextMarginRight", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("GroupTextMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupTextMarginTop", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("GroupTextMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupRowMarginBottom", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("GroupRowMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupRowMarginLeft", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("GroupRowMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupRowMarginRight", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("GroupRowMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupRowMarginTop", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("GroupRowMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupTextFontFamily", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.g("GroupTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupTextFontSize", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("GroupTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupTextFontStyle", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.g("GroupTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "groupTextFontWeight", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.g("GroupTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleTextColor", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.g("SummaryTitleTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleTextFontFamily", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            this.e1 = a;
            this.g("SummaryTitleTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleTextFontSize", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("SummaryTitleTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleTextFontStyle", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            this.e2 = a;
            this.g("SummaryTitleTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleTextFontWeight", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.g("SummaryTitleTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryType", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            this.e4 = a;
            this.g("SummaryType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleText", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.g("SummaryTitleText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleTextMarginBottom", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("SummaryTitleTextMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleTextMarginLeft", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("SummaryTitleTextMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleTextMarginRight", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("SummaryTitleTextMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryTitleTextMarginTop", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("SummaryTitleTextMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryRowMarginBottom", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("SummaryRowMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryRowMarginLeft", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("SummaryRowMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryRowMarginRight", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("SummaryRowMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryRowMarginTop", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("SummaryRowMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryValueTextColor", {
        get: function () {
            return this.fa;
        },
        set: function (a) {
            this.fa = a;
            this.g("SummaryValueTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryValueTextFontFamily", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.g("SummaryValueTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryValueTextFontSize", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("SummaryValueTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryValueTextFontStyle", {
        get: function () {
            return this.fc;
        },
        set: function (a) {
            this.fc = a;
            this.g("SummaryValueTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryValueTextFontWeight", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.g("SummaryValueTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryLabelText", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.g("SummaryLabelText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryLabelTextColor", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.g("SummaryLabelTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryLabelTextFontFamily", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.g("SummaryLabelTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryLabelTextFontSize", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("SummaryLabelTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryLabelTextFontStyle", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.g("SummaryLabelTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryLabelTextFontWeight", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            this.ey = a;
            this.g("SummaryLabelTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryUnitsText", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.g("SummaryUnitsText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryUnitsTextColor", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            this.e6 = a;
            this.g("SummaryUnitsTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryUnitsTextFontFamily", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.g("SummaryUnitsTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryUnitsTextFontSize", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("SummaryUnitsTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryUnitsTextFontStyle", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.g("SummaryUnitsTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "summaryUnitsTextFontWeight", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.g("SummaryUnitsTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "badgeMarginBottom", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("BadgeMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "badgeMarginLeft", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("BadgeMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "badgeMarginRight", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("BadgeMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "badgeMarginTop", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("BadgeMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "badgeShape", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            this.d2 = a;
            this.g("BadgeShape");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "targetCursorPositionX", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("TargetCursorPositionX");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "targetCursorPositionY", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("TargetCursorPositionY");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "targetRef", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.g("TargetRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsDisplayMode", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.g("UnitsDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsText", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            this.fk = a;
            this.g("UnitsText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsTextColor", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("UnitsTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsTextMarginBottom", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("UnitsTextMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsTextMarginLeft", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("UnitsTextMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsTextMarginRight", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("UnitsTextMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsTextMarginTop", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("UnitsTextMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsTextFontFamily", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.g("UnitsTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsTextFontSize", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("UnitsTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsTextFontStyle", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            this.fn = a;
            this.g("UnitsTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "unitsTextFontWeight", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.g("UnitsTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "titleTextMarginBottom", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("TitleTextMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "titleTextMarginLeft", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("TitleTextMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "titleTextMarginRight", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("TitleTextMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "titleTextMarginTop", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("TitleTextMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "titleTextColor", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.g("TitleTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "titleTextFontFamily", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.g("TitleTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "titleTextFontSize", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("TitleTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "titleTextFontStyle", {
        get: function () {
            return this.fh;
        },
        set: function (a) {
            this.fh = a;
            this.g("TitleTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "titleTextFontWeight", {
        get: function () {
            return this.fi;
        },
        set: function (a) {
            this.fi = a;
            this.g("TitleTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelDisplayMode", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.g("LabelDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelTextColor", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.g("LabelTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelTextMarginBottom", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("LabelTextMarginBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelTextMarginLeft", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("LabelTextMarginLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelTextMarginRight", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("LabelTextMarginRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelTextMarginTop", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("LabelTextMarginTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelTextFontFamily", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.g("LabelTextFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelTextFontSize", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("LabelTextFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelTextFontStyle", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("LabelTextFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "labelTextFontWeight", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.g("LabelTextFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "pixelScalingRatio", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("PixelScalingRatio");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "layoutMode", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            this.en = a;
            this.g("LayoutMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "calculateColumnSummaryRef", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.g("CalculateColumnSummaryRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "styleHeaderRowRef", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.g("StyleHeaderRowRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "styleGroupRowRef", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            this.eo = a;
            this.g("StyleGroupRowRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "styleSeriesRowRef", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("StyleSeriesRowRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "styleSummaryRowRef", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.g("StyleSummaryRowRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "styleSeriesColumnRef", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.g("StyleSeriesColumnRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "styleSummaryColumnRef", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.g("StyleSummaryColumnRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "width", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendDescription.prototype, "height", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    DataLegendDescription.$t = markType(DataLegendDescription, 'DataLegendDescription', Description.$);
    return DataLegendDescription;
}(Description));
export { DataLegendDescription };
