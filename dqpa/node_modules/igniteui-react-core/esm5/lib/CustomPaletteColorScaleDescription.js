/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ColorScaleDescription } from "./ColorScaleDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CustomPaletteColorScaleDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CustomPaletteColorScaleDescription, _super);
    function CustomPaletteColorScaleDescription() {
        var _this = _super.call(this) || this;
        _this.n = 0;
        _this.m = 0;
        _this.k = null;
        _this.q = null;
        return _this;
    }
    CustomPaletteColorScaleDescription.prototype.get_type = function () {
        return "CustomPaletteColorScale";
    };
    Object.defineProperty(CustomPaletteColorScaleDescription.prototype, "minimumValue", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("MinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CustomPaletteColorScaleDescription.prototype, "maximumValue", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("MaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CustomPaletteColorScaleDescription.prototype, "palette", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("Palette");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CustomPaletteColorScaleDescription.prototype, "interpolationMode", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("InterpolationMode");
        },
        enumerable: false,
        configurable: true
    });
    CustomPaletteColorScaleDescription.$t = markType(CustomPaletteColorScaleDescription, 'CustomPaletteColorScaleDescription', ColorScaleDescription.$);
    return CustomPaletteColorScaleDescription;
}(ColorScaleDescription));
export { CustomPaletteColorScaleDescription };
