/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { CategoryAngleAxisDescriptionMetadata } from "./CategoryAngleAxisDescriptionMetadata";
import { ProportionalCategoryAngleAxisDescription } from "./ProportionalCategoryAngleAxisDescription";
/**
 * @hidden
 */
var ProportionalCategoryAngleAxisDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ProportionalCategoryAngleAxisDescriptionMetadata, _super);
    function ProportionalCategoryAngleAxisDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProportionalCategoryAngleAxisDescriptionMetadata.b = function (a) {
        if (ProportionalCategoryAngleAxisDescriptionMetadata.a == null) {
            ProportionalCategoryAngleAxisDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ProportionalCategoryAngleAxisDescriptionMetadata.c(ProportionalCategoryAngleAxisDescriptionMetadata.a);
        }
        if (a.k(ProportionalCategoryAngleAxisDescriptionMetadata.a)) {
            return;
        }
        a.ac(ProportionalCategoryAngleAxisDescriptionMetadata.a);
    };
    ProportionalCategoryAngleAxisDescriptionMetadata.c = function (a) {
        CategoryAngleAxisDescriptionMetadata.c(a);
        a.item("ValueMemberPath", "String");
        a.item("OthersCategoryThreshold", "Number:double");
        a.item("OthersCategoryType", "ExportedType:string:OthersCategoryType");
        a.item("OthersCategoryType@names", "Number;Percent");
        a.item("OthersCategoryText", "String");
    };
    ProportionalCategoryAngleAxisDescriptionMetadata.d = function (a) {
        ProportionalCategoryAngleAxisDescriptionMetadata.b(a);
        a.ae("ProportionalCategoryAngleAxis", function () { return new ProportionalCategoryAngleAxisDescription(); });
        a.ad("ProportionalCategoryAngleAxis", ProportionalCategoryAngleAxisDescriptionMetadata.a);
    };
    ProportionalCategoryAngleAxisDescriptionMetadata.$t = markType(ProportionalCategoryAngleAxisDescriptionMetadata, 'ProportionalCategoryAngleAxisDescriptionMetadata');
    ProportionalCategoryAngleAxisDescriptionMetadata.a = null;
    return ProportionalCategoryAngleAxisDescriptionMetadata;
}(Base));
export { ProportionalCategoryAngleAxisDescriptionMetadata };
