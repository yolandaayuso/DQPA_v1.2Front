/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { PanelBridge } from "./PanelBridge";
import { INativeUIAbsolutePanelBridge_$type } from "./INativeUIAbsolutePanelBridge";
import { markType } from "./type";
import { stringReplace } from "./string";
/**
 * @hidden
 */
var AbsolutePanelBridge = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AbsolutePanelBridge, _super);
    function AbsolutePanelBridge() {
        return _super.call(this) || this;
    }
    AbsolutePanelBridge.prototype.addHandler = function (a, b, c, d) {
    };
    AbsolutePanelBridge.prototype.getX = function (a, b) {
        var c = b.an.getStyleProperty("left");
        stringReplace(c, "px", "");
        var d = parseFloat(c);
        return d;
    };
    AbsolutePanelBridge.prototype.getY = function (a, b) {
        var c = b.an.getStyleProperty("top");
        stringReplace(c, "px", "");
        var d = parseFloat(c);
        return d;
    };
    AbsolutePanelBridge.prototype.getValue = function (a, b) {
        switch (b) {
        }
        return _super.prototype.getValue.call(this, a, b);
    };
    AbsolutePanelBridge.prototype.removeHandler = function (a, b, c, d) {
    };
    AbsolutePanelBridge.prototype.setX = function (a, b, c) {
        b.an.setStyleProperty("position", "absolute");
        b.an.setStyleProperty("left", c.toString() + "px");
    };
    AbsolutePanelBridge.prototype.setY = function (a, b, c) {
        b.an.setStyleProperty("position", "absolute");
        b.an.setStyleProperty("top", c.toString() + "px");
    };
    AbsolutePanelBridge.prototype.setValue = function (a, b, c) {
        _super.prototype.setValue.call(this, a, b, c);
        switch (b) {
        }
    };
    AbsolutePanelBridge.prototype.getChildAt = function (a, b) {
        return this.s.apply(this, arguments);
    };
    AbsolutePanelBridge.prototype.removeChildAt = function (a, b) {
        this.y.apply(this, arguments);
    };
    AbsolutePanelBridge.prototype.addChild = function (a, b) {
        this.v.apply(this, arguments);
    };
    AbsolutePanelBridge.prototype.insertChild = function (a, b, c) {
        this.w.apply(this, arguments);
    };
    AbsolutePanelBridge.prototype.removeChild = function (a, b) {
        this.x.apply(this, arguments);
    };
    AbsolutePanelBridge.prototype.getChildrenCount = function (a) {
        return this.u.apply(this, arguments);
    };
    AbsolutePanelBridge.$t = markType(AbsolutePanelBridge, 'AbsolutePanelBridge', PanelBridge.$, [INativeUIAbsolutePanelBridge_$type]);
    return AbsolutePanelBridge;
}(PanelBridge));
export { AbsolutePanelBridge };
