/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolActionDescriptionMetadata } from "./ToolActionDescriptionMetadata";
import { ToolActionButtonPairDescription } from "./ToolActionButtonPairDescription";
/**
 * @hidden
 */
var ToolActionButtonPairDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionButtonPairDescriptionMetadata, _super);
    function ToolActionButtonPairDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolActionButtonPairDescriptionMetadata.b = function (a) {
        if (ToolActionButtonPairDescriptionMetadata.a == null) {
            ToolActionButtonPairDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ToolActionButtonPairDescriptionMetadata.c(ToolActionButtonPairDescriptionMetadata.a);
        }
        if (a.k(ToolActionButtonPairDescriptionMetadata.a)) {
            return;
        }
        a.ac(ToolActionButtonPairDescriptionMetadata.a);
    };
    ToolActionButtonPairDescriptionMetadata.c = function (a) {
        ToolActionDescriptionMetadata.c(a);
        a.item("LeftIsSelected", "Boolean");
        a.item("RightIsSelected", "Boolean");
        a.item("LeftIsDisabled", "Boolean");
        a.item("RightIsDisabled", "Boolean");
        a.item("LeftIconName", "String");
        a.item("LeftCommandArgument", "String");
        a.item("IsToggleDisabled", "Boolean");
        a.item("LeftIconCollectionName", "String");
        a.item("LeftIconViewBoxLeft", "Number:double");
        a.item("LeftIconViewBoxTop", "Number:double");
        a.item("LeftIconViewBoxWidth", "Number:double");
        a.item("LeftIconViewBoxHeight", "Number:double");
        a.item("LeftIconFill", "Brush");
        a.item("ActualLeftIconFill", "Brush");
        a.item("LeftIconFillColors", "BrushCollection:string");
        a.item("LeftIconStroke", "Brush");
        a.item("ActualLeftIconStroke", "Brush");
        a.item("LeftIconStrokeColors", "BrushCollection:string");
        a.item("LeftIconStrokeWidth", "Number:double");
        a.item("LeftTitle", "String");
        a.item("RightIconName", "String");
        a.item("RightCommandArgument", "String");
        a.item("RightIconCollectionName", "String");
        a.item("RightIconViewBoxLeft", "Number:double");
        a.item("RightIconViewBoxTop", "Number:double");
        a.item("RightIconViewBoxWidth", "Number:double");
        a.item("RightIconViewBoxHeight", "Number:double");
        a.item("RightIconFill", "Brush");
        a.item("ActualRightIconFill", "Brush");
        a.item("RightIconFillColors", "BrushCollection:string");
        a.item("RightIconStroke", "Brush");
        a.item("ActualRightIconStroke", "Brush");
        a.item("RightIconStrokeColors", "BrushCollection:string");
        a.item("RightIconStrokeWidth", "Number:double");
        a.item("RightTitle", "String");
        a.item("DisplayType", "ExportedType:string:ToolActionButtonGroupDisplayType");
        a.item("DisplayType@names", "Flat;Outlined");
        a.item("CornerRadius", "Number:double");
    };
    ToolActionButtonPairDescriptionMetadata.d = function (a) {
        ToolActionButtonPairDescriptionMetadata.b(a);
        a.ae("ToolActionButtonPair", function () { return new ToolActionButtonPairDescription(); });
        a.ad("ToolActionButtonPair", ToolActionButtonPairDescriptionMetadata.a);
    };
    ToolActionButtonPairDescriptionMetadata.$t = markType(ToolActionButtonPairDescriptionMetadata, 'ToolActionButtonPairDescriptionMetadata');
    ToolActionButtonPairDescriptionMetadata.a = null;
    return ToolActionButtonPairDescriptionMetadata;
}(Base));
export { ToolActionButtonPairDescriptionMetadata };
