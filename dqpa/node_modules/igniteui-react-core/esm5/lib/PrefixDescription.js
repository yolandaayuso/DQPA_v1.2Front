/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { InputGroupItemDescription } from "./InputGroupItemDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var PrefixDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PrefixDescription, _super);
    function PrefixDescription() {
        var _this = _super.call(this) || this;
        _this.p = null;
        _this.o = null;
        _this.l = false;
        _this.k = false;
        return _this;
    }
    PrefixDescription.prototype.get_type = function () {
        return "Prefix";
    };
    Object.defineProperty(PrefixDescription.prototype, "id", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("Id");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PrefixDescription.prototype, "ariaLabel", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("AriaLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PrefixDescription.prototype, "isHover", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("IsHover");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PrefixDescription.prototype, "disabled", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("Disabled");
        },
        enumerable: false,
        configurable: true
    });
    PrefixDescription.$t = markType(PrefixDescription, 'PrefixDescription', InputGroupItemDescription.$);
    return PrefixDescription;
}(InputGroupItemDescription));
export { PrefixDescription };
