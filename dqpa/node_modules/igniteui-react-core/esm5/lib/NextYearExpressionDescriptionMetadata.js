/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WrapperExpressionDescriptionMetadata } from "./WrapperExpressionDescriptionMetadata";
import { NextYearExpressionDescription } from "./NextYearExpressionDescription";
/**
 * @hidden
 */
var NextYearExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(NextYearExpressionDescriptionMetadata, _super);
    function NextYearExpressionDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NextYearExpressionDescriptionMetadata.b = function (a) {
        if (NextYearExpressionDescriptionMetadata.a == null) {
            NextYearExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            NextYearExpressionDescriptionMetadata.c(NextYearExpressionDescriptionMetadata.a);
        }
        if (a.k(NextYearExpressionDescriptionMetadata.a)) {
            return;
        }
        a.ac(NextYearExpressionDescriptionMetadata.a);
    };
    NextYearExpressionDescriptionMetadata.c = function (a) {
        WrapperExpressionDescriptionMetadata.c(a);
    };
    NextYearExpressionDescriptionMetadata.d = function (a) {
        NextYearExpressionDescriptionMetadata.b(a);
        a.ae("NextYearExpression", function () { return new NextYearExpressionDescription(); });
        a.ad("NextYearExpression", NextYearExpressionDescriptionMetadata.a);
    };
    NextYearExpressionDescriptionMetadata.$t = markType(NextYearExpressionDescriptionMetadata, 'NextYearExpressionDescriptionMetadata');
    NextYearExpressionDescriptionMetadata.a = null;
    return NextYearExpressionDescriptionMetadata;
}(Base));
export { NextYearExpressionDescriptionMetadata };
