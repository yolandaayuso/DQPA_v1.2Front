/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebTreeItemDescription } from "./WebTreeItemDescription";
/**
 * @hidden
 */
var WebTreeItemDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebTreeItemDescriptionMetadata, _super);
    function WebTreeItemDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebTreeItemDescriptionMetadata.b = function (a) {
        if (WebTreeItemDescriptionMetadata.a == null) {
            WebTreeItemDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebTreeItemDescriptionMetadata.c(WebTreeItemDescriptionMetadata.a);
        }
        if (a.k(WebTreeItemDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebTreeItemDescriptionMetadata.a);
        WebTreeItemDescriptionMetadata.d(a);
    };
    WebTreeItemDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:TreeItem");
        a.item("__tagNameWC", "String:igc-tree-item");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("Parent", "ExportedType:WebTreeItem");
        a.item("Level", "Number:double");
        a.item("Label", "String");
        a.item("Expanded", "Boolean");
        a.item("Active", "Boolean");
        a.item("Disabled", "Boolean");
        a.item("Selected", "Boolean");
        a.item("Loading", "Boolean");
        a.item("Value", "Unknown");
    };
    WebTreeItemDescriptionMetadata.d = function (a) {
        WebTreeItemDescriptionMetadata.b(a);
        a.ae("WebTreeItem", function () { return new WebTreeItemDescription(); });
        a.ad("WebTreeItem", WebTreeItemDescriptionMetadata.a);
    };
    WebTreeItemDescriptionMetadata.$t = markType(WebTreeItemDescriptionMetadata, 'WebTreeItemDescriptionMetadata');
    WebTreeItemDescriptionMetadata.a = null;
    return WebTreeItemDescriptionMetadata;
}(Base));
export { WebTreeItemDescriptionMetadata };
