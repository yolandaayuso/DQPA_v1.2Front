/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { CategoryAxisBaseDescription } from "./CategoryAxisBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CategoryXAxisDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryXAxisDescription, _super);
    function CategoryXAxisDescription() {
        var _this = _super.call(this) || this;
        _this.d7 = 0;
        _this.d8 = 0;
        _this.d9 = 0;
        _this.ea = 0;
        _this.eb = 0;
        _this.d5 = 0;
        _this.d3 = 0;
        _this.d6 = 0;
        _this.d4 = 0;
        _this.el = null;
        _this.em = null;
        return _this;
    }
    CategoryXAxisDescription.prototype.get_type = function () {
        return "CategoryXAxis";
    };
    Object.defineProperty(CategoryXAxisDescription.prototype, "zoomMaximumCategoryRange", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.g("ZoomMaximumCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "zoomMaximumItemSpan", {
        get: function () {
            return this.d8;
        },
        set: function (a) {
            this.d8 = a;
            this.g("ZoomMaximumItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "zoomToCategoryRange", {
        get: function () {
            return this.d9;
        },
        set: function (a) {
            this.d9 = a;
            this.g("ZoomToCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "zoomToCategoryStart", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            this.ea = a;
            this.g("ZoomToCategoryStart");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "zoomToItemSpan", {
        get: function () {
            return this.eb;
        },
        set: function (a) {
            this.eb = a;
            this.g("ZoomToItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "interval", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.g("Interval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "actualInterval", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.g("ActualInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "minorInterval", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.g("MinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "actualMinorInterval", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.g("ActualMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "actualIntervalChangeRef", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("ActualIntervalChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryXAxisDescription.prototype, "actualMinorIntervalChangeRef", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.g("ActualMinorIntervalChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    CategoryXAxisDescription.$t = markType(CategoryXAxisDescription, 'CategoryXAxisDescription', CategoryAxisBaseDescription.$);
    return CategoryXAxisDescription;
}(CategoryAxisBaseDescription));
export { CategoryXAxisDescription };
