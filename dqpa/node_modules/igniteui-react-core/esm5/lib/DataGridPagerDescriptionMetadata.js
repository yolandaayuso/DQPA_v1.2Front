/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { PageChangedEventArgsDescriptionMetadata } from "./PageChangedEventArgsDescriptionMetadata";
import { DataGridPagerDescription } from "./DataGridPagerDescription";
/**
 * @hidden
 */
var DataGridPagerDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataGridPagerDescriptionMetadata, _super);
    function DataGridPagerDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGridPagerDescriptionMetadata.b = function (a) {
        if (DataGridPagerDescriptionMetadata.a == null) {
            DataGridPagerDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DataGridPagerDescriptionMetadata.c(DataGridPagerDescriptionMetadata.a);
        }
        if (a.k(DataGridPagerDescriptionMetadata.a)) {
            return;
        }
        a.ac(DataGridPagerDescriptionMetadata.a);
        PageChangedEventArgsDescriptionMetadata.d(a);
    };
    DataGridPagerDescriptionMetadata.c = function (a) {
        a.item("PagerText", "String");
        a.item("PageSize", "Number:int");
        a.item("PageCount", "Number:int");
        a.item("DataSourceRef", "(w:ItemsSource,xam:ItemsSource,wf:ItemsSource)DataRef::object");
        a.item("DataSource", "(w:ItemsSource,xam:ItemsSource,wf:ItemsSource)ExportedType:BaseDataSource:BaseDataSource");
        a.item("CurrentPage", "Number:int");
        a.item("FontFamily", "(w:FontFamily/FontFamilyTransform,xam:FontFamily,wf:FontFamily,web:textStyle/FontFamilyTransform)String");
        a.item("FontSize", "(w:FontSize,xam:FontSize,wf:FontSize,web:textStyle/FontSizeTransform)Number:double");
        a.item("FontStyle", "(w:FontStyle/FontStyleTransform,xam:FontFamily/FontStyleTransform,wf:FontFamily/FontStyleTransform,web:textStyle/FontStyleTransform)String");
        a.item("FontWeight", "(w:FontWeight/FontWeightTransform,xam:FontFamily/FontWeightTransform,wf:FontFamily/FontWeightTransform,web:textStyle/FontWeightTransform)String");
        a.item("Background", "Brush");
        a.item("Border", "Brush");
        a.item("PageChangedRef", "EventRef::pageChanged");
    };
    DataGridPagerDescriptionMetadata.d = function (a) {
        DataGridPagerDescriptionMetadata.b(a);
        a.ae("DataGridPager", function () { return new DataGridPagerDescription(); });
        a.ad("DataGridPager", DataGridPagerDescriptionMetadata.a);
    };
    DataGridPagerDescriptionMetadata.$t = markType(DataGridPagerDescriptionMetadata, 'DataGridPagerDescriptionMetadata');
    DataGridPagerDescriptionMetadata.a = null;
    return DataGridPagerDescriptionMetadata;
}(Base));
export { DataGridPagerDescriptionMetadata };
