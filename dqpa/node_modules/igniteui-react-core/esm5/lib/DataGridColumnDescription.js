/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { DefinitionBaseDescription } from "./DefinitionBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var DataGridColumnDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataGridColumnDescription, _super);
    function DataGridColumnDescription() {
        var _this = _super.call(this) || this;
        _this.d5 = 0;
        _this.d7 = 0;
        _this.d6 = 0;
        _this.d4 = 0;
        _this.e3 = null;
        _this.ex = null;
        _this.ez = null;
        _this.el = null;
        _this.e7 = null;
        _this.ep = null;
        _this.e5 = null;
        _this.en = null;
        _this.e6 = null;
        _this.eo = null;
        _this.cw = null;
        _this.cs = null;
        _this.dv = 0;
        _this.da = false;
        _this.c4 = false;
        _this.cq = null;
        _this.cu = null;
        _this.cy = null;
        _this.c9 = false;
        _this.dc = false;
        _this.db = false;
        _this.dd = false;
        _this.e8 = null;
        _this.e4 = null;
        _this.eh = null;
        _this.eq = null;
        _this.ej = null;
        _this.es = null;
        _this.er = null;
        _this.ei = null;
        _this.c1 = false;
        _this.c5 = false;
        _this.c3 = false;
        _this.c7 = false;
        _this.c2 = false;
        _this.c6 = false;
        _this.c8 = false;
        _this.et = null;
        _this.ek = null;
        _this.du = 0;
        _this.ds = 0;
        _this.eu = null;
        _this.dt = 0;
        _this.ev = null;
        _this.ew = null;
        _this.e1 = null;
        _this.e0 = null;
        _this.e2 = null;
        _this.d1 = 0;
        _this.d3 = 0;
        _this.d2 = 0;
        _this.d0 = 0;
        _this.ey = null;
        _this.co = null;
        _this.em = null;
        return _this;
    }
    DataGridColumnDescription.prototype.get_type = function () {
        return "DataGridColumn";
    };
    Object.defineProperty(DataGridColumnDescription.prototype, "paddingLeft", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            this.d5 = a;
            this.g("PaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "paddingTop", {
        get: function () {
            return this.d7;
        },
        set: function (a) {
            this.d7 = a;
            this.g("PaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "paddingRight", {
        get: function () {
            return this.d6;
        },
        set: function (a) {
            this.d6 = a;
            this.g("PaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "paddingBottom", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            this.d4 = a;
            this.g("PaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "name", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.g("Name");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "field", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            this.ex = a;
            this.g("Field");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "headerText", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            this.ez = a;
            this.g("HeaderText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualHeaderText", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("ActualHeaderText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "selectedBackground", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.g("SelectedBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualSelectedBackground", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.g("ActualSelectedBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "rowHoverBackground", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.g("RowHoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualHoverBackground", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            this.en = a;
            this.g("ActualHoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "rowHoverTextColor", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            this.e6 = a;
            this.g("RowHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualRowHoverTextColor", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            this.eo = a;
            this.g("ActualRowHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "animationSettings", {
        get: function () {
            return this.cw;
        },
        set: function (a) {
            this.cw = a;
            this.g("AnimationSettings");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "width", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "minWidth", {
        get: function () {
            return this.dv;
        },
        set: function (a) {
            this.dv = a;
            this.g("MinWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isFromMarkup", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.g("IsFromMarkup");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isAutoGenerated", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            this.c4 = a;
            this.g("IsAutoGenerated");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "filter", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            this.cq = a;
            this.g("Filter");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "filterExpression", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.g("FilterExpression");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "header", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            this.cy = a;
            this.g("Header");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isFilteringEnabled", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            this.c9 = a;
            this.g("IsFilteringEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isResizingEnabled", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.g("IsResizingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isHidden", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            this.db = a;
            this.g("IsHidden");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "shouldRemoveWhenHidden", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            this.dd = a;
            this.g("ShouldRemoveWhenHidden");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "sortDirection", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.g("SortDirection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "pinned", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            this.e4 = a;
            this.g("Pinned");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualColumnOptionsIconAlignment", {
        get: function () {
            return this.eh;
        },
        set: function (a) {
            this.eh = a;
            this.g("ActualColumnOptionsIconAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "columnOptionsIconAlignment", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.g("ColumnOptionsIconAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualColumnOptionsIconColor", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.g("ActualColumnOptionsIconColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "columnOptionsIconColor", {
        get: function () {
            return this.es;
        },
        set: function (a) {
            this.es = a;
            this.g("ColumnOptionsIconColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "columnOptionsIconBehavior", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("ColumnOptionsIconBehavior");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualColumnOptionsIconBehavior", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.g("ActualColumnOptionsIconBehavior");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualIsColumnOptionsEnabled", {
        get: function () {
            return this.c1;
        },
        set: function (a) {
            this.c1 = a;
            this.g("ActualIsColumnOptionsEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isColumnOptionsEnabled", {
        get: function () {
            return this.c5;
        },
        set: function (a) {
            this.c5 = a;
            this.g("IsColumnOptionsEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualIsColumnOptionsSummariesEnabled", {
        get: function () {
            return this.c3;
        },
        set: function (a) {
            this.c3 = a;
            this.g("ActualIsColumnOptionsSummariesEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isColumnOptionsSummariesEnabled", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.g("IsColumnOptionsSummariesEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualIsColumnOptionsGroupingEnabled", {
        get: function () {
            return this.c2;
        },
        set: function (a) {
            this.c2 = a;
            this.g("ActualIsColumnOptionsGroupingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isColumnOptionsGroupingEnabled", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            this.c6 = a;
            this.g("IsColumnOptionsGroupingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "isEditable", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.g("IsEditable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "deletedTextColor", {
        get: function () {
            return this.et;
        },
        set: function (a) {
            this.et = a;
            this.g("DeletedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualDeletedTextColor", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.g("ActualDeletedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editOpacity", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            this.du = a;
            this.g("EditOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualEditOpacity", {
        get: function () {
            return this.ds;
        },
        set: function (a) {
            this.ds = a;
            this.g("ActualEditOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editFontFamily", {
        get: function () {
            return this.eu;
        },
        set: function (a) {
            this.eu = a;
            this.g("EditFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editFontSize", {
        get: function () {
            return this.dt;
        },
        set: function (a) {
            this.dt = a;
            this.g("EditFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editFontStyle", {
        get: function () {
            return this.ev;
        },
        set: function (a) {
            this.ev = a;
            this.g("EditFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "editFontWeight", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            this.ew = a;
            this.g("EditFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellMode", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            this.e1 = a;
            this.g("MergedCellMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellEvaluationCriteria", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            this.e0 = a;
            this.g("MergedCellEvaluationCriteria");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellVerticalAlignment", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            this.e2 = a;
            this.g("MergedCellVerticalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellPaddingLeft", {
        get: function () {
            return this.d1;
        },
        set: function (a) {
            this.d1 = a;
            this.g("MergedCellPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellPaddingTop", {
        get: function () {
            return this.d3;
        },
        set: function (a) {
            this.d3 = a;
            this.g("MergedCellPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellPaddingRight", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            this.d2 = a;
            this.g("MergedCellPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "mergedCellPaddingBottom", {
        get: function () {
            return this.d0;
        },
        set: function (a) {
            this.d0 = a;
            this.g("MergedCellPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "filterComparisonType", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            this.ey = a;
            this.g("FilterComparisonType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "filterOperands", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            this.co = a;
            this.g("FilterOperands");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridColumnDescription.prototype, "actualHeaderTextChangeRef", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.g("ActualHeaderTextChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    DataGridColumnDescription.$t = markType(DataGridColumnDescription, 'DataGridColumnDescription', DefinitionBaseDescription.$);
    DataGridColumnDescription.__canMarshalByValue = true;
    DataGridColumnDescription.__marshalByValueAlias = "DataGridColumn";
    return DataGridColumnDescription;
}(DefinitionBaseDescription));
export { DataGridColumnDescription };
