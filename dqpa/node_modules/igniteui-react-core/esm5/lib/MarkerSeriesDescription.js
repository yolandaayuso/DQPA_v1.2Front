/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var MarkerSeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MarkerSeriesDescription, _super);
    function MarkerSeriesDescription() {
        var _this = _super.call(this) || this;
        _this.fg = null;
        _this.fa = null;
        _this.e3 = false;
        _this.fe = null;
        _this.fc = null;
        _this.ff = null;
        _this.e5 = 0;
        _this.e9 = null;
        _this.fb = null;
        _this.e7 = null;
        _this.fd = null;
        _this.e8 = null;
        return _this;
    }
    MarkerSeriesDescription.prototype.get_type = function () {
        return "MarkerSeries";
    };
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerType", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.g("MarkerType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerType", {
        get: function () {
            return this.fa;
        },
        set: function (a) {
            this.fa = a;
            this.g("ActualMarkerType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "isCustomMarkerCircular", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.g("IsCustomMarkerCircular");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerOutlineMode", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.g("MarkerOutlineMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerFillMode", {
        get: function () {
            return this.fc;
        },
        set: function (a) {
            this.fc = a;
            this.g("MarkerFillMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerTemplateRef", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.g("MarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerThickness", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.g("MarkerThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerTemplateRef", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.g("ActualMarkerTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerBrush", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.g("MarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerBrush", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.g("ActualMarkerBrush");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "markerOutline", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.g("MarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MarkerSeriesDescription.prototype, "actualMarkerOutline", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.g("ActualMarkerOutline");
        },
        enumerable: false,
        configurable: true
    });
    MarkerSeriesDescription.$t = markType(MarkerSeriesDescription, 'MarkerSeriesDescription', SeriesDescription.$);
    return MarkerSeriesDescription;
}(SeriesDescription));
export { MarkerSeriesDescription };
