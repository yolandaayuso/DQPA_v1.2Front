/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var DefinitionBaseDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DefinitionBaseDescription, _super);
    function DefinitionBaseDescription() {
        var _this = _super.call(this) || this;
        _this.bb = null;
        _this.h = null;
        _this.be = null;
        _this.az = null;
        _this.bi = null;
        _this.a4 = null;
        _this.ac = 0;
        _this.ae = 0;
        _this.ad = 0;
        _this.ab = 0;
        _this.u = 0;
        _this.w = 0;
        _this.v = 0;
        _this.t = 0;
        _this.ag = 0;
        _this.ai = 0;
        _this.ah = 0;
        _this.af = 0;
        _this.a1 = null;
        _this.a0 = null;
        _this.a5 = null;
        _this.bq = null;
        _this.a9 = null;
        _this.bp = null;
        _this.a8 = null;
        _this.bn = null;
        _this.a6 = null;
        _this.m = 0;
        _this.bm = null;
        _this.bs = null;
        _this.bo = null;
        _this.a7 = null;
        _this.br = null;
        _this.ba = null;
        _this.j = false;
        _this.bc = null;
        _this.a2 = null;
        _this.bd = null;
        _this.a3 = null;
        _this.aa = 0;
        _this.y = 0;
        _this.z = 0;
        _this.x = 0;
        _this.o = 0;
        _this.l = 0;
        _this.bj = null;
        _this.n = 0;
        _this.bk = null;
        _this.bl = null;
        _this.bg = null;
        _this.bh = null;
        _this.bf = null;
        return _this;
    }
    DefinitionBaseDescription.prototype.get_type = function () {
        return "DefinitionBase";
    };
    Object.defineProperty(DefinitionBaseDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "background", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "conditionalStyles", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ConditionalStyles");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "border", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("Border");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "activationBorder", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("ActivationBorder");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "errorBorder", {
        get: function () {
            return this.bi;
        },
        set: function (a) {
            this.bi = a;
            this.g("ErrorBorder");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualBorder", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("ActualBorder");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "borderLeftWidth", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("BorderLeftWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "borderTopWidth", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("BorderTopWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "borderRightWidth", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("BorderRightWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "borderBottomWidth", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("BorderBottomWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "activationBorderLeftWidth", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("ActivationBorderLeftWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "activationBorderTopWidth", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("ActivationBorderTopWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "activationBorderRightWidth", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("ActivationBorderRightWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "activationBorderBottomWidth", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("ActivationBorderBottomWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "errorBorderLeftWidth", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("ErrorBorderLeftWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "errorBorderTopWidth", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("ErrorBorderTopWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "errorBorderRightWidth", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("ErrorBorderRightWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "errorBorderBottomWidth", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("ErrorBorderBottomWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualBackground", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("ActualBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualActivationBorder", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("ActualActivationBorder");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualErrorBorder", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("ActualErrorBorder");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "stickyRowBackground", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("StickyRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualStickyRowBackground", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("ActualStickyRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "pinnedRowBackground", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("PinnedRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualPinnedRowBackground", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("ActualPinnedRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "lastStickyRowBackground", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("LastStickyRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualLastStickyRowBackground", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("ActualLastStickyRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "contentOpacity", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("ContentOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "horizontalAlignment", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("HorizontalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "verticalAlignment", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("VerticalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "lineBreakMode", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("LineBreakMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualLineBreakMode", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("ActualLineBreakMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "textColor", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualTextColor", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("ActualTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "isBarSupported", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("IsBarSupported");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "barBackground", {
        get: function () {
            return this.bc;
        },
        set: function (a) {
            this.bc = a;
            this.g("BarBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualBarBackground", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("ActualBarBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "barOutline", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("BarOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualBarOutline", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("ActualBarOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "barStrokeThickness", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("BarStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualBarStrokeThickness", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("ActualBarStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "barCornerRadius", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("BarCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualBarCornerRadius", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("ActualBarCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "pinnedRowOpacity", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("PinnedRowOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "actualPinnedRowOpacity", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("ActualPinnedRowOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "fontFamily", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("FontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "fontSize", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("FontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "fontStyle", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("FontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "fontWeight", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("FontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "dataBindingRef", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("DataBindingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "dataBoundRef", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("DataBoundRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DefinitionBaseDescription.prototype, "cellStyleKeyRequestedRef", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("CellStyleKeyRequestedRef");
        },
        enumerable: false,
        configurable: true
    });
    DefinitionBaseDescription.$t = markType(DefinitionBaseDescription, 'DefinitionBaseDescription', Description.$);
    return DefinitionBaseDescription;
}(Description));
export { DefinitionBaseDescription };
