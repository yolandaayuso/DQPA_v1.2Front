/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var MultiSliderThumbDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MultiSliderThumbDescription, _super);
    function MultiSliderThumbDescription() {
        var _this = _super.call(this) || this;
        _this.j = 0;
        _this.m = null;
        _this.h = null;
        _this.l = null;
        return _this;
    }
    MultiSliderThumbDescription.prototype.get_type = function () {
        return "MultiSliderThumb";
    };
    Object.defineProperty(MultiSliderThumbDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderThumbDescription.prototype, "value", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderThumbDescription.prototype, "rangePosition", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("RangePosition");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderThumbDescription.prototype, "range", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Range");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderThumbDescription.prototype, "propertyUpdatedRef", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("PropertyUpdatedRef");
        },
        enumerable: false,
        configurable: true
    });
    MultiSliderThumbDescription.$t = markType(MultiSliderThumbDescription, 'MultiSliderThumbDescription', Description.$);
    return MultiSliderThumbDescription;
}(Description));
export { MultiSliderThumbDescription };
/**
 * @hidden
 */
var MultiSliderTrackThumbRangeDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MultiSliderTrackThumbRangeDescription, _super);
    function MultiSliderTrackThumbRangeDescription() {
        var _this = _super.call(this) || this;
        _this.n = 0;
        _this.o = 0;
        _this.m = 0;
        _this.l = 0;
        _this.i = null;
        _this.h = null;
        return _this;
    }
    MultiSliderTrackThumbRangeDescription.prototype.get_type = function () {
        return "MultiSliderTrackThumbRange";
    };
    Object.defineProperty(MultiSliderTrackThumbRangeDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderTrackThumbRangeDescription.prototype, "position", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("Position");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderTrackThumbRangeDescription.prototype, "width", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderTrackThumbRangeDescription.prototype, "minWidth", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("MinWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderTrackThumbRangeDescription.prototype, "maxWidth", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("MaxWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderTrackThumbRangeDescription.prototype, "lowerThumb", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("LowerThumb");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MultiSliderTrackThumbRangeDescription.prototype, "higherThumb", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("HigherThumb");
        },
        enumerable: false,
        configurable: true
    });
    MultiSliderTrackThumbRangeDescription.$t = markType(MultiSliderTrackThumbRangeDescription, 'MultiSliderTrackThumbRangeDescription', Description.$);
    return MultiSliderTrackThumbRangeDescription;
}(Description));
export { MultiSliderTrackThumbRangeDescription };
