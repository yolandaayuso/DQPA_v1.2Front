/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebFilteringExpressionsTreeOrFilteringExpressionDescriptionMetadata } from "./WebFilteringExpressionsTreeOrFilteringExpressionDescriptionMetadata";
import { WebFilteringExpressionsTreeDetailDescription } from "./WebFilteringExpressionsTreeDetailDescription";
/**
 * @hidden
 */
var WebFilteringExpressionsTreeDetailDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebFilteringExpressionsTreeDetailDescriptionMetadata, _super);
    function WebFilteringExpressionsTreeDetailDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebFilteringExpressionsTreeDetailDescriptionMetadata.b = function (a) {
        if (WebFilteringExpressionsTreeDetailDescriptionMetadata.a == null) {
            WebFilteringExpressionsTreeDetailDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebFilteringExpressionsTreeDetailDescriptionMetadata.c(WebFilteringExpressionsTreeDetailDescriptionMetadata.a);
        }
        if (a.k(WebFilteringExpressionsTreeDetailDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebFilteringExpressionsTreeDetailDescriptionMetadata.a);
        WebFilteringExpressionsTreeOrFilteringExpressionDescriptionMetadata.d(a);
    };
    WebFilteringExpressionsTreeDetailDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:FilteringExpressionsTreeDetail");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("FilteringOperands", "Array:WebFilteringExpressionsTreeOrFilteringExpressionDescription:FilteringExpressionsTreeOrFilteringExpression");
        a.item("TreeType", "(wc:Type)ExportedType:string:FilteringExpressionsTreeType");
        a.item("TreeType@names", "Regular;Advanced");
        a.item("Owner", "Unknown");
        a.item("Operator", "ExportedType:string:FilteringLogic");
        a.item("Operator@names", "And;Or");
        a.item("FieldName", "String");
    };
    WebFilteringExpressionsTreeDetailDescriptionMetadata.d = function (a) {
        WebFilteringExpressionsTreeDetailDescriptionMetadata.b(a);
        a.ae("WebFilteringExpressionsTreeDetail", function () { return new WebFilteringExpressionsTreeDetailDescription(); });
        a.ad("WebFilteringExpressionsTreeDetail", WebFilteringExpressionsTreeDetailDescriptionMetadata.a);
    };
    WebFilteringExpressionsTreeDetailDescriptionMetadata.$t = markType(WebFilteringExpressionsTreeDetailDescriptionMetadata, 'WebFilteringExpressionsTreeDetailDescriptionMetadata');
    WebFilteringExpressionsTreeDetailDescriptionMetadata.a = null;
    return WebFilteringExpressionsTreeDetailDescriptionMetadata;
}(Base));
export { WebFilteringExpressionsTreeDetailDescriptionMetadata };
