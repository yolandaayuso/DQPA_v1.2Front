/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CategorySeriesDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategorySeriesDescription, _super);
    function CategorySeriesDescription() {
        var _this = _super.call(this) || this;
        _this.fs = false;
        _this.fr = false;
        _this.f1 = null;
        _this.fu = false;
        _this.f2 = null;
        _this.ft = false;
        _this.f0 = null;
        _this.fz = null;
        return _this;
    }
    CategorySeriesDescription.prototype.get_type = function () {
        return "CategorySeries";
    };
    Object.defineProperty(CategorySeriesDescription.prototype, "isCustomCategoryStyleAllowed", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.g("IsCustomCategoryStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategorySeriesDescription.prototype, "isCustomCategoryMarkerStyleAllowed", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.g("IsCustomCategoryMarkerStyleAllowed");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategorySeriesDescription.prototype, "categoryCollisionMode", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.g("CategoryCollisionMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategorySeriesDescription.prototype, "useHighMarkerFidelity", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.g("UseHighMarkerFidelity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategorySeriesDescription.prototype, "transitionInMode", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            this.f2 = a;
            this.g("TransitionInMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategorySeriesDescription.prototype, "isTransitionInEnabled", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.g("IsTransitionInEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategorySeriesDescription.prototype, "assigningCategoryStyleRef", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            this.f0 = a;
            this.g("AssigningCategoryStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategorySeriesDescription.prototype, "assigningCategoryMarkerStyleRef", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.g("AssigningCategoryMarkerStyleRef");
        },
        enumerable: false,
        configurable: true
    });
    CategorySeriesDescription.$t = markType(CategorySeriesDescription, 'CategorySeriesDescription', MarkerSeriesDescription.$);
    return CategorySeriesDescription;
}(MarkerSeriesDescription));
export { CategorySeriesDescription };
