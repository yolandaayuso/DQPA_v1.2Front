/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, IEqualityComparer$1_$type, markType } from "./type";
/**
 * @hidden
 */
var TransactionKeyEqualityComparer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TransactionKeyEqualityComparer, _super);
    function TransactionKeyEqualityComparer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TransactionKeyEqualityComparer.prototype.equalsC = function (a, b) {
        var c = a;
        var d = b;
        if (c.length != d.length) {
            return false;
        }
        for (var e = 0; e < c.length; e++) {
            if (c[e] == null && d[e] != null) {
                return false;
            }
            if (c[e] != null && d[e] == null) {
                return false;
            }
            if (c[e] != d[e]) {
                if (!Base.equalsStatic(c[e], d[e])) {
                    return false;
                }
            }
        }
        return true;
    };
    TransactionKeyEqualityComparer.prototype.getHashCodeC = function (a) {
        var b = 0;
        var c = a;
        for (var d = 0; d < c.length; d++) {
            if (c[d] != null) {
                b += Base.getHashCodeStatic(c[d]);
            }
        }
        return b;
    };
    TransactionKeyEqualityComparer.$t = markType(TransactionKeyEqualityComparer, 'TransactionKeyEqualityComparer', Base.$, [IEqualityComparer$1_$type.specialize(Base.$)]);
    return TransactionKeyEqualityComparer;
}(Base));
export { TransactionKeyEqualityComparer };
