/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { NativeUIElementBridge } from "./NativeUIElementBridge";
import { runOn, markType } from "./type";
import { NativeUISliderValueChangedEventArgs } from "./NativeUISliderValueChangedEventArgs";
/**
 * @hidden
 */
var IgcSliderBridge = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgcSliderBridge, _super);
    function IgcSliderBridge() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.u = null;
        _this.s = null;
        _this.w = null;
        _this.v = null;
        _this.t = null;
        _this.x = null;
        return _this;
    }
    IgcSliderBridge.prototype.addHandler = function (a, b, c, d) {
        switch (c) {
            case 0:
                {
                    var e = a;
                    this.v = e.listen("igcInput", runOn(this, this.z));
                    this.t = d;
                    this.x = b;
                }
                break;
            case 4:
                {
                    var f = a;
                    this.u = f.listen("igcChange", runOn(this, this.y));
                    this.s = d;
                    this.w = b;
                }
                break;
        }
    };
    IgcSliderBridge.prototype.z = function (a) {
        if (this.t != null) {
            var b = new NativeUISliderValueChangedEventArgs();
            this.t(this.x, b);
        }
    };
    IgcSliderBridge.prototype.y = function (a) {
        if (this.s != null) {
            var b = new NativeUISliderValueChangedEventArgs();
            this.s(this.w, b);
        }
    };
    IgcSliderBridge.prototype.getValue = function (a, b) {
        switch (b) {
            case 12: return a.getProperty("min");
            case 13: return a.getProperty("max");
            case 14: return a.getProperty("step");
            case 2: return a.getProperty("value");
        }
        return null;
    };
    IgcSliderBridge.prototype.removeHandler = function (a, b, c, d) {
        switch (c) {
            case 0:
                if (this.v != null) {
                    this.v();
                }
                this.t = null;
                this.x = null;
                break;
            case 4:
                if (this.u != null) {
                    this.u();
                }
                this.s = null;
                this.w = null;
                break;
        }
    };
    IgcSliderBridge.prototype.setValue = function (a, b, c) {
        switch (b) {
            case 12:
                a.setProperty("min", c);
                break;
            case 13:
                a.setProperty("max", c);
                break;
            case 14:
                a.setProperty("step", c);
                break;
            case 2:
                a.setProperty("value", c);
                break;
        }
    };
    IgcSliderBridge.$t = markType(IgcSliderBridge, 'IgcSliderBridge', NativeUIElementBridge.$);
    return IgcSliderBridge;
}(NativeUIElementBridge));
export { IgcSliderBridge };
