/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { List$1 } from "./List$1";
import { stringJoin1 } from "./string";
/**
 * @hidden
 */
var FilterSyntaxParseResult = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxParseResult, _super);
    function FilterSyntaxParseResult() {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.d = 0;
        _this.c = null;
        _this.c = new List$1(String_$type, 0);
        return _this;
    }
    Object.defineProperty(FilterSyntaxParseResult.prototype, "b", {
        get: function () {
            return this.c.count > 0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FilterSyntaxParseResult.prototype, "e", {
        get: function () {
            return stringJoin1(String_$type, "\r\n", this.c);
        },
        enumerable: false,
        configurable: true
    });
    FilterSyntaxParseResult.$t = markType(FilterSyntaxParseResult, 'FilterSyntaxParseResult');
    return FilterSyntaxParseResult;
}(Base));
export { FilterSyntaxParseResult };
