/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebGridBaseDirectiveDescriptionMetadata } from "./WebGridBaseDirectiveDescriptionMetadata";
import { WebGridToolbarTemplateContextDescription } from "./WebGridToolbarTemplateContextDescription";
/**
 * @hidden
 */
var WebGridToolbarTemplateContextDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebGridToolbarTemplateContextDescriptionMetadata, _super);
    function WebGridToolbarTemplateContextDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebGridToolbarTemplateContextDescriptionMetadata.b = function (a) {
        if (WebGridToolbarTemplateContextDescriptionMetadata.a == null) {
            WebGridToolbarTemplateContextDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebGridToolbarTemplateContextDescriptionMetadata.c(WebGridToolbarTemplateContextDescriptionMetadata.a);
        }
        if (a.k(WebGridToolbarTemplateContextDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebGridToolbarTemplateContextDescriptionMetadata.a);
        WebGridBaseDirectiveDescriptionMetadata.d(a);
    };
    WebGridToolbarTemplateContextDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:GridToolbarTemplateContext");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("Implicit", "ExportedType:WebGridBaseDirective");
    };
    WebGridToolbarTemplateContextDescriptionMetadata.d = function (a) {
        WebGridToolbarTemplateContextDescriptionMetadata.b(a);
        a.ae("WebGridToolbarTemplateContext", function () { return new WebGridToolbarTemplateContextDescription(); });
        a.ad("WebGridToolbarTemplateContext", WebGridToolbarTemplateContextDescriptionMetadata.a);
    };
    WebGridToolbarTemplateContextDescriptionMetadata.$t = markType(WebGridToolbarTemplateContextDescriptionMetadata, 'WebGridToolbarTemplateContextDescriptionMetadata');
    WebGridToolbarTemplateContextDescriptionMetadata.a = null;
    return WebGridToolbarTemplateContextDescriptionMetadata;
}(Base));
export { WebGridToolbarTemplateContextDescriptionMetadata };
