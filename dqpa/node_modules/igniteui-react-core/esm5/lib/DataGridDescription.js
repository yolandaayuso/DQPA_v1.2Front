/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var DataGridDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataGridDescription, _super);
    function DataGridDescription() {
        var _this = _super.call(this) || this;
        _this.ix = null;
        _this.g2 = null;
        _this.e6 = null;
        _this.bt = false;
        _this.by = false;
        _this.b3 = false;
        _this.f1 = null;
        _this.ft = null;
        _this.b0 = false;
        _this.hf = null;
        _this.hg = null;
        _this.gh = null;
        _this.dh = 0;
        _this.di = 0;
        _this.dj = 0;
        _this.dk = 0;
        _this.bd = null;
        _this.bf = null;
        _this.bh = null;
        _this.bb = null;
        _this.a5 = null;
        _this.a7 = null;
        _this.az = null;
        _this.ax = null;
        _this.a9 = null;
        _this.j = null;
        _this.l = null;
        _this.gb = null;
        _this.ej = 0;
        _this.eq = 0;
        _this.de = 0;
        _this.ei = 0;
        _this.em = 0;
        _this.f9 = null;
        _this.av = null;
        _this.gt = null;
        _this.gf = null;
        _this.gg = null;
        _this.bo = false;
        _this.bl = false;
        _this.er = 0;
        _this.bz = false;
        _this.fo = null;
        _this.fz = null;
        _this.fa = null;
        _this.hh = null;
        _this.he = null;
        _this.fl = null;
        _this.a1 = null;
        _this.f0 = null;
        _this.f4 = null;
        _this.fs = null;
        _this.fr = null;
        _this.fp = null;
        _this.h0 = null;
        _this.e2 = null;
        _this.hy = null;
        _this.b4 = false;
        _this.x = null;
        _this.y = null;
        _this.w = null;
        _this.v = null;
        _this.r = null;
        _this.s = null;
        _this.bq = false;
        _this.bw = false;
        _this.bx = false;
        _this.fk = null;
        _this.hs = null;
        _this.h5 = null;
        _this.ih = null;
        _this.dm = 0;
        _this.gc = null;
        _this.df = 0;
        _this.gd = null;
        _this.ge = null;
        _this.dg = 0;
        _this.ga = null;
        _this.h3 = null;
        _this.ha = null;
        _this.g6 = null;
        _this.a3 = null;
        _this.e8 = null;
        _this.fm = null;
        _this.gz = null;
        _this.g0 = null;
        _this.fd = null;
        _this.c7 = 0;
        _this.fe = null;
        _this.ff = null;
        _this.ho = null;
        _this.ht = null;
        _this.hp = null;
        _this.dn = 0;
        _this.hq = null;
        _this.hr = null;
        _this.h6 = null;
        _this.dp = 0;
        _this.h7 = null;
        _this.h8 = null;
        _this.ii = null;
        _this.dr = 0;
        _this.ij = null;
        _this.ik = null;
        _this.ie = null;
        _this.ib = null;
        _this.dq = 0;
        _this.ic = null;
        _this.id = null;
        _this.io = null;
        _this.ds = 0;
        _this.ip = null;
        _this.iq = null;
        _this.ir = null;
        _this.h9 = null;
        _this.il = null;
        _this.ia = null;
        _this.im = null;
        _this.ep = 0;
        _this.en = 0;
        _this.gy = null;
        _this.gs = null;
        _this.g1 = null;
        _this.gu = null;
        _this.dl = 0;
        _this.gv = null;
        _this.gw = null;
        _this.hi = null;
        _this.gx = null;
        _this.hl = null;
        _this.hj = null;
        _this.hk = null;
        _this.el = 0;
        _this.c9 = 0;
        _this.ek = 0;
        _this.c8 = 0;
        _this.f2 = null;
        _this.fu = null;
        _this.b9 = false;
        _this.fv = null;
        _this.fx = null;
        _this.fw = null;
        _this.e7 = null;
        _this.c3 = 0;
        _this.c4 = 0;
        _this.c5 = 0;
        _this.c6 = 0;
        _this.b5 = false;
        _this.db = 0;
        _this.da = 0;
        _this.dc = 0;
        _this.dd = 0;
        _this.bp = false;
        _this.u = null;
        _this.p = null;
        _this.o = null;
        _this.q = null;
        _this.g4 = null;
        _this.g3 = null;
        _this.g5 = null;
        _this.z = null;
        _this.n = null;
        _this.m = null;
        _this.aa = null;
        _this.ig = null;
        _this.bu = false;
        _this.gq = null;
        _this.bv = false;
        _this.gr = null;
        _this.bk = false;
        _this.t = null;
        _this.i = null;
        _this.h = null;
        _this.k = null;
        _this.b8 = false;
        _this.b7 = false;
        _this.b6 = false;
        _this.gi = null;
        _this.gj = null;
        _this.bs = false;
        _this.br = false;
        _this.g8 = null;
        _this.g7 = null;
        _this.g9 = null;
        _this.go = null;
        _this.gn = null;
        _this.gk = null;
        _this.c1 = new Date();
        _this.bm = false;
        _this.eo = 0;
        _this.b1 = false;
        _this.b2 = false;
        _this.iw = null;
        _this.is = null;
        _this.it = null;
        _this.iu = null;
        _this.iv = null;
        _this.hn = null;
        _this.hm = null;
        _this.bj = false;
        _this.bn = false;
        _this.gm = null;
        _this.gl = null;
        _this.fi = null;
        _this.fj = null;
        _this.fg = null;
        _this.fh = null;
        _this.e9 = null;
        _this.h2 = null;
        _this.gp = null;
        _this.h4 = null;
        _this.fq = null;
        _this.fy = null;
        _this.fn = null;
        _this.f7 = null;
        _this.f8 = null;
        _this.hb = null;
        _this.h1 = null;
        _this.e4 = null;
        _this.f3 = null;
        _this.hw = null;
        _this.hx = null;
        _this.hv = null;
        _this.hz = null;
        _this.e3 = null;
        _this.hu = null;
        _this.f5 = null;
        _this.fc = null;
        _this.fb = null;
        _this.hd = null;
        _this.hc = null;
        _this.f6 = null;
        _this.e5 = null;
        return _this;
    }
    Object.defineProperty(DataGridDescription.prototype, "width", {
        get: function () {
            return this.ix;
        },
        set: function (a) {
            this.ix = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "height", {
        get: function () {
            return this.g2;
        },
        set: function (a) {
            this.g2 = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "background", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            this.e6 = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isGroupByAreaVisible", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("IsGroupByAreaVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isPagerVisible", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("IsPagerVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isToolbarVisible", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.g("IsToolbarVisible");
        },
        enumerable: false,
        configurable: true
    });
    DataGridDescription.prototype.get_type = function () {
        return "DataGrid";
    };
    Object.defineProperty(DataGridDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingMode", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            this.f1 = a;
            this.g("ColumnResizingMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingMode", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            this.ft = a;
            this.g("ColumnMovingMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isRowHoverEnabled", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("IsRowHoverEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowHoverBackground", {
        get: function () {
            return this.hf;
        },
        set: function (a) {
            this.hf = a;
            this.g("RowHoverBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowHoverTextColor", {
        get: function () {
            return this.hg;
        },
        set: function (a) {
            this.hg = a;
            this.g("RowHoverTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorder", {
        get: function () {
            return this.gh;
        },
        set: function (a) {
            this.gh = a;
            this.g("EditRowBorder");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorderWidthBottom", {
        get: function () {
            return this.dh;
        },
        set: function (a) {
            this.dh = a;
            this.g("EditRowBorderWidthBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorderWidthLeft", {
        get: function () {
            return this.di;
        },
        set: function (a) {
            this.di = a;
            this.g("EditRowBorderWidthLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorderWidthRight", {
        get: function () {
            return this.dj;
        },
        set: function (a) {
            this.dj = a;
            this.g("EditRowBorderWidthRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editRowBorderWidthTop", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            this.dk = a;
            this.g("EditRowBorderWidthTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeader", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("SectionHeader");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRowRoot", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("SummaryRowRoot");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRowSection", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("SummaryRowSection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparator", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            this.bb = a;
            this.g("RowSeparator");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerRowSeparator", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("HeaderRowSeparator");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSeparator", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("HeaderSeparator");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingSeparator", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("ColumnResizingSeparator");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingSeparator", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("ColumnMovingSeparator");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedAreaSeparator", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("PinnedAreaSeparator");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "autoGenerateDesiredProperties", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("AutoGenerateDesiredProperties");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataSourceDesiredProperties", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("DataSourceDesiredProperties");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "density", {
        get: function () {
            return this.gb;
        },
        set: function (a) {
            this.gb = a;
            this.g("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualRowHeight", {
        get: function () {
            return this.ej;
        },
        set: function (a) {
            this.ej = a;
            this.g("ActualRowHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowHeight", {
        get: function () {
            return this.eq;
        },
        set: function (a) {
            this.eq = a;
            this.g("RowHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "defaultColumnMinWidth", {
        get: function () {
            return this.de;
        },
        set: function (a) {
            this.de = a;
            this.g("DefaultColumnMinWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualHeaderHeight", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            this.ei = a;
            this.g("ActualHeaderHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerHeight", {
        get: function () {
            return this.em;
        },
        set: function (a) {
            this.em = a;
            this.g("HeaderHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.f9;
        },
        set: function (a) {
            this.f9 = a;
            this.g("DataSourceRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataSource", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("DataSource");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerClickAction", {
        get: function () {
            return this.gt;
        },
        set: function (a) {
            this.gt = a;
            this.g("HeaderClickAction");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editMode", {
        get: function () {
            return this.gf;
        },
        set: function (a) {
            this.gf = a;
            this.g("EditMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editModeClickAction", {
        get: function () {
            return this.gg;
        },
        set: function (a) {
            this.gg = a;
            this.g("EditModeClickAction");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editOnKeyPress", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("EditOnKeyPress");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "autoGenerateColumns", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("AutoGenerateColumns");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorHeight", {
        get: function () {
            return this.er;
        },
        set: function (a) {
            this.er = a;
            this.g("RowSeparatorHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isPlaceholderRenderingEnabled", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("IsPlaceholderRenderingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnAddingAnimationMode", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            this.fo = a;
            this.g("ColumnAddingAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnPropertyUpdatingAnimationMode", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            this.fz = a;
            this.g("ColumnPropertyUpdatingAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellDataLoadedAnimationMode", {
        get: function () {
            return this.fa;
        },
        set: function (a) {
            this.fa = a;
            this.g("CellDataLoadedAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSelectionAnimationMode", {
        get: function () {
            return this.hh;
        },
        set: function (a) {
            this.hh = a;
            this.g("RowSelectionAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowHoverAnimationMode", {
        get: function () {
            return this.he;
        },
        set: function (a) {
            this.he = a;
            this.g("RowHoverAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellSelectionAnimationMode", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            this.fl = a;
            this.g("CellSelectionAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "animationSettings", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("AnimationSettings");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingAnimationMode", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            this.f0 = a;
            this.g("ColumnResizingAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnShowingAnimationMode", {
        get: function () {
            return this.f4;
        },
        set: function (a) {
            this.f4 = a;
            this.g("ColumnShowingAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingAnimationMode", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            this.fs = a;
            this.g("ColumnMovingAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnHidingAnimationMode", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            this.fr = a;
            this.g("ColumnHidingAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnExchangingAnimationMode", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            this.fp = a;
            this.g("ColumnExchangingAnimationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectionMode", {
        get: function () {
            return this.h0;
        },
        set: function (a) {
            this.h0 = a;
            this.g("SelectionMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "activationMode", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            this.e2 = a;
            this.g("ActivationMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectionBehavior", {
        get: function () {
            return this.hy;
        },
        set: function (a) {
            this.hy = a;
            this.g("SelectionBehavior");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "mouseDragSelectionEnabled", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.g("MouseDragSelectionEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedItems", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("SelectedItems");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedKeys", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("SelectedKeys");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedCells", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("SelectedCells");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedCellRanges", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("SelectedCellRanges");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedItems", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("PinnedItems");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedKeys", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("PinnedKeys");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isColumnOptionsEnabled", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("IsColumnOptionsEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isGroupRowSticky", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("IsGroupRowSticky");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isHeaderSeparatorVisible", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("IsHeaderSeparatorVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellSelectedBackground", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            this.fk = a;
            this.g("CellSelectedBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderSelectedBackground", {
        get: function () {
            return this.hs;
        },
        set: function (a) {
            this.hs = a;
            this.g("SectionHeaderSelectedBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootBackground", {
        get: function () {
            return this.h5;
        },
        set: function (a) {
            this.h5 = a;
            this.g("SummaryRootBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionBackground", {
        get: function () {
            return this.ih;
        },
        set: function (a) {
            this.ih = a;
            this.g("SummarySectionBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedRowOpacity", {
        get: function () {
            return this.dm;
        },
        set: function (a) {
            this.dm = a;
            this.g("PinnedRowOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editFontFamily", {
        get: function () {
            return this.gc;
        },
        set: function (a) {
            this.gc = a;
            this.g("EditFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editFontSize", {
        get: function () {
            return this.df;
        },
        set: function (a) {
            this.df = a;
            this.g("EditFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editFontStyle", {
        get: function () {
            return this.gd;
        },
        set: function (a) {
            this.gd = a;
            this.g("EditFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editFontWeight", {
        get: function () {
            return this.ge;
        },
        set: function (a) {
            this.ge = a;
            this.g("EditFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "editOpacity", {
        get: function () {
            return this.dg;
        },
        set: function (a) {
            this.dg = a;
            this.g("EditOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "deletedTextColor", {
        get: function () {
            return this.ga;
        },
        set: function (a) {
            this.ga = a;
            this.g("DeletedTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "stickyRowBackground", {
        get: function () {
            return this.h3;
        },
        set: function (a) {
            this.h3 = a;
            this.g("StickyRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedRowBackground", {
        get: function () {
            return this.ha;
        },
        set: function (a) {
            this.ha = a;
            this.g("PinnedRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "lastStickyRowBackground", {
        get: function () {
            return this.g6;
        },
        set: function (a) {
            this.g6 = a;
            this.g("LastStickyRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "activeCell", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("ActiveCell");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellBackground", {
        get: function () {
            return this.e8;
        },
        set: function (a) {
            this.e8 = a;
            this.g("CellBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellTextColor", {
        get: function () {
            return this.fm;
        },
        set: function (a) {
            this.fm = a;
            this.g("CellTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSortIndicatorColor", {
        get: function () {
            return this.gz;
        },
        set: function (a) {
            this.gz = a;
            this.g("HeaderSortIndicatorColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSortIndicatorStyle", {
        get: function () {
            return this.g0;
        },
        set: function (a) {
            this.g0 = a;
            this.g("HeaderSortIndicatorStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellFontFamily", {
        get: function () {
            return this.fd;
        },
        set: function (a) {
            this.fd = a;
            this.g("CellFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellFontSize", {
        get: function () {
            return this.c7;
        },
        set: function (a) {
            this.c7 = a;
            this.g("CellFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellFontStyle", {
        get: function () {
            return this.fe;
        },
        set: function (a) {
            this.fe = a;
            this.g("CellFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellFontWeight", {
        get: function () {
            return this.ff;
        },
        set: function (a) {
            this.ff = a;
            this.g("CellFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderBackground", {
        get: function () {
            return this.ho;
        },
        set: function (a) {
            this.ho = a;
            this.g("SectionHeaderBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderTextColor", {
        get: function () {
            return this.ht;
        },
        set: function (a) {
            this.ht = a;
            this.g("SectionHeaderTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderFontFamily", {
        get: function () {
            return this.hp;
        },
        set: function (a) {
            this.hp = a;
            this.g("SectionHeaderFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderFontSize", {
        get: function () {
            return this.dn;
        },
        set: function (a) {
            this.dn = a;
            this.g("SectionHeaderFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderFontStyle", {
        get: function () {
            return this.hq;
        },
        set: function (a) {
            this.hq = a;
            this.g("SectionHeaderFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sectionHeaderFontWeight", {
        get: function () {
            return this.hr;
        },
        set: function (a) {
            this.hr = a;
            this.g("SectionHeaderFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelFontFamily", {
        get: function () {
            return this.h6;
        },
        set: function (a) {
            this.h6 = a;
            this.g("SummaryRootLabelFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelFontSize", {
        get: function () {
            return this.dp;
        },
        set: function (a) {
            this.dp = a;
            this.g("SummaryRootLabelFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelFontStyle", {
        get: function () {
            return this.h7;
        },
        set: function (a) {
            this.h7 = a;
            this.g("SummaryRootLabelFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelFontWeight", {
        get: function () {
            return this.h8;
        },
        set: function (a) {
            this.h8 = a;
            this.g("SummaryRootLabelFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelFontFamily", {
        get: function () {
            return this.ii;
        },
        set: function (a) {
            this.ii = a;
            this.g("SummarySectionLabelFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelFontSize", {
        get: function () {
            return this.dr;
        },
        set: function (a) {
            this.dr = a;
            this.g("SummarySectionLabelFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelFontStyle", {
        get: function () {
            return this.ij;
        },
        set: function (a) {
            this.ij = a;
            this.g("SummarySectionLabelFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelFontWeight", {
        get: function () {
            return this.ik;
        },
        set: function (a) {
            this.ik = a;
            this.g("SummarySectionLabelFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueTextColor", {
        get: function () {
            return this.ie;
        },
        set: function (a) {
            this.ie = a;
            this.g("SummaryRootValueTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueFontFamily", {
        get: function () {
            return this.ib;
        },
        set: function (a) {
            this.ib = a;
            this.g("SummaryRootValueFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueFontSize", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            this.dq = a;
            this.g("SummaryRootValueFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueFontStyle", {
        get: function () {
            return this.ic;
        },
        set: function (a) {
            this.ic = a;
            this.g("SummaryRootValueFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootValueFontWeight", {
        get: function () {
            return this.id;
        },
        set: function (a) {
            this.id = a;
            this.g("SummaryRootValueFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueFontFamily", {
        get: function () {
            return this.io;
        },
        set: function (a) {
            this.io = a;
            this.g("SummarySectionValueFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueFontSize", {
        get: function () {
            return this.ds;
        },
        set: function (a) {
            this.ds = a;
            this.g("SummarySectionValueFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueFontStyle", {
        get: function () {
            return this.ip;
        },
        set: function (a) {
            this.ip = a;
            this.g("SummarySectionValueFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueFontWeight", {
        get: function () {
            return this.iq;
        },
        set: function (a) {
            this.iq = a;
            this.g("SummarySectionValueFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionValueTextColor", {
        get: function () {
            return this.ir;
        },
        set: function (a) {
            this.ir = a;
            this.g("SummarySectionValueTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootLabelTextColor", {
        get: function () {
            return this.h9;
        },
        set: function (a) {
            this.h9 = a;
            this.g("SummaryRootLabelTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionLabelTextColor", {
        get: function () {
            return this.il;
        },
        set: function (a) {
            this.il = a;
            this.g("SummarySectionLabelTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryRootSelectedBackground", {
        get: function () {
            return this.ia;
        },
        set: function (a) {
            this.ia = a;
            this.g("SummaryRootSelectedBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summarySectionSelectedBackground", {
        get: function () {
            return this.im;
        },
        set: function (a) {
            this.im = a;
            this.g("SummarySectionSelectedBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pinnedAreaSeparatorWidth", {
        get: function () {
            return this.ep;
        },
        set: function (a) {
            this.ep = a;
            this.g("PinnedAreaSeparatorWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSeparatorWidth", {
        get: function () {
            return this.en;
        },
        set: function (a) {
            this.en = a;
            this.g("HeaderSeparatorWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerSeparatorBackground", {
        get: function () {
            return this.gy;
        },
        set: function (a) {
            this.gy = a;
            this.g("HeaderSeparatorBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerBackground", {
        get: function () {
            return this.gs;
        },
        set: function (a) {
            this.gs = a;
            this.g("HeaderBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerTextColor", {
        get: function () {
            return this.g1;
        },
        set: function (a) {
            this.g1 = a;
            this.g("HeaderTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerFontFamily", {
        get: function () {
            return this.gu;
        },
        set: function (a) {
            this.gu = a;
            this.g("HeaderFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerFontSize", {
        get: function () {
            return this.dl;
        },
        set: function (a) {
            this.dl = a;
            this.g("HeaderFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerFontStyle", {
        get: function () {
            return this.gv;
        },
        set: function (a) {
            this.gv = a;
            this.g("HeaderFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerFontWeight", {
        get: function () {
            return this.gw;
        },
        set: function (a) {
            this.gw = a;
            this.g("HeaderFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorBackground", {
        get: function () {
            return this.hi;
        },
        set: function (a) {
            this.hi = a;
            this.g("RowSeparatorBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "headerRowSeparatorBackground", {
        get: function () {
            return this.gx;
        },
        set: function (a) {
            this.gx = a;
            this.g("HeaderRowSeparatorBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorStickyRowBackground", {
        get: function () {
            return this.hl;
        },
        set: function (a) {
            this.hl = a;
            this.g("RowSeparatorStickyRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorLastStickyRowBackground", {
        get: function () {
            return this.hj;
        },
        set: function (a) {
            this.hj = a;
            this.g("RowSeparatorLastStickyRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowSeparatorPinnedRowBackground", {
        get: function () {
            return this.hk;
        },
        set: function (a) {
            this.hk = a;
            this.g("RowSeparatorPinnedRowBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingSeparatorWidth", {
        get: function () {
            return this.el;
        },
        set: function (a) {
            this.el = a;
            this.g("ColumnResizingSeparatorWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingSeparatorOpacity", {
        get: function () {
            return this.c9;
        },
        set: function (a) {
            this.c9 = a;
            this.g("ColumnResizingSeparatorOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingSeparatorWidth", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            this.ek = a;
            this.g("ColumnMovingSeparatorWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingSeparatorOpacity", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            this.c8 = a;
            this.g("ColumnMovingSeparatorOpacity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnResizingSeparatorBackground", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            this.f2 = a;
            this.g("ColumnResizingSeparatorBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnMovingSeparatorBackground", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            this.fu = a;
            this.g("ColumnMovingSeparatorBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "shiftSectionContent", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.g("ShiftSectionContent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnOptionsIconAlignment", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            this.fv = a;
            this.g("ColumnOptionsIconAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnOptionsIconColor", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            this.fx = a;
            this.g("ColumnOptionsIconColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnOptionsIconBehavior", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            this.fw = a;
            this.g("ColumnOptionsIconBehavior");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "border", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            this.e7 = a;
            this.g("Border");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "borderWidthBottom", {
        get: function () {
            return this.c3;
        },
        set: function (a) {
            this.c3 = a;
            this.g("BorderWidthBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "borderWidthLeft", {
        get: function () {
            return this.c4;
        },
        set: function (a) {
            this.c4 = a;
            this.g("BorderWidthLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "borderWidthRight", {
        get: function () {
            return this.c5;
        },
        set: function (a) {
            this.c5 = a;
            this.g("BorderWidthRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "borderWidthTop", {
        get: function () {
            return this.c6;
        },
        set: function (a) {
            this.c6 = a;
            this.g("BorderWidthTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "notifyOnAllSelectionChanges", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            this.b5 = a;
            this.g("NotifyOnAllSelectionChanges");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cornerRadiusBottomRight", {
        get: function () {
            return this.db;
        },
        set: function (a) {
            this.db = a;
            this.g("CornerRadiusBottomRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cornerRadiusBottomLeft", {
        get: function () {
            return this.da;
        },
        set: function (a) {
            this.da = a;
            this.g("CornerRadiusBottomLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cornerRadiusTopLeft", {
        get: function () {
            return this.dc;
        },
        set: function (a) {
            this.dc = a;
            this.g("CornerRadiusTopLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cornerRadiusTopRight", {
        get: function () {
            return this.dd;
        },
        set: function (a) {
            this.dd = a;
            this.g("CornerRadiusTopRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isActiveCellStyleEnabled", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("IsActiveCellStyleEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "responsiveStates", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("ResponsiveStates");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "initialSortDescriptions", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("InitialSortDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "initialGroupDescriptions", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("InitialGroupDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "initialSummaryDescriptions", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("InitialSummaryDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "initialSorts", {
        get: function () {
            return this.g4;
        },
        set: function (a) {
            this.g4 = a;
            this.g("InitialSorts");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "initialGroups", {
        get: function () {
            return this.g3;
        },
        set: function (a) {
            this.g3 = a;
            this.g("InitialGroups");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "initialSummaries", {
        get: function () {
            return this.g5;
        },
        set: function (a) {
            this.g5 = a;
            this.g("InitialSummaries");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sortDescriptions", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("SortDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "groupDescriptions", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("GroupDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "filterExpressions", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("FilterExpressions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryDescriptions", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("SummaryDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryScope", {
        get: function () {
            return this.ig;
        },
        set: function (a) {
            this.ig = a;
            this.g("SummaryScope");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isGroupCollapsable", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("IsGroupCollapsable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "groupHeaderDisplayMode", {
        get: function () {
            return this.gq;
        },
        set: function (a) {
            this.gq = a;
            this.g("GroupHeaderDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isGroupExpandedDefault", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("IsGroupExpandedDefault");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "groupSummaryDisplayMode", {
        get: function () {
            return this.gr;
        },
        set: function (a) {
            this.gr = a;
            this.g("GroupSummaryDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "autoAcceptEdits", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("AutoAcceptEdits");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "primaryKey", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("PrimaryKey");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualPrimaryKey", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ActualPrimaryKey");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualColumns", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ActualColumns");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columns", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("Columns");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "reactsToSortChanges", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.g("ReactsToSortChanges");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "reactsToGroupChanges", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.g("ReactsToGroupChanges");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "reactsToFilterChanges", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.g("ReactsToFilterChanges");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "enterBehavior", {
        get: function () {
            return this.gi;
        },
        set: function (a) {
            this.gi = a;
            this.g("EnterBehavior");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "enterBehaviorAfterEdit", {
        get: function () {
            return this.gj;
        },
        set: function (a) {
            this.gj = a;
            this.g("EnterBehaviorAfterEdit");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isColumnOptionsSummariesEnabled", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("IsColumnOptionsSummariesEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isColumnOptionsGroupingEnabled", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("IsColumnOptionsGroupingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "mergedCellMode", {
        get: function () {
            return this.g8;
        },
        set: function (a) {
            this.g8 = a;
            this.g("MergedCellMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "mergedCellEvaluationCriteria", {
        get: function () {
            return this.g7;
        },
        set: function (a) {
            this.g7 = a;
            this.g("MergedCellEvaluationCriteria");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "mergedCellVerticalAlignment", {
        get: function () {
            return this.g9;
        },
        set: function (a) {
            this.g9 = a;
            this.g("MergedCellVerticalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "filterUIType", {
        get: function () {
            return this.go;
        },
        set: function (a) {
            this.go = a;
            this.g("FilterUIType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "filterLogicalOperator", {
        get: function () {
            return this.gn;
        },
        set: function (a) {
            this.gn = a;
            this.g("FilterLogicalOperator");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "filterComparisonType", {
        get: function () {
            return this.gk;
        },
        set: function (a) {
            this.gk = a;
            this.g("FilterComparisonType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "todayOverride", {
        get: function () {
            return this.c1;
        },
        set: function (a) {
            this.c1 = a;
            this.g("TodayOverride");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "clearSelectionOnEscape", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("ClearSelectionOnEscape");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "pageSize", {
        get: function () {
            return this.eo;
        },
        set: function (a) {
            this.eo = a;
            this.g("PageSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isToolbarColumnChooserVisible", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("IsToolbarColumnChooserVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "isToolbarColumnPinningVisible", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.g("IsToolbarColumnPinningVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "toolbarTitle", {
        get: function () {
            return this.iw;
        },
        set: function (a) {
            this.iw = a;
            this.g("ToolbarTitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "toolbarColumnChooserText", {
        get: function () {
            return this.is;
        },
        set: function (a) {
            this.is = a;
            this.g("ToolbarColumnChooserText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "toolbarColumnChooserTitle", {
        get: function () {
            return this.it;
        },
        set: function (a) {
            this.it = a;
            this.g("ToolbarColumnChooserTitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "toolbarColumnPinningText", {
        get: function () {
            return this.iu;
        },
        set: function (a) {
            this.iu = a;
            this.g("ToolbarColumnPinningText");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "toolbarColumnPinningTitle", {
        get: function () {
            return this.iv;
        },
        set: function (a) {
            this.iv = a;
            this.g("ToolbarColumnPinningTitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "scrollbarStyle", {
        get: function () {
            return this.hn;
        },
        set: function (a) {
            this.hn = a;
            this.g("ScrollbarStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "scrollbarBackground", {
        get: function () {
            return this.hm;
        },
        set: function (a) {
            this.hm = a;
            this.g("ScrollbarBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "allowCopyOperation", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("AllowCopyOperation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "deferEventForRowDragSelection", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("DeferEventForRowDragSelection");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "filterExpressionsChangingRef", {
        get: function () {
            return this.gm;
        },
        set: function (a) {
            this.gm = a;
            this.g("FilterExpressionsChangingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "filterExpressionsChangedRef", {
        get: function () {
            return this.gl;
        },
        set: function (a) {
            this.gl = a;
            this.g("FilterExpressionsChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellPreviewPointerDownRef", {
        get: function () {
            return this.fi;
        },
        set: function (a) {
            this.fi = a;
            this.g("CellPreviewPointerDownRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellPreviewPointerUpRef", {
        get: function () {
            return this.fj;
        },
        set: function (a) {
            this.fj = a;
            this.g("CellPreviewPointerUpRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellPointerDownRef", {
        get: function () {
            return this.fg;
        },
        set: function (a) {
            this.fg = a;
            this.g("CellPointerDownRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellPointerUpRef", {
        get: function () {
            return this.fh;
        },
        set: function (a) {
            this.fh = a;
            this.g("CellPointerUpRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellClickedRef", {
        get: function () {
            return this.e9;
        },
        set: function (a) {
            this.e9 = a;
            this.g("CellClickedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sortDescriptionsChangedRef", {
        get: function () {
            return this.h2;
        },
        set: function (a) {
            this.h2 = a;
            this.g("SortDescriptionsChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "groupDescriptionsChangedRef", {
        get: function () {
            return this.gp;
        },
        set: function (a) {
            this.gp = a;
            this.g("GroupDescriptionsChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "summaryDescriptionsChangedRef", {
        get: function () {
            return this.h4;
        },
        set: function (a) {
            this.h4 = a;
            this.g("SummaryDescriptionsChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnHiddenChangedRef", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            this.fq = a;
            this.g("ColumnHiddenChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnPinnedChangedRef", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            this.fy = a;
            this.g("ColumnPinnedChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellValueChangingRef", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            this.fn = a;
            this.g("CellValueChangingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataCommittedRef", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.g("DataCommittedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "dataCommittingRef", {
        get: function () {
            return this.f8;
        },
        set: function (a) {
            this.f8 = a;
            this.g("DataCommittingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rootSummariesChangedRef", {
        get: function () {
            return this.hb;
        },
        set: function (a) {
            this.hb = a;
            this.g("RootSummariesChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "sizeChangedRef", {
        get: function () {
            return this.h1;
        },
        set: function (a) {
            this.h1 = a;
            this.g("SizeChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualColumnsChangedRef", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            this.e4 = a;
            this.g("ActualColumnsChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnsAutoGeneratedRef", {
        get: function () {
            return this.f3;
        },
        set: function (a) {
            this.f3 = a;
            this.g("ColumnsAutoGeneratedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedItemsChangedRef", {
        get: function () {
            return this.hw;
        },
        set: function (a) {
            this.hw = a;
            this.g("SelectedItemsChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedKeysChangedRef", {
        get: function () {
            return this.hx;
        },
        set: function (a) {
            this.hx = a;
            this.g("SelectedKeysChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedCellsChangedRef", {
        get: function () {
            return this.hv;
        },
        set: function (a) {
            this.hv = a;
            this.g("SelectedCellsChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectionChangedRef", {
        get: function () {
            return this.hz;
        },
        set: function (a) {
            this.hz = a;
            this.g("SelectionChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "activeCellChangedRef", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            this.e3 = a;
            this.g("ActiveCellChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "selectedCellRangesChangedRef", {
        get: function () {
            return this.hu;
        },
        set: function (a) {
            this.hu = a;
            this.g("SelectedCellRangesChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "columnWidthChangedRef", {
        get: function () {
            return this.f5;
        },
        set: function (a) {
            this.f5 = a;
            this.g("ColumnWidthChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellEditStartedRef", {
        get: function () {
            return this.fc;
        },
        set: function (a) {
            this.fc = a;
            this.g("CellEditStartedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "cellEditEndedRef", {
        get: function () {
            return this.fb;
        },
        set: function (a) {
            this.fb = a;
            this.g("CellEditEndedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowEditStartedRef", {
        get: function () {
            return this.hd;
        },
        set: function (a) {
            this.hd = a;
            this.g("RowEditStartedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "rowEditEndedRef", {
        get: function () {
            return this.hc;
        },
        set: function (a) {
            this.hc = a;
            this.g("RowEditEndedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "customFilterRequestedRef", {
        get: function () {
            return this.f6;
        },
        set: function (a) {
            this.f6 = a;
            this.g("CustomFilterRequestedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataGridDescription.prototype, "actualPrimaryKeyChangeRef", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            this.e5 = a;
            this.g("ActualPrimaryKeyChangeRef");
        },
        enumerable: false,
        configurable: true
    });
    DataGridDescription.$t = markType(DataGridDescription, 'DataGridDescription', Description.$);
    return DataGridDescription;
}(Description));
export { DataGridDescription };
