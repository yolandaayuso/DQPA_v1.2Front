/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var WebPivotValueDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebPivotValueDescription, _super);
    function WebPivotValueDescription() {
        var _this = _super.call(this) || this;
        _this.u = null;
        _this.s = null;
        _this.j = null;
        _this.h = null;
        _this.m = false;
        _this.o = null;
        _this.r = null;
        _this.t = null;
        return _this;
    }
    WebPivotValueDescription.prototype.get_type = function () {
        return "WebPivotValue";
    };
    Object.defineProperty(WebPivotValueDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebPivotValueDescription.prototype, "member", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("Member");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebPivotValueDescription.prototype, "displayName", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("DisplayName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebPivotValueDescription.prototype, "aggregate", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("Aggregate");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebPivotValueDescription.prototype, "aggregateList", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("AggregateList");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebPivotValueDescription.prototype, "enabled", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("Enabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebPivotValueDescription.prototype, "styles", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("Styles");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebPivotValueDescription.prototype, "dataType", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("DataType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebPivotValueDescription.prototype, "formatterRef", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("FormatterRef");
        },
        enumerable: false,
        configurable: true
    });
    WebPivotValueDescription.$t = markType(WebPivotValueDescription, 'WebPivotValueDescription', Description.$);
    WebPivotValueDescription.__marshalByValue = true;
    WebPivotValueDescription.__marshalByValueAlias = "PivotValue";
    return WebPivotValueDescription;
}(Description));
export { WebPivotValueDescription };
