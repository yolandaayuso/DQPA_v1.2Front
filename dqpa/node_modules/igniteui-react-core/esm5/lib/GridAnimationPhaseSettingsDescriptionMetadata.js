/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GridAnimationPhaseSettingsDescription } from "./GridAnimationPhaseSettingsDescription";
/**
 * @hidden
 */
var GridAnimationPhaseSettingsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridAnimationPhaseSettingsDescriptionMetadata, _super);
    function GridAnimationPhaseSettingsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridAnimationPhaseSettingsDescriptionMetadata.b = function (a) {
        if (GridAnimationPhaseSettingsDescriptionMetadata.a == null) {
            GridAnimationPhaseSettingsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridAnimationPhaseSettingsDescriptionMetadata.c(GridAnimationPhaseSettingsDescriptionMetadata.a);
        }
        if (a.k(GridAnimationPhaseSettingsDescriptionMetadata.a)) {
            return;
        }
        a.ac(GridAnimationPhaseSettingsDescriptionMetadata.a);
    };
    GridAnimationPhaseSettingsDescriptionMetadata.c = function (a) {
        a.item("DurationMilliseconds", "Number:int");
        a.item("HoldInitialMilliseconds", "Number:int");
        a.item("PerItemDelayMilliseconds", "Number:int");
        a.item("SubItemDurationMilliseconds", "Number:int");
        a.item("DesiredSubItemDurationMilliseconds", "Number:int");
        a.item("ShouldItemsFinishSimultaneously", "Boolean");
        a.item("EasingFunctionType", "ExportedType:string:GridEasingFunctionType");
        a.item("EasingFunctionType@names", "Linear;CubicInOut;ExponentialInOut;CircleInOut");
    };
    GridAnimationPhaseSettingsDescriptionMetadata.d = function (a) {
        GridAnimationPhaseSettingsDescriptionMetadata.b(a);
        a.ae("GridAnimationPhaseSettings", function () { return new GridAnimationPhaseSettingsDescription(); });
        a.ad("GridAnimationPhaseSettings", GridAnimationPhaseSettingsDescriptionMetadata.a);
    };
    GridAnimationPhaseSettingsDescriptionMetadata.$t = markType(GridAnimationPhaseSettingsDescriptionMetadata, 'GridAnimationPhaseSettingsDescriptionMetadata');
    GridAnimationPhaseSettingsDescriptionMetadata.a = null;
    return GridAnimationPhaseSettingsDescriptionMetadata;
}(Base));
export { GridAnimationPhaseSettingsDescriptionMetadata };
