/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var GridAnimationPhaseSettingsDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridAnimationPhaseSettingsDescription, _super);
    function GridAnimationPhaseSettingsDescription() {
        var _this = _super.call(this) || this;
        _this.k = 0;
        _this.l = 0;
        _this.m = 0;
        _this.n = 0;
        _this.j = 0;
        _this.h = false;
        _this.t = null;
        return _this;
    }
    GridAnimationPhaseSettingsDescription.prototype.get_type = function () {
        return "GridAnimationPhaseSettings";
    };
    Object.defineProperty(GridAnimationPhaseSettingsDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridAnimationPhaseSettingsDescription.prototype, "durationMilliseconds", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("DurationMilliseconds");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridAnimationPhaseSettingsDescription.prototype, "holdInitialMilliseconds", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("HoldInitialMilliseconds");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridAnimationPhaseSettingsDescription.prototype, "perItemDelayMilliseconds", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("PerItemDelayMilliseconds");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridAnimationPhaseSettingsDescription.prototype, "subItemDurationMilliseconds", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("SubItemDurationMilliseconds");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridAnimationPhaseSettingsDescription.prototype, "desiredSubItemDurationMilliseconds", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("DesiredSubItemDurationMilliseconds");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridAnimationPhaseSettingsDescription.prototype, "shouldItemsFinishSimultaneously", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ShouldItemsFinishSimultaneously");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GridAnimationPhaseSettingsDescription.prototype, "easingFunctionType", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("EasingFunctionType");
        },
        enumerable: false,
        configurable: true
    });
    GridAnimationPhaseSettingsDescription.$t = markType(GridAnimationPhaseSettingsDescription, 'GridAnimationPhaseSettingsDescription', Description.$);
    return GridAnimationPhaseSettingsDescription;
}(Description));
export { GridAnimationPhaseSettingsDescription };
