/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var TreemapNodeStylingEventArgsDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TreemapNodeStylingEventArgsDescription, _super);
    function TreemapNodeStylingEventArgsDescription() {
        var _this = _super.call(this) || this;
        _this.v = 0;
        _this.t = 0;
        _this.ab = null;
        _this.ac = null;
        _this.ae = null;
        _this.ad = null;
        _this.s = 0;
        _this.af = null;
        _this.r = 0;
        _this.n = false;
        _this.j = null;
        _this.h = null;
        _this.l = false;
        _this.m = false;
        _this.u = 0;
        return _this;
    }
    TreemapNodeStylingEventArgsDescription.prototype.get_type = function () {
        return "TreemapNodeStylingEventArgs";
    };
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "value", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "sum", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("Sum");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "customValueRef", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("CustomValueRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "itemRef", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("ItemRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "parentItemRef", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("ParentItemRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "label", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("Label");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "parentValue", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("ParentValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "parentLabel", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("ParentLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "parentSum", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("ParentSum");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "isParent", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("IsParent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "style", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("Style");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "highlightingInfo", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("HighlightingInfo");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "highlightingHandled", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("HighlightingHandled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "isHighlightInProgress", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("IsHighlightInProgress");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodeStylingEventArgsDescription.prototype, "totalHighlightProgress", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("TotalHighlightProgress");
        },
        enumerable: false,
        configurable: true
    });
    TreemapNodeStylingEventArgsDescription.$t = markType(TreemapNodeStylingEventArgsDescription, 'TreemapNodeStylingEventArgsDescription', Description.$);
    return TreemapNodeStylingEventArgsDescription;
}(Description));
export { TreemapNodeStylingEventArgsDescription };
