/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { PropertyUpdatedEventArgsDescriptionMetadata } from "./PropertyUpdatedEventArgsDescriptionMetadata";
import { ToolContextBindingDescription } from "./ToolContextBindingDescription";
/**
 * @hidden
 */
var ToolContextBindingDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolContextBindingDescriptionMetadata, _super);
    function ToolContextBindingDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolContextBindingDescriptionMetadata.b = function (a) {
        if (ToolContextBindingDescriptionMetadata.a == null) {
            ToolContextBindingDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ToolContextBindingDescriptionMetadata.c(ToolContextBindingDescriptionMetadata.a);
        }
        if (a.k(ToolContextBindingDescriptionMetadata.a)) {
            return;
        }
        a.ac(ToolContextBindingDescriptionMetadata.a);
        PropertyUpdatedEventArgsDescriptionMetadata.d(a);
    };
    ToolContextBindingDescriptionMetadata.c = function (a) {
        a.item("BindingMode", "ExportedType:string:ToolContextBindingMode");
        a.item("BindingMode@names", "OneWay;TwoWay");
        a.item("ContextKey", "String");
        a.item("PropertyName", "String");
        a.item("PropertyUpdatedRef", "EventRef::propertyUpdated");
    };
    ToolContextBindingDescriptionMetadata.d = function (a) {
        ToolContextBindingDescriptionMetadata.b(a);
        a.ae("ToolContextBinding", function () { return new ToolContextBindingDescription(); });
        a.ad("ToolContextBinding", ToolContextBindingDescriptionMetadata.a);
    };
    ToolContextBindingDescriptionMetadata.$t = markType(ToolContextBindingDescriptionMetadata, 'ToolContextBindingDescriptionMetadata');
    ToolContextBindingDescriptionMetadata.a = null;
    return ToolContextBindingDescriptionMetadata;
}(Base));
export { ToolContextBindingDescriptionMetadata };
