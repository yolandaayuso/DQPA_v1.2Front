/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { TreemapNodeStyleDescription } from "./TreemapNodeStyleDescription";
/**
 * @hidden
 */
var TreemapNodeStyleDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TreemapNodeStyleDescriptionMetadata, _super);
    function TreemapNodeStyleDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreemapNodeStyleDescriptionMetadata.b = function (a) {
        if (TreemapNodeStyleDescriptionMetadata.a == null) {
            TreemapNodeStyleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            TreemapNodeStyleDescriptionMetadata.c(TreemapNodeStyleDescriptionMetadata.a);
        }
        if (a.k(TreemapNodeStyleDescriptionMetadata.a)) {
            return;
        }
        a.ac(TreemapNodeStyleDescriptionMetadata.a);
    };
    TreemapNodeStyleDescriptionMetadata.c = function (a) {
        a.item("HeaderHoverBackground", "Brush");
        a.item("HeaderBackground", "Brush");
        a.item("HeaderTextColor", "Brush");
        a.item("Label", "String");
        a.item("TextColor", "Brush");
        a.item("HeaderHoverTextColor", "Brush");
        a.item("HeaderLabelLeftMargin", "Number:double");
        a.item("HeaderLabelTopMargin", "Number:double");
        a.item("HeaderLabelRightMargin", "Number:double");
        a.item("HeaderLabelBottomMargin", "Number:double");
        a.item("LabelLeftMargin", "Number:double");
        a.item("LabelTopMargin", "Number:double");
        a.item("LabelRightMargin", "Number:double");
        a.item("LabelBottomMargin", "Number:double");
        a.item("HeaderHeight", "Number:double");
        a.item("LabelHorizontalAlignment", "ExportedType:string:HorizontalAlignment");
        a.item("LabelHorizontalAlignment@names", "Left;Center;Right;Stretch");
        a.item("LabelVerticalAlignment", "ExportedType:string:VerticalAlignment");
        a.item("LabelVerticalAlignment@names", "Top;Center;Bottom;Stretch");
        a.item("Fill", "Brush");
        a.item("Outline", "Brush");
        a.item("StrokeThickness", "Number:double");
        a.item("Opacity", "Number:double");
        a.item("FadeOpacity", "Number:double");
        a.item("HighlightingHandled", "Boolean");
    };
    TreemapNodeStyleDescriptionMetadata.d = function (a) {
        TreemapNodeStyleDescriptionMetadata.b(a);
        a.ae("TreemapNodeStyle", function () { return new TreemapNodeStyleDescription(); });
        a.ad("TreemapNodeStyle", TreemapNodeStyleDescriptionMetadata.a);
    };
    TreemapNodeStyleDescriptionMetadata.$t = markType(TreemapNodeStyleDescriptionMetadata, 'TreemapNodeStyleDescriptionMetadata');
    TreemapNodeStyleDescriptionMetadata.a = null;
    return TreemapNodeStyleDescriptionMetadata;
}(Base));
export { TreemapNodeStyleDescriptionMetadata };
