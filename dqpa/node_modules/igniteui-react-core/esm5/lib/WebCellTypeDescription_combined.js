/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var WebCellTypeDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebCellTypeDescription, _super);
    function WebCellTypeDescription() {
        var _this = _super.call(this) || this;
        _this.ah = null;
        _this.af = null;
        _this.w = false;
        _this.s = false;
        _this.t = false;
        _this.u = false;
        _this.h = null;
        _this.p = null;
        _this.j = null;
        _this.l = null;
        _this.ae = null;
        _this.n = null;
        _this.v = false;
        _this.ag = null;
        _this.an = null;
        _this.ac = 0;
        return _this;
    }
    WebCellTypeDescription.prototype.get_type = function () {
        return "WebCellType";
    };
    Object.defineProperty(WebCellTypeDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "value", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "editValue", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("EditValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "selected", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("Selected");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "active", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("Active");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "editable", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("Editable");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "editMode", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("EditMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "column", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Column");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "row", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("Row");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "grid", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("Grid");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "id", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("Id");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "cellID", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("CellID");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "validation", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("Validation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "readonly", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("Readonly");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "title", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("Title");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "width", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebCellTypeDescription.prototype, "visibleColumnIndex", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("VisibleColumnIndex");
        },
        enumerable: false,
        configurable: true
    });
    WebCellTypeDescription.$t = markType(WebCellTypeDescription, 'WebCellTypeDescription', Description.$);
    WebCellTypeDescription.__marshalByValue = true;
    WebCellTypeDescription.__marshalByValueAlias = "CellType";
    return WebCellTypeDescription;
}(Description));
export { WebCellTypeDescription };
/**
 * @hidden
 */
var WebRowTypeDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebRowTypeDescription, _super);
    function WebRowTypeDescription() {
        var _this = _super.call(this) || this;
        _this.as = 0;
        _this.at = 0;
        _this.ad = false;
        _this.ae = false;
        _this.p = null;
        _this.ax = null;
        _this.n = null;
        _this.aw = null;
        _this.h = null;
        _this.y = false;
        _this.af = false;
        _this.ag = false;
        _this.z = false;
        _this.x = false;
        _this.ac = false;
        _this.i = null;
        _this.r = null;
        _this.ab = false;
        _this.t = null;
        _this.w = false;
        _this.aa = false;
        _this.l = null;
        return _this;
    }
    WebRowTypeDescription.prototype.get_type = function () {
        return "WebRowType";
    };
    Object.defineProperty(WebRowTypeDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "index", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("Index");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "viewIndex", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("ViewIndex");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "isGroupByRow", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("IsGroupByRow");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "isSummaryRow", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("IsSummaryRow");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "groupRow", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("GroupRow");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "key", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("Key");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "validation", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("Validation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "data", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("Data");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "cells", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Cells");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "disabled", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("Disabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "pinned", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("Pinned");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "selected", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("Selected");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "expanded", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("Expanded");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "deleted", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("Deleted");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "inEditMode", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("InEditMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "children", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("Children");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "rowParent", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("RowParent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "hasChildren", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("HasChildren");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "treeRow", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("TreeRow");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "addRowUI", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("AddRowUI");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "focused", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("Focused");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebRowTypeDescription.prototype, "grid", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("Grid");
        },
        enumerable: false,
        configurable: true
    });
    WebRowTypeDescription.$t = markType(WebRowTypeDescription, 'WebRowTypeDescription', Description.$);
    WebRowTypeDescription.__marshalByValue = true;
    WebRowTypeDescription.__marshalByValueAlias = "RowType";
    return WebRowTypeDescription;
}(Description));
export { WebRowTypeDescription };
