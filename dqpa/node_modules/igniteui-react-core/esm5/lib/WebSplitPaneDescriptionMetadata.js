/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebDockManagerPointDescriptionMetadata } from "./WebDockManagerPointDescriptionMetadata";
import { WebDockManagerPaneDescriptionMetadata } from "./WebDockManagerPaneDescriptionMetadata";
import { WebSplitPaneDescription } from "./WebSplitPaneDescription";
/**
 * @hidden
 */
var WebSplitPaneDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebSplitPaneDescriptionMetadata, _super);
    function WebSplitPaneDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebSplitPaneDescriptionMetadata.b = function (a) {
        if (WebSplitPaneDescriptionMetadata.a == null) {
            WebSplitPaneDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebSplitPaneDescriptionMetadata.c(WebSplitPaneDescriptionMetadata.a);
        }
        if (a.k(WebSplitPaneDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebSplitPaneDescriptionMetadata.a);
        WebDockManagerPointDescriptionMetadata.d(a);
    };
    WebSplitPaneDescriptionMetadata.c = function (a) {
        WebDockManagerPaneDescriptionMetadata.c(a);
        a.item("__qualifiedNameTS", "String:SplitPane");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("Id", "String");
        a.item("PaneType", "(wc:Type)ExportedType:string:DockManagerPaneType");
        a.item("PaneType@names", "SplitPane;ContentPane;TabGroupPane;DocumentHost");
        a.item("Orientation", "ExportedType:string:SplitPaneOrientation");
        a.item("Orientation@stringUnion", "WebComponents;React");
        a.item("Orientation@names", "Horizontal;Vertical");
        a.item("Panes", "Collection:WebDockManagerPane:DockManagerPaneCollection:WebDockManagerPane");
        a.item("Size", "Number:double");
        a.item("FloatingLocation", "ExportedType:WebDockManagerPoint");
        a.item("FloatingWidth", "Number:double");
        a.item("FloatingHeight", "Number:double");
        a.item("FloatingResizable", "Boolean");
        a.item("AllowEmpty", "Boolean");
        a.item("IsMaximized", "Boolean");
        WebSplitPaneDescriptionMetadata.e(a);
    };
    WebSplitPaneDescriptionMetadata.d = function (a) {
        WebSplitPaneDescriptionMetadata.b(a);
        a.ae("WebSplitPane", function () { return new WebSplitPaneDescription(); });
        a.ad("WebSplitPane", WebSplitPaneDescriptionMetadata.a);
    };
    WebSplitPaneDescriptionMetadata.e = function (a) {
        a.item("__preferUnsuffixed", "Boolean");
    };
    WebSplitPaneDescriptionMetadata.$t = markType(WebSplitPaneDescriptionMetadata, 'WebSplitPaneDescriptionMetadata');
    WebSplitPaneDescriptionMetadata.a = null;
    return WebSplitPaneDescriptionMetadata;
}(Base));
export { WebSplitPaneDescriptionMetadata };
