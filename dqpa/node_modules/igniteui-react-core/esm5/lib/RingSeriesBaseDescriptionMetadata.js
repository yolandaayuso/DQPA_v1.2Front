/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { PropertyUpdatedEventArgsDescriptionMetadata } from "./PropertyUpdatedEventArgsDescriptionMetadata";
/**
 * @hidden
 */
var RingSeriesBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RingSeriesBaseDescriptionMetadata, _super);
    function RingSeriesBaseDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RingSeriesBaseDescriptionMetadata.e = function (a) {
        a.item("DataSourceRef", "(w:ItemsSource)DataRef:String");
        a.item("TooltipTemplateRef", "(w:ToolTip)DataRef:String");
        a.item("FontFamily", "(w:FontFamily/FontFamilyTransform,xam:FontFamily,wf:FontFamily,web:TextStyle/FontFamilyTransform)String");
        a.item("FontSize", "(w:FontSize,xam:FontSize,wf:FontSize,web:TextStyle/FontSizeTransform)Number:double");
        a.item("FontStyle", "(w:FontStyle/FontStyleTransform,xam:FontStyle/FontStyleTransform,wf:FontStyle/FontStyleTransform,web:TextStyle/FontStyleTransform)String");
        a.item("FontWeight", "(w:FontWeight/FontWeightTransform,xam:FontStyle/FontWeightTransform,wf:FontStyle/FontWeightTransform,web:TextStyle/FontWeightTransform)String");
    };
    RingSeriesBaseDescriptionMetadata.b = function (a) {
        if (RingSeriesBaseDescriptionMetadata.a == null) {
            RingSeriesBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            RingSeriesBaseDescriptionMetadata.c(RingSeriesBaseDescriptionMetadata.a);
        }
        if (a.k(RingSeriesBaseDescriptionMetadata.a)) {
            return;
        }
        a.ac(RingSeriesBaseDescriptionMetadata.a);
        PropertyUpdatedEventArgsDescriptionMetadata.d(a);
    };
    RingSeriesBaseDescriptionMetadata.c = function (a) {
        a.item("DataSourceRef", "(w:ItemsSource,xam:ItemsSource,wf:ItemsSource)DataRef::object");
        a.item("ValueMemberPath", "String");
        a.item("LabelMemberPath", "String");
        a.item("LegendLabelMemberPath", "String");
        a.item("LabelsPosition", "ExportedType:string:LabelsPosition");
        a.item("LabelsPosition@names", "None;Center;InsideEnd;OutsideEnd;BestFit");
        a.item("LeaderLineVisibility", "ExportedType:string:Visibility");
        a.item("LeaderLineVisibility@names", "Visible;Collapsed");
        a.item("LeaderLineFill", "(w:LeaderLineStyle.Fill,wf:LeaderLineFill)String");
        a.item("LeaderLineStroke", "(w:LeaderLineStyle.Stroke,wf:LeaderLineStroke)String");
        a.item("LeaderLineStrokeThickness", "(w:LeaderLineStyle.StrokeThickness,wf:LeaderLineStrokeThickness)Number:double");
        a.item("LeaderLineOpacity", "(w:LeaderLineStyle.Opacity,wf:LeaderLineOpacity)Number:double");
        a.item("LeaderLineType", "ExportedType:string:LeaderLineType");
        a.item("LeaderLineType@names", "Straight;Arc;Spline");
        a.item("LeaderLineMargin", "Number:double");
        a.item("OthersCategoryThreshold", "Number:double");
        a.item("OthersCategoryType", "ExportedType:string:OthersCategoryType");
        a.item("OthersCategoryType@names", "Number;Percent");
        a.item("OthersCategoryText", "String");
        a.item("LegendRef", "(w:Legend,wf:Legend)DataRef::object");
        a.item("FormatLabelRef", "(w:FormatLabel,wf:FormatLabel)MethodRef");
        a.item("FormatLegendLabelRef", "(w:FormatLegendLabel,wf:FormatLegendLabel)MethodRef");
        a.item("LabelFormat", "String");
        a.item("LabelFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("LabelFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
        a.item("OthersLabelFormat", "String");
        a.item("OthersLabelFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("OthersLabelFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
        a.item("LegendLabelFormat", "String");
        a.item("LegendLabelFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("LegendLabelFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
        a.item("LegendOthersLabelFormat", "String");
        a.item("LegendOthersLabelFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("LegendOthersLabelFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
        a.item("LabelExtent", "Number:double");
        a.item("StartAngle", "Number:double");
        a.item("OthersCategoryFill", "(w:OthersCategoryStyle.Fill,wf:OthersCategoryFill)String");
        a.item("OthersCategoryStroke", "(w:OthersCategoryStyle.Stroke,wf:OthersCategoryStroke)String");
        a.item("OthersCategoryStrokeThickness", "(w:OthersCategoryStyle.StrokeThickness,wf:OthersCategoryStrokeThickness)Number:double");
        a.item("OthersCategoryOpacity", "(w:OthersCategoryStyle.Opacity,wf:OthersCategoryOpacity)Number:double");
        a.item("SelectedSliceFill", "(w:SelectedStyle.Fill,wf:SelectedSliceFill)String");
        a.item("SelectedSliceStroke", "(w:SelectedStyle.Stroke,wf:SelectedSliceStroke)String");
        a.item("SelectedSliceStrokeThickness", "(w:SelectedStyle.StrokeThickness,wf:SelectedSliceStrokeThickness)Number:double");
        a.item("SelectedSliceOpacity", "(w:SelectedStyle.Opacity,wf:SelectedSliceOpacity)Number:double");
        a.item("Brushes", "BrushCollection:string");
        a.item("Outlines", "BrushCollection:string");
        a.item("LabelOuterColor", "Brush");
        a.item("LabelInnerColor", "Brush");
        a.item("IsSurfaceInteractionDisabled", "Boolean");
        a.item("RadiusFactor", "Number:double");
        a.item("PropertyUpdatedRef", "EventRef::propertyUpdated");
        RingSeriesBaseDescriptionMetadata.e(a);
    };
    RingSeriesBaseDescriptionMetadata.d = function (a) {
        RingSeriesBaseDescriptionMetadata.b(a);
        a.ad("RingSeriesBase", RingSeriesBaseDescriptionMetadata.a);
    };
    RingSeriesBaseDescriptionMetadata.$t = markType(RingSeriesBaseDescriptionMetadata, 'RingSeriesBaseDescriptionMetadata');
    RingSeriesBaseDescriptionMetadata.a = null;
    return RingSeriesBaseDescriptionMetadata;
}(Base));
export { RingSeriesBaseDescriptionMetadata };
