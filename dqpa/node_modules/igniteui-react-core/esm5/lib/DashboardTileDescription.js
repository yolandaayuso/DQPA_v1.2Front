/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var DashboardTileDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DashboardTileDescription, _super);
    function DashboardTileDescription() {
        var _this = _super.call(this) || this;
        _this.k = null;
        _this.b0 = null;
        _this.v = null;
        _this.t = null;
        _this.s = null;
        _this.r = null;
        _this.u = null;
        _this.w = null;
        _this.by = null;
        _this.br = null;
        _this.bw = null;
        _this.bv = null;
        _this.bx = null;
        _this.bz = null;
        _this.z = null;
        _this.o = null;
        _this.n = null;
        _this.m = null;
        _this.p = null;
        _this.aa = null;
        _this.bo = null;
        _this.a1 = null;
        _this.bt = null;
        _this.a2 = null;
        _this.a9 = false;
        _this.a8 = false;
        _this.b1 = null;
        _this.ba = false;
        _this.bu = null;
        _this.q = null;
        _this.ab = null;
        _this.l = null;
        _this.j = null;
        _this.x = null;
        _this.y = null;
        _this.h = null;
        _this.i = null;
        _this.bl = null;
        _this.ac = null;
        _this.ad = null;
        _this.a5 = false;
        _this.a6 = false;
        _this.a7 = false;
        _this.bn = null;
        _this.b2 = null;
        _this.bh = 0;
        _this.bk = null;
        _this.bp = null;
        _this.bj = null;
        _this.bm = null;
        _this.bq = null;
        _this.b3 = null;
        _this.bs = null;
        return _this;
    }
    DashboardTileDescription.prototype.get_type = function () {
        return "DashboardTile";
    };
    Object.defineProperty(DashboardTileDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "customizations", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("Customizations");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "tileTitle", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("TileTitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialSortDescriptions", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("InitialSortDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialGroupSortDescriptions", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("InitialGroupSortDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialGroupDescriptions", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("InitialGroupDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialFilterExpressions", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("InitialFilterExpressions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialHighlightFilterExpressions", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("InitialHighlightFilterExpressions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialSummaryDescriptions", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("InitialSummaryDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialSorts", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("InitialSorts");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "groupSorts", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("GroupSorts");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialGroups", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("InitialGroups");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialFilter", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("InitialFilter");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialHighlightFilter", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("InitialHighlightFilter");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "initialSummaries", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("InitialSummaries");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "sortDescriptions", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("SortDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "groupSortDescriptions", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("GroupSortDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "groupDescriptions", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("GroupDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "filterExpressions", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("FilterExpressions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "highlightFilterExpressions", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("HighlightFilterExpressions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "summaryDescriptions", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("SummaryDescriptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "dataSourceRef", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("DataSourceRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "dataSource", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("DataSource");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "highlightedDataSourceRef", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("HighlightedDataSourceRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "highlightedDataSource", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("HighlightedDataSource");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "shouldDisplayMockData", {
        get: function () {
            return this.a9;
        },
        set: function (a) {
            this.a9 = a;
            this.g("ShouldDisplayMockData");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "shouldAvoidAxisAnnotationCollisions", {
        get: function () {
            return this.a8;
        },
        set: function (a) {
            this.a8 = a;
            this.g("ShouldAvoidAxisAnnotationCollisions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "trendLineType", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("TrendLineType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "shouldUseSkeletonStyleForMockData", {
        get: function () {
            return this.ba;
        },
        set: function (a) {
            this.ba = a;
            this.g("ShouldUseSkeletonStyleForMockData");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "highlightedValuesDisplayMode", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("HighlightedValuesDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "includedProperties", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("IncludedProperties");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "validVisualizationTypes", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("ValidVisualizationTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "excludedProperties", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("ExcludedProperties");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "brushes", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("Brushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "outlines", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("Outlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "selectedSeriesItems", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("SelectedSeriesItems");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "actualBrushes", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("ActualBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "actualOutlines", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("ActualOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "categoryAxisMajorStroke", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("CategoryAxisMajorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "valueLines", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("ValueLines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "valueLinesBrushes", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("ValueLinesBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "autoCalloutsVisible", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("AutoCalloutsVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "crosshairsAnnotationEnabled", {
        get: function () {
            return this.a6;
        },
        set: function (a) {
            this.a6 = a;
            this.g("CrosshairsAnnotationEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "finalValueAnnotationsVisible", {
        get: function () {
            return this.a7;
        },
        set: function (a) {
            this.a7 = a;
            this.g("FinalValueAnnotationsVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "crosshairsDisplayMode", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("CrosshairsDisplayMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "visualizationType", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.g("VisualizationType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "validVisualizationTypePriorityThreshold", {
        get: function () {
            return this.bh;
        },
        set: function (a) {
            this.bh = a;
            this.g("ValidVisualizationTypePriorityThreshold");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "baseTheme", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            this.bk = a;
            this.g("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "density", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "backgroundColor", {
        get: function () {
            return this.bj;
        },
        set: function (a) {
            this.bj = a;
            this.g("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "changingContentRef", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("ChangingContentRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "filterStringErrorsParsingRef", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("FilterStringErrorsParsingRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "width", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DashboardTileDescription.prototype, "height", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    DashboardTileDescription.$t = markType(DashboardTileDescription, 'DashboardTileDescription', Description.$);
    return DashboardTileDescription;
}(Description));
export { DashboardTileDescription };
