/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColorScaleDescriptionMetadata } from "./ColorScaleDescriptionMetadata";
import { CustomPaletteColorScaleDescription } from "./CustomPaletteColorScaleDescription";
/**
 * @hidden
 */
var CustomPaletteColorScaleDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CustomPaletteColorScaleDescriptionMetadata, _super);
    function CustomPaletteColorScaleDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CustomPaletteColorScaleDescriptionMetadata.b = function (a) {
        if (CustomPaletteColorScaleDescriptionMetadata.a == null) {
            CustomPaletteColorScaleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            CustomPaletteColorScaleDescriptionMetadata.c(CustomPaletteColorScaleDescriptionMetadata.a);
        }
        if (a.k(CustomPaletteColorScaleDescriptionMetadata.a)) {
            return;
        }
        a.ac(CustomPaletteColorScaleDescriptionMetadata.a);
    };
    CustomPaletteColorScaleDescriptionMetadata.c = function (a) {
        ColorScaleDescriptionMetadata.c(a);
        a.item("MinimumValue", "Number:double");
        a.item("MaximumValue", "Number:double");
        a.item("Palette", "ColorCollection:string");
        a.item("InterpolationMode", "ExportedType:string:ColorScaleInterpolationMode");
        a.item("InterpolationMode@names", "Select;InterpolateRGB;InterpolateHSV");
    };
    CustomPaletteColorScaleDescriptionMetadata.d = function (a) {
        CustomPaletteColorScaleDescriptionMetadata.b(a);
        a.ae("CustomPaletteColorScale", function () { return new CustomPaletteColorScaleDescription(); });
        a.ad("CustomPaletteColorScale", CustomPaletteColorScaleDescriptionMetadata.a);
    };
    CustomPaletteColorScaleDescriptionMetadata.$t = markType(CustomPaletteColorScaleDescriptionMetadata, 'CustomPaletteColorScaleDescriptionMetadata');
    CustomPaletteColorScaleDescriptionMetadata.a = null;
    return CustomPaletteColorScaleDescriptionMetadata;
}(Base));
export { CustomPaletteColorScaleDescriptionMetadata };
