/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebExporterEventArgsDescriptionMetadata } from "./WebExporterEventArgsDescriptionMetadata";
import { VoidEventArgsDescriptionMetadata } from "./VoidEventArgsDescriptionMetadata";
import { WebBaseToolbarDirectiveDescriptionMetadata } from "./WebBaseToolbarDirectiveDescriptionMetadata";
import { WebGridToolbarExporterDescription } from "./WebGridToolbarExporterDescription";
/**
 * @hidden
 */
var WebGridToolbarExporterDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebGridToolbarExporterDescriptionMetadata, _super);
    function WebGridToolbarExporterDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebGridToolbarExporterDescriptionMetadata.b = function (a) {
        if (WebGridToolbarExporterDescriptionMetadata.a == null) {
            WebGridToolbarExporterDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebGridToolbarExporterDescriptionMetadata.c(WebGridToolbarExporterDescriptionMetadata.a);
        }
        if (a.k(WebGridToolbarExporterDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebGridToolbarExporterDescriptionMetadata.a);
        WebExporterEventArgsDescriptionMetadata.d(a);
        VoidEventArgsDescriptionMetadata.d(a);
    };
    WebGridToolbarExporterDescriptionMetadata.c = function (a) {
        WebBaseToolbarDirectiveDescriptionMetadata.c(a);
        a.item("__qualifiedNameTS", "String:GridToolbarExporter");
        a.item("__tagNameWC", "String:igc-grid-toolbar-exporter");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        if (a.containsKey("__skipSuffix")) {
            a.removeItem("__skipSuffix");
        }
        a.item("__portalChildrenWC", "Boolean");
        a.item("__manageItemInMarkup", "Boolean");
        a.item("ExportCSV", "Boolean");
        a.item("ExportExcel", "Boolean");
        a.item("Filename", "String");
        a.item("ExportStartedRef", "EventRef::exportStarted:customEvent");
        a.item("ExportEndedRef", "EventRef::exportEnded:customEvent");
    };
    WebGridToolbarExporterDescriptionMetadata.d = function (a) {
        WebGridToolbarExporterDescriptionMetadata.b(a);
        a.ae("WebGridToolbarExporter", function () { return new WebGridToolbarExporterDescription(); });
        a.ad("WebGridToolbarExporter", WebGridToolbarExporterDescriptionMetadata.a);
    };
    WebGridToolbarExporterDescriptionMetadata.$t = markType(WebGridToolbarExporterDescriptionMetadata, 'WebGridToolbarExporterDescriptionMetadata');
    WebGridToolbarExporterDescriptionMetadata.a = null;
    return WebGridToolbarExporterDescriptionMetadata;
}(Base));
export { WebGridToolbarExporterDescriptionMetadata };
