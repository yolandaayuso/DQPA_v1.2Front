/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolPanelDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolPanelDescription, _super);
    function ToolPanelDescription() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.j = false;
        _this.k = false;
        _this.be = 0;
        _this.b9 = null;
        _this.z = 0;
        _this.ca = null;
        _this.cb = null;
        _this.cv = null;
        _this.ak = 0;
        _this.cw = null;
        _this.cx = null;
        _this.b8 = null;
        _this.cf = null;
        _this.bo = null;
        _this.b7 = null;
        _this.bl = null;
        _this.cu = null;
        _this.b0 = null;
        _this.ch = null;
        _this.bq = null;
        _this.ct = null;
        _this.bz = null;
        _this.ci = null;
        _this.br = null;
        _this.cm = null;
        _this.bv = null;
        _this.cz = null;
        _this.b2 = null;
        _this.b1 = null;
        _this.cy = null;
        _this.cg = null;
        _this.bp = null;
        _this.ck = null;
        _this.bt = null;
        _this.cj = null;
        _this.bs = null;
        _this.c1 = null;
        _this.b4 = null;
        _this.c0 = null;
        _this.b3 = null;
        _this.al = 0;
        _this.x = 0;
        _this.am = 0;
        _this.y = 0;
        _this.cn = null;
        _this.bw = null;
        _this.co = null;
        _this.bx = null;
        _this.ah = 0;
        _this.u = 0;
        _this.ai = 0;
        _this.v = 0;
        _this.aj = 0;
        _this.w = 0;
        _this.ag = 0;
        _this.t = 0;
        _this.ad = 0;
        _this.q = 0;
        _this.ae = 0;
        _this.r = 0;
        _this.af = 0;
        _this.s = 0;
        _this.ac = 0;
        _this.p = 0;
        _this.cs = null;
        _this.bg = 0;
        _this.ab = 0;
        _this.o = 0;
        _this.aa = 0;
        _this.n = 0;
        _this.cl = null;
        _this.bu = null;
        _this.cp = null;
        _this.by = null;
        _this.c2 = null;
        _this.b5 = null;
        _this.cc = null;
        _this.bm = null;
        _this.c3 = null;
        _this.b6 = null;
        _this.cd = null;
        _this.bn = null;
        _this.bf = 0;
        _this.bd = 0;
        _this.cq = null;
        _this.ce = null;
        _this.cr = null;
        return _this;
    }
    ToolPanelDescription.prototype.get_type = function () {
        return "ToolPanel";
    };
    Object.defineProperty(ToolPanelDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actions", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Actions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "showOnHover", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("ShowOnHover");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "showTooltipOnHover", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("ShowTooltipOnHover");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "dropdownClickBuffer", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            this.be = a;
            this.g("DropdownClickBuffer");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "cellFontFamily", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.g("CellFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "cellFontSize", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("CellFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "cellFontStyle", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.g("CellFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "cellFontWeight", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.g("CellFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "subtitleFontFamily", {
        get: function () {
            return this.cv;
        },
        set: function (a) {
            this.cv = a;
            this.g("SubtitleFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "subtitleFontSize", {
        get: function () {
            return this.ak;
        },
        set: function (a) {
            this.ak = a;
            this.g("SubtitleFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "subtitleFontStyle", {
        get: function () {
            return this.cw;
        },
        set: function (a) {
            this.cw = a;
            this.g("SubtitleFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "subtitleFontWeight", {
        get: function () {
            return this.cx;
        },
        set: function (a) {
            this.cx = a;
            this.g("SubtitleFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "baseTheme", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.g("BaseTheme");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "density", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            this.cf = a;
            this.g("Density");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualDensity", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            this.bo = a;
            this.g("ActualDensity");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "backgroundColor", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.g("BackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualBackgroundColor", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            this.bl = a;
            this.g("ActualBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "submenuBackgroundColor", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            this.cu = a;
            this.g("SubmenuBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSubmenuBackgroundColor", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("ActualSubmenuBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "groupHeaderBackgroundColor", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            this.ch = a;
            this.g("GroupHeaderBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualGroupHeaderBackgroundColor", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            this.bq = a;
            this.g("ActualGroupHeaderBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorBackgroundColor", {
        get: function () {
            return this.ct;
        },
        set: function (a) {
            this.ct = a;
            this.g("SeparatorBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorBackgroundColor", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("ActualSeparatorBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "groupHeaderSeparatorBackgroundColor", {
        get: function () {
            return this.ci;
        },
        set: function (a) {
            this.ci = a;
            this.g("GroupHeaderSeparatorBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualGroupHeaderSeparatorBackgroundColor", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("ActualGroupHeaderSeparatorBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "hoverBackgroundColor", {
        get: function () {
            return this.cm;
        },
        set: function (a) {
            this.cm = a;
            this.g("HoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualHoverBackgroundColor", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("ActualHoverBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "textColor", {
        get: function () {
            return this.cz;
        },
        set: function (a) {
            this.cz = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualTextColor", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.g("ActualTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSubtitleTextColor", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("ActualSubtitleTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "subtitleTextColor", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            this.cy = a;
            this.g("SubtitleTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "disabledTextColor", {
        get: function () {
            return this.cg;
        },
        set: function (a) {
            this.cg = a;
            this.g("DisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualDisabledTextColor", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("ActualDisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "groupHeaderTextColor", {
        get: function () {
            return this.ck;
        },
        set: function (a) {
            this.ck = a;
            this.g("GroupHeaderTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualGroupHeaderTextColor", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("ActualGroupHeaderTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "groupHeaderSubtitleTextColor", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            this.cj = a;
            this.g("GroupHeaderSubtitleTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualGroupHeaderSubtitleTextColor", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            this.bs = a;
            this.g("ActualGroupHeaderSubtitleTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "toolTipTextColor", {
        get: function () {
            return this.c1;
        },
        set: function (a) {
            this.c1 = a;
            this.g("ToolTipTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualToolTipTextColor", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.g("ActualToolTipTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "toolTipBackgroundColor", {
        get: function () {
            return this.c0;
        },
        set: function (a) {
            this.c0 = a;
            this.g("ToolTipBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualToolTipBackgroundColor", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.g("ActualToolTipBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "toolTipCornerRadius", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("ToolTipCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualToolTipCornerRadius", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("ActualToolTipCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "toolTipElevation", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("ToolTipElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualToolTipElevation", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("ActualToolTipElevation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "iconFill", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            this.cn = a;
            this.g("IconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualIconFill", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("ActualIconFill");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "iconStroke", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            this.co = a;
            this.g("IconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualIconStroke", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("ActualIconStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorVerticalPaddingLeft", {
        get: function () {
            return this.ah;
        },
        set: function (a) {
            this.ah = a;
            this.g("SeparatorVerticalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorVerticalPaddingLeft", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("ActualSeparatorVerticalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorVerticalPaddingRight", {
        get: function () {
            return this.ai;
        },
        set: function (a) {
            this.ai = a;
            this.g("SeparatorVerticalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorVerticalPaddingRight", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("ActualSeparatorVerticalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorVerticalPaddingTop", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            this.aj = a;
            this.g("SeparatorVerticalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorVerticalPaddingTop", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("ActualSeparatorVerticalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorVerticalPaddingBottom", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("SeparatorVerticalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorVerticalPaddingBottom", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("ActualSeparatorVerticalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorHorizontalPaddingLeft", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("SeparatorHorizontalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorHorizontalPaddingLeft", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("ActualSeparatorHorizontalPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorHorizontalPaddingRight", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("SeparatorHorizontalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorHorizontalPaddingRight", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("ActualSeparatorHorizontalPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorHorizontalPaddingTop", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("SeparatorHorizontalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorHorizontalPaddingTop", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("ActualSeparatorHorizontalPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "separatorHorizontalPaddingBottom", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("SeparatorHorizontalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualSeparatorHorizontalPaddingBottom", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("ActualSeparatorHorizontalPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "orientation", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            this.cs = a;
            this.g("Orientation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "rowHeight", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            this.bg = a;
            this.g("RowHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "highlightWidth", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("HighlightWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualHighlightWidth", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("ActualHighlightWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "highlightRadius", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("HighlightRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualHighlightRadius", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("ActualHighlightRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "highlightColor", {
        get: function () {
            return this.cl;
        },
        set: function (a) {
            this.cl = a;
            this.g("HighlightColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualHighlightColor", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("ActualHighlightColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "menuArrowStroke", {
        get: function () {
            return this.cp;
        },
        set: function (a) {
            this.cp = a;
            this.g("MenuArrowStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualMenuArrowStroke", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("ActualMenuArrowStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "uncheckedBackgroundColor", {
        get: function () {
            return this.c2;
        },
        set: function (a) {
            this.c2 = a;
            this.g("UncheckedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualUncheckedBackgroundColor", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            this.b5 = a;
            this.g("ActualUncheckedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "checkedBackgroundColor", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.g("CheckedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualCheckedBackgroundColor", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            this.bm = a;
            this.g("ActualCheckedBackgroundColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "uncheckedBorderColor", {
        get: function () {
            return this.c3;
        },
        set: function (a) {
            this.c3 = a;
            this.g("UncheckedBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualUncheckedBorderColor", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.g("ActualUncheckedBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "checkedBorderColor", {
        get: function () {
            return this.cd;
        },
        set: function (a) {
            this.cd = a;
            this.g("CheckedBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualCheckedBorderColor", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            this.bn = a;
            this.g("ActualCheckedBorderColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "dropdownDelay", {
        get: function () {
            return this.bf;
        },
        set: function (a) {
            this.bf = a;
            this.g("DropdownDelay");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "actualDropdownDelay", {
        get: function () {
            return this.bd;
        },
        set: function (a) {
            this.bd = a;
            this.g("ActualDropdownDelay");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "nestedActionMode", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            this.cq = a;
            this.g("NestedActionMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "contentRefreshedRef", {
        get: function () {
            return this.ce;
        },
        set: function (a) {
            this.ce = a;
            this.g("ContentRefreshedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolPanelDescription.prototype, "onCommandRef", {
        get: function () {
            return this.cr;
        },
        set: function (a) {
            this.cr = a;
            this.g("OnCommandRef");
        },
        enumerable: false,
        configurable: true
    });
    ToolPanelDescription.$t = markType(ToolPanelDescription, 'ToolPanelDescription', Description.$);
    return ToolPanelDescription;
}(Description));
export { ToolPanelDescription };
