/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { StrategyBasedIndicatorDescriptionMetadata } from "./StrategyBasedIndicatorDescriptionMetadata";
import { CustomIndicatorDescription } from "./CustomIndicatorDescription";
/**
 * @hidden
 */
var CustomIndicatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CustomIndicatorDescriptionMetadata, _super);
    function CustomIndicatorDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CustomIndicatorDescriptionMetadata.b = function (a) {
        if (CustomIndicatorDescriptionMetadata.a == null) {
            CustomIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            CustomIndicatorDescriptionMetadata.c(CustomIndicatorDescriptionMetadata.a);
        }
        if (a.k(CustomIndicatorDescriptionMetadata.a)) {
            return;
        }
        a.ac(CustomIndicatorDescriptionMetadata.a);
    };
    CustomIndicatorDescriptionMetadata.c = function (a) {
        StrategyBasedIndicatorDescriptionMetadata.c(a);
    };
    CustomIndicatorDescriptionMetadata.d = function (a) {
        CustomIndicatorDescriptionMetadata.b(a);
        a.ae("CustomIndicator", function () { return new CustomIndicatorDescription(); });
        a.ad("CustomIndicator", CustomIndicatorDescriptionMetadata.a);
    };
    CustomIndicatorDescriptionMetadata.$t = markType(CustomIndicatorDescriptionMetadata, 'CustomIndicatorDescriptionMetadata');
    CustomIndicatorDescriptionMetadata.a = null;
    return CustomIndicatorDescriptionMetadata;
}(Base));
export { CustomIndicatorDescriptionMetadata };
