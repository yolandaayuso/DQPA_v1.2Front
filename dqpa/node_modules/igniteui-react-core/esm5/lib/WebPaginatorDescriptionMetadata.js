/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebOverlaySettingsDescriptionMetadata } from "./WebOverlaySettingsDescriptionMetadata";
import { WebPaginatorResourceStringsDescriptionMetadata } from "./WebPaginatorResourceStringsDescriptionMetadata";
import { WebNumberEventArgsDescriptionMetadata } from "./WebNumberEventArgsDescriptionMetadata";
import { WebPageCancellableEventArgsDescriptionMetadata } from "./WebPageCancellableEventArgsDescriptionMetadata";
import { WebPageEventArgsDescriptionMetadata } from "./WebPageEventArgsDescriptionMetadata";
import { WebPaginatorDescription } from "./WebPaginatorDescription";
/**
 * @hidden
 */
var WebPaginatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebPaginatorDescriptionMetadata, _super);
    function WebPaginatorDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebPaginatorDescriptionMetadata.b = function (a) {
        if (WebPaginatorDescriptionMetadata.a == null) {
            WebPaginatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebPaginatorDescriptionMetadata.c(WebPaginatorDescriptionMetadata.a);
        }
        if (a.k(WebPaginatorDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebPaginatorDescriptionMetadata.a);
        WebOverlaySettingsDescriptionMetadata.d(a);
        WebPaginatorResourceStringsDescriptionMetadata.d(a);
        WebNumberEventArgsDescriptionMetadata.d(a);
        WebPageCancellableEventArgsDescriptionMetadata.d(a);
        WebPageEventArgsDescriptionMetadata.d(a);
    };
    WebPaginatorDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:Paginator");
        a.item("__tagNameWC", "String:igc-paginator");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__manageCollectionInMarkup", "Boolean");
        a.item("__mustUseNGParentAnchor", "Boolean");
        a.item("TotalPages", "Number:double");
        a.item("Page", "Number:double");
        a.item("PerPage", "Number:double");
        a.item("TotalRecords", "Number:double");
        a.item("SelectOptions", "Array:double");
        a.item("OverlaySettings", "ExportedType:WebOverlaySettings");
        a.item("ResourceStrings", "ExportedType:WebPaginatorResourceStrings");
        a.item("ResourceStrings@mustSetInCode", "WebComponents;Blazor;React");
        a.item("Name", "String");
        a.item("PerPageChangeRef", "EventRef::perPageChange:customEvent");
        a.item("PageChangeRef", "EventRef::pageChange:customEvent");
        a.item("PagingRef", "EventRef::paging:customEvent");
        a.item("PagingDoneRef", "EventRef::pagingDone:customEvent");
    };
    WebPaginatorDescriptionMetadata.d = function (a) {
        WebPaginatorDescriptionMetadata.b(a);
        a.ae("WebPaginator", function () { return new WebPaginatorDescription(); });
        a.ad("WebPaginator", WebPaginatorDescriptionMetadata.a);
    };
    WebPaginatorDescriptionMetadata.$t = markType(WebPaginatorDescriptionMetadata, 'WebPaginatorDescriptionMetadata');
    WebPaginatorDescriptionMetadata.a = null;
    return WebPaginatorDescriptionMetadata;
}(Base));
export { WebPaginatorDescriptionMetadata };
