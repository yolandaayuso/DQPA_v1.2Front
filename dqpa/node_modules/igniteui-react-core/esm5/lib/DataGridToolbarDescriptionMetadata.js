/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DataGridToolbarDescription } from "./DataGridToolbarDescription";
/**
 * @hidden
 */
var DataGridToolbarDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataGridToolbarDescriptionMetadata, _super);
    function DataGridToolbarDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGridToolbarDescriptionMetadata.b = function (a) {
        if (DataGridToolbarDescriptionMetadata.a == null) {
            DataGridToolbarDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            DataGridToolbarDescriptionMetadata.c(DataGridToolbarDescriptionMetadata.a);
        }
        if (a.k(DataGridToolbarDescriptionMetadata.a)) {
            return;
        }
        a.ac(DataGridToolbarDescriptionMetadata.a);
    };
    DataGridToolbarDescriptionMetadata.c = function (a) {
        a.item("TargetGridRef", "(w:TargetGrid,wf:TargetGrid)DataRef::object");
        a.item("ToolbarTitle", "String");
        a.item("ToolbarTitleFontFamily", "(w:ToolbarTitleFontFamily/FontFamilyTransform,xam:ToolbarTitleFontFamily,wf:ToolbarTitleFontFamily,web:toolbarTitleStyle/FontFamilyTransform)String");
        a.item("ToolbarTitleFontSize", "(w:ToolbarTitleFontSize,xam:ToolbarTitleFontSize,wf:ToolbarTitleFontSize,web:toolbarTitleStyle/FontSizeTransform)Number:double");
        a.item("ToolbarTitleFontStyle", "(w:ToolbarTitleFontStyle/FontStyleTransform,xam:ToolbarTitleFontFamily/FontStyleTransform,wf:ToolbarTitleFontFamily/FontStyleTransform,web:toolbarTitleStyle/FontStyleTransform)String");
        a.item("ToolbarTitleFontWeight", "(w:ToolbarTitleFontWeight/FontWeightTransform,xam:ToolbarTitleFontFamily/FontWeightTransform,wf:ToolbarTitleFontFamily/FontWeightTransform,web:toolbarTitleStyle/FontWeightTransform)String");
        a.item("ToolbarTitleColor", "Brush");
        a.item("BackgroundColor", "Brush");
        a.item("DialogBackgroundColor", "Brush");
        a.item("ColumnChooser", "Boolean");
        a.item("ColumnChooserText", "String");
        a.item("ColumnChooserTitle", "String");
        a.item("ColumnPinning", "Boolean");
        a.item("ColumnPinningText", "String");
        a.item("ColumnPinningTitle", "String");
        a.item("BorderWidthBottom", "(w:BorderWidth.Bottom,wf:BorderWidthBottom)Number:double");
        a.item("BorderWidthLeft", "(w:BorderWidth.Left,wf:BorderWidthLeft)Number:double");
        a.item("BorderWidthRight", "(w:BorderWidth.Right,wf:BorderWidthRight)Number:double");
        a.item("BorderWidthTop", "(w:BorderWidth.Top,wf:BorderWidthTop)Number:double");
        a.item("Density", "ExportedType:string:ControlDisplayDensity");
        a.item("Density@names", "Auto;Comfortable;Cosy;Compact;Minimal");
        a.item("BaseTheme", "ExportedType:string:BaseControlTheme");
        a.item("BaseTheme@names", "Default;DenaliLight;MaterialLight;SlingshotLight;SlingshotDark;RevealLight;RevealDark");
    };
    DataGridToolbarDescriptionMetadata.d = function (a) {
        DataGridToolbarDescriptionMetadata.b(a);
        a.ae("DataGridToolbar", function () { return new DataGridToolbarDescription(); });
        a.ad("DataGridToolbar", DataGridToolbarDescriptionMetadata.a);
    };
    DataGridToolbarDescriptionMetadata.$t = markType(DataGridToolbarDescriptionMetadata, 'DataGridToolbarDescriptionMetadata');
    DataGridToolbarDescriptionMetadata.a = null;
    return DataGridToolbarDescriptionMetadata;
}(Base));
export { DataGridToolbarDescriptionMetadata };
