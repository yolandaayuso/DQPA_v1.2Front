/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "./type";
/**
 * @hidden
 */
var FilterSyntaxExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxExpressionSyntax, _super);
    function FilterSyntaxExpressionSyntax() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilterSyntaxExpressionSyntax.$t = markType(FilterSyntaxExpressionSyntax, 'FilterSyntaxExpressionSyntax');
    return FilterSyntaxExpressionSyntax;
}(Base));
export { FilterSyntaxExpressionSyntax };
/**
 * @hidden
 */
var FilterSyntaxPrimitiveValueExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxPrimitiveValueExpressionSyntax, _super);
    function FilterSyntaxPrimitiveValueExpressionSyntax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.b = 0;
        _this.c = null;
        return _this;
    }
    FilterSyntaxPrimitiveValueExpressionSyntax.prototype.a = function (a) {
        a.i(this);
    };
    FilterSyntaxPrimitiveValueExpressionSyntax.$t = markType(FilterSyntaxPrimitiveValueExpressionSyntax, 'FilterSyntaxPrimitiveValueExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxPrimitiveValueExpressionSyntax;
}(FilterSyntaxExpressionSyntax));
export { FilterSyntaxPrimitiveValueExpressionSyntax };
/**
 * @hidden
 */
var FilterSyntaxNullExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxNullExpressionSyntax, _super);
    function FilterSyntaxNullExpressionSyntax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.b = 0;
        _this.c = null;
        return _this;
    }
    FilterSyntaxNullExpressionSyntax.prototype.a = function (a) {
        a.g(this);
    };
    FilterSyntaxNullExpressionSyntax.$t = markType(FilterSyntaxNullExpressionSyntax, 'FilterSyntaxNullExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxNullExpressionSyntax;
}(FilterSyntaxExpressionSyntax));
export { FilterSyntaxNullExpressionSyntax };
/**
 * @hidden
 */
var FilterSyntaxParenthesisExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxParenthesisExpressionSyntax, _super);
    function FilterSyntaxParenthesisExpressionSyntax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.b = null;
        return _this;
    }
    FilterSyntaxParenthesisExpressionSyntax.prototype.a = function (a) {
        a.h(this);
    };
    FilterSyntaxParenthesisExpressionSyntax.$t = markType(FilterSyntaxParenthesisExpressionSyntax, 'FilterSyntaxParenthesisExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxParenthesisExpressionSyntax;
}(FilterSyntaxExpressionSyntax));
export { FilterSyntaxParenthesisExpressionSyntax };
/**
 * @hidden
 */
var FilterSyntaxBinaryOperatorExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxBinaryOperatorExpressionSyntax, _super);
    function FilterSyntaxBinaryOperatorExpressionSyntax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.d = 0;
        _this.b = null;
        _this.c = null;
        return _this;
    }
    FilterSyntaxBinaryOperatorExpressionSyntax.prototype.a = function (a) {
        a.c(this);
    };
    FilterSyntaxBinaryOperatorExpressionSyntax.$t = markType(FilterSyntaxBinaryOperatorExpressionSyntax, 'FilterSyntaxBinaryOperatorExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxBinaryOperatorExpressionSyntax;
}(FilterSyntaxExpressionSyntax));
export { FilterSyntaxBinaryOperatorExpressionSyntax };
/**
 * @hidden
 */
var FilterSyntaxMemberExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxMemberExpressionSyntax, _super);
    function FilterSyntaxMemberExpressionSyntax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.b = null;
        _this.c = null;
        return _this;
    }
    FilterSyntaxMemberExpressionSyntax.prototype.a = function (a) {
        a.e(this);
    };
    FilterSyntaxMemberExpressionSyntax.$t = markType(FilterSyntaxMemberExpressionSyntax, 'FilterSyntaxMemberExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxMemberExpressionSyntax;
}(FilterSyntaxExpressionSyntax));
export { FilterSyntaxMemberExpressionSyntax };
/**
 * @hidden
 */
var FilterSyntaxMethodCallExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxMethodCallExpressionSyntax, _super);
    function FilterSyntaxMethodCallExpressionSyntax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = null;
        _this.b = null;
        return _this;
    }
    FilterSyntaxMethodCallExpressionSyntax.prototype.a = function (a) {
        a.f(this);
    };
    FilterSyntaxMethodCallExpressionSyntax.$t = markType(FilterSyntaxMethodCallExpressionSyntax, 'FilterSyntaxMethodCallExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxMethodCallExpressionSyntax;
}(FilterSyntaxExpressionSyntax));
export { FilterSyntaxMethodCallExpressionSyntax };
/**
 * @hidden
 */
var FilterSyntaxIdentifierExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxIdentifierExpressionSyntax, _super);
    function FilterSyntaxIdentifierExpressionSyntax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.b = 0;
        _this.c = null;
        return _this;
    }
    FilterSyntaxIdentifierExpressionSyntax.prototype.a = function (a) {
        a.d(this);
    };
    FilterSyntaxIdentifierExpressionSyntax.$t = markType(FilterSyntaxIdentifierExpressionSyntax, 'FilterSyntaxIdentifierExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxIdentifierExpressionSyntax;
}(FilterSyntaxExpressionSyntax));
export { FilterSyntaxIdentifierExpressionSyntax };
/**
 * @hidden
 */
var FilterSyntaxUnaryOperatorExpressionSyntax = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxUnaryOperatorExpressionSyntax, _super);
    function FilterSyntaxUnaryOperatorExpressionSyntax() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = 0;
        _this.b = null;
        return _this;
    }
    FilterSyntaxUnaryOperatorExpressionSyntax.prototype.a = function (a) {
        a.j(this);
    };
    FilterSyntaxUnaryOperatorExpressionSyntax.$t = markType(FilterSyntaxUnaryOperatorExpressionSyntax, 'FilterSyntaxUnaryOperatorExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxUnaryOperatorExpressionSyntax;
}(FilterSyntaxExpressionSyntax));
export { FilterSyntaxUnaryOperatorExpressionSyntax };
/**
 * @hidden
 */
var FilterSyntaxVisitor = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FilterSyntaxVisitor, _super);
    function FilterSyntaxVisitor() {
        return _super.call(this) || this;
    }
    FilterSyntaxVisitor.prototype.b = function (a) {
        a.a(this);
    };
    FilterSyntaxVisitor.prototype.a = function (a) {
    };
    FilterSyntaxVisitor.prototype.j = function (a) {
        this.a(a);
    };
    FilterSyntaxVisitor.prototype.c = function (a) {
        this.a(a);
    };
    FilterSyntaxVisitor.prototype.d = function (a) {
        this.a(a);
    };
    FilterSyntaxVisitor.prototype.e = function (a) {
        this.a(a);
    };
    FilterSyntaxVisitor.prototype.f = function (a) {
        this.a(a);
    };
    FilterSyntaxVisitor.prototype.g = function (a) {
        this.a(a);
    };
    FilterSyntaxVisitor.prototype.h = function (a) {
        this.a(a);
    };
    FilterSyntaxVisitor.prototype.i = function (a) {
        this.a(a);
    };
    FilterSyntaxVisitor.$t = markType(FilterSyntaxVisitor, 'FilterSyntaxVisitor');
    return FilterSyntaxVisitor;
}(Base));
export { FilterSyntaxVisitor };
