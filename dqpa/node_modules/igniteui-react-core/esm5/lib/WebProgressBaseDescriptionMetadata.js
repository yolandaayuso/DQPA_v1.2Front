/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
/**
 * @hidden
 */
var WebProgressBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebProgressBaseDescriptionMetadata, _super);
    function WebProgressBaseDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebProgressBaseDescriptionMetadata.b = function (a) {
        if (WebProgressBaseDescriptionMetadata.a == null) {
            WebProgressBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebProgressBaseDescriptionMetadata.c(WebProgressBaseDescriptionMetadata.a);
        }
        if (a.k(WebProgressBaseDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebProgressBaseDescriptionMetadata.a);
    };
    WebProgressBaseDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:ProgressBase");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
        a.item("Max", "Number:double");
        a.item("Value", "Number:double");
        a.item("Variant", "ExportedType:string:StyleVariant");
        a.item("Variant@stringUnion", "WebComponents;React");
        a.item("Variant@names", "Primary;Info;Success;Warning;Danger");
        a.item("AnimationDuration", "Number:double");
        a.item("Indeterminate", "Boolean");
        a.item("HideLabel", "Boolean");
        a.item("LabelFormat", "String");
    };
    WebProgressBaseDescriptionMetadata.d = function (a) {
        WebProgressBaseDescriptionMetadata.b(a);
        a.ad("WebProgressBase", WebProgressBaseDescriptionMetadata.a);
    };
    WebProgressBaseDescriptionMetadata.$t = markType(WebProgressBaseDescriptionMetadata, 'WebProgressBaseDescriptionMetadata');
    WebProgressBaseDescriptionMetadata.a = null;
    return WebProgressBaseDescriptionMetadata;
}(Base));
export { WebProgressBaseDescriptionMetadata };
