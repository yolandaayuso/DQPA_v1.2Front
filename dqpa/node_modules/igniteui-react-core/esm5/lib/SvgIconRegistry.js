/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SvgIconCollection } from "./SvgIconCollection";
/**
 * @hidden
 */
var SvgIconRegistry = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SvgIconRegistry, _super);
    function SvgIconRegistry() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.d = new Dictionary$2(String_$type, SvgIconCollection.$, 0);
        _this.e = new Dictionary$2(String_$type, SvgIconCollection.$, 0);
        _this.f = new Dictionary$2(String_$type, SvgIconCollection.$, 0);
        return _this;
    }
    Object.defineProperty(SvgIconRegistry, "instance", {
        get: function () {
            if (SvgIconRegistry.b == null) {
                SvgIconRegistry.b = new SvgIconRegistry();
            }
            return SvgIconRegistry.b;
        },
        enumerable: false,
        configurable: true
    });
    SvgIconRegistry.prototype.addSvgPathString = function (a, b, c) {
        if (a == null) {
            a = "default";
        }
        if (!this.d.containsKey(a)) {
            this.d.item(a, ((function () {
                var $ret = new SvgIconCollection();
                $ret.g = a;
                return $ret;
            })()));
        }
        this.d.item(a).j(b, c);
    };
    SvgIconRegistry.prototype.getSvgPathString = function (a, b) {
        if (a == null) {
            a = "default";
        }
        if (this.d.containsKey(a)) {
            return this.d.item(a).f(b);
        }
        return null;
    };
    SvgIconRegistry.prototype.addSvgPathsString = function (a, b, c) {
        if (a == null) {
            a = "default";
        }
        if (!this.d.containsKey(a)) {
            this.d.item(a, ((function () {
                var $ret = new SvgIconCollection();
                $ret.g = a;
                return $ret;
            })()));
        }
        this.d.item(a).i(b, c);
    };
    SvgIconRegistry.prototype.getSvgPathsString = function (a, b) {
        if (a == null) {
            a = "default";
        }
        if (this.d.containsKey(a)) {
            return this.d.item(a).a(b);
        }
        return null;
    };
    SvgIconRegistry.prototype.addDataURLString = function (a, b, c) {
        if (a == null) {
            a = "default";
        }
        if (!this.e.containsKey(a)) {
            this.e.item(a, ((function () {
                var $ret = new SvgIconCollection();
                $ret.g = a;
                return $ret;
            })()));
        }
        this.e.item(a).j(b, c);
    };
    SvgIconRegistry.prototype.getDataURLString = function (a, b) {
        if (a == null) {
            a = "default";
        }
        if (this.e.containsKey(a)) {
            return this.e.item(a).f(b);
        }
        return null;
    };
    SvgIconRegistry.prototype.addIconSource = function (a, b, c) {
        if (a == null) {
            a = "default";
        }
        if (!this.f.containsKey(a)) {
            this.f.item(a, ((function () {
                var $ret = new SvgIconCollection();
                $ret.g = a;
                return $ret;
            })()));
        }
        this.f.item(a).h(b, c);
    };
    SvgIconRegistry.prototype.getIconSource = function (a, b) {
        if (a == null) {
            a = "default";
        }
        if (this.f.containsKey(a)) {
            return this.f.item(a).e(b);
        }
        return null;
    };
    SvgIconRegistry.$t = markType(SvgIconRegistry, 'SvgIconRegistry');
    SvgIconRegistry.b = null;
    return SvgIconRegistry;
}(Base));
export { SvgIconRegistry };
