/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebColumnStateDescriptionMetadata } from "./WebColumnStateDescriptionMetadata";
import { WebFilteringExpressionsTreeDescriptionMetadata } from "./WebFilteringExpressionsTreeDescriptionMetadata";
import { WebPagingStateDescriptionMetadata } from "./WebPagingStateDescriptionMetadata";
import { WebSortingExpressionDescriptionMetadata } from "./WebSortingExpressionDescriptionMetadata";
import { WebGroupingStateDescriptionMetadata } from "./WebGroupingStateDescriptionMetadata";
import { WebGridSelectionRangeDescriptionMetadata } from "./WebGridSelectionRangeDescriptionMetadata";
import { WebPinningConfigDescriptionMetadata } from "./WebPinningConfigDescriptionMetadata";
import { WebGridStateCollectionDescriptionMetadata } from "./WebGridStateCollectionDescriptionMetadata";
import { WebPivotConfigurationDescriptionMetadata } from "./WebPivotConfigurationDescriptionMetadata";
import { WebGridStateInfoDescription } from "./WebGridStateInfoDescription";
/**
 * @hidden
 */
var WebGridStateInfoDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebGridStateInfoDescriptionMetadata, _super);
    function WebGridStateInfoDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebGridStateInfoDescriptionMetadata.b = function (a) {
        if (WebGridStateInfoDescriptionMetadata.a == null) {
            WebGridStateInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            WebGridStateInfoDescriptionMetadata.c(WebGridStateInfoDescriptionMetadata.a);
        }
        if (a.k(WebGridStateInfoDescriptionMetadata.a)) {
            return;
        }
        a.ac(WebGridStateInfoDescriptionMetadata.a);
        WebColumnStateDescriptionMetadata.d(a);
        WebFilteringExpressionsTreeDescriptionMetadata.d(a);
        WebPagingStateDescriptionMetadata.d(a);
        WebSortingExpressionDescriptionMetadata.d(a);
        WebGroupingStateDescriptionMetadata.d(a);
        WebGridSelectionRangeDescriptionMetadata.d(a);
        WebPinningConfigDescriptionMetadata.d(a);
        WebGridStateCollectionDescriptionMetadata.d(a);
        WebPivotConfigurationDescriptionMetadata.d(a);
    };
    WebGridStateInfoDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:GridStateInfo");
        a.item("__packageNameWC", "String:grids");
        a.item("__skipModuleRegisterWebComponents", "Boolean");
        a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
        a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
        a.item("__isPlainObject", "Boolean");
        a.item("__marshalByValue", "Boolean");
        a.item("__skipSuffix", "Boolean");
        a.item("__isTSPlainInterface", "Boolean");
        a.item("Columns", "Array:WebColumnStateDescription:ColumnState");
        a.item("Filtering", "ExportedType:WebFilteringExpressionsTree");
        a.item("AdvancedFiltering", "ExportedType:WebFilteringExpressionsTree");
        a.item("Paging", "ExportedType:WebPagingState");
        a.item("Moving", "Boolean");
        a.item("Sorting", "Array:WebSortingExpressionDescription:SortingExpression");
        a.item("GroupBy", "ExportedType:WebGroupingState");
        a.item("CellSelection", "Array:WebGridSelectionRangeDescription:GridSelectionRange");
        a.item("RowSelection", "Array:object");
        a.item("ColumnSelection", "Array:string");
        a.item("RowPinning", "Array:object");
        a.item("PinningConfig", "ExportedType:WebPinningConfig");
        a.item("Expansion", "Array:object");
        a.item("RowIslands", "Array:WebGridStateCollectionDescription:GridStateCollection");
        a.item("Id", "String");
        a.item("PivotConfiguration", "ExportedType:WebPivotConfiguration");
    };
    WebGridStateInfoDescriptionMetadata.d = function (a) {
        WebGridStateInfoDescriptionMetadata.b(a);
        a.ae("WebGridStateInfo", function () { return new WebGridStateInfoDescription(); });
        a.ad("WebGridStateInfo", WebGridStateInfoDescriptionMetadata.a);
    };
    WebGridStateInfoDescriptionMetadata.$t = markType(WebGridStateInfoDescriptionMetadata, 'WebGridStateInfoDescriptionMetadata');
    WebGridStateInfoDescriptionMetadata.a = null;
    return WebGridStateInfoDescriptionMetadata;
}(Base));
export { WebGridStateInfoDescriptionMetadata };
