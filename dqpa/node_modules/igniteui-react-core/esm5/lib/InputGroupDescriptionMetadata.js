/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { InputGroupDescription } from "./InputGroupDescription";
/**
 * @hidden
 */
var InputGroupDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(InputGroupDescriptionMetadata, _super);
    function InputGroupDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InputGroupDescriptionMetadata.b = function (a) {
        if (InputGroupDescriptionMetadata.a == null) {
            InputGroupDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            InputGroupDescriptionMetadata.c(InputGroupDescriptionMetadata.a);
        }
        if (a.k(InputGroupDescriptionMetadata.a)) {
            return;
        }
        a.ac(InputGroupDescriptionMetadata.a);
    };
    InputGroupDescriptionMetadata.c = function (a) {
        a.item("__qualifiedNameTS", "String:XInputGroup");
        a.item("DisplayType", "ExportedType:string:InputGroupDisplayType");
        a.item("DisplayType@names", "Line;Box;Border;Search");
        a.item("Density", "ExportedType:string:ControlDisplayDensity");
        a.item("Density@names", "Auto;Comfortable;Cosy;Compact;Minimal");
        a.item("ActualDensity", "ExportedType:string:ControlDisplayDensity");
        a.item("ActualDensity@names", "Auto;Comfortable;Cosy;Compact;Minimal");
        a.item("BaseTheme", "ExportedType:string:BaseControlTheme");
        a.item("BaseTheme@names", "Default;DenaliLight;MaterialLight;SlingshotLight;SlingshotDark;RevealLight;RevealDark");
        a.item("ActualBorderColor", "Brush");
        a.item("ActualFocusBorderColor", "Brush");
        a.item("ActualBorderWidth", "Number:double");
        a.item("ActualFocusBorderWidth", "Number:double");
        a.item("ActualCornerRadiusBottomRight", "(w:ActualCornerRadius.BottomRight,wf:ActualCornerRadiusBottomRight)Number:double");
        a.item("ActualCornerRadiusBottomLeft", "(w:ActualCornerRadius.BottomLeft,wf:ActualCornerRadiusBottomLeft)Number:double");
        a.item("ActualCornerRadiusTopLeft", "(w:ActualCornerRadius.TopLeft,wf:ActualCornerRadiusTopLeft)Number:double");
        a.item("ActualCornerRadiusTopRight", "(w:ActualCornerRadius.TopRight,wf:ActualCornerRadiusTopRight)Number:double");
        a.item("ActualContentPaddingBottom", "(w:ActualContentPadding.Bottom,wf:ActualContentPaddingBottom)Number:double");
        a.item("ActualContentPaddingLeft", "(w:ActualContentPadding.Left,wf:ActualContentPaddingLeft)Number:double");
        a.item("ActualContentPaddingRight", "(w:ActualContentPadding.Right,wf:ActualContentPaddingRight)Number:double");
        a.item("ActualContentPaddingTop", "(w:ActualContentPadding.Top,wf:ActualContentPaddingTop)Number:double");
        a.item("ActualUnderlineWidth", "Number:double");
        a.item("ActualUnderlineRippleWidth", "Number:double");
        a.item("ActualHoverUnderlineWidth", "Number:double");
        a.item("ActualUnderlineColor", "Brush");
        a.item("ActualUnderlineRippleColor", "Brush");
        a.item("ActualHoverUnderlineColor", "Brush");
        a.item("ActualFocusUnderlineColor", "Brush");
        a.item("ActualUnderlineOpacity", "Number:double");
        a.item("ActualHoverUnderlineOpacity", "Number:double");
        a.item("ActualFocusUnderlineOpacity", "Number:double");
        a.item("ActualFocusUnderlineRippleOpacity", "Number:double");
        a.item("ActualUnderlineRippleOpacity", "Number:double");
        a.item("ActualBackgroundColor", "Brush");
        a.item("BorderWidth", "Number:double");
        a.item("FocusBorderWidth", "Number:double");
        a.item("BorderColor", "Brush");
        a.item("CornerRadiusBottomRight", "(w:CornerRadius.BottomRight,wf:CornerRadiusBottomRight)Number:double");
        a.item("CornerRadiusBottomLeft", "(w:CornerRadius.BottomLeft,wf:CornerRadiusBottomLeft)Number:double");
        a.item("CornerRadiusTopLeft", "(w:CornerRadius.TopLeft,wf:CornerRadiusTopLeft)Number:double");
        a.item("CornerRadiusTopRight", "(w:CornerRadius.TopRight,wf:CornerRadiusTopRight)Number:double");
        a.item("ContentPaddingBottom", "(w:ContentPadding.Bottom,wf:ContentPaddingBottom)Number:double");
        a.item("ContentPaddingLeft", "(w:ContentPadding.Left,wf:ContentPaddingLeft)Number:double");
        a.item("ContentPaddingRight", "(w:ContentPadding.Right,wf:ContentPaddingRight)Number:double");
        a.item("ContentPaddingTop", "(w:ContentPadding.Top,wf:ContentPaddingTop)Number:double");
        a.item("UnderlineWidth", "Number:double");
        a.item("UnderlineRippleWidth", "Number:double");
        a.item("HoverUnderlineWidth", "Number:double");
        a.item("UnderlineColor", "Brush");
        a.item("UnderlineRippleColor", "Brush");
        a.item("HoverUnderlineColor", "Brush");
        a.item("FocusUnderlineColor", "Brush");
        a.item("UnderlineOpacity", "Number:double");
        a.item("HoverUnderlineOpacity", "Number:double");
        a.item("FocusUnderlineOpacity", "Number:double");
        a.item("FocusUnderlineRippleOpacity", "Number:double");
        a.item("UnderlineRippleOpacity", "Number:double");
        a.item("BackgroundColor", "Brush");
        a.item("LineTypeBorderWidth", "Number:double");
        a.item("LineTypeFocusBorderWidth", "Number:double");
        a.item("LineTypeFocusBorderColor", "Brush");
        a.item("LineTypeBorderColor", "Brush");
        a.item("LineTypeCornerRadiusBottomRight", "(w:LineTypeCornerRadius.BottomRight,wf:LineTypeCornerRadiusBottomRight)Number:double");
        a.item("LineTypeCornerRadiusBottomLeft", "(w:LineTypeCornerRadius.BottomLeft,wf:LineTypeCornerRadiusBottomLeft)Number:double");
        a.item("LineTypeCornerRadiusTopLeft", "(w:LineTypeCornerRadius.TopLeft,wf:LineTypeCornerRadiusTopLeft)Number:double");
        a.item("LineTypeCornerRadiusTopRight", "(w:LineTypeCornerRadius.TopRight,wf:LineTypeCornerRadiusTopRight)Number:double");
        a.item("LineTypeContentPaddingBottom", "(w:LineTypeContentPadding.Bottom,wf:LineTypeContentPaddingBottom)Number:double");
        a.item("LineTypeContentPaddingLeft", "(w:LineTypeContentPadding.Left,wf:LineTypeContentPaddingLeft)Number:double");
        a.item("LineTypeContentPaddingRight", "(w:LineTypeContentPadding.Right,wf:LineTypeContentPaddingRight)Number:double");
        a.item("LineTypeContentPaddingTop", "(w:LineTypeContentPadding.Top,wf:LineTypeContentPaddingTop)Number:double");
        a.item("LineTypeUnderlineWidth", "Number:double");
        a.item("LineTypeUnderlineRippleWidth", "Number:double");
        a.item("LineTypeHoverUnderlineWidth", "Number:double");
        a.item("LineTypeUnderlineColor", "Brush");
        a.item("LineTypeUnderlineRippleColor", "Brush");
        a.item("LineTypeHoverUnderlineColor", "Brush");
        a.item("LineTypeFocusUnderlineColor", "Brush");
        a.item("LineTypeUnderlineOpacity", "Number:double");
        a.item("LineTypeHoverUnderlineOpacity", "Number:double");
        a.item("LineTypeFocusUnderlineOpacity", "Number:double");
        a.item("LineTypeFocusUnderlineRippleOpacity", "Number:double");
        a.item("LineTypeUnderlineRippleOpacity", "Number:double");
        a.item("LineTypeBackgroundColor", "Brush");
        a.item("BoxTypeBorderWidth", "Number:double");
        a.item("BoxTypeFocusBorderWidth", "Number:double");
        a.item("BoxTypeFocusBorderColor", "Brush");
        a.item("BoxTypeBorderColor", "Brush");
        a.item("BoxTypeCornerRadiusBottomRight", "(w:BoxTypeCornerRadius.BottomRight,wf:BoxTypeCornerRadiusBottomRight)Number:double");
        a.item("BoxTypeCornerRadiusBottomLeft", "(w:BoxTypeCornerRadius.BottomLeft,wf:BoxTypeCornerRadiusBottomLeft)Number:double");
        a.item("BoxTypeCornerRadiusTopLeft", "(w:BoxTypeCornerRadius.TopLeft,wf:BoxTypeCornerRadiusTopLeft)Number:double");
        a.item("BoxTypeCornerRadiusTopRight", "(w:BoxTypeCornerRadius.TopRight,wf:BoxTypeCornerRadiusTopRight)Number:double");
        a.item("BoxTypeContentPaddingBottom", "(w:BoxTypeContentPadding.Bottom,wf:BoxTypeContentPaddingBottom)Number:double");
        a.item("BoxTypeContentPaddingLeft", "(w:BoxTypeContentPadding.Left,wf:BoxTypeContentPaddingLeft)Number:double");
        a.item("BoxTypeContentPaddingRight", "(w:BoxTypeContentPadding.Right,wf:BoxTypeContentPaddingRight)Number:double");
        a.item("BoxTypeContentPaddingTop", "(w:BoxTypeContentPadding.Top,wf:BoxTypeContentPaddingTop)Number:double");
        a.item("BoxTypeUnderlineWidth", "Number:double");
        a.item("BoxTypeUnderlineRippleWidth", "Number:double");
        a.item("BoxTypeHoverUnderlineWidth", "Number:double");
        a.item("BoxTypeUnderlineColor", "Brush");
        a.item("BoxTypeUnderlineRippleColor", "Brush");
        a.item("BoxTypeHoverUnderlineColor", "Brush");
        a.item("BoxTypeFocusUnderlineColor", "Brush");
        a.item("BoxTypeUnderlineOpacity", "Number:double");
        a.item("BoxTypeHoverUnderlineOpacity", "Number:double");
        a.item("BoxTypeFocusUnderlineOpacity", "Number:double");
        a.item("BoxTypeFocusUnderlineRippleOpacity", "Number:double");
        a.item("BoxTypeUnderlineRippleOpacity", "Number:double");
        a.item("BoxTypeBackgroundColor", "Brush");
        a.item("BorderTypeBorderWidth", "Number:double");
        a.item("BorderTypeFocusBorderWidth", "Number:double");
        a.item("BorderTypeFocusBorderColor", "Brush");
        a.item("BorderTypeBorderColor", "Brush");
        a.item("BorderTypeCornerRadiusBottomRight", "(w:BorderTypeCornerRadius.BottomRight,wf:BorderTypeCornerRadiusBottomRight)Number:double");
        a.item("BorderTypeCornerRadiusBottomLeft", "(w:BorderTypeCornerRadius.BottomLeft,wf:BorderTypeCornerRadiusBottomLeft)Number:double");
        a.item("BorderTypeCornerRadiusTopLeft", "(w:BorderTypeCornerRadius.TopLeft,wf:BorderTypeCornerRadiusTopLeft)Number:double");
        a.item("BorderTypeCornerRadiusTopRight", "(w:BorderTypeCornerRadius.TopRight,wf:BorderTypeCornerRadiusTopRight)Number:double");
        a.item("BorderTypeContentPaddingBottom", "(w:BorderTypeContentPadding.Bottom,wf:BorderTypeContentPaddingBottom)Number:double");
        a.item("BorderTypeContentPaddingLeft", "(w:BorderTypeContentPadding.Left,wf:BorderTypeContentPaddingLeft)Number:double");
        a.item("BorderTypeContentPaddingRight", "(w:BorderTypeContentPadding.Right,wf:BorderTypeContentPaddingRight)Number:double");
        a.item("BorderTypeContentPaddingTop", "(w:BorderTypeContentPadding.Top,wf:BorderTypeContentPaddingTop)Number:double");
        a.item("BorderTypeUnderlineWidth", "Number:double");
        a.item("BorderTypeUnderlineRippleWidth", "Number:double");
        a.item("BorderTypeHoverUnderlineWidth", "Number:double");
        a.item("BorderTypeUnderlineColor", "Brush");
        a.item("BorderTypeUnderlineRippleColor", "Brush");
        a.item("BorderTypeHoverUnderlineColor", "Brush");
        a.item("BorderTypeFocusUnderlineColor", "Brush");
        a.item("BorderTypeUnderlineOpacity", "Number:double");
        a.item("BorderTypeHoverUnderlineOpacity", "Number:double");
        a.item("BorderTypeFocusUnderlineOpacity", "Number:double");
        a.item("BorderTypeFocusUnderlineRippleOpacity", "Number:double");
        a.item("BorderTypeUnderlineRippleOpacity", "Number:double");
        a.item("BorderTypeBackgroundColor", "Brush");
        a.item("SearchTypeBorderWidth", "Number:double");
        a.item("SearchTypeFocusBorderWidth", "Number:double");
        a.item("SearchTypeFocusBorderColor", "Brush");
        a.item("SearchTypeBorderColor", "Brush");
        a.item("SearchTypeCornerRadiusBottomRight", "(w:SearchTypeCornerRadius.BottomRight,wf:SearchTypeCornerRadiusBottomRight)Number:double");
        a.item("SearchTypeCornerRadiusBottomLeft", "(w:SearchTypeCornerRadius.BottomLeft,wf:SearchTypeCornerRadiusBottomLeft)Number:double");
        a.item("SearchTypeCornerRadiusTopLeft", "(w:SearchTypeCornerRadius.TopLeft,wf:SearchTypeCornerRadiusTopLeft)Number:double");
        a.item("SearchTypeCornerRadiusTopRight", "(w:SearchTypeCornerRadius.TopRight,wf:SearchTypeCornerRadiusTopRight)Number:double");
        a.item("SearchTypeContentPaddingBottom", "(w:SearchTypeContentPadding.Bottom,wf:SearchTypeContentPaddingBottom)Number:double");
        a.item("SearchTypeContentPaddingLeft", "(w:SearchTypeContentPadding.Left,wf:SearchTypeContentPaddingLeft)Number:double");
        a.item("SearchTypeContentPaddingRight", "(w:SearchTypeContentPadding.Right,wf:SearchTypeContentPaddingRight)Number:double");
        a.item("SearchTypeContentPaddingTop", "(w:SearchTypeContentPadding.Top,wf:SearchTypeContentPaddingTop)Number:double");
        a.item("SearchTypeUnderlineWidth", "Number:double");
        a.item("SearchTypeUnderlineRippleWidth", "Number:double");
        a.item("SearchTypeHoverUnderlineWidth", "Number:double");
        a.item("SearchTypeUnderlineColor", "Brush");
        a.item("SearchTypeUnderlineRippleColor", "Brush");
        a.item("SearchTypeHoverUnderlineColor", "Brush");
        a.item("SearchTypeFocusUnderlineColor", "Brush");
        a.item("SearchTypeUnderlineOpacity", "Number:double");
        a.item("SearchTypeHoverUnderlineOpacity", "Number:double");
        a.item("SearchTypeFocusUnderlineOpacity", "Number:double");
        a.item("SearchTypeFocusUnderlineRippleOpacity", "Number:double");
        a.item("SearchTypeUnderlineRippleOpacity", "Number:double");
        a.item("SearchTypeBackgroundColor", "Brush");
        a.item("IsExpanded", "Boolean");
        a.item("IsHovered", "Boolean");
        a.item("IsFocused", "Boolean");
        a.item("ActualIsExpanded", "Boolean");
        a.item("FocusBorderColor", "Brush");
        a.item("Id", "String");
        a.item("Disabled", "(w:IsDisabled,xam:IsDisabled,wf:IsDisabled)Boolean");
        a.item("Inputs", "Collection:InputGroupItem:InputGroupInputCollection:InputGroupItem");
    };
    InputGroupDescriptionMetadata.d = function (a) {
        InputGroupDescriptionMetadata.b(a);
        a.ae("InputGroup", function () { return new InputGroupDescription(); });
        a.ad("InputGroup", InputGroupDescriptionMetadata.a);
    };
    InputGroupDescriptionMetadata.$t = markType(InputGroupDescriptionMetadata, 'InputGroupDescriptionMetadata');
    InputGroupDescriptionMetadata.a = null;
    return InputGroupDescriptionMetadata;
}(Base));
export { InputGroupDescriptionMetadata };
