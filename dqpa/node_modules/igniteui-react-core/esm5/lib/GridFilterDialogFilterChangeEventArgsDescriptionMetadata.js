/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnFilterConditionDescriptionMetadata } from "./ColumnFilterConditionDescriptionMetadata";
import { GridFilterDialogFilterChangeEventArgsDescription } from "./GridFilterDialogFilterChangeEventArgsDescription";
/**
 * @hidden
 */
var GridFilterDialogFilterChangeEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridFilterDialogFilterChangeEventArgsDescriptionMetadata, _super);
    function GridFilterDialogFilterChangeEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridFilterDialogFilterChangeEventArgsDescriptionMetadata.b = function (a) {
        if (GridFilterDialogFilterChangeEventArgsDescriptionMetadata.a == null) {
            GridFilterDialogFilterChangeEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridFilterDialogFilterChangeEventArgsDescriptionMetadata.c(GridFilterDialogFilterChangeEventArgsDescriptionMetadata.a);
        }
        if (a.k(GridFilterDialogFilterChangeEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(GridFilterDialogFilterChangeEventArgsDescriptionMetadata.a);
        ColumnFilterConditionDescriptionMetadata.d(a);
    };
    GridFilterDialogFilterChangeEventArgsDescriptionMetadata.c = function (a) {
        a.item("Filter", "ExportedType:ColumnFilterCondition");
    };
    GridFilterDialogFilterChangeEventArgsDescriptionMetadata.d = function (a) {
        GridFilterDialogFilterChangeEventArgsDescriptionMetadata.b(a);
        a.ae("GridFilterDialogFilterChangeEventArgs", function () { return new GridFilterDialogFilterChangeEventArgsDescription(); });
        a.ad("GridFilterDialogFilterChangeEventArgs", GridFilterDialogFilterChangeEventArgsDescriptionMetadata.a);
    };
    GridFilterDialogFilterChangeEventArgsDescriptionMetadata.$t = markType(GridFilterDialogFilterChangeEventArgsDescriptionMetadata, 'GridFilterDialogFilterChangeEventArgsDescriptionMetadata');
    GridFilterDialogFilterChangeEventArgsDescriptionMetadata.a = null;
    return GridFilterDialogFilterChangeEventArgsDescriptionMetadata;
}(Base));
export { GridFilterDialogFilterChangeEventArgsDescriptionMetadata };
