/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { InputGroupItemDescriptionMetadata } from "./InputGroupItemDescriptionMetadata";
import { PrefixDescription } from "./PrefixDescription";
/**
 * @hidden
 */
var PrefixDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PrefixDescriptionMetadata, _super);
    function PrefixDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PrefixDescriptionMetadata.b = function (a) {
        if (PrefixDescriptionMetadata.a == null) {
            PrefixDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            PrefixDescriptionMetadata.c(PrefixDescriptionMetadata.a);
        }
        if (a.k(PrefixDescriptionMetadata.a)) {
            return;
        }
        a.ac(PrefixDescriptionMetadata.a);
    };
    PrefixDescriptionMetadata.c = function (a) {
        InputGroupItemDescriptionMetadata.c(a);
        a.item("__qualifiedNameTS", "String:XPrefix");
        a.item("Id", "String");
        a.item("AriaLabel", "String");
        a.item("IsHover", "Boolean");
        a.item("Disabled", "(w:IsDisabled,xam:IsDisabled,wf:IsDisabled)Boolean");
    };
    PrefixDescriptionMetadata.d = function (a) {
        PrefixDescriptionMetadata.b(a);
        a.ae("Prefix", function () { return new PrefixDescription(); });
        a.ad("Prefix", PrefixDescriptionMetadata.a);
    };
    PrefixDescriptionMetadata.$t = markType(PrefixDescriptionMetadata, 'PrefixDescriptionMetadata');
    PrefixDescriptionMetadata.a = null;
    return PrefixDescriptionMetadata;
}(Base));
export { PrefixDescriptionMetadata };
