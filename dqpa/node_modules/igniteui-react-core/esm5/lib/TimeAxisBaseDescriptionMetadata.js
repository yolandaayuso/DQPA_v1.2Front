/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { CategoryAxisBaseDescriptionMetadata } from "./CategoryAxisBaseDescriptionMetadata";
/**
 * @hidden
 */
var TimeAxisBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TimeAxisBaseDescriptionMetadata, _super);
    function TimeAxisBaseDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TimeAxisBaseDescriptionMetadata.b = function (a) {
        if (TimeAxisBaseDescriptionMetadata.a == null) {
            TimeAxisBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            TimeAxisBaseDescriptionMetadata.c(TimeAxisBaseDescriptionMetadata.a);
        }
        if (a.k(TimeAxisBaseDescriptionMetadata.a)) {
            return;
        }
        a.ac(TimeAxisBaseDescriptionMetadata.a);
    };
    TimeAxisBaseDescriptionMetadata.c = function (a) {
        CategoryAxisBaseDescriptionMetadata.c(a);
        a.item("DateTimeMemberPath", "String");
        a.item("IsDataPreSorted", "Boolean");
        a.item("ActualMinimumValue", "Date");
        a.item("ActualMaximumValue", "Date");
        a.item("MinimumValue", "Date");
        a.item("MaximumValue", "Date");
        a.item("ActualMinimumValueChangeRef", "EventRef::actualMinimumValueChange");
        a.item("ActualMaximumValueChangeRef", "EventRef::actualMaximumValueChange");
    };
    TimeAxisBaseDescriptionMetadata.d = function (a) {
        TimeAxisBaseDescriptionMetadata.b(a);
        a.ad("TimeAxisBase", TimeAxisBaseDescriptionMetadata.a);
    };
    TimeAxisBaseDescriptionMetadata.$t = markType(TimeAxisBaseDescriptionMetadata, 'TimeAxisBaseDescriptionMetadata');
    TimeAxisBaseDescriptionMetadata.a = null;
    return TimeAxisBaseDescriptionMetadata;
}(Base));
export { TimeAxisBaseDescriptionMetadata };
