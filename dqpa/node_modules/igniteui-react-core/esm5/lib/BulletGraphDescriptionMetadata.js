/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FormatLinearGraphLabelEventArgsDescriptionMetadata } from "./FormatLinearGraphLabelEventArgsDescriptionMetadata";
import { AlignLinearGraphLabelEventArgsDescriptionMetadata } from "./AlignLinearGraphLabelEventArgsDescriptionMetadata";
import { BulletGraphDescription } from "./BulletGraphDescription";
/**
 * @hidden
 */
var BulletGraphDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(BulletGraphDescriptionMetadata, _super);
    function BulletGraphDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletGraphDescriptionMetadata.e = function (a) {
        a.item("FontFamily", "(w:FontFamily/FontFamilyTransform,xam:FontFamily,wf:FontFamily,web:TextStyle/FontFamilyTransform)String");
        a.item("FontSize", "(w:FontSize,xam:FontSize,wf:FontSize,web:TextStyle/FontSizeTransform)Number:double");
        a.item("FontStyle", "(w:FontStyle/FontStyleTransform,xam:FontStyle/FontStyleTransform,wf:FontStyle/FontStyleTransform,web:TextStyle/FontStyleTransform)String");
        a.item("FontWeight", "(w:FontWeight/FontWeightTransform,xam:FontStyle/FontWeightTransform,wf:FontStyle/FontWeightTransform,web:TextStyle/FontWeightTransform)String");
        a.item("_qualifiedName", "String:Infragistics.Controls.Gauges.XamBulletGraph");
        a.item("Width", "(w:Width/DimensionTransform,xam:Width/DimensionTransform)String");
        a.item("Height", "(w:Height/DimensionTransform,xam:Height/DimensionTransform)String");
        a.item("LegendRef", "(w:Legend)DataRef:String");
        a.item("Background", "(wf:BackColor/ColorTransform)Brush");
    };
    BulletGraphDescriptionMetadata.b = function (a) {
        if (BulletGraphDescriptionMetadata.a == null) {
            BulletGraphDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            BulletGraphDescriptionMetadata.c(BulletGraphDescriptionMetadata.a);
        }
        if (a.k(BulletGraphDescriptionMetadata.a)) {
            return;
        }
        a.ac(BulletGraphDescriptionMetadata.a);
        FormatLinearGraphLabelEventArgsDescriptionMetadata.d(a);
        AlignLinearGraphLabelEventArgsDescriptionMetadata.d(a);
    };
    BulletGraphDescriptionMetadata.c = function (a) {
        a.item("TransitionProgress", "Number:double");
        a.item("Orientation", "ExportedType:string:LinearScaleOrientation");
        a.item("Orientation@names", "Horizontal;Vertical");
        a.item("ScaleBackgroundBrush", "Brush");
        a.item("ScaleBackgroundOutline", "Brush");
        a.item("ScaleBackgroundThickness", "Number:double");
        a.item("Ranges", "Collection:LinearGraphRange:LinearGraphRangeCollection:LinearGraphRange");
        a.item("RangeBrushes", "BrushCollection:string");
        a.item("RangeOutlines", "BrushCollection:string");
        a.item("MinimumValue", "Number:double");
        a.item("ActualMinimumValue", "Number:double");
        a.item("MaximumValue", "Number:double");
        a.item("ActualMaximumValue", "Number:double");
        a.item("TargetValue", "Number:double");
        a.item("TargetValueName", "String");
        a.item("Value", "Number:double");
        a.item("ValueName", "String");
        a.item("HighlightValue", "Number:double");
        a.item("ActualHighlightValueOpacity", "Number:double");
        a.item("HighlightValueOpacity", "Number:double");
        a.item("ActualHighlightValueDisplayMode", "ExportedType:string:HighlightedValueDisplayMode");
        a.item("ActualHighlightValueDisplayMode@names", "Auto;Hidden;Overlay");
        a.item("HighlightValueDisplayMode", "ExportedType:string:HighlightedValueDisplayMode");
        a.item("HighlightValueDisplayMode@names", "Auto;Hidden;Overlay");
        a.item("RangeInnerExtent", "Number:double");
        a.item("RangeOuterExtent", "Number:double");
        a.item("ValueInnerExtent", "Number:double");
        a.item("ValueOuterExtent", "Number:double");
        a.item("Interval", "Number:double");
        a.item("TicksPostInitial", "Number:double");
        a.item("TicksPreTerminal", "Number:double");
        a.item("LabelInterval", "Number:double");
        a.item("LabelExtent", "Number:double");
        a.item("LabelsPostInitial", "Number:double");
        a.item("LabelsPreTerminal", "Number:double");
        a.item("MinorTickCount", "Number:double");
        a.item("TickStartExtent", "Number:double");
        a.item("TickEndExtent", "Number:double");
        a.item("TickStrokeThickness", "Number:double");
        a.item("TickBrush", "Brush");
        a.item("FontBrush", "Brush");
        a.item("ValueBrush", "Brush");
        a.item("ValueOutline", "Brush");
        a.item("ValueStrokeThickness", "Number:double");
        a.item("MinorTickStartExtent", "Number:double");
        a.item("MinorTickEndExtent", "Number:double");
        a.item("MinorTickStrokeThickness", "Number:double");
        a.item("MinorTickBrush", "Brush");
        a.item("IsScaleInverted", "Boolean");
        a.item("BackingBrush", "Brush");
        a.item("BackingOutline", "Brush");
        a.item("BackingStrokeThickness", "Number:double");
        a.item("BackingInnerExtent", "Number:double");
        a.item("BackingOuterExtent", "Number:double");
        a.item("ScaleStartExtent", "Number:double");
        a.item("ScaleEndExtent", "Number:double");
        a.item("TargetValueBrush", "Brush");
        a.item("TargetValueBreadth", "Number:double");
        a.item("TargetValueInnerExtent", "Number:double");
        a.item("TargetValueOuterExtent", "Number:double");
        a.item("TargetValueOutline", "Brush");
        a.item("TargetValueStrokeThickness", "Number:double");
        a.item("MergeViewports", "Boolean");
        a.item("LabelFormat", "String");
        a.item("LabelFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
        a.item("LabelFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
        a.item("TransitionDuration", "Number:int");
        a.item("ShowToolTipTimeout", "Number:int");
        a.item("ShowToolTip", "Boolean");
        a.item("Font", "String");
        a.item("PixelScalingRatio", "Number:double");
        a.item("ActualPixelScalingRatio", "Number:double");
        a.item("FormatLabelRef", "EventRef::formatLabel");
        a.item("AlignLabelRef", "EventRef::alignLabel");
        a.item("ActualMinimumValueChangeRef", "EventRef::actualMinimumValueChange");
        a.item("ActualMaximumValueChangeRef", "EventRef::actualMaximumValueChange");
        BulletGraphDescriptionMetadata.e(a);
    };
    BulletGraphDescriptionMetadata.d = function (a) {
        BulletGraphDescriptionMetadata.b(a);
        a.ae("BulletGraph", function () { return new BulletGraphDescription(); });
        a.ad("BulletGraph", BulletGraphDescriptionMetadata.a);
    };
    BulletGraphDescriptionMetadata.$t = markType(BulletGraphDescriptionMetadata, 'BulletGraphDescriptionMetadata');
    BulletGraphDescriptionMetadata.a = null;
    return BulletGraphDescriptionMetadata;
}(Base));
export { BulletGraphDescriptionMetadata };
