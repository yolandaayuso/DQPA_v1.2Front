/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { CheckboxListIndexTypeChangedEventArgsDescription } from "./CheckboxListIndexTypeChangedEventArgsDescription";
/**
 * @hidden
 */
var CheckboxListIndexTypeChangedEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CheckboxListIndexTypeChangedEventArgsDescriptionMetadata, _super);
    function CheckboxListIndexTypeChangedEventArgsDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.b = function (a) {
        if (CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.a == null) {
            CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.c(CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.a);
        }
        if (a.k(CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.a)) {
            return;
        }
        a.ac(CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.a);
    };
    CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.c = function (a) {
        a.item("OldValue", "ExportedType:string:CheckboxListIndexType");
        a.item("OldValue@names", "Selected;DeSelected");
        a.item("NewValue", "ExportedType:string:CheckboxListIndexType");
        a.item("NewValue@names", "Selected;DeSelected");
    };
    CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.d = function (a) {
        CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.b(a);
        a.ae("CheckboxListIndexTypeChangedEventArgs", function () { return new CheckboxListIndexTypeChangedEventArgsDescription(); });
        a.ad("CheckboxListIndexTypeChangedEventArgs", CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.a);
    };
    CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.$t = markType(CheckboxListIndexTypeChangedEventArgsDescriptionMetadata, 'CheckboxListIndexTypeChangedEventArgsDescriptionMetadata');
    CheckboxListIndexTypeChangedEventArgsDescriptionMetadata.a = null;
    return CheckboxListIndexTypeChangedEventArgsDescriptionMetadata;
}(Base));
export { CheckboxListIndexTypeChangedEventArgsDescriptionMetadata };
