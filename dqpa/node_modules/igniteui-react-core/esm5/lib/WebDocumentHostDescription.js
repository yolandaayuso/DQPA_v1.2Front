/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { WebDockManagerPaneDescription } from "./WebDockManagerPaneDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var WebDocumentHostDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(WebDocumentHostDescription, _super);
    function WebDocumentHostDescription() {
        var _this = _super.call(this) || this;
        _this.s = null;
        _this.t = null;
        _this.m = null;
        _this.p = 0;
        return _this;
    }
    WebDocumentHostDescription.prototype.get_type = function () {
        return "WebDocumentHost";
    };
    Object.defineProperty(WebDocumentHostDescription.prototype, "id", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("Id");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDocumentHostDescription.prototype, "paneType", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("PaneType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDocumentHostDescription.prototype, "rootPane", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("RootPane");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(WebDocumentHostDescription.prototype, "size", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("Size");
        },
        enumerable: false,
        configurable: true
    });
    WebDocumentHostDescription.$t = markType(WebDocumentHostDescription, 'WebDocumentHostDescription', WebDockManagerPaneDescription.$);
    WebDocumentHostDescription.__marshalByValue1 = true;
    WebDocumentHostDescription.__marshalByValueAlias1 = "DocumentHost";
    return WebDocumentHostDescription;
}(WebDockManagerPaneDescription));
export { WebDocumentHostDescription };
