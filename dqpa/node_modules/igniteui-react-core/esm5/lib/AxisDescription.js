/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var AxisDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AxisDescription, _super);
    function AxisDescription() {
        var _this = _super.call(this) || this;
        _this.by = null;
        _this.cg = null;
        _this.ce = null;
        _this.bv = null;
        _this.aw = 0;
        _this.l = null;
        _this.cd = null;
        _this.b9 = null;
        _this.bt = null;
        _this.au = 0;
        _this.j = null;
        _this.ca = null;
        _this.bu = null;
        _this.av = 0;
        _this.k = null;
        _this.cf = null;
        _this.ay = 0;
        _this.m = null;
        _this.ax = 0;
        _this.v = false;
        _this.w = false;
        _this.y = false;
        _this.z = false;
        _this.ac = false;
        _this.ab = false;
        _this.bp = 0;
        _this.t = false;
        _this.b6 = null;
        _this.b5 = null;
        _this.x = false;
        _this.an = 0;
        _this.ap = 0;
        _this.ar = 0;
        _this.as = 0;
        _this.at = 0;
        _this.ao = 0;
        _this.b4 = null;
        _this.b7 = null;
        _this.bx = null;
        _this.br = null;
        _this.cm = null;
        _this.cn = null;
        _this.cl = null;
        _this.aa = false;
        _this.az = 0;
        _this.a1 = 0;
        _this.a3 = 0;
        _this.a4 = 0;
        _this.a5 = 0;
        _this.a0 = 0;
        _this.ck = null;
        _this.co = null;
        _this.h = null;
        _this.bw = null;
        _this.u = false;
        _this.b3 = null;
        _this.i = null;
        _this.cb = null;
        _this.cc = null;
        _this.bz = null;
        _this.b0 = null;
        _this.aq = 0;
        _this.b2 = null;
        _this.b1 = null;
        _this.ch = null;
        _this.a2 = 0;
        _this.cj = null;
        _this.ci = null;
        _this.b8 = null;
        return _this;
    }
    AxisDescription.prototype.get_type = function () {
        return "Axis";
    };
    Object.defineProperty(AxisDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "formatLabelRef", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            this.by = a;
            this.g("FormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "title", {
        get: function () {
            return this.cg;
        },
        set: function (a) {
            this.cg = a;
            this.g("Title");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "stroke", {
        get: function () {
            return this.ce;
        },
        set: function (a) {
            this.ce = a;
            this.g("Stroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "actualStroke", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            this.bv = a;
            this.g("ActualStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "strokeThickness", {
        get: function () {
            return this.aw;
        },
        set: function (a) {
            this.aw = a;
            this.g("StrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "strokeDashArray", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("StrokeDashArray");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "strip", {
        get: function () {
            return this.cd;
        },
        set: function (a) {
            this.cd = a;
            this.g("Strip");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "majorStroke", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            this.b9 = a;
            this.g("MajorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "actualMajorStroke", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            this.bt = a;
            this.g("ActualMajorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "majorStrokeThickness", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("MajorStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "majorStrokeDashArray", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("MajorStrokeDashArray");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "minorStroke", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
            this.g("MinorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "actualMinorStroke", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            this.bu = a;
            this.g("ActualMinorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "minorStrokeThickness", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("MinorStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "minorStrokeDashArray", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("MinorStrokeDashArray");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "tickStroke", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            this.cf = a;
            this.g("TickStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "tickStrokeThickness", {
        get: function () {
            return this.ay;
        },
        set: function (a) {
            this.ay = a;
            this.g("TickStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "tickStrokeDashArray", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("TickStrokeDashArray");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "tickLength", {
        get: function () {
            return this.ax;
        },
        set: function (a) {
            this.ax = a;
            this.g("TickLength");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "isDisabled", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("IsDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "isInverted", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("IsInverted");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "shouldAvoidAnnotationCollisions", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("ShouldAvoidAnnotationCollisions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "shouldKeepAnnotationsInView", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("ShouldKeepAnnotationsInView");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "usePerLabelHeightMeasurement", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            this.ac = a;
            this.g("UsePerLabelHeightMeasurement");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "useEnhancedIntervalManagement", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("UseEnhancedIntervalManagement");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "enhancedIntervalMinimumCharacters", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            this.bp = a;
            this.g("EnhancedIntervalMinimumCharacters");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "enhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("EnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelTextColor", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            this.b6 = a;
            this.g("LabelTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelLocation", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            this.b5 = a;
            this.g("LabelLocation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelShowFirstLabel", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("LabelShowFirstLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelAngle", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("LabelAngle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelExtent", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("LabelExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelLeftMargin", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("LabelLeftMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelRightMargin", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("LabelRightMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelTopMargin", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("LabelTopMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelBottomMargin", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("LabelBottomMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelHorizontalAlignment", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            this.b4 = a;
            this.g("LabelHorizontalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelVerticalAlignment", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            this.b7 = a;
            this.g("LabelVerticalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "crossingAxisRef", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            this.bx = a;
            this.g("CrossingAxisRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "crossingValue", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            this.br = a;
            this.g("CrossingValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titlePosition", {
        get: function () {
            return this.cm;
        },
        set: function (a) {
            this.cm = a;
            this.g("TitlePosition");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleTextColor", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            this.cn = a;
            this.g("TitleTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleLocation", {
        get: function () {
            return this.cl;
        },
        set: function (a) {
            this.cl = a;
            this.g("TitleLocation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleShowFirstLabel", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            this.aa = a;
            this.g("TitleShowFirstLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleAngle", {
        get: function () {
            return this.az;
        },
        set: function (a) {
            this.az = a;
            this.g("TitleAngle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleExtent", {
        get: function () {
            return this.a1;
        },
        set: function (a) {
            this.a1 = a;
            this.g("TitleExtent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleLeftMargin", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            this.a3 = a;
            this.g("TitleLeftMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleRightMargin", {
        get: function () {
            return this.a4;
        },
        set: function (a) {
            this.a4 = a;
            this.g("TitleRightMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleTopMargin", {
        get: function () {
            return this.a5;
        },
        set: function (a) {
            this.a5 = a;
            this.g("TitleTopMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleBottomMargin", {
        get: function () {
            return this.a0;
        },
        set: function (a) {
            this.a0 = a;
            this.g("TitleBottomMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleHorizontalAlignment", {
        get: function () {
            return this.ck;
        },
        set: function (a) {
            this.ck = a;
            this.g("TitleHorizontalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleVerticalAlignment", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            this.co = a;
            this.g("TitleVerticalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "annotations", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Annotations");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "coercionMethodsRef", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            this.bw = a;
            this.g("CoercionMethodsRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "expectFunctions", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("ExpectFunctions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelFormat", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            this.b3 = a;
            this.g("LabelFormat");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelFormatSpecifiers", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("LabelFormatSpecifiers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "rangeChangedRef", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            this.cb = a;
            this.g("RangeChangedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "renderRequestedRef", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            this.cc = a;
            this.g("RenderRequestedRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "label", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            this.bz = a;
            this.g("Label");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelFontFamily", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            this.b0 = a;
            this.g("LabelFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelFontSize", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("LabelFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelFontWeight", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            this.b2 = a;
            this.g("LabelFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelFontStyle", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            this.b1 = a;
            this.g("LabelFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleFontFamily", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            this.ch = a;
            this.g("TitleFontFamily");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleFontSize", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            this.a2 = a;
            this.g("TitleFontSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleFontWeight", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            this.cj = a;
            this.g("TitleFontWeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "titleFontStyle", {
        get: function () {
            return this.ci;
        },
        set: function (a) {
            this.ci = a;
            this.g("TitleFontStyle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisDescription.prototype, "labelVisibility", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            this.b8 = a;
            this.g("LabelVisibility");
        },
        enumerable: false,
        configurable: true
    });
    AxisDescription.$t = markType(AxisDescription, 'AxisDescription', Description.$);
    return AxisDescription;
}(Description));
export { AxisDescription };
