/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var DataLegendSeriesValueInfoDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataLegendSeriesValueInfoDescription, _super);
    function DataLegendSeriesValueInfoDescription() {
        var _this = _super.call(this) || this;
        _this.ab = 0;
        _this.aq = null;
        _this.ar = null;
        _this.as = null;
        _this.at = null;
        _this.al = null;
        _this.ae = 0;
        _this.ad = 0;
        _this.p = false;
        _this.o = false;
        _this.k = false;
        _this.n = false;
        _this.l = false;
        _this.m = false;
        _this.j = false;
        _this.au = null;
        _this.af = 0;
        _this.ag = 0;
        _this.q = false;
        _this.i = false;
        _this.h = false;
        _this.an = null;
        _this.am = null;
        _this.ao = null;
        _this.ap = null;
        return _this;
    }
    DataLegendSeriesValueInfoDescription.prototype.get_type = function () {
        return "DataLegendSeriesValueInfo";
    };
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "value", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            this.ab = a;
            this.g("Value");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "valueNegativePrefix", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("ValueNegativePrefix");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "valueNegativeSuffix", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("ValueNegativeSuffix");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "valuePositivePrefix", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("ValuePositivePrefix");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "valuePositiveSuffix", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("ValuePositiveSuffix");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatWithSeriesColor", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("FormatWithSeriesColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatMinFractions", {
        get: function () {
            return this.ae;
        },
        set: function (a) {
            this.ae = a;
            this.g("FormatMinFractions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatMaxFractions", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            this.ad = a;
            this.g("FormatMaxFractions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatUsePositiveColor", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            this.p = a;
            this.g("FormatUsePositiveColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatUseNegativeColor", {
        get: function () {
            return this.o;
        },
        set: function (a) {
            this.o = a;
            this.g("FormatUseNegativeColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatAllowCurrency", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("FormatAllowCurrency");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatAllowPercent", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            this.n = a;
            this.g("FormatAllowPercent");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatAllowDecimal", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("FormatAllowDecimal");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatAllowInteger", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("FormatAllowInteger");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "formatAllowAbbreviation", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
            this.g("FormatAllowAbbreviation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "valueType", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("ValueType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "index", {
        get: function () {
            return this.af;
        },
        set: function (a) {
            this.af = a;
            this.g("Index");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "orderIndex", {
        get: function () {
            return this.ag;
        },
        set: function (a) {
            this.ag = a;
            this.g("OrderIndex");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "isExcludeByDefault", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("IsExcludeByDefault");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "allowUnits", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            this.i = a;
            this.g("AllowUnits");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "allowLabels", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("AllowLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "memberPath", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("MemberPath");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "memberLabel", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("MemberLabel");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "memberSymbol", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("MemberSymbol");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataLegendSeriesValueInfoDescription.prototype, "memberUnit", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("MemberUnit");
        },
        enumerable: false,
        configurable: true
    });
    DataLegendSeriesValueInfoDescription.$t = markType(DataLegendSeriesValueInfoDescription, 'DataLegendSeriesValueInfoDescription', Description.$);
    return DataLegendSeriesValueInfoDescription;
}(Description));
export { DataLegendSeriesValueInfoDescription };
