/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GridFilterDialogViewModelDescription } from "./GridFilterDialogViewModelDescription";
/**
 * @hidden
 */
var GridFilterDialogViewModelDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(GridFilterDialogViewModelDescriptionMetadata, _super);
    function GridFilterDialogViewModelDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridFilterDialogViewModelDescriptionMetadata.b = function (a) {
        if (GridFilterDialogViewModelDescriptionMetadata.a == null) {
            GridFilterDialogViewModelDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            GridFilterDialogViewModelDescriptionMetadata.c(GridFilterDialogViewModelDescriptionMetadata.a);
        }
        if (a.k(GridFilterDialogViewModelDescriptionMetadata.a)) {
            return;
        }
        a.ac(GridFilterDialogViewModelDescriptionMetadata.a);
    };
    GridFilterDialogViewModelDescriptionMetadata.c = function (a) {
        a.item("PropertyType", "ExportedType:string:DataSourceSchemaPropertyType");
        a.item("PropertyType@names", "StringValue;IntValue;BooleanValue;LongValue;ShortValue;DoubleValue;DecimalValue;SingleValue;DateTimeValue;DateTimeOffsetValue;ByteValue;ObjectValue");
        a.item("IsTopLevelOr", "Boolean");
        a.item("MaxGroupingLevels", "Number:int");
        a.item("Rows", "Collection:GridFilterDialogViewModelRow:GridFilterDialogViewModelRowCollection:GridFilterDialogViewModelRow");
    };
    GridFilterDialogViewModelDescriptionMetadata.d = function (a) {
        GridFilterDialogViewModelDescriptionMetadata.b(a);
        a.ae("GridFilterDialogViewModel", function () { return new GridFilterDialogViewModelDescription(); });
        a.ad("GridFilterDialogViewModel", GridFilterDialogViewModelDescriptionMetadata.a);
    };
    GridFilterDialogViewModelDescriptionMetadata.$t = markType(GridFilterDialogViewModelDescriptionMetadata, 'GridFilterDialogViewModelDescriptionMetadata');
    GridFilterDialogViewModelDescriptionMetadata.a = null;
    return GridFilterDialogViewModelDescriptionMetadata;
}(Base));
export { GridFilterDialogViewModelDescriptionMetadata };
