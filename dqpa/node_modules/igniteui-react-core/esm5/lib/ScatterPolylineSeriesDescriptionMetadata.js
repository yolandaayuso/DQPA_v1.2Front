/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { StyleDescriptionMetadata } from "./StyleDescriptionMetadata";
import { ShapeSeriesBaseDescriptionMetadata } from "./ShapeSeriesBaseDescriptionMetadata";
import { ScatterPolylineSeriesDescription } from "./ScatterPolylineSeriesDescription";
/**
 * @hidden
 */
var ScatterPolylineSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterPolylineSeriesDescriptionMetadata, _super);
    function ScatterPolylineSeriesDescriptionMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ScatterPolylineSeriesDescriptionMetadata.b = function (a) {
        if (ScatterPolylineSeriesDescriptionMetadata.a == null) {
            ScatterPolylineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
            ScatterPolylineSeriesDescriptionMetadata.c(ScatterPolylineSeriesDescriptionMetadata.a);
        }
        if (a.k(ScatterPolylineSeriesDescriptionMetadata.a)) {
            return;
        }
        a.ac(ScatterPolylineSeriesDescriptionMetadata.a);
        StyleDescriptionMetadata.d(a);
    };
    ScatterPolylineSeriesDescriptionMetadata.c = function (a) {
        ShapeSeriesBaseDescriptionMetadata.c(a);
        a.item("ShapeStyle", "ExportedType:Style");
    };
    ScatterPolylineSeriesDescriptionMetadata.d = function (a) {
        ScatterPolylineSeriesDescriptionMetadata.b(a);
        a.ae("ScatterPolylineSeries", function () { return new ScatterPolylineSeriesDescription(); });
        a.ad("ScatterPolylineSeries", ScatterPolylineSeriesDescriptionMetadata.a);
    };
    ScatterPolylineSeriesDescriptionMetadata.$t = markType(ScatterPolylineSeriesDescriptionMetadata, 'ScatterPolylineSeriesDescriptionMetadata');
    ScatterPolylineSeriesDescriptionMetadata.a = null;
    return ScatterPolylineSeriesDescriptionMetadata;
}(Base));
export { ScatterPolylineSeriesDescriptionMetadata };
