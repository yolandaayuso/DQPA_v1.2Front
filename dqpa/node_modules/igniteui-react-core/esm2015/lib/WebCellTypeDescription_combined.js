/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebCellTypeDescription = /*@__PURE__*/ (() => {
    class WebCellTypeDescription extends Description {
        get_type() {
            return "WebCellType";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.ah = null;
            this.af = null;
            this.w = false;
            this.s = false;
            this.t = false;
            this.u = false;
            this.h = null;
            this.p = null;
            this.j = null;
            this.l = null;
            this.ae = null;
            this.n = null;
            this.v = false;
            this.ag = null;
            this.an = null;
            this.ac = 0;
        }
        get value() {
            return this.ah;
        }
        set value(a) {
            this.ah = a;
            this.g("Value");
        }
        get editValue() {
            return this.af;
        }
        set editValue(a) {
            this.af = a;
            this.g("EditValue");
        }
        get selected() {
            return this.w;
        }
        set selected(a) {
            this.w = a;
            this.g("Selected");
        }
        get active() {
            return this.s;
        }
        set active(a) {
            this.s = a;
            this.g("Active");
        }
        get editable() {
            return this.t;
        }
        set editable(a) {
            this.t = a;
            this.g("Editable");
        }
        get editMode() {
            return this.u;
        }
        set editMode(a) {
            this.u = a;
            this.g("EditMode");
        }
        get column() {
            return this.h;
        }
        set column(a) {
            this.h = a;
            this.g("Column");
        }
        get row() {
            return this.p;
        }
        set row(a) {
            this.p = a;
            this.g("Row");
        }
        get grid() {
            return this.j;
        }
        set grid(a) {
            this.j = a;
            this.g("Grid");
        }
        get id() {
            return this.l;
        }
        set id(a) {
            this.l = a;
            this.g("Id");
        }
        get cellID() {
            return this.ae;
        }
        set cellID(a) {
            this.ae = a;
            this.g("CellID");
        }
        get validation() {
            return this.n;
        }
        set validation(a) {
            this.n = a;
            this.g("Validation");
        }
        get readonly() {
            return this.v;
        }
        set readonly(a) {
            this.v = a;
            this.g("Readonly");
        }
        get title() {
            return this.ag;
        }
        set title(a) {
            this.ag = a;
            this.g("Title");
        }
        get width() {
            return this.an;
        }
        set width(a) {
            this.an = a;
            this.g("Width");
        }
        get visibleColumnIndex() {
            return this.ac;
        }
        set visibleColumnIndex(a) {
            this.ac = a;
            this.g("VisibleColumnIndex");
        }
    }
    WebCellTypeDescription.$t = /*@__PURE__*/ markType(WebCellTypeDescription, 'WebCellTypeDescription', Description.$);
    WebCellTypeDescription.__marshalByValue = true;
    WebCellTypeDescription.__marshalByValueAlias = "CellType";
    return WebCellTypeDescription;
})();
/**
 * @hidden
 */
export let WebRowTypeDescription = /*@__PURE__*/ (() => {
    class WebRowTypeDescription extends Description {
        get_type() {
            return "WebRowType";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.as = 0;
            this.at = 0;
            this.ad = false;
            this.ae = false;
            this.p = null;
            this.ax = null;
            this.n = null;
            this.aw = null;
            this.h = null;
            this.y = false;
            this.af = false;
            this.ag = false;
            this.z = false;
            this.x = false;
            this.ac = false;
            this.i = null;
            this.r = null;
            this.ab = false;
            this.t = null;
            this.w = false;
            this.aa = false;
            this.l = null;
        }
        get index() {
            return this.as;
        }
        set index(a) {
            this.as = a;
            this.g("Index");
        }
        get viewIndex() {
            return this.at;
        }
        set viewIndex(a) {
            this.at = a;
            this.g("ViewIndex");
        }
        get isGroupByRow() {
            return this.ad;
        }
        set isGroupByRow(a) {
            this.ad = a;
            this.g("IsGroupByRow");
        }
        get isSummaryRow() {
            return this.ae;
        }
        set isSummaryRow(a) {
            this.ae = a;
            this.g("IsSummaryRow");
        }
        get groupRow() {
            return this.p;
        }
        set groupRow(a) {
            this.p = a;
            this.g("GroupRow");
        }
        get key() {
            return this.ax;
        }
        set key(a) {
            this.ax = a;
            this.g("Key");
        }
        get validation() {
            return this.n;
        }
        set validation(a) {
            this.n = a;
            this.g("Validation");
        }
        get data() {
            return this.aw;
        }
        set data(a) {
            this.aw = a;
            this.g("Data");
        }
        get cells() {
            return this.h;
        }
        set cells(a) {
            this.h = a;
            this.g("Cells");
        }
        get disabled() {
            return this.y;
        }
        set disabled(a) {
            this.y = a;
            this.g("Disabled");
        }
        get pinned() {
            return this.af;
        }
        set pinned(a) {
            this.af = a;
            this.g("Pinned");
        }
        get selected() {
            return this.ag;
        }
        set selected(a) {
            this.ag = a;
            this.g("Selected");
        }
        get expanded() {
            return this.z;
        }
        set expanded(a) {
            this.z = a;
            this.g("Expanded");
        }
        get deleted() {
            return this.x;
        }
        set deleted(a) {
            this.x = a;
            this.g("Deleted");
        }
        get inEditMode() {
            return this.ac;
        }
        set inEditMode(a) {
            this.ac = a;
            this.g("InEditMode");
        }
        get children() {
            return this.i;
        }
        set children(a) {
            this.i = a;
            this.g("Children");
        }
        get rowParent() {
            return this.r;
        }
        set rowParent(a) {
            this.r = a;
            this.g("RowParent");
        }
        get hasChildren() {
            return this.ab;
        }
        set hasChildren(a) {
            this.ab = a;
            this.g("HasChildren");
        }
        get treeRow() {
            return this.t;
        }
        set treeRow(a) {
            this.t = a;
            this.g("TreeRow");
        }
        get addRowUI() {
            return this.w;
        }
        set addRowUI(a) {
            this.w = a;
            this.g("AddRowUI");
        }
        get focused() {
            return this.aa;
        }
        set focused(a) {
            this.aa = a;
            this.g("Focused");
        }
        get grid() {
            return this.l;
        }
        set grid(a) {
            this.l = a;
            this.g("Grid");
        }
    }
    WebRowTypeDescription.$t = /*@__PURE__*/ markType(WebRowTypeDescription, 'WebRowTypeDescription', Description.$);
    WebRowTypeDescription.__marshalByValue = true;
    WebRowTypeDescription.__marshalByValueAlias = "RowType";
    return WebRowTypeDescription;
})();
