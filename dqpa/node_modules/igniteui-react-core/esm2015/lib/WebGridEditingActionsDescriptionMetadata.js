/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebGridActionsBaseDirectiveDescriptionMetadata } from "./WebGridActionsBaseDirectiveDescriptionMetadata";
import { WebGridEditingActionsDescription } from "./WebGridEditingActionsDescription";
/**
 * @hidden
 */
export let WebGridEditingActionsDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebGridEditingActionsDescriptionMetadata extends Base {
        static b(a) {
            if (WebGridEditingActionsDescriptionMetadata.a == null) {
                WebGridEditingActionsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebGridEditingActionsDescriptionMetadata.c(WebGridEditingActionsDescriptionMetadata.a);
            }
            if (a.k(WebGridEditingActionsDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebGridEditingActionsDescriptionMetadata.a);
        }
        static c(a) {
            WebGridActionsBaseDirectiveDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:GridEditingActions");
            a.item("__tagNameWC", "String:igc-grid-editing-actions");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            if (a.containsKey("__skipSuffix")) {
                a.removeItem("__skipSuffix");
            }
            a.item("AddRow", "Boolean");
            a.item("EditRow", "Boolean");
            a.item("DeleteRow", "Boolean");
            a.item("AddChild", "Boolean");
        }
        static d(a) {
            WebGridEditingActionsDescriptionMetadata.b(a);
            a.ae("WebGridEditingActions", () => new WebGridEditingActionsDescription());
            a.ad("WebGridEditingActions", WebGridEditingActionsDescriptionMetadata.a);
        }
    }
    WebGridEditingActionsDescriptionMetadata.$t = /*@__PURE__*/ markType(WebGridEditingActionsDescriptionMetadata, 'WebGridEditingActionsDescriptionMetadata');
    WebGridEditingActionsDescriptionMetadata.a = null;
    return WebGridEditingActionsDescriptionMetadata;
})();
