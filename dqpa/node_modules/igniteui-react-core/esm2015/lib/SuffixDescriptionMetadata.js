/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { InputGroupItemDescriptionMetadata } from "./InputGroupItemDescriptionMetadata";
import { SuffixDescription } from "./SuffixDescription";
/**
 * @hidden
 */
export let SuffixDescriptionMetadata = /*@__PURE__*/ (() => {
    class SuffixDescriptionMetadata extends Base {
        static b(a) {
            if (SuffixDescriptionMetadata.a == null) {
                SuffixDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                SuffixDescriptionMetadata.c(SuffixDescriptionMetadata.a);
            }
            if (a.k(SuffixDescriptionMetadata.a)) {
                return;
            }
            a.ac(SuffixDescriptionMetadata.a);
        }
        static c(a) {
            InputGroupItemDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:XSuffix");
            a.item("Id", "String");
            a.item("AriaLabel", "String");
            a.item("IsHover", "Boolean");
            a.item("Disabled", "(w:IsDisabled,xam:IsDisabled,wf:IsDisabled)Boolean");
        }
        static d(a) {
            SuffixDescriptionMetadata.b(a);
            a.ae("Suffix", () => new SuffixDescription());
            a.ad("Suffix", SuffixDescriptionMetadata.a);
        }
    }
    SuffixDescriptionMetadata.$t = /*@__PURE__*/ markType(SuffixDescriptionMetadata, 'SuffixDescriptionMetadata');
    SuffixDescriptionMetadata.a = null;
    return SuffixDescriptionMetadata;
})();
