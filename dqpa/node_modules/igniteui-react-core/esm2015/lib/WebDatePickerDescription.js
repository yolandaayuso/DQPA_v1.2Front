/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { WebBaseComboBoxLikeDescription } from "./WebBaseComboBoxLikeDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebDatePickerDescription = /*@__PURE__*/ (() => {
    class WebDatePickerDescription extends WebBaseComboBoxLikeDescription {
        get_type() {
            return "WebDatePicker";
        }
        constructor() {
            super();
            this.a7 = null;
            this.a9 = null;
            this.aa = false;
            this.ac = false;
            this.ar = new Date();
            this.ao = new Date();
            this.aq = new Date();
            this.ap = new Date();
            this.a4 = null;
            this.bd = null;
            this.x = false;
            this.y = false;
            this.q = null;
            this.r = null;
            this.ab = false;
            this.be = null;
            this.aw = 0;
            this.ae = false;
            this.a3 = null;
            this.a6 = null;
            this.a8 = null;
            this.bf = null;
            this.u = null;
            this.bg = null;
            this.w = false;
            this.ad = false;
            this.ay = null;
            this.ba = null;
            this.z = false;
            this.bc = null;
            this.bb = null;
            this.a2 = null;
            this.a1 = null;
            this.a0 = null;
            this.a5 = null;
        }
        get label() {
            return this.a7;
        }
        set label(a) {
            this.a7 = a;
            this.g("Label");
        }
        get mode() {
            return this.a9;
        }
        set mode(a) {
            this.a9 = a;
            this.g("Mode");
        }
        get nonEditable() {
            return this.aa;
        }
        set nonEditable(a) {
            this.aa = a;
            this.g("NonEditable");
        }
        get readOnly() {
            return this.ac;
        }
        set readOnly(a) {
            this.ac = a;
            this.g("ReadOnly");
        }
        get value() {
            return this.ar;
        }
        set value(a) {
            this.ar = a;
            this.g("Value");
        }
        get activeDate() {
            return this.ao;
        }
        set activeDate(a) {
            this.ao = a;
            this.g("ActiveDate");
        }
        get min() {
            return this.aq;
        }
        set min(a) {
            this.aq = a;
            this.g("Min");
        }
        get max() {
            return this.ap;
        }
        set max(a) {
            this.ap = a;
            this.g("Max");
        }
        get headerOrientation() {
            return this.a4;
        }
        set headerOrientation(a) {
            this.a4 = a;
            this.g("HeaderOrientation");
        }
        get orientation() {
            return this.bd;
        }
        set orientation(a) {
            this.bd = a;
            this.g("Orientation");
        }
        get hideHeader() {
            return this.x;
        }
        set hideHeader(a) {
            this.x = a;
            this.g("HideHeader");
        }
        get hideOutsideDays() {
            return this.y;
        }
        set hideOutsideDays(a) {
            this.y = a;
            this.g("HideOutsideDays");
        }
        get disabledDates() {
            return this.q;
        }
        set disabledDates(a) {
            this.q = a;
            this.g("DisabledDates");
        }
        get specialDates() {
            return this.r;
        }
        set specialDates(a) {
            this.r = a;
            this.g("SpecialDates");
        }
        get outlined() {
            return this.ab;
        }
        set outlined(a) {
            this.ab = a;
            this.g("Outlined");
        }
        get placeholder() {
            return this.be;
        }
        set placeholder(a) {
            this.be = a;
            this.g("Placeholder");
        }
        get visibleMonths() {
            return this.aw;
        }
        set visibleMonths(a) {
            this.aw = a;
            this.g("VisibleMonths");
        }
        get showWeekNumbers() {
            return this.ae;
        }
        set showWeekNumbers(a) {
            this.ae = a;
            this.g("ShowWeekNumbers");
        }
        get displayFormat() {
            return this.a3;
        }
        set displayFormat(a) {
            this.a3 = a;
            this.g("DisplayFormat");
        }
        get inputFormat() {
            return this.a6;
        }
        set inputFormat(a) {
            this.a6 = a;
            this.g("InputFormat");
        }
        get locale() {
            return this.a8;
        }
        set locale(a) {
            this.a8 = a;
            this.g("Locale");
        }
        get prompt() {
            return this.bf;
        }
        set prompt(a) {
            this.bf = a;
            this.g("Prompt");
        }
        get resourceStrings() {
            return this.u;
        }
        set resourceStrings(a) {
            this.u = a;
            this.g("ResourceStrings");
        }
        get weekStart() {
            return this.bg;
        }
        set weekStart(a) {
            this.bg = a;
            this.g("WeekStart");
        }
        get disabled() {
            return this.w;
        }
        set disabled(a) {
            this.w = a;
            this.g("Disabled");
        }
        get required() {
            return this.ad;
        }
        set required(a) {
            this.ad = a;
            this.g("Required");
        }
        get defaultValue() {
            return this.ay;
        }
        set defaultValue(a) {
            this.ay = a;
            this.g("DefaultValue");
        }
        get name() {
            return this.ba;
        }
        set name(a) {
            this.ba = a;
            this.g("Name");
        }
        get invalid() {
            return this.z;
        }
        set invalid(a) {
            this.z = a;
            this.g("Invalid");
        }
        get openingRef() {
            return this.bc;
        }
        set openingRef(a) {
            this.bc = a;
            this.g("OpeningRef");
        }
        get openedRef() {
            return this.bb;
        }
        set openedRef(a) {
            this.bb = a;
            this.g("OpenedRef");
        }
        get closingRef() {
            return this.a2;
        }
        set closingRef(a) {
            this.a2 = a;
            this.g("ClosingRef");
        }
        get closedRef() {
            return this.a1;
        }
        set closedRef(a) {
            this.a1 = a;
            this.g("ClosedRef");
        }
        get changeRef() {
            return this.a0;
        }
        set changeRef(a) {
            this.a0 = a;
            this.g("ChangeRef");
        }
        get inputRef() {
            return this.a5;
        }
        set inputRef(a) {
            this.a5 = a;
            this.g("InputRef");
        }
    }
    WebDatePickerDescription.$t = /*@__PURE__*/ markType(WebDatePickerDescription, 'WebDatePickerDescription', WebBaseComboBoxLikeDescription.$);
    return WebDatePickerDescription;
})();
