/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebColumnStateDescription = /*@__PURE__*/ (() => {
    class WebColumnStateDescription extends Description {
        get_type() {
            return "WebColumnState";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.u = false;
            this.x = false;
            this.p = false;
            this.n = false;
            this.y = false;
            this.q = false;
            this.a8 = null;
            this.a9 = null;
            this.bb = null;
            this.r = false;
            this.t = false;
            this.a5 = null;
            this.s = false;
            this.a6 = null;
            this.a1 = null;
            this.a7 = null;
            this.v = false;
            this.w = false;
            this.j = false;
            this.k = false;
            this.av = 0;
            this.au = 0;
            this.at = 0;
            this.as = 0;
            this.a0 = null;
            this.ba = null;
            this.bc = null;
            this.l = false;
            this.m = false;
            this.i = false;
            this.o = false;
            this.z = false;
        }
        get pinned() {
            return this.u;
        }
        set pinned(a) {
            this.u = a;
            this.g("Pinned");
        }
        get sortable() {
            return this.x;
        }
        set sortable(a) {
            this.x = a;
            this.g("Sortable");
        }
        get filterable() {
            return this.p;
        }
        set filterable(a) {
            this.p = a;
            this.g("Filterable");
        }
        get editable() {
            return this.n;
        }
        set editable(a) {
            this.n = a;
            this.g("Editable");
        }
        get sortingIgnoreCase() {
            return this.y;
        }
        set sortingIgnoreCase(a) {
            this.y = a;
            this.g("SortingIgnoreCase");
        }
        get filteringIgnoreCase() {
            return this.q;
        }
        set filteringIgnoreCase(a) {
            this.q = a;
            this.g("FilteringIgnoreCase");
        }
        get headerClasses() {
            return this.a8;
        }
        set headerClasses(a) {
            this.a8 = a;
            this.g("HeaderClasses");
        }
        get headerGroupClasses() {
            return this.a9;
        }
        set headerGroupClasses(a) {
            this.a9 = a;
            this.g("HeaderGroupClasses");
        }
        get maxWidth() {
            return this.bb;
        }
        set maxWidth(a) {
            this.bb = a;
            this.g("MaxWidth");
        }
        get groupable() {
            return this.r;
        }
        set groupable(a) {
            this.r = a;
            this.g("Groupable");
        }
        get hidden() {
            return this.t;
        }
        set hidden(a) {
            this.t = a;
            this.g("Hidden");
        }
        get dataType() {
            return this.a5;
        }
        set dataType(a) {
            this.a5 = a;
            this.g("DataType");
        }
        get hasSummary() {
            return this.s;
        }
        set hasSummary(a) {
            this.s = a;
            this.g("HasSummary");
        }
        get field() {
            return this.a6;
        }
        set field(a) {
            this.a6 = a;
            this.g("Field");
        }
        get width() {
            return this.a1;
        }
        set width(a) {
            this.a1 = a;
            this.g("Width");
        }
        get header() {
            return this.a7;
        }
        set header(a) {
            this.a7 = a;
            this.g("Header");
        }
        get resizable() {
            return this.v;
        }
        set resizable(a) {
            this.v = a;
            this.g("Resizable");
        }
        get searchable() {
            return this.w;
        }
        set searchable(a) {
            this.w = a;
            this.g("Searchable");
        }
        get columnGroup() {
            return this.j;
        }
        set columnGroup(a) {
            this.j = a;
            this.g("ColumnGroup");
        }
        get columnLayout() {
            return this.k;
        }
        set columnLayout(a) {
            this.k = a;
            this.g("ColumnLayout");
        }
        get rowStart() {
            return this.av;
        }
        set rowStart(a) {
            this.av = a;
            this.g("RowStart");
        }
        get rowEnd() {
            return this.au;
        }
        set rowEnd(a) {
            this.au = a;
            this.g("RowEnd");
        }
        get colStart() {
            return this.at;
        }
        set colStart(a) {
            this.at = a;
            this.g("ColStart");
        }
        get colEnd() {
            return this.as;
        }
        set colEnd(a) {
            this.as = a;
            this.g("ColEnd");
        }
        get parent() {
            return this.a0;
        }
        set parent(a) {
            this.a0 = a;
            this.g("Parent");
        }
        get key() {
            return this.ba;
        }
        set key(a) {
            this.ba = a;
            this.g("Key");
        }
        get parentKey() {
            return this.bc;
        }
        set parentKey(a) {
            this.bc = a;
            this.g("ParentKey");
        }
        get disableHiding() {
            return this.l;
        }
        set disableHiding(a) {
            this.l = a;
            this.g("DisableHiding");
        }
        get disablePinning() {
            return this.m;
        }
        set disablePinning(a) {
            this.m = a;
            this.g("DisablePinning");
        }
        get collapsible() {
            return this.i;
        }
        set collapsible(a) {
            this.i = a;
            this.g("Collapsible");
        }
        get expanded() {
            return this.o;
        }
        set expanded(a) {
            this.o = a;
            this.g("Expanded");
        }
        get visibleWhenCollapsed() {
            return this.z;
        }
        set visibleWhenCollapsed(a) {
            this.z = a;
            this.g("VisibleWhenCollapsed");
        }
    }
    WebColumnStateDescription.$t = /*@__PURE__*/ markType(WebColumnStateDescription, 'WebColumnStateDescription', Description.$);
    WebColumnStateDescription.__marshalByValue = true;
    WebColumnStateDescription.__marshalByValueAlias = "ColumnState";
    return WebColumnStateDescription;
})();
