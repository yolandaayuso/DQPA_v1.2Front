/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebSliderBaseDescription = /*@__PURE__*/ (() => {
    class WebSliderBaseDescription extends Description {
        get_type() {
            return "WebSliderBase";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.v = 0;
            this.u = 0;
            this.t = 0;
            this.z = 0;
            this.j = false;
            this.k = false;
            this.n = false;
            this.y = 0;
            this.w = 0;
            this.x = 0;
            this.aj = null;
            this.l = false;
            this.m = false;
            this.ah = null;
            this.ak = null;
            this.ai = null;
            this.h = null;
        }
        get min() {
            return this.v;
        }
        set min(a) {
            this.v = a;
            this.g("Min");
        }
        get max() {
            return this.u;
        }
        set max(a) {
            this.u = a;
            this.g("Max");
        }
        get lowerBound() {
            return this.t;
        }
        set lowerBound(a) {
            this.t = a;
            this.g("LowerBound");
        }
        get upperBound() {
            return this.z;
        }
        set upperBound(a) {
            this.z = a;
            this.g("UpperBound");
        }
        get disabled() {
            return this.j;
        }
        set disabled(a) {
            this.j = a;
            this.g("Disabled");
        }
        get discreteTrack() {
            return this.k;
        }
        set discreteTrack(a) {
            this.k = a;
            this.g("DiscreteTrack");
        }
        get hideTooltip() {
            return this.n;
        }
        set hideTooltip(a) {
            this.n = a;
            this.g("HideTooltip");
        }
        get step() {
            return this.y;
        }
        set step(a) {
            this.y = a;
            this.g("Step");
        }
        get primaryTicks() {
            return this.w;
        }
        set primaryTicks(a) {
            this.w = a;
            this.g("PrimaryTicks");
        }
        get secondaryTicks() {
            return this.x;
        }
        set secondaryTicks(a) {
            this.x = a;
            this.g("SecondaryTicks");
        }
        get tickOrientation() {
            return this.aj;
        }
        set tickOrientation(a) {
            this.aj = a;
            this.g("TickOrientation");
        }
        get hidePrimaryLabels() {
            return this.l;
        }
        set hidePrimaryLabels(a) {
            this.l = a;
            this.g("HidePrimaryLabels");
        }
        get hideSecondaryLabels() {
            return this.m;
        }
        set hideSecondaryLabels(a) {
            this.m = a;
            this.g("HideSecondaryLabels");
        }
        get locale() {
            return this.ah;
        }
        set locale(a) {
            this.ah = a;
            this.g("Locale");
        }
        get valueFormat() {
            return this.ak;
        }
        set valueFormat(a) {
            this.ak = a;
            this.g("ValueFormat");
        }
        get tickLabelRotation() {
            return this.ai;
        }
        set tickLabelRotation(a) {
            this.ai = a;
            this.g("TickLabelRotation");
        }
        get valueFormatOptions() {
            return this.h;
        }
        set valueFormatOptions(a) {
            this.h = a;
            this.g("ValueFormatOptions");
        }
    }
    WebSliderBaseDescription.$t = /*@__PURE__*/ markType(WebSliderBaseDescription, 'WebSliderBaseDescription', Description.$);
    return WebSliderBaseDescription;
})();
