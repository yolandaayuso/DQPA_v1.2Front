/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebSortingExpressionDescriptionMetadata } from "./WebSortingExpressionDescriptionMetadata";
import { WebColumnDescriptionMetadata } from "./WebColumnDescriptionMetadata";
import { WebBaseEventArgsDetailDescriptionMetadata } from "./WebBaseEventArgsDetailDescriptionMetadata";
import { WebGroupingDoneEventArgsDetailDescription } from "./WebGroupingDoneEventArgsDetailDescription";
/**
 * @hidden
 */
export let WebGroupingDoneEventArgsDetailDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebGroupingDoneEventArgsDetailDescriptionMetadata extends Base {
        static b(a) {
            if (WebGroupingDoneEventArgsDetailDescriptionMetadata.a == null) {
                WebGroupingDoneEventArgsDetailDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebGroupingDoneEventArgsDetailDescriptionMetadata.c(WebGroupingDoneEventArgsDetailDescriptionMetadata.a);
            }
            if (a.k(WebGroupingDoneEventArgsDetailDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebGroupingDoneEventArgsDetailDescriptionMetadata.a);
            WebSortingExpressionDescriptionMetadata.d(a);
            WebColumnDescriptionMetadata.d(a);
        }
        static c(a) {
            WebBaseEventArgsDetailDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:GroupingDoneEventArgsDetail");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("__marshalByValue", "Boolean");
            a.item("__skipSuffix", "Boolean");
            a.item("Expressions", "Array:WebSortingExpressionDescription:SortingExpression");
            a.item("GroupedColumns", "Array:WebColumnDescription:Column");
            a.item("UngroupedColumns", "Array:WebColumnDescription:Column");
        }
        static d(a) {
            WebGroupingDoneEventArgsDetailDescriptionMetadata.b(a);
            a.ae("WebGroupingDoneEventArgsDetail", () => new WebGroupingDoneEventArgsDetailDescription());
            a.ad("WebGroupingDoneEventArgsDetail", WebGroupingDoneEventArgsDetailDescriptionMetadata.a);
        }
    }
    WebGroupingDoneEventArgsDetailDescriptionMetadata.$t = /*@__PURE__*/ markType(WebGroupingDoneEventArgsDetailDescriptionMetadata, 'WebGroupingDoneEventArgsDetailDescriptionMetadata');
    WebGroupingDoneEventArgsDetailDescriptionMetadata.a = null;
    return WebGroupingDoneEventArgsDetailDescriptionMetadata;
})();
