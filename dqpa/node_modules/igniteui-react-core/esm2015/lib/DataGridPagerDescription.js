/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DataGridPagerDescription = /*@__PURE__*/ (() => {
    class DataGridPagerDescription extends Description {
        get_type() {
            return "DataGridPager";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.y = null;
            this.n = 0;
            this.m = 0;
            this.t = null;
            this.h = null;
            this.l = 0;
            this.u = null;
            this.j = 0;
            this.v = null;
            this.w = null;
            this.r = null;
            this.s = null;
            this.x = null;
        }
        get pagerText() {
            return this.y;
        }
        set pagerText(a) {
            this.y = a;
            this.g("PagerText");
        }
        get pageSize() {
            return this.n;
        }
        set pageSize(a) {
            this.n = a;
            this.g("PageSize");
        }
        get pageCount() {
            return this.m;
        }
        set pageCount(a) {
            this.m = a;
            this.g("PageCount");
        }
        get dataSourceRef() {
            return this.t;
        }
        set dataSourceRef(a) {
            this.t = a;
            this.g("DataSourceRef");
        }
        get dataSource() {
            return this.h;
        }
        set dataSource(a) {
            this.h = a;
            this.g("DataSource");
        }
        get currentPage() {
            return this.l;
        }
        set currentPage(a) {
            this.l = a;
            this.g("CurrentPage");
        }
        get fontFamily() {
            return this.u;
        }
        set fontFamily(a) {
            this.u = a;
            this.g("FontFamily");
        }
        get fontSize() {
            return this.j;
        }
        set fontSize(a) {
            this.j = a;
            this.g("FontSize");
        }
        get fontStyle() {
            return this.v;
        }
        set fontStyle(a) {
            this.v = a;
            this.g("FontStyle");
        }
        get fontWeight() {
            return this.w;
        }
        set fontWeight(a) {
            this.w = a;
            this.g("FontWeight");
        }
        get background() {
            return this.r;
        }
        set background(a) {
            this.r = a;
            this.g("Background");
        }
        get border() {
            return this.s;
        }
        set border(a) {
            this.s = a;
            this.g("Border");
        }
        get pageChangedRef() {
            return this.x;
        }
        set pageChangedRef(a) {
            this.x = a;
            this.g("PageChangedRef");
        }
    }
    DataGridPagerDescription.$t = /*@__PURE__*/ markType(DataGridPagerDescription, 'DataGridPagerDescription', Description.$);
    return DataGridPagerDescription;
})();
