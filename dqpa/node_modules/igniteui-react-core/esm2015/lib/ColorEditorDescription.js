/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let ColorEditorDescription = /*@__PURE__*/ (() => {
    class ColorEditorDescription extends Description {
        get_type() {
            return "ColorEditor";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.an = null;
            this.ad = null;
            this.ah = null;
            this.ae = null;
            this.v = 0;
            this.af = null;
            this.ag = null;
            this.aa = null;
            this.z = null;
            this.ak = null;
            this.w = 0;
            this.al = null;
            this.am = null;
            this.aj = null;
            this.ac = null;
            this.m = false;
            this.h = false;
            this.l = false;
            this.i = false;
            this.j = false;
            this.k = false;
            this.n = false;
            this.ao = null;
            this.ap = null;
            this.ab = null;
            this.ai = null;
        }
        get value() {
            return this.an;
        }
        set value(a) {
            this.an = a;
            this.g("Value");
        }
        get label() {
            return this.ad;
        }
        set label(a) {
            this.ad = a;
            this.g("Label");
        }
        get labelTextColor() {
            return this.ah;
        }
        set labelTextColor(a) {
            this.ah = a;
            this.g("LabelTextColor");
        }
        get labelFontFamily() {
            return this.ae;
        }
        set labelFontFamily(a) {
            this.ae = a;
            this.g("LabelFontFamily");
        }
        get labelFontSize() {
            return this.v;
        }
        set labelFontSize(a) {
            this.v = a;
            this.g("LabelFontSize");
        }
        get labelFontStyle() {
            return this.af;
        }
        set labelFontStyle(a) {
            this.af = a;
            this.g("LabelFontStyle");
        }
        get labelFontWeight() {
            return this.ag;
        }
        set labelFontWeight(a) {
            this.ag = a;
            this.g("LabelFontWeight");
        }
        get density() {
            return this.aa;
        }
        set density(a) {
            this.aa = a;
            this.g("Density");
        }
        get baseTheme() {
            return this.z;
        }
        set baseTheme(a) {
            this.z = a;
            this.g("BaseTheme");
        }
        get textFontFamily() {
            return this.ak;
        }
        set textFontFamily(a) {
            this.ak = a;
            this.g("TextFontFamily");
        }
        get textFontSize() {
            return this.w;
        }
        set textFontSize(a) {
            this.w = a;
            this.g("TextFontSize");
        }
        get textFontStyle() {
            return this.al;
        }
        set textFontStyle(a) {
            this.al = a;
            this.g("TextFontStyle");
        }
        get textFontWeight() {
            return this.am;
        }
        set textFontWeight(a) {
            this.am = a;
            this.g("TextFontWeight");
        }
        get textColor() {
            return this.aj;
        }
        set textColor(a) {
            this.aj = a;
            this.g("TextColor");
        }
        get iconColor() {
            return this.ac;
        }
        set iconColor(a) {
            this.ac = a;
            this.g("IconColor");
        }
        get showClearButton() {
            return this.m;
        }
        set showClearButton(a) {
            this.m = a;
            this.g("ShowClearButton");
        }
        get allowTextInput() {
            return this.h;
        }
        set allowTextInput(a) {
            this.h = a;
            this.g("AllowTextInput");
        }
        get openOnFocus() {
            return this.l;
        }
        set openOnFocus(a) {
            this.l = a;
            this.g("OpenOnFocus");
        }
        get isDisabled() {
            return this.i;
        }
        set isDisabled(a) {
            this.i = a;
            this.g("IsDisabled");
        }
        get isFixed() {
            return this.j;
        }
        set isFixed(a) {
            this.j = a;
            this.g("IsFixed");
        }
        get openAsChild() {
            return this.k;
        }
        set openAsChild(a) {
            this.k = a;
            this.g("OpenAsChild");
        }
        get useTopLayer() {
            return this.n;
        }
        set useTopLayer(a) {
            this.n = a;
            this.g("UseTopLayer");
        }
        get valueChangedRef() {
            return this.ao;
        }
        set valueChangedRef(a) {
            this.ao = a;
            this.g("ValueChangedRef");
        }
        get valueChangingRef() {
            return this.ap;
        }
        set valueChangingRef(a) {
            this.ap = a;
            this.g("ValueChangingRef");
        }
        get gotFocusRef() {
            return this.ab;
        }
        set gotFocusRef(a) {
            this.ab = a;
            this.g("GotFocusRef");
        }
        get lostFocusRef() {
            return this.ai;
        }
        set lostFocusRef(a) {
            this.ai = a;
            this.g("LostFocusRef");
        }
    }
    ColorEditorDescription.$t = /*@__PURE__*/ markType(ColorEditorDescription, 'ColorEditorDescription', Description.$);
    return ColorEditorDescription;
})();
