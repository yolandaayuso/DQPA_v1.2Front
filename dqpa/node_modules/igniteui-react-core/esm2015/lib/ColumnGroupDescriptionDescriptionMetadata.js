/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FormatGroupTextEventArgsDescriptionMetadata } from "./FormatGroupTextEventArgsDescriptionMetadata";
import { ColumnSortDescriptionDescriptionMetadata } from "./ColumnSortDescriptionDescriptionMetadata";
import { ColumnGroupDescriptionDescription } from "./ColumnGroupDescriptionDescription";
/**
 * @hidden
 */
export let ColumnGroupDescriptionDescriptionMetadata = /*@__PURE__*/ (() => {
    class ColumnGroupDescriptionDescriptionMetadata extends Base {
        static b(a) {
            if (ColumnGroupDescriptionDescriptionMetadata.a == null) {
                ColumnGroupDescriptionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ColumnGroupDescriptionDescriptionMetadata.c(ColumnGroupDescriptionDescriptionMetadata.a);
            }
            if (a.k(ColumnGroupDescriptionDescriptionMetadata.a)) {
                return;
            }
            a.ac(ColumnGroupDescriptionDescriptionMetadata.a);
            FormatGroupTextEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            ColumnSortDescriptionDescriptionMetadata.c(a);
            a.item("__marshalByValue", "Boolean");
            a.item("ValueFormat", "String");
            a.item("ValueFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
            a.item("ValueFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
            a.item("DisplayFormat", "String");
            a.item("DisplayFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
            a.item("DisplayFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
            a.item("DisplayName", "String");
            a.item("FormatTextRef", "EventRef::formatText");
        }
        static d(a) {
            ColumnGroupDescriptionDescriptionMetadata.b(a);
            a.ae("ColumnGroupDescription", () => new ColumnGroupDescriptionDescription());
            a.ad("ColumnGroupDescription", ColumnGroupDescriptionDescriptionMetadata.a);
        }
    }
    ColumnGroupDescriptionDescriptionMetadata.$t = /*@__PURE__*/ markType(ColumnGroupDescriptionDescriptionMetadata, 'ColumnGroupDescriptionDescriptionMetadata');
    ColumnGroupDescriptionDescriptionMetadata.a = null;
    return ColumnGroupDescriptionDescriptionMetadata;
})();
