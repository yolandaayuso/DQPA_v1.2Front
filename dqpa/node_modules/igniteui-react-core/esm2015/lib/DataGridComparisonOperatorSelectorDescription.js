/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DataGridComparisonOperatorSelectorDescription = /*@__PURE__*/ (() => {
    class DataGridComparisonOperatorSelectorDescription extends Description {
        get_type() {
            return "DataGridComparisonOperatorSelector";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.s = null;
            this.n = null;
            this.h = 0;
            this.o = null;
            this.i = 0;
            this.r = null;
            this.l = null;
            this.t = null;
            this.q = null;
            this.p = null;
            this.m = null;
        }
        get value() {
            return this.s;
        }
        set value(a) {
            this.s = a;
            this.g("Value");
        }
        get customFilterID() {
            return this.n;
        }
        set customFilterID(a) {
            this.n = a;
            this.g("CustomFilterID");
        }
        get customFilterIndex() {
            return this.h;
        }
        set customFilterIndex(a) {
            this.h = a;
            this.g("CustomFilterIndex");
        }
        get dataType() {
            return this.o;
        }
        set dataType(a) {
            this.o = a;
            this.g("DataType");
        }
        get maxHeight() {
            return this.i;
        }
        set maxHeight(a) {
            this.i = a;
            this.g("MaxHeight");
        }
        get textColor() {
            return this.r;
        }
        set textColor(a) {
            this.r = a;
            this.g("TextColor");
        }
        get background() {
            return this.l;
        }
        set background(a) {
            this.l = a;
            this.g("Background");
        }
        get valueChangedRef() {
            return this.t;
        }
        set valueChangedRef(a) {
            this.t = a;
            this.g("ValueChangedRef");
        }
        get openingRef() {
            return this.q;
        }
        set openingRef(a) {
            this.q = a;
            this.g("OpeningRef");
        }
        get openedRef() {
            return this.p;
        }
        set openedRef(a) {
            this.p = a;
            this.g("OpenedRef");
        }
        get closingRef() {
            return this.m;
        }
        set closingRef(a) {
            this.m = a;
            this.g("ClosingRef");
        }
    }
    DataGridComparisonOperatorSelectorDescription.$t = /*@__PURE__*/ markType(DataGridComparisonOperatorSelectorDescription, 'DataGridComparisonOperatorSelectorDescription', Description.$);
    return DataGridComparisonOperatorSelectorDescription;
})();
