/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { VoidEventArgsDescriptionMetadata } from "./VoidEventArgsDescriptionMetadata";
/**
 * @hidden
 */
export let WebButtonBaseDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebButtonBaseDescriptionMetadata extends Base {
        static b(a) {
            if (WebButtonBaseDescriptionMetadata.a == null) {
                WebButtonBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebButtonBaseDescriptionMetadata.c(WebButtonBaseDescriptionMetadata.a);
            }
            if (a.k(WebButtonBaseDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebButtonBaseDescriptionMetadata.a);
            VoidEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:ButtonBase");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
            a.item("DisplayType", "(wc:Type)ExportedType:string:ButtonBaseType");
            a.item("DisplayType@stringUnion", "WebComponents;React");
            a.item("DisplayType@names", "Button;Reset;Submit");
            a.item("Href", "String");
            a.item("Download", "String");
            a.item("Target", "ExportedType:string:ButtonBaseTarget");
            a.item("Target@stringUnion", "WebComponents;React");
            a.item("Target@names", "_blank;_parent;_self;_top");
            a.item("Rel", "String");
            a.item("Disabled", "Boolean");
            a.item("ClickedRef", "EventRef::clicked");
            a.item("FocusRef", "EventRef::focus:skipWCPrefix");
            a.item("BlurRef", "EventRef::blur:skipWCPrefix");
        }
        static d(a) {
            WebButtonBaseDescriptionMetadata.b(a);
            a.ad("WebButtonBase", WebButtonBaseDescriptionMetadata.a);
        }
    }
    WebButtonBaseDescriptionMetadata.$t = /*@__PURE__*/ markType(WebButtonBaseDescriptionMetadata, 'WebButtonBaseDescriptionMetadata');
    WebButtonBaseDescriptionMetadata.a = null;
    return WebButtonBaseDescriptionMetadata;
})();
