/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, IEqualityComparer$1_$type, markType } from "./type";
/**
 * @hidden
 */
export let TransactionKeyEqualityComparer = /*@__PURE__*/ (() => {
    class TransactionKeyEqualityComparer extends Base {
        equalsC(a, b) {
            let c = a;
            let d = b;
            if (c.length != d.length) {
                return false;
            }
            for (let e = 0; e < c.length; e++) {
                if (c[e] == null && d[e] != null) {
                    return false;
                }
                if (c[e] != null && d[e] == null) {
                    return false;
                }
                if (c[e] != d[e]) {
                    if (!Base.equalsStatic(c[e], d[e])) {
                        return false;
                    }
                }
            }
            return true;
        }
        getHashCodeC(a) {
            let b = 0;
            let c = a;
            for (let d = 0; d < c.length; d++) {
                if (c[d] != null) {
                    b += Base.getHashCodeStatic(c[d]);
                }
            }
            return b;
        }
    }
    TransactionKeyEqualityComparer.$t = /*@__PURE__*/ markType(TransactionKeyEqualityComparer, 'TransactionKeyEqualityComparer', Base.$, [/*@__PURE__*/ IEqualityComparer$1_$type.specialize(Base.$)]);
    return TransactionKeyEqualityComparer;
})();
