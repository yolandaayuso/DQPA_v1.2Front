/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { AssigningPolarStyleEventArgsDescriptionMetadata } from "./AssigningPolarStyleEventArgsDescriptionMetadata";
import { AssigningPolarMarkerStyleEventArgsDescriptionMetadata } from "./AssigningPolarMarkerStyleEventArgsDescriptionMetadata";
import { MarkerSeriesDescriptionMetadata } from "./MarkerSeriesDescriptionMetadata";
/**
 * @hidden
 */
export let PolarBaseDescriptionMetadata = /*@__PURE__*/ (() => {
    class PolarBaseDescriptionMetadata extends Base {
        static b(a) {
            if (PolarBaseDescriptionMetadata.a == null) {
                PolarBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                PolarBaseDescriptionMetadata.c(PolarBaseDescriptionMetadata.a);
            }
            if (a.k(PolarBaseDescriptionMetadata.a)) {
                return;
            }
            a.ac(PolarBaseDescriptionMetadata.a);
            AssigningPolarStyleEventArgsDescriptionMetadata.d(a);
            AssigningPolarMarkerStyleEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            MarkerSeriesDescriptionMetadata.c(a);
            a.item("AngleMemberPath", "String");
            a.item("RadiusMemberPath", "String");
            a.item("HighlightedRadiusMemberPath", "String");
            a.item("HighlightedAngleMemberPath", "String");
            a.item("AngleAxisRef", "(w:AngleAxis,wf:AngleAxis)DataRef::object");
            a.item("AngleAxisRef@nameBinding", "true");
            a.item("RadiusAxisRef", "(w:RadiusAxis,wf:RadiusAxis)DataRef::object");
            a.item("RadiusAxisRef@nameBinding", "true");
            a.item("UseCartesianInterpolation", "Boolean");
            a.item("MaximumMarkers", "Number:int");
            a.item("TrendLineType", "ExportedType:string:TrendLineType");
            a.item("TrendLineType@names", "None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage");
            a.item("TrendLineBrush", "Brush");
            a.item("ActualTrendLineBrush", "Brush");
            a.item("TrendLineThickness", "Number:double");
            a.item("TrendLineDashArray", "DoubleCollection:double");
            a.item("TrendLinePeriod", "Number:int");
            a.item("TrendLineZIndex", "Number:int");
            a.item("ClipSeriesToBounds", "Boolean");
            a.item("ActualItemSearchMode", "ExportedType:string:ScatterItemSearchMode");
            a.item("ActualItemSearchMode@names", "Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;TopVisiblePoint;None");
            a.item("ItemSearchMode", "ExportedType:string:ScatterItemSearchMode");
            a.item("ItemSearchMode@names", "Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;TopVisiblePoint;None");
            a.item("ItemSearchThreshold", "Number:int");
            a.item("IsCustomPolarStyleAllowed", "Boolean");
            a.item("IsCustomPolarMarkerStyleAllowed", "Boolean");
            a.item("RadiusMemberAsLegendLabel", "String");
            a.item("AngleMemberAsLegendLabel", "String");
            a.item("RadiusMemberAsLegendUnit", "String");
            a.item("AngleMemberAsLegendUnit", "String");
            a.item("AssigningPolarStyleRef", "EventRef::assigningPolarStyle");
            a.item("AssigningPolarMarkerStyleRef", "EventRef::assigningPolarMarkerStyle");
        }
        static d(a) {
            PolarBaseDescriptionMetadata.b(a);
            a.ad("PolarBase", PolarBaseDescriptionMetadata.a);
        }
    }
    PolarBaseDescriptionMetadata.$t = /*@__PURE__*/ markType(PolarBaseDescriptionMetadata, 'PolarBaseDescriptionMetadata');
    PolarBaseDescriptionMetadata.a = null;
    return PolarBaseDescriptionMetadata;
})();
