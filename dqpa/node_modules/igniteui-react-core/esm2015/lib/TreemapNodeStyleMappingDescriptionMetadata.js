/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { TreemapNodeStyleDescriptionMetadata } from "./TreemapNodeStyleDescriptionMetadata";
import { TreemapNodeStyleMappingDescription } from "./TreemapNodeStyleMappingDescription";
/**
 * @hidden
 */
export let TreemapNodeStyleMappingDescriptionMetadata = /*@__PURE__*/ (() => {
    class TreemapNodeStyleMappingDescriptionMetadata extends Base {
        static b(a) {
            if (TreemapNodeStyleMappingDescriptionMetadata.a == null) {
                TreemapNodeStyleMappingDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                TreemapNodeStyleMappingDescriptionMetadata.c(TreemapNodeStyleMappingDescriptionMetadata.a);
            }
            if (a.k(TreemapNodeStyleMappingDescriptionMetadata.a)) {
                return;
            }
            a.ac(TreemapNodeStyleMappingDescriptionMetadata.a);
        }
        static c(a) {
            TreemapNodeStyleDescriptionMetadata.c(a);
            a.item("TargetType", "ExportedType:string:TreemapNodeStyleMappingTargetType");
            a.item("TargetType@names", "All;Parent;Child");
            a.item("MinimumValue", "Number:double");
            a.item("MaximumValue", "Number:double");
            a.item("Value", "Unknown");
            a.item("MappingMode", "ExportedType:string:TreemapValueMappingMode");
            a.item("MappingMode@names", "Sum;Value;CustomValue");
        }
        static d(a) {
            TreemapNodeStyleMappingDescriptionMetadata.b(a);
            a.ae("TreemapNodeStyleMapping", () => new TreemapNodeStyleMappingDescription());
            a.ad("TreemapNodeStyleMapping", TreemapNodeStyleMappingDescriptionMetadata.a);
        }
    }
    TreemapNodeStyleMappingDescriptionMetadata.$t = /*@__PURE__*/ markType(TreemapNodeStyleMappingDescriptionMetadata, 'TreemapNodeStyleMappingDescriptionMetadata');
    TreemapNodeStyleMappingDescriptionMetadata.a = null;
    return TreemapNodeStyleMappingDescriptionMetadata;
})();
