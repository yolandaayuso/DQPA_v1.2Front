/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { CategoryAngleAxisDescriptionMetadata } from "./CategoryAngleAxisDescriptionMetadata";
import { ProportionalCategoryAngleAxisDescription } from "./ProportionalCategoryAngleAxisDescription";
/**
 * @hidden
 */
export let ProportionalCategoryAngleAxisDescriptionMetadata = /*@__PURE__*/ (() => {
    class ProportionalCategoryAngleAxisDescriptionMetadata extends Base {
        static b(a) {
            if (ProportionalCategoryAngleAxisDescriptionMetadata.a == null) {
                ProportionalCategoryAngleAxisDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ProportionalCategoryAngleAxisDescriptionMetadata.c(ProportionalCategoryAngleAxisDescriptionMetadata.a);
            }
            if (a.k(ProportionalCategoryAngleAxisDescriptionMetadata.a)) {
                return;
            }
            a.ac(ProportionalCategoryAngleAxisDescriptionMetadata.a);
        }
        static c(a) {
            CategoryAngleAxisDescriptionMetadata.c(a);
            a.item("ValueMemberPath", "String");
            a.item("OthersCategoryThreshold", "Number:double");
            a.item("OthersCategoryType", "ExportedType:string:OthersCategoryType");
            a.item("OthersCategoryType@names", "Number;Percent");
            a.item("OthersCategoryText", "String");
        }
        static d(a) {
            ProportionalCategoryAngleAxisDescriptionMetadata.b(a);
            a.ae("ProportionalCategoryAngleAxis", () => new ProportionalCategoryAngleAxisDescription());
            a.ad("ProportionalCategoryAngleAxis", ProportionalCategoryAngleAxisDescriptionMetadata.a);
        }
    }
    ProportionalCategoryAngleAxisDescriptionMetadata.$t = /*@__PURE__*/ markType(ProportionalCategoryAngleAxisDescriptionMetadata, 'ProportionalCategoryAngleAxisDescriptionMetadata');
    ProportionalCategoryAngleAxisDescriptionMetadata.a = null;
    return ProportionalCategoryAngleAxisDescriptionMetadata;
})();
