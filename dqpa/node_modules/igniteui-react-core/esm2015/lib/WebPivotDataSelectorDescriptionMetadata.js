/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotDataSelectorDescription } from "./WebPivotDataSelectorDescription";
/**
 * @hidden
 */
export let WebPivotDataSelectorDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebPivotDataSelectorDescriptionMetadata extends Base {
        static b(a) {
            if (WebPivotDataSelectorDescriptionMetadata.a == null) {
                WebPivotDataSelectorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebPivotDataSelectorDescriptionMetadata.c(WebPivotDataSelectorDescriptionMetadata.a);
            }
            if (a.k(WebPivotDataSelectorDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebPivotDataSelectorDescriptionMetadata.a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:PivotDataSelector");
            a.item("__tagNameWC", "String:igc-pivot-data-selector");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("ColumnsExpanded", "Boolean");
            a.item("RowsExpanded", "Boolean");
            a.item("FiltersExpanded", "Boolean");
            a.item("ValuesExpanded", "Boolean");
            a.item("GridRef", "(w:Grid,wf:Grid)DataRef::object");
        }
        static d(a) {
            WebPivotDataSelectorDescriptionMetadata.b(a);
            a.ae("WebPivotDataSelector", () => new WebPivotDataSelectorDescription());
            a.ad("WebPivotDataSelector", WebPivotDataSelectorDescriptionMetadata.a);
        }
    }
    WebPivotDataSelectorDescriptionMetadata.$t = /*@__PURE__*/ markType(WebPivotDataSelectorDescriptionMetadata, 'WebPivotDataSelectorDescriptionMetadata');
    WebPivotDataSelectorDescriptionMetadata.a = null;
    return WebPivotDataSelectorDescriptionMetadata;
})();
