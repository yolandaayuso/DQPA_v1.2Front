/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SeriesDescriptionMetadata } from "./SeriesDescriptionMetadata";
/**
 * @hidden
 */
export let AnnotationLayerDescriptionMetadata = /*@__PURE__*/ (() => {
    class AnnotationLayerDescriptionMetadata extends Base {
        static b(a) {
            if (AnnotationLayerDescriptionMetadata.a == null) {
                AnnotationLayerDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                AnnotationLayerDescriptionMetadata.c(AnnotationLayerDescriptionMetadata.a);
            }
            if (a.k(AnnotationLayerDescriptionMetadata.a)) {
                return;
            }
            a.ac(AnnotationLayerDescriptionMetadata.a);
        }
        static c(a) {
            SeriesDescriptionMetadata.c(a);
            a.item("UseIndex", "Boolean");
            a.item("UseLegend", "Boolean");
            a.item("CursorPosition", "Point");
            a.item("IsDefaultCrosshairDisabled", "Boolean");
            a.item("AppearanceMode", "ExportedType:string:AnnotationAppearanceMode");
            a.item("AppearanceMode@names", "Auto;BrightnessShift;SaturationShift;DashPattern;OpacityShift");
            a.item("ActualAppearanceMode", "ExportedType:string:AnnotationAppearanceMode");
            a.item("ActualAppearanceMode@names", "Auto;BrightnessShift;SaturationShift;DashPattern;OpacityShift");
            a.item("ShiftAmount", "Number:double");
            a.item("ActualShiftAmount", "Number:double");
            a.item("HorizontalAppearanceMode", "ExportedType:string:AnnotationAppearanceMode");
            a.item("HorizontalAppearanceMode@names", "Auto;BrightnessShift;SaturationShift;DashPattern;OpacityShift");
            a.item("ActualHorizontalAppearanceMode", "ExportedType:string:AnnotationAppearanceMode");
            a.item("ActualHorizontalAppearanceMode@names", "Auto;BrightnessShift;SaturationShift;DashPattern;OpacityShift");
            a.item("VerticalAppearanceMode", "ExportedType:string:AnnotationAppearanceMode");
            a.item("VerticalAppearanceMode@names", "Auto;BrightnessShift;SaturationShift;DashPattern;OpacityShift");
            a.item("ActualVerticalAppearanceMode", "ExportedType:string:AnnotationAppearanceMode");
            a.item("ActualVerticalAppearanceMode@names", "Auto;BrightnessShift;SaturationShift;DashPattern;OpacityShift");
            a.item("HorizontalShiftAmount", "Number:double");
            a.item("ActualHorizontalShiftAmount", "Number:double");
            a.item("VerticalShiftAmount", "Number:double");
            a.item("ActualVerticalShiftAmount", "Number:double");
            a.item("HorizontalDashArray", "DoubleCollection:double");
            a.item("ActualHorizontalDashArray", "DoubleCollection:double");
            a.item("VerticalDashArray", "DoubleCollection:double");
            a.item("ActualVerticalDashArray", "DoubleCollection:double");
            a.item("ShouldRenderAsOverlay", "Boolean");
        }
        static d(a) {
            AnnotationLayerDescriptionMetadata.b(a);
            a.ad("AnnotationLayer", AnnotationLayerDescriptionMetadata.a);
        }
    }
    AnnotationLayerDescriptionMetadata.$t = /*@__PURE__*/ markType(AnnotationLayerDescriptionMetadata, 'AnnotationLayerDescriptionMetadata');
    AnnotationLayerDescriptionMetadata.a = null;
    return AnnotationLayerDescriptionMetadata;
})();
