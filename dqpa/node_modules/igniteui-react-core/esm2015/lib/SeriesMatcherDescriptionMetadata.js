/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SeriesMatcherDescription } from "./SeriesMatcherDescription";
/**
 * @hidden
 */
export let SeriesMatcherDescriptionMetadata = /*@__PURE__*/ (() => {
    class SeriesMatcherDescriptionMetadata extends Base {
        static b(a) {
            if (SeriesMatcherDescriptionMetadata.a == null) {
                SeriesMatcherDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                SeriesMatcherDescriptionMetadata.c(SeriesMatcherDescriptionMetadata.a);
            }
            if (a.k(SeriesMatcherDescriptionMetadata.a)) {
                return;
            }
            a.ac(SeriesMatcherDescriptionMetadata.a);
        }
        static c(a) {
            a.item("__marshalByValue", "Boolean");
            a.item("Name", "String");
            a.item("Title", "String");
            a.item("Index", "Number:int");
            a.item("MemberPathType", "String");
            a.item("MemberPath", "String");
        }
        static d(a) {
            SeriesMatcherDescriptionMetadata.b(a);
            a.ae("SeriesMatcher", () => new SeriesMatcherDescription());
            a.ad("SeriesMatcher", SeriesMatcherDescriptionMetadata.a);
        }
    }
    SeriesMatcherDescriptionMetadata.$t = /*@__PURE__*/ markType(SeriesMatcherDescriptionMetadata, 'SeriesMatcherDescriptionMetadata');
    SeriesMatcherDescriptionMetadata.a = null;
    return SeriesMatcherDescriptionMetadata;
})();
