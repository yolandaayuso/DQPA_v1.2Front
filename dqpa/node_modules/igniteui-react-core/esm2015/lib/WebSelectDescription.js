/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { WebBaseComboBoxLikeDescription } from "./WebBaseComboBoxLikeDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebSelectDescription = /*@__PURE__*/ (() => {
    class WebSelectDescription extends WebBaseComboBoxLikeDescription {
        get_type() {
            return "WebSelect";
        }
        constructor() {
            super();
            this.aq = null;
            this.t = false;
            this.q = false;
            this.aa = 0;
            this.aj = null;
            this.an = null;
            this.ao = null;
            this.ap = null;
            this.r = false;
            this.u = false;
            this.ac = null;
            this.ak = null;
            this.s = false;
            this.af = null;
            this.ai = null;
            this.ae = null;
            this.am = null;
            this.al = null;
            this.ah = null;
            this.ag = null;
        }
        get value() {
            return this.aq;
        }
        set value(a) {
            this.aq = a;
            this.g("Value");
        }
        get outlined() {
            return this.t;
        }
        set outlined(a) {
            this.t = a;
            this.g("Outlined");
        }
        get autofocus() {
            return this.q;
        }
        set autofocus(a) {
            this.q = a;
            this.g("Autofocus");
        }
        get distance() {
            return this.aa;
        }
        set distance(a) {
            this.aa = a;
            this.g("Distance");
        }
        get label() {
            return this.aj;
        }
        set label(a) {
            this.aj = a;
            this.g("Label");
        }
        get placeholder() {
            return this.an;
        }
        set placeholder(a) {
            this.an = a;
            this.g("Placeholder");
        }
        get placement() {
            return this.ao;
        }
        set placement(a) {
            this.ao = a;
            this.g("Placement");
        }
        get scrollStrategy() {
            return this.ap;
        }
        set scrollStrategy(a) {
            this.ap = a;
            this.g("ScrollStrategy");
        }
        get disabled() {
            return this.r;
        }
        set disabled(a) {
            this.r = a;
            this.g("Disabled");
        }
        get required() {
            return this.u;
        }
        set required(a) {
            this.u = a;
            this.g("Required");
        }
        get defaultValue() {
            return this.ac;
        }
        set defaultValue(a) {
            this.ac = a;
            this.g("DefaultValue");
        }
        get name() {
            return this.ak;
        }
        set name(a) {
            this.ak = a;
            this.g("Name");
        }
        get invalid() {
            return this.s;
        }
        set invalid(a) {
            this.s = a;
            this.g("Invalid");
        }
        get changeRef() {
            return this.af;
        }
        set changeRef(a) {
            this.af = a;
            this.g("ChangeRef");
        }
        get focusRef() {
            return this.ai;
        }
        set focusRef(a) {
            this.ai = a;
            this.g("FocusRef");
        }
        get blurRef() {
            return this.ae;
        }
        set blurRef(a) {
            this.ae = a;
            this.g("BlurRef");
        }
        get openingRef() {
            return this.am;
        }
        set openingRef(a) {
            this.am = a;
            this.g("OpeningRef");
        }
        get openedRef() {
            return this.al;
        }
        set openedRef(a) {
            this.al = a;
            this.g("OpenedRef");
        }
        get closingRef() {
            return this.ah;
        }
        set closingRef(a) {
            this.ah = a;
            this.g("ClosingRef");
        }
        get closedRef() {
            return this.ag;
        }
        set closedRef(a) {
            this.ag = a;
            this.g("ClosedRef");
        }
    }
    WebSelectDescription.$t = /*@__PURE__*/ markType(WebSelectDescription, 'WebSelectDescription', WebBaseComboBoxLikeDescription.$);
    return WebSelectDescription;
})();
