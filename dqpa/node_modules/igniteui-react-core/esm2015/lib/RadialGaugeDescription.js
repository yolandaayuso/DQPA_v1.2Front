/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let RadialGaugeDescription = /*@__PURE__*/ (() => {
    class RadialGaugeDescription extends Description {
        get fontFamily() {
            return this.eg;
        }
        set fontFamily(a) {
            this.eg = a;
            this.g("FontFamily");
        }
        get fontSize() {
            return this.a2;
        }
        set fontSize(a) {
            this.a2 = a;
            this.g("FontSize");
        }
        get fontWeight() {
            return this.ei;
        }
        set fontWeight(a) {
            this.ei = a;
            this.g("FontWeight");
        }
        get fontStyle() {
            return this.eh;
        }
        set fontStyle(a) {
            this.eh = a;
            this.g("FontStyle");
        }
        get width() {
            return this.fm;
        }
        set width(a) {
            this.fm = a;
            this.g("Width");
        }
        get height() {
            return this.en;
        }
        set height(a) {
            this.en = a;
            this.g("Height");
        }
        get background() {
            return this.d9;
        }
        set background(a) {
            this.d9 = a;
            this.g("Background");
        }
        get_type() {
            return "RadialGauge";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.eg = null;
            this.a2 = 0;
            this.ei = null;
            this.eh = null;
            this.fm = null;
            this.en = null;
            this.d9 = null;
            this.j = null;
            this.k = null;
            this.bc = 0;
            this.at = 0;
            this.bb = 0;
            this.as = 0;
            this.a8 = 0;
            this.a0 = 0;
            this.a1 = 0;
            this.cc = 0;
            this.a6 = 0;
            this.ar = 0;
            this.a7 = 0;
            this.d2 = null;
            this.ev = null;
            this.b0 = 0;
            this.bx = 0;
            this.e6 = null;
            this.d0 = 0;
            this.fk = null;
            this.ey = null;
            this.ez = null;
            this.bq = 0;
            this.bj = 0;
            this.e3 = null;
            this.br = 0;
            this.bk = 0;
            this.bi = 0;
            this.bh = 0;
            this.bp = 0;
            this.bo = 0;
            this.bn = 0;
            this.bl = 0;
            this.e2 = null;
            this.b1 = 0;
            this.e0 = null;
            this.e1 = null;
            this.bs = 0;
            this.bm = 0;
            this.by = 0;
            this.a9 = 0;
            this.ba = 0;
            this.b6 = 0;
            this.b5 = 0;
            this.b7 = 0;
            this.fd = null;
            this.ef = null;
            this.bf = 0;
            this.be = 0;
            this.bg = 0;
            this.ex = null;
            this.bd = 0;
            this.e4 = null;
            this.ea = null;
            this.eb = null;
            this.az = 0;
            this.ax = 0;
            this.ay = 0;
            this.bz = 0;
            this.e5 = null;
            this.av = 0;
            this.aw = 0;
            this.ec = null;
            this.l = null;
            this.bw = 0;
            this.ed = null;
            this.aa = false;
            this.z = false;
            this.y = false;
            this.x = false;
            this.ee = null;
            this.ew = null;
            this.i = null;
            this.cb = 0;
            this.bv = 0;
            this.au = 0;
            this.bt = 0;
            this.ab = false;
            this.bu = 0;
            this.fj = null;
            this.fc = null;
            this.b8 = 0;
            this.b2 = 0;
            this.b9 = 0;
            this.b3 = 0;
            this.fe = null;
            this.e7 = null;
            this.ae = false;
            this.ac = false;
            this.af = false;
            this.ad = false;
            this.fb = null;
            this.m = null;
            this.fi = null;
            this.n = null;
            this.et = null;
            this.a3 = 0;
            this.a4 = 0;
            this.eo = null;
            this.v = false;
            this.w = false;
            this.es = null;
            this.h = null;
            this.ep = null;
            this.a5 = 0;
            this.eq = null;
            this.er = null;
            this.e8 = null;
            this.b4 = 0;
            this.e9 = null;
            this.fa = null;
            this.ff = null;
            this.ca = 0;
            this.fg = null;
            this.fh = null;
            this.d8 = null;
            this.d7 = null;
            this.d5 = null;
            this.em = null;
            this.el = null;
            this.ej = null;
            this.ek = null;
            this.d6 = null;
            this.fl = null;
            this.eu = null;
            this.d4 = null;
            this.d3 = null;
        }
        get rangeBrushes() {
            return this.j;
        }
        set rangeBrushes(a) {
            this.j = a;
            this.g("RangeBrushes");
        }
        get rangeOutlines() {
            return this.k;
        }
        set rangeOutlines(a) {
            this.k = a;
            this.g("RangeOutlines");
        }
        get minimumValue() {
            return this.bc;
        }
        set minimumValue(a) {
            this.bc = a;
            this.g("MinimumValue");
        }
        get actualMinimumValue() {
            return this.at;
        }
        set actualMinimumValue(a) {
            this.at = a;
            this.g("ActualMinimumValue");
        }
        get maximumValue() {
            return this.bb;
        }
        set maximumValue(a) {
            this.bb = a;
            this.g("MaximumValue");
        }
        get actualMaximumValue() {
            return this.as;
        }
        set actualMaximumValue(a) {
            this.as = a;
            this.g("ActualMaximumValue");
        }
        get interval() {
            return this.a8;
        }
        set interval(a) {
            this.a8 = a;
            this.g("Interval");
        }
        get centerX() {
            return this.a0;
        }
        set centerX(a) {
            this.a0 = a;
            this.g("CenterX");
        }
        get centerY() {
            return this.a1;
        }
        set centerY(a) {
            this.a1 = a;
            this.g("CenterY");
        }
        get value() {
            return this.cc;
        }
        set value(a) {
            this.cc = a;
            this.g("Value");
        }
        get highlightValue() {
            return this.a6;
        }
        set highlightValue(a) {
            this.a6 = a;
            this.g("HighlightValue");
        }
        get actualHighlightValueOpacity() {
            return this.ar;
        }
        set actualHighlightValueOpacity(a) {
            this.ar = a;
            this.g("ActualHighlightValueOpacity");
        }
        get highlightValueOpacity() {
            return this.a7;
        }
        set highlightValueOpacity(a) {
            this.a7 = a;
            this.g("HighlightValueOpacity");
        }
        get actualHighlightValueDisplayMode() {
            return this.d2;
        }
        set actualHighlightValueDisplayMode(a) {
            this.d2 = a;
            this.g("ActualHighlightValueDisplayMode");
        }
        get highlightValueDisplayMode() {
            return this.ev;
        }
        set highlightValueDisplayMode(a) {
            this.ev = a;
            this.g("HighlightValueDisplayMode");
        }
        get scaleStartAngle() {
            return this.b0;
        }
        set scaleStartAngle(a) {
            this.b0 = a;
            this.g("ScaleStartAngle");
        }
        get scaleEndAngle() {
            return this.bx;
        }
        set scaleEndAngle(a) {
            this.bx = a;
            this.g("ScaleEndAngle");
        }
        get scaleSweepDirection() {
            return this.e6;
        }
        set scaleSweepDirection(a) {
            this.e6 = a;
            this.g("ScaleSweepDirection");
        }
        get transitionDuration() {
            return this.d0;
        }
        set transitionDuration(a) {
            this.d0 = a;
            this.g("TransitionDuration");
        }
        get transitionEasingFunctionRef() {
            return this.fk;
        }
        set transitionEasingFunctionRef(a) {
            this.fk = a;
            this.g("TransitionEasingFunctionRef");
        }
        get needleBrush() {
            return this.ey;
        }
        set needleBrush(a) {
            this.ey = a;
            this.g("NeedleBrush");
        }
        get needleOutline() {
            return this.ez;
        }
        set needleOutline(a) {
            this.ez = a;
            this.g("NeedleOutline");
        }
        get needleStartExtent() {
            return this.bq;
        }
        set needleStartExtent(a) {
            this.bq = a;
            this.g("NeedleStartExtent");
        }
        get needleEndExtent() {
            return this.bj;
        }
        set needleEndExtent(a) {
            this.bj = a;
            this.g("NeedleEndExtent");
        }
        get needleShape() {
            return this.e3;
        }
        set needleShape(a) {
            this.e3 = a;
            this.g("NeedleShape");
        }
        get needleStartWidthRatio() {
            return this.br;
        }
        set needleStartWidthRatio(a) {
            this.br = a;
            this.g("NeedleStartWidthRatio");
        }
        get needleEndWidthRatio() {
            return this.bk;
        }
        set needleEndWidthRatio(a) {
            this.bk = a;
            this.g("NeedleEndWidthRatio");
        }
        get needleBaseFeatureWidthRatio() {
            return this.bi;
        }
        set needleBaseFeatureWidthRatio(a) {
            this.bi = a;
            this.g("NeedleBaseFeatureWidthRatio");
        }
        get needleBaseFeatureExtent() {
            return this.bh;
        }
        set needleBaseFeatureExtent(a) {
            this.bh = a;
            this.g("NeedleBaseFeatureExtent");
        }
        get needlePointFeatureWidthRatio() {
            return this.bp;
        }
        set needlePointFeatureWidthRatio(a) {
            this.bp = a;
            this.g("NeedlePointFeatureWidthRatio");
        }
        get needlePointFeatureExtent() {
            return this.bo;
        }
        set needlePointFeatureExtent(a) {
            this.bo = a;
            this.g("NeedlePointFeatureExtent");
        }
        get needlePivotWidthRatio() {
            return this.bn;
        }
        set needlePivotWidthRatio(a) {
            this.bn = a;
            this.g("NeedlePivotWidthRatio");
        }
        get needlePivotInnerWidthRatio() {
            return this.bl;
        }
        set needlePivotInnerWidthRatio(a) {
            this.bl = a;
            this.g("NeedlePivotInnerWidthRatio");
        }
        get needlePivotShape() {
            return this.e2;
        }
        set needlePivotShape(a) {
            this.e2 = a;
            this.g("NeedlePivotShape");
        }
        get scaleStartExtent() {
            return this.b1;
        }
        set scaleStartExtent(a) {
            this.b1 = a;
            this.g("ScaleStartExtent");
        }
        get needlePivotBrush() {
            return this.e0;
        }
        set needlePivotBrush(a) {
            this.e0 = a;
            this.g("NeedlePivotBrush");
        }
        get needlePivotOutline() {
            return this.e1;
        }
        set needlePivotOutline(a) {
            this.e1 = a;
            this.g("NeedlePivotOutline");
        }
        get needleStrokeThickness() {
            return this.bs;
        }
        set needleStrokeThickness(a) {
            this.bs = a;
            this.g("NeedleStrokeThickness");
        }
        get needlePivotStrokeThickness() {
            return this.bm;
        }
        set needlePivotStrokeThickness(a) {
            this.bm = a;
            this.g("NeedlePivotStrokeThickness");
        }
        get scaleEndExtent() {
            return this.by;
        }
        set scaleEndExtent(a) {
            this.by = a;
            this.g("ScaleEndExtent");
        }
        get labelExtent() {
            return this.a9;
        }
        set labelExtent(a) {
            this.a9 = a;
            this.g("LabelExtent");
        }
        get labelInterval() {
            return this.ba;
        }
        set labelInterval(a) {
            this.ba = a;
            this.g("LabelInterval");
        }
        get tickStartExtent() {
            return this.b6;
        }
        set tickStartExtent(a) {
            this.b6 = a;
            this.g("TickStartExtent");
        }
        get tickEndExtent() {
            return this.b5;
        }
        set tickEndExtent(a) {
            this.b5 = a;
            this.g("TickEndExtent");
        }
        get tickStrokeThickness() {
            return this.b7;
        }
        set tickStrokeThickness(a) {
            this.b7 = a;
            this.g("TickStrokeThickness");
        }
        get tickBrush() {
            return this.fd;
        }
        set tickBrush(a) {
            this.fd = a;
            this.g("TickBrush");
        }
        get fontBrush() {
            return this.ef;
        }
        set fontBrush(a) {
            this.ef = a;
            this.g("FontBrush");
        }
        get minorTickStartExtent() {
            return this.bf;
        }
        set minorTickStartExtent(a) {
            this.bf = a;
            this.g("MinorTickStartExtent");
        }
        get minorTickEndExtent() {
            return this.be;
        }
        set minorTickEndExtent(a) {
            this.be = a;
            this.g("MinorTickEndExtent");
        }
        get minorTickStrokeThickness() {
            return this.bg;
        }
        set minorTickStrokeThickness(a) {
            this.bg = a;
            this.g("MinorTickStrokeThickness");
        }
        get minorTickBrush() {
            return this.ex;
        }
        set minorTickBrush(a) {
            this.ex = a;
            this.g("MinorTickBrush");
        }
        get minorTickCount() {
            return this.bd;
        }
        set minorTickCount(a) {
            this.bd = a;
            this.g("MinorTickCount");
        }
        get scaleBrush() {
            return this.e4;
        }
        set scaleBrush(a) {
            this.e4 = a;
            this.g("ScaleBrush");
        }
        get backingBrush() {
            return this.ea;
        }
        set backingBrush(a) {
            this.ea = a;
            this.g("BackingBrush");
        }
        get backingOutline() {
            return this.eb;
        }
        set backingOutline(a) {
            this.eb = a;
            this.g("BackingOutline");
        }
        get backingStrokeThickness() {
            return this.az;
        }
        set backingStrokeThickness(a) {
            this.az = a;
            this.g("BackingStrokeThickness");
        }
        get backingOuterExtent() {
            return this.ax;
        }
        set backingOuterExtent(a) {
            this.ax = a;
            this.g("BackingOuterExtent");
        }
        get backingOversweep() {
            return this.ay;
        }
        set backingOversweep(a) {
            this.ay = a;
            this.g("BackingOversweep");
        }
        get scaleOversweep() {
            return this.bz;
        }
        set scaleOversweep(a) {
            this.bz = a;
            this.g("ScaleOversweep");
        }
        get scaleOversweepShape() {
            return this.e5;
        }
        set scaleOversweepShape(a) {
            this.e5 = a;
            this.g("ScaleOversweepShape");
        }
        get backingCornerRadius() {
            return this.av;
        }
        set backingCornerRadius(a) {
            this.av = a;
            this.g("BackingCornerRadius");
        }
        get backingInnerExtent() {
            return this.aw;
        }
        set backingInnerExtent(a) {
            this.aw = a;
            this.g("BackingInnerExtent");
        }
        get backingShape() {
            return this.ec;
        }
        set backingShape(a) {
            this.ec = a;
            this.g("BackingShape");
        }
        get ranges() {
            return this.l;
        }
        set ranges(a) {
            this.l = a;
            this.g("Ranges");
        }
        get radiusMultiplier() {
            return this.bw;
        }
        set radiusMultiplier(a) {
            this.bw = a;
            this.g("RadiusMultiplier");
        }
        get duplicateLabelOmissionStrategy() {
            return this.ed;
        }
        set duplicateLabelOmissionStrategy(a) {
            this.ed = a;
            this.g("DuplicateLabelOmissionStrategy");
        }
        get isNeedleDraggingEnabled() {
            return this.aa;
        }
        set isNeedleDraggingEnabled(a) {
            this.aa = a;
            this.g("IsNeedleDraggingEnabled");
        }
        get isNeedleDraggingConstrained() {
            return this.z;
        }
        set isNeedleDraggingConstrained(a) {
            this.z = a;
            this.g("IsNeedleDraggingConstrained");
        }
        get isHighlightNeedleDraggingEnabled() {
            return this.y;
        }
        set isHighlightNeedleDraggingEnabled(a) {
            this.y = a;
            this.g("IsHighlightNeedleDraggingEnabled");
        }
        get isHighlightNeedleDraggingConstrained() {
            return this.x;
        }
        set isHighlightNeedleDraggingConstrained(a) {
            this.x = a;
            this.g("IsHighlightNeedleDraggingConstrained");
        }
        get font() {
            return this.ee;
        }
        set font(a) {
            this.ee = a;
            this.g("Font");
        }
        get labelFormat() {
            return this.ew;
        }
        set labelFormat(a) {
            this.ew = a;
            this.g("LabelFormat");
        }
        get labelFormatSpecifiers() {
            return this.i;
        }
        set labelFormatSpecifiers(a) {
            this.i = a;
            this.g("LabelFormatSpecifiers");
        }
        get transitionProgress() {
            return this.cb;
        }
        set transitionProgress(a) {
            this.cb = a;
            this.g("TransitionProgress");
        }
        get pixelScalingRatio() {
            return this.bv;
        }
        set pixelScalingRatio(a) {
            this.bv = a;
            this.g("PixelScalingRatio");
        }
        get actualPixelScalingRatio() {
            return this.au;
        }
        set actualPixelScalingRatio(a) {
            this.au = a;
            this.g("ActualPixelScalingRatio");
        }
        get opticalScalingRatio() {
            return this.bt;
        }
        set opticalScalingRatio(a) {
            this.bt = a;
            this.g("OpticalScalingRatio");
        }
        get opticalScalingEnabled() {
            return this.ab;
        }
        set opticalScalingEnabled(a) {
            this.ab = a;
            this.g("OpticalScalingEnabled");
        }
        get opticalScalingSize() {
            return this.bu;
        }
        set opticalScalingSize(a) {
            this.bu = a;
            this.g("OpticalScalingSize");
        }
        get titleText() {
            return this.fj;
        }
        set titleText(a) {
            this.fj = a;
            this.g("TitleText");
        }
        get subtitleText() {
            return this.fc;
        }
        set subtitleText(a) {
            this.fc = a;
            this.g("SubtitleText");
        }
        get titleAngle() {
            return this.b8;
        }
        set titleAngle(a) {
            this.b8 = a;
            this.g("TitleAngle");
        }
        get subtitleAngle() {
            return this.b2;
        }
        set subtitleAngle(a) {
            this.b2 = a;
            this.g("SubtitleAngle");
        }
        get titleExtent() {
            return this.b9;
        }
        set titleExtent(a) {
            this.b9 = a;
            this.g("TitleExtent");
        }
        get subtitleExtent() {
            return this.b3;
        }
        set subtitleExtent(a) {
            this.b3 = a;
            this.g("SubtitleExtent");
        }
        get titleBrush() {
            return this.fe;
        }
        set titleBrush(a) {
            this.fe = a;
            this.g("TitleBrush");
        }
        get subtitleBrush() {
            return this.e7;
        }
        set subtitleBrush(a) {
            this.e7 = a;
            this.g("SubtitleBrush");
        }
        get titleDisplaysValue() {
            return this.ae;
        }
        set titleDisplaysValue(a) {
            this.ae = a;
            this.g("TitleDisplaysValue");
        }
        get subtitleDisplaysValue() {
            return this.ac;
        }
        set subtitleDisplaysValue(a) {
            this.ac = a;
            this.g("SubtitleDisplaysValue");
        }
        get titleSnapsToNeedlePivot() {
            return this.af;
        }
        set titleSnapsToNeedlePivot(a) {
            this.af = a;
            this.g("TitleSnapsToNeedlePivot");
        }
        get subtitleSnapsToNeedlePivot() {
            return this.ad;
        }
        set subtitleSnapsToNeedlePivot(a) {
            this.ad = a;
            this.g("SubtitleSnapsToNeedlePivot");
        }
        get subtitleFormat() {
            return this.fb;
        }
        set subtitleFormat(a) {
            this.fb = a;
            this.g("SubtitleFormat");
        }
        get subtitleFormatSpecifiers() {
            return this.m;
        }
        set subtitleFormatSpecifiers(a) {
            this.m = a;
            this.g("SubtitleFormatSpecifiers");
        }
        get titleFormat() {
            return this.fi;
        }
        set titleFormat(a) {
            this.fi = a;
            this.g("TitleFormat");
        }
        get titleFormatSpecifiers() {
            return this.n;
        }
        set titleFormatSpecifiers(a) {
            this.n = a;
            this.g("TitleFormatSpecifiers");
        }
        get highlightLabelText() {
            return this.et;
        }
        set highlightLabelText(a) {
            this.et = a;
            this.g("HighlightLabelText");
        }
        get highlightLabelAngle() {
            return this.a3;
        }
        set highlightLabelAngle(a) {
            this.a3 = a;
            this.g("HighlightLabelAngle");
        }
        get highlightLabelExtent() {
            return this.a4;
        }
        set highlightLabelExtent(a) {
            this.a4 = a;
            this.g("HighlightLabelExtent");
        }
        get highlightLabelBrush() {
            return this.eo;
        }
        set highlightLabelBrush(a) {
            this.eo = a;
            this.g("HighlightLabelBrush");
        }
        get highlightLabelDisplaysValue() {
            return this.v;
        }
        set highlightLabelDisplaysValue(a) {
            this.v = a;
            this.g("HighlightLabelDisplaysValue");
        }
        get highlightLabelSnapsToNeedlePivot() {
            return this.w;
        }
        set highlightLabelSnapsToNeedlePivot(a) {
            this.w = a;
            this.g("HighlightLabelSnapsToNeedlePivot");
        }
        get highlightLabelFormat() {
            return this.es;
        }
        set highlightLabelFormat(a) {
            this.es = a;
            this.g("HighlightLabelFormat");
        }
        get highlightLabelFormatSpecifiers() {
            return this.h;
        }
        set highlightLabelFormatSpecifiers(a) {
            this.h = a;
            this.g("HighlightLabelFormatSpecifiers");
        }
        get highlightLabelFontFamily() {
            return this.ep;
        }
        set highlightLabelFontFamily(a) {
            this.ep = a;
            this.g("HighlightLabelFontFamily");
        }
        get highlightLabelFontSize() {
            return this.a5;
        }
        set highlightLabelFontSize(a) {
            this.a5 = a;
            this.g("HighlightLabelFontSize");
        }
        get highlightLabelFontStyle() {
            return this.eq;
        }
        set highlightLabelFontStyle(a) {
            this.eq = a;
            this.g("HighlightLabelFontStyle");
        }
        get highlightLabelFontWeight() {
            return this.er;
        }
        set highlightLabelFontWeight(a) {
            this.er = a;
            this.g("HighlightLabelFontWeight");
        }
        get subtitleFontFamily() {
            return this.e8;
        }
        set subtitleFontFamily(a) {
            this.e8 = a;
            this.g("SubtitleFontFamily");
        }
        get subtitleFontSize() {
            return this.b4;
        }
        set subtitleFontSize(a) {
            this.b4 = a;
            this.g("SubtitleFontSize");
        }
        get subtitleFontStyle() {
            return this.e9;
        }
        set subtitleFontStyle(a) {
            this.e9 = a;
            this.g("SubtitleFontStyle");
        }
        get subtitleFontWeight() {
            return this.fa;
        }
        set subtitleFontWeight(a) {
            this.fa = a;
            this.g("SubtitleFontWeight");
        }
        get titleFontFamily() {
            return this.ff;
        }
        set titleFontFamily(a) {
            this.ff = a;
            this.g("TitleFontFamily");
        }
        get titleFontSize() {
            return this.ca;
        }
        set titleFontSize(a) {
            this.ca = a;
            this.g("TitleFontSize");
        }
        get titleFontStyle() {
            return this.fg;
        }
        set titleFontStyle(a) {
            this.fg = a;
            this.g("TitleFontStyle");
        }
        get titleFontWeight() {
            return this.fh;
        }
        set titleFontWeight(a) {
            this.fh = a;
            this.g("TitleFontWeight");
        }
        get alignTitleRef() {
            return this.d8;
        }
        set alignTitleRef(a) {
            this.d8 = a;
            this.g("AlignTitleRef");
        }
        get alignSubtitleRef() {
            return this.d7;
        }
        set alignSubtitleRef(a) {
            this.d7 = a;
            this.g("AlignSubtitleRef");
        }
        get alignHighlightLabelRef() {
            return this.d5;
        }
        set alignHighlightLabelRef(a) {
            this.d5 = a;
            this.g("AlignHighlightLabelRef");
        }
        get formatTitleRef() {
            return this.em;
        }
        set formatTitleRef(a) {
            this.em = a;
            this.g("FormatTitleRef");
        }
        get formatSubtitleRef() {
            return this.el;
        }
        set formatSubtitleRef(a) {
            this.el = a;
            this.g("FormatSubtitleRef");
        }
        get formatHighlightLabelRef() {
            return this.ej;
        }
        set formatHighlightLabelRef(a) {
            this.ej = a;
            this.g("FormatHighlightLabelRef");
        }
        get formatLabelRef() {
            return this.ek;
        }
        set formatLabelRef(a) {
            this.ek = a;
            this.g("FormatLabelRef");
        }
        get alignLabelRef() {
            return this.d6;
        }
        set alignLabelRef(a) {
            this.d6 = a;
            this.g("AlignLabelRef");
        }
        get valueChangedRef() {
            return this.fl;
        }
        set valueChangedRef(a) {
            this.fl = a;
            this.g("ValueChangedRef");
        }
        get highlightValueChangedRef() {
            return this.eu;
        }
        set highlightValueChangedRef(a) {
            this.eu = a;
            this.g("HighlightValueChangedRef");
        }
        get actualMinimumValueChangeRef() {
            return this.d4;
        }
        set actualMinimumValueChangeRef(a) {
            this.d4 = a;
            this.g("ActualMinimumValueChangeRef");
        }
        get actualMaximumValueChangeRef() {
            return this.d3;
        }
        set actualMaximumValueChangeRef(a) {
            this.d3 = a;
            this.g("ActualMaximumValueChangeRef");
        }
    }
    RadialGaugeDescription.$t = /*@__PURE__*/ markType(RadialGaugeDescription, 'RadialGaugeDescription', Description.$);
    return RadialGaugeDescription;
})();
