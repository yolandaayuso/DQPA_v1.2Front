/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPositionStrategyDescriptionMetadata } from "./WebPositionStrategyDescriptionMetadata";
import { WebScrollStrategyDescriptionMetadata } from "./WebScrollStrategyDescriptionMetadata";
import { WebOverlaySettingsDescription } from "./WebOverlaySettingsDescription";
/**
 * @hidden
 */
export let WebOverlaySettingsDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebOverlaySettingsDescriptionMetadata extends Base {
        static b(a) {
            if (WebOverlaySettingsDescriptionMetadata.a == null) {
                WebOverlaySettingsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebOverlaySettingsDescriptionMetadata.c(WebOverlaySettingsDescriptionMetadata.a);
            }
            if (a.k(WebOverlaySettingsDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebOverlaySettingsDescriptionMetadata.a);
            WebPositionStrategyDescriptionMetadata.d(a);
            WebScrollStrategyDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:OverlaySettings");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("__isPlainObject", "Boolean");
            a.item("__skipSuffix", "Boolean");
            a.item("Target", "Unknown");
            a.item("PositionStrategy", "ExportedType:WebPositionStrategy");
            a.item("ScrollStrategy", "ExportedType:WebScrollStrategy");
            a.item("Modal", "Boolean");
            a.item("CloseOnOutsideClick", "Boolean");
            a.item("CloseOnEscape", "Boolean");
        }
        static d(a) {
            WebOverlaySettingsDescriptionMetadata.b(a);
            a.ae("WebOverlaySettings", () => new WebOverlaySettingsDescription());
            a.ad("WebOverlaySettings", WebOverlaySettingsDescriptionMetadata.a);
        }
    }
    WebOverlaySettingsDescriptionMetadata.$t = /*@__PURE__*/ markType(WebOverlaySettingsDescriptionMetadata, 'WebOverlaySettingsDescriptionMetadata');
    WebOverlaySettingsDescriptionMetadata.a = null;
    return WebOverlaySettingsDescriptionMetadata;
})();
