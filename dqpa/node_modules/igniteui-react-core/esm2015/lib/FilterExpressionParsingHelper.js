/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
import { FilterExpressionParsingResult } from "./FilterExpressionParsingResult";
import { FilterSyntaxParser } from "./FilterSyntaxParser";
import { FilterExpressionConversionVisitor } from "./FilterExpressionConversionVisitor";
import { stringJoin } from "./string";
/**
 * @hidden
 */
export let FilterExpressionParsingHelper = /*@__PURE__*/ (() => {
    class FilterExpressionParsingHelper extends Base {
        static getFilterExpression(a) {
            let b = new FilterExpressionParsingResult();
            let c = new FilterSyntaxParser();
            let d = c.d(a);
            if (d.b) {
                b.errors = d.e;
                return b;
            }
            let e = new FilterExpressionConversionVisitor();
            e.b(d.a);
            if (e.k != null && (e.k.length > 0)) {
                b.errors = stringJoin("\r\n", ...e.k);
                return b;
            }
            b.result = e.o();
            return b;
        }
    }
    FilterExpressionParsingHelper.$t = /*@__PURE__*/ markType(FilterExpressionParsingHelper, 'FilterExpressionParsingHelper');
    return FilterExpressionParsingHelper;
})();
