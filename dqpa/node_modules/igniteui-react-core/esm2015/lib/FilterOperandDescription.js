/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let FilterOperandDescription = /*@__PURE__*/ (() => {
    class FilterOperandDescription extends Description {
        get_type() {
            return "FilterOperand";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.p = null;
            this.l = null;
            this.o = null;
            this.i = false;
            this.m = null;
            this.n = null;
        }
        get iD() {
            return this.p;
        }
        set iD(a) {
            this.p = a;
            this.g("ID");
        }
        get displayName() {
            return this.l;
        }
        set displayName(a) {
            this.l = a;
            this.g("DisplayName");
        }
        get icon() {
            return this.o;
        }
        set icon(a) {
            this.o = a;
            this.g("Icon");
        }
        get isInputRequired() {
            return this.i;
        }
        set isInputRequired(a) {
            this.i = a;
            this.g("IsInputRequired");
        }
        get editorType() {
            return this.m;
        }
        set editorType(a) {
            this.m = a;
            this.g("EditorType");
        }
        get filterRequestedRef() {
            return this.n;
        }
        set filterRequestedRef(a) {
            this.n = a;
            this.g("FilterRequestedRef");
        }
    }
    FilterOperandDescription.$t = /*@__PURE__*/ markType(FilterOperandDescription, 'FilterOperandDescription', Description.$);
    FilterOperandDescription.__marshalByValue = true;
    FilterOperandDescription.__marshalByValueAlias = "FilterOperand";
    return FilterOperandDescription;
})();
