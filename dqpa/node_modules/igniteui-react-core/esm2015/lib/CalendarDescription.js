/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let CalendarDescription = /*@__PURE__*/ (() => {
    class CalendarDescription extends Description {
        get_type() {
            return "Calendar";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.o = new Date();
            this.n = new Date();
            this.m = new Date();
            this.l = new Date();
            this.z = null;
            this.w = null;
            this.v = null;
            this.ai = null;
            this.ak = null;
            this.ac = null;
            this.ah = null;
            this.am = null;
            this.aj = null;
            this.ad = null;
            this.y = null;
            this.x = null;
            this.h = false;
            this.ae = null;
            this.t = 0;
            this.af = null;
            this.ag = null;
            this.aa = null;
            this.ab = null;
            this.i = false;
            this.al = null;
            this.an = null;
        }
        get value() {
            return this.o;
        }
        set value(a) {
            this.o = a;
            this.g("Value");
        }
        get today() {
            return this.n;
        }
        set today(a) {
            this.n = a;
            this.g("Today");
        }
        get minDate() {
            return this.m;
        }
        set minDate(a) {
            this.m = a;
            this.g("MinDate");
        }
        get maxDate() {
            return this.l;
        }
        set maxDate(a) {
            this.l = a;
            this.g("MaxDate");
        }
        get density() {
            return this.z;
        }
        set density(a) {
            this.z = a;
            this.g("Density");
        }
        get baseTheme() {
            return this.w;
        }
        set baseTheme(a) {
            this.w = a;
            this.g("BaseTheme");
        }
        get backgroundColor() {
            return this.v;
        }
        set backgroundColor(a) {
            this.v = a;
            this.g("BackgroundColor");
        }
        get selectedDateBackgroundColor() {
            return this.ai;
        }
        set selectedDateBackgroundColor(a) {
            this.ai = a;
            this.g("SelectedDateBackgroundColor");
        }
        get selectedFocusDateBackgroundColor() {
            return this.ak;
        }
        set selectedFocusDateBackgroundColor(a) {
            this.ak = a;
            this.g("SelectedFocusDateBackgroundColor");
        }
        get focusDateBackgroundColor() {
            return this.ac;
        }
        set focusDateBackgroundColor(a) {
            this.ac = a;
            this.g("FocusDateBackgroundColor");
        }
        get hoverBackgroundColor() {
            return this.ah;
        }
        set hoverBackgroundColor(a) {
            this.ah = a;
            this.g("HoverBackgroundColor");
        }
        get textColor() {
            return this.am;
        }
        set textColor(a) {
            this.am = a;
            this.g("TextColor");
        }
        get selectedDateTextColor() {
            return this.aj;
        }
        set selectedDateTextColor(a) {
            this.aj = a;
            this.g("SelectedDateTextColor");
        }
        get focusDateTextColor() {
            return this.ad;
        }
        set focusDateTextColor(a) {
            this.ad = a;
            this.g("FocusDateTextColor");
        }
        get currentDateTextColor() {
            return this.y;
        }
        set currentDateTextColor(a) {
            this.y = a;
            this.g("CurrentDateTextColor");
        }
        get currentDateBorderColor() {
            return this.x;
        }
        set currentDateBorderColor(a) {
            this.x = a;
            this.g("CurrentDateBorderColor");
        }
        get showTodayButton() {
            return this.h;
        }
        set showTodayButton(a) {
            this.h = a;
            this.g("ShowTodayButton");
        }
        get fontFamily() {
            return this.ae;
        }
        set fontFamily(a) {
            this.ae = a;
            this.g("FontFamily");
        }
        get fontSize() {
            return this.t;
        }
        set fontSize(a) {
            this.t = a;
            this.g("FontSize");
        }
        get fontStyle() {
            return this.af;
        }
        set fontStyle(a) {
            this.af = a;
            this.g("FontStyle");
        }
        get fontWeight() {
            return this.ag;
        }
        set fontWeight(a) {
            this.ag = a;
            this.g("FontWeight");
        }
        get firstDayOfWeek() {
            return this.aa;
        }
        set firstDayOfWeek(a) {
            this.aa = a;
            this.g("FirstDayOfWeek");
        }
        get firstWeekOfYear() {
            return this.ab;
        }
        set firstWeekOfYear(a) {
            this.ab = a;
            this.g("FirstWeekOfYear");
        }
        get showWeekNumbers() {
            return this.i;
        }
        set showWeekNumbers(a) {
            this.i = a;
            this.g("ShowWeekNumbers");
        }
        get selectedValueChangedRef() {
            return this.al;
        }
        set selectedValueChangedRef(a) {
            this.al = a;
            this.g("SelectedValueChangedRef");
        }
        get valueChangeRef() {
            return this.an;
        }
        set valueChangeRef(a) {
            this.an = a;
            this.g("ValueChangeRef");
        }
    }
    CalendarDescription.$t = /*@__PURE__*/ markType(CalendarDescription, 'CalendarDescription', Description.$);
    return CalendarDescription;
})();
