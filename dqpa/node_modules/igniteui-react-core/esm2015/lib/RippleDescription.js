/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let RippleDescription = /*@__PURE__*/ (() => {
    class RippleDescription extends Description {
        get_type() {
            return "Ripple";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.r = null;
            this.t = null;
            this.s = null;
            this.p = null;
            this.q = null;
            this.n = 0;
            this.i = false;
            this.h = false;
            this.j = false;
        }
        get eventSourceRef() {
            return this.r;
        }
        set eventSourceRef(a) {
            this.r = a;
            this.g("EventSourceRef");
        }
        get rippleColor() {
            return this.t;
        }
        set rippleColor(a) {
            this.t = a;
            this.g("RippleColor");
        }
        get hoverColor() {
            return this.s;
        }
        set hoverColor(a) {
            this.s = a;
            this.g("HoverColor");
        }
        get actualHoverColor() {
            return this.p;
        }
        set actualHoverColor(a) {
            this.p = a;
            this.g("ActualHoverColor");
        }
        get actualRippleColor() {
            return this.q;
        }
        set actualRippleColor(a) {
            this.q = a;
            this.g("ActualRippleColor");
        }
        get rippleDuration() {
            return this.n;
        }
        set rippleDuration(a) {
            this.n = a;
            this.g("RippleDuration");
        }
        get isDisabled() {
            return this.i;
        }
        set isDisabled(a) {
            this.i = a;
            this.g("IsDisabled");
        }
        get isCentered() {
            return this.h;
        }
        set isCentered(a) {
            this.h = a;
            this.g("IsCentered");
        }
        get isHoverEnabled() {
            return this.j;
        }
        set isHoverEnabled(a) {
            this.j = a;
            this.g("IsHoverEnabled");
        }
    }
    RippleDescription.$t = /*@__PURE__*/ markType(RippleDescription, 'RippleDescription', Description.$);
    return RippleDescription;
})();
