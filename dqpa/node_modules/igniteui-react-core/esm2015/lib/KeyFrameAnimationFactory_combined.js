/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
import { KeyFrameAnimationTimeline } from "./KeyFrameAnimationTimeline";
import { GlobalAnimationState } from "./GlobalAnimationState";
import { KeyFrameAnimationDirect } from "./KeyFrameAnimationDirect";
import { AnimationBrowserTickProvider } from "./AnimationBrowserTickProvider";
import { DOMExecutionContext } from "./DOMExecutionContext";
/**
 * @hidden
 */
export let KeyFrameAnimationFactory = /*@__PURE__*/ (() => {
    class KeyFrameAnimationFactory extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
            this.g = null;
        }
        static get f() {
            if (KeyFrameAnimationFactory.e == null) {
                KeyFrameAnimationFactory.e = new PlatformKeyFrameAnimationFactory(KeyFrameAnimationFactory.h);
                KeyFrameAnimationFactory.e.g = new KeyFrameAnimationTimeline(KeyFrameAnimationFactory.e.d, KeyFrameAnimationFactory.e.b);
                GlobalAnimationState.d.p(KeyFrameAnimationFactory.e.b);
            }
            return KeyFrameAnimationFactory.e;
        }
        c(a) {
            return new KeyFrameAnimationDirect(a, this.g);
        }
    }
    KeyFrameAnimationFactory.$t = /*@__PURE__*/ markType(KeyFrameAnimationFactory, 'KeyFrameAnimationFactory');
    KeyFrameAnimationFactory.e = null;
    KeyFrameAnimationFactory.h = null;
    return KeyFrameAnimationFactory;
})();
/**
 * @hidden
 */
export let PlatformKeyFrameAnimationFactory = /*@__PURE__*/ (() => {
    class PlatformKeyFrameAnimationFactory extends KeyFrameAnimationFactory {
        constructor(a) {
            super();
            this.j = null;
            this.i = null;
            this.j = new AnimationBrowserTickProvider(a);
            this.i = new DOMExecutionContext(a);
            GlobalAnimationState.d.p(this.i);
        }
        get_d() {
            return this.j;
        }
        get d() {
            return this.get_d();
        }
        get_b() {
            return this.i;
        }
        get b() {
            return this.get_b();
        }
    }
    PlatformKeyFrameAnimationFactory.$t = /*@__PURE__*/ markType(PlatformKeyFrameAnimationFactory, 'PlatformKeyFrameAnimationFactory', KeyFrameAnimationFactory.$);
    return PlatformKeyFrameAnimationFactory;
})();
