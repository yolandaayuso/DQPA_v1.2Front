/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { InputGroupItemDescription } from "./InputGroupItemDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let InputDescription = /*@__PURE__*/ (() => {
    class InputDescription extends InputGroupItemDescription {
        get_type() {
            return "Input";
        }
        constructor() {
            super();
            this.ag = null;
            this.ak = null;
            this.ac = null;
            this.av = null;
            this.ax = null;
            this.l = false;
            this.o = false;
            this.ae = null;
            this.ad = null;
            this.az = null;
            this.al = null;
            this.u = 0;
            this.am = null;
            this.an = null;
            this.ar = null;
            this.aw = null;
            this.ap = null;
            this.aq = null;
            this.y = 0;
            this.ao = null;
            this.af = null;
            this.m = false;
            this.a0 = null;
            this.k = false;
            this.n = false;
            this.ay = null;
            this.x = 0;
            this.w = 0;
            this.as = null;
            this.au = null;
            this.at = null;
            this.ah = null;
            this.ai = null;
            this.aj = null;
        }
        get baseTheme() {
            return this.ag;
        }
        set baseTheme(a) {
            this.ag = a;
            this.g("BaseTheme");
        }
        get density() {
            return this.ak;
        }
        set density(a) {
            this.ak = a;
            this.g("Density");
        }
        get actualDensity() {
            return this.ac;
        }
        set actualDensity(a) {
            this.ac = a;
            this.g("ActualDensity");
        }
        get mask() {
            return this.av;
        }
        set mask(a) {
            this.av = a;
            this.g("Mask");
        }
        get promptChar() {
            return this.ax;
        }
        set promptChar(a) {
            this.ax = a;
            this.g("PromptChar");
        }
        get includeLiterals() {
            return this.l;
        }
        set includeLiterals(a) {
            this.l = a;
            this.g("IncludeLiterals");
        }
        get showSpinner() {
            return this.o;
        }
        set showSpinner(a) {
            this.o = a;
            this.g("ShowSpinner");
        }
        get actualTextColor() {
            return this.ae;
        }
        set actualTextColor(a) {
            this.ae = a;
            this.g("ActualTextColor");
        }
        get actualHoverTextColor() {
            return this.ad;
        }
        set actualHoverTextColor(a) {
            this.ad = a;
            this.g("ActualHoverTextColor");
        }
        get textColor() {
            return this.az;
        }
        set textColor(a) {
            this.az = a;
            this.g("TextColor");
        }
        get fontFamily() {
            return this.al;
        }
        set fontFamily(a) {
            this.al = a;
            this.g("FontFamily");
        }
        get fontSize() {
            return this.u;
        }
        set fontSize(a) {
            this.u = a;
            this.g("FontSize");
        }
        get fontStyle() {
            return this.am;
        }
        set fontStyle(a) {
            this.am = a;
            this.g("FontStyle");
        }
        get fontWeight() {
            return this.an;
        }
        set fontWeight(a) {
            this.an = a;
            this.g("FontWeight");
        }
        get inputType() {
            return this.ar;
        }
        set inputType(a) {
            this.ar = a;
            this.g("InputType");
        }
        get placeholder() {
            return this.aw;
        }
        set placeholder(a) {
            this.aw = a;
            this.g("Placeholder");
        }
        get hoverTextColor() {
            return this.ap;
        }
        set hoverTextColor(a) {
            this.ap = a;
            this.g("HoverTextColor");
        }
        get id() {
            return this.aq;
        }
        set id(a) {
            this.aq = a;
            this.g("Id");
        }
        get tabIndex() {
            return this.y;
        }
        set tabIndex(a) {
            this.y = a;
            this.g("TabIndex");
        }
        get $for() {
            return this.ao;
        }
        set $for(a) {
            this.ao = a;
            this.g("For");
        }
        get ariaLabel() {
            return this.af;
        }
        set ariaLabel(a) {
            this.af = a;
            this.g("AriaLabel");
        }
        get isHover() {
            return this.m;
        }
        set isHover(a) {
            this.m = a;
            this.g("IsHover");
        }
        get value() {
            return this.a0;
        }
        set value(a) {
            this.a0 = a;
            this.g("Value");
        }
        get disabled() {
            return this.k;
        }
        set disabled(a) {
            this.k = a;
            this.g("Disabled");
        }
        get readonly() {
            return this.n;
        }
        set readonly(a) {
            this.n = a;
            this.g("Readonly");
        }
        get textAlignment() {
            return this.ay;
        }
        set textAlignment(a) {
            this.ay = a;
            this.g("TextAlignment");
        }
        get selectionStart() {
            return this.x;
        }
        set selectionStart(a) {
            this.x = a;
            this.g("SelectionStart");
        }
        get selectionEnd() {
            return this.w;
        }
        set selectionEnd(a) {
            this.w = a;
            this.g("SelectionEnd");
        }
        get keyDownRef() {
            return this.as;
        }
        set keyDownRef(a) {
            this.as = a;
            this.g("KeyDownRef");
        }
        get keyUpRef() {
            return this.au;
        }
        set keyUpRef(a) {
            this.au = a;
            this.g("KeyUpRef");
        }
        get keyPressRef() {
            return this.at;
        }
        set keyPressRef(a) {
            this.at = a;
            this.g("KeyPressRef");
        }
        get changeRef() {
            return this.ah;
        }
        set changeRef(a) {
            this.ah = a;
            this.g("ChangeRef");
        }
        get changingRef() {
            return this.ai;
        }
        set changingRef(a) {
            this.ai = a;
            this.g("ChangingRef");
        }
        get compositionEndRef() {
            return this.aj;
        }
        set compositionEndRef(a) {
            this.aj = a;
            this.g("CompositionEndRef");
        }
    }
    InputDescription.$t = /*@__PURE__*/ markType(InputDescription, 'InputDescription', InputGroupItemDescription.$);
    return InputDescription;
})();
