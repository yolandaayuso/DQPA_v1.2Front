/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { CellInfoDescriptionMetadata } from "./CellInfoDescriptionMetadata";
import { DataGridColumnDescriptionMetadata } from "./DataGridColumnDescriptionMetadata";
import { GridCellValueChangingEventArgsDescription } from "./GridCellValueChangingEventArgsDescription";
/**
 * @hidden
 */
export let GridCellValueChangingEventArgsDescriptionMetadata = /*@__PURE__*/ (() => {
    class GridCellValueChangingEventArgsDescriptionMetadata extends Base {
        static b(a) {
            if (GridCellValueChangingEventArgsDescriptionMetadata.a == null) {
                GridCellValueChangingEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                GridCellValueChangingEventArgsDescriptionMetadata.c(GridCellValueChangingEventArgsDescriptionMetadata.a);
            }
            if (a.k(GridCellValueChangingEventArgsDescriptionMetadata.a)) {
                return;
            }
            a.ac(GridCellValueChangingEventArgsDescriptionMetadata.a);
            CellInfoDescriptionMetadata.d(a);
            DataGridColumnDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("EditID", "Number:int");
            a.item("CellInfo", "ExportedType:CellModel");
            a.item("Column", "ExportedType:DataGridColumn");
            a.item("ItemRef", "(w:Item,wf:Item)DataRef");
            a.item("OldValue", "Unknown");
            a.item("NewValue", "Unknown");
        }
        static d(a) {
            GridCellValueChangingEventArgsDescriptionMetadata.b(a);
            a.ae("GridCellValueChangingEventArgs", () => new GridCellValueChangingEventArgsDescription());
            a.ad("GridCellValueChangingEventArgs", GridCellValueChangingEventArgsDescriptionMetadata.a);
        }
    }
    GridCellValueChangingEventArgsDescriptionMetadata.$t = /*@__PURE__*/ markType(GridCellValueChangingEventArgsDescriptionMetadata, 'GridCellValueChangingEventArgsDescriptionMetadata');
    GridCellValueChangingEventArgsDescriptionMetadata.a = null;
    return GridCellValueChangingEventArgsDescriptionMetadata;
})();
