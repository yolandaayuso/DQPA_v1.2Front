/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let RadialBaseDescription = /*@__PURE__*/ (() => {
    class RadialBaseDescription extends MarkerSeriesDescription {
        get_type() {
            return "RadialBase";
        }
        constructor() {
            super();
            this.f9 = 0;
            this.ga = 0;
            this.gg = null;
            this.gl = null;
            this.gj = null;
            this.gi = null;
            this.gh = null;
            this.fr = null;
            this.go = null;
            this.fv = null;
            this.gk = null;
            this.fs = null;
            this.gn = null;
            this.fu = null;
            this.gm = null;
            this.ft = null;
            this.f3 = false;
            this.f2 = false;
            this.gp = null;
            this.f4 = false;
            this.gd = null;
            this.gq = null;
            this.f1 = false;
            this.gf = null;
            this.ge = null;
        }
        get autoCalloutLabelPrecision() {
            return this.f9;
        }
        set autoCalloutLabelPrecision(a) {
            this.f9 = a;
            this.g("AutoCalloutLabelPrecision");
        }
        get autoCalloutPercentagePrecision() {
            return this.ga;
        }
        set autoCalloutPercentagePrecision(a) {
            this.ga = a;
            this.g("AutoCalloutPercentagePrecision");
        }
        get autoCalloutLabelValueSeparator() {
            return this.gg;
        }
        set autoCalloutLabelValueSeparator(a) {
            this.gg = a;
            this.g("AutoCalloutLabelValueSeparator");
        }
        get legendRadialLabelMode() {
            return this.gl;
        }
        set legendRadialLabelMode(a) {
            this.gl = a;
            this.g("LegendRadialLabelMode");
        }
        get categoryCollisionMode() {
            return this.gj;
        }
        set categoryCollisionMode(a) {
            this.gj = a;
            this.g("CategoryCollisionMode");
        }
        get autoCalloutRadialLabelMode() {
            return this.gi;
        }
        set autoCalloutRadialLabelMode(a) {
            this.gi = a;
            this.g("AutoCalloutRadialLabelMode");
        }
        get autoCalloutOthersLabelFormat() {
            return this.gh;
        }
        set autoCalloutOthersLabelFormat(a) {
            this.gh = a;
            this.g("AutoCalloutOthersLabelFormat");
        }
        get autoCalloutOthersLabelFormatSpecifiers() {
            return this.fr;
        }
        set autoCalloutOthersLabelFormatSpecifiers(a) {
            this.fr = a;
            this.g("AutoCalloutOthersLabelFormatSpecifiers");
        }
        get proportionalRadialLabelFormat() {
            return this.go;
        }
        set proportionalRadialLabelFormat(a) {
            this.go = a;
            this.g("ProportionalRadialLabelFormat");
        }
        get proportionalRadialLabelFormatSpecifiers() {
            return this.fv;
        }
        set proportionalRadialLabelFormatSpecifiers(a) {
            this.fv = a;
            this.g("ProportionalRadialLabelFormatSpecifiers");
        }
        get legendProportionalRadialLabelFormat() {
            return this.gk;
        }
        set legendProportionalRadialLabelFormat(a) {
            this.gk = a;
            this.g("LegendProportionalRadialLabelFormat");
        }
        get legendProportionalRadialLabelFormatSpecifiers() {
            return this.fs;
        }
        set legendProportionalRadialLabelFormatSpecifiers(a) {
            this.fs = a;
            this.g("LegendProportionalRadialLabelFormatSpecifiers");
        }
        get othersProportionalRadialLabelFormat() {
            return this.gn;
        }
        set othersProportionalRadialLabelFormat(a) {
            this.gn = a;
            this.g("OthersProportionalRadialLabelFormat");
        }
        get othersProportionalRadialLabelFormatSpecifiers() {
            return this.fu;
        }
        set othersProportionalRadialLabelFormatSpecifiers(a) {
            this.fu = a;
            this.g("OthersProportionalRadialLabelFormatSpecifiers");
        }
        get othersLegendProportionalRadialLabelFormat() {
            return this.gm;
        }
        set othersLegendProportionalRadialLabelFormat(a) {
            this.gm = a;
            this.g("OthersLegendProportionalRadialLabelFormat");
        }
        get othersLegendProportionalRadialLabelFormatSpecifiers() {
            return this.ft;
        }
        set othersLegendProportionalRadialLabelFormatSpecifiers(a) {
            this.ft = a;
            this.g("OthersLegendProportionalRadialLabelFormatSpecifiers");
        }
        get isCustomRadialStyleAllowed() {
            return this.f3;
        }
        set isCustomRadialStyleAllowed(a) {
            this.f3 = a;
            this.g("IsCustomRadialStyleAllowed");
        }
        get isCustomRadialMarkerStyleAllowed() {
            return this.f2;
        }
        set isCustomRadialMarkerStyleAllowed(a) {
            this.f2 = a;
            this.g("IsCustomRadialMarkerStyleAllowed");
        }
        get transitionInMode() {
            return this.gp;
        }
        set transitionInMode(a) {
            this.gp = a;
            this.g("TransitionInMode");
        }
        get isTransitionInEnabled() {
            return this.f4;
        }
        set isTransitionInEnabled(a) {
            this.f4 = a;
            this.g("IsTransitionInEnabled");
        }
        get angleAxisRef() {
            return this.gd;
        }
        set angleAxisRef(a) {
            this.gd = a;
            this.g("AngleAxisRef");
        }
        get valueAxisRef() {
            return this.gq;
        }
        set valueAxisRef(a) {
            this.gq = a;
            this.g("ValueAxisRef");
        }
        get clipSeriesToBounds() {
            return this.f1;
        }
        set clipSeriesToBounds(a) {
            this.f1 = a;
            this.g("ClipSeriesToBounds");
        }
        get assigningRadialStyleRef() {
            return this.gf;
        }
        set assigningRadialStyleRef(a) {
            this.gf = a;
            this.g("AssigningRadialStyleRef");
        }
        get assigningRadialMarkerStyleRef() {
            return this.ge;
        }
        set assigningRadialMarkerStyleRef(a) {
            this.ge = a;
            this.g("AssigningRadialMarkerStyleRef");
        }
    }
    RadialBaseDescription.$t = /*@__PURE__*/ markType(RadialBaseDescription, 'RadialBaseDescription', MarkerSeriesDescription.$);
    return RadialBaseDescription;
})();
