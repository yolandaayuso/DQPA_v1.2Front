/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let LinearGraphRangeDescription = /*@__PURE__*/ (() => {
    class LinearGraphRangeDescription extends Description {
        get_type() {
            return "LinearGraphRange";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.w = null;
            this.v = null;
            this.x = null;
            this.m = 0;
            this.h = 0;
            this.j = 0;
            this.i = 0;
            this.l = 0;
            this.k = 0;
            this.n = 0;
        }
        get name() {
            return this.w;
        }
        set name(a) {
            this.w = a;
            this.g("Name");
        }
        get brush() {
            return this.v;
        }
        set brush(a) {
            this.v = a;
            this.g("Brush");
        }
        get outline() {
            return this.x;
        }
        set outline(a) {
            this.x = a;
            this.g("Outline");
        }
        get startValue() {
            return this.m;
        }
        set startValue(a) {
            this.m = a;
            this.g("StartValue");
        }
        get endValue() {
            return this.h;
        }
        set endValue(a) {
            this.h = a;
            this.g("EndValue");
        }
        get innerStartExtent() {
            return this.j;
        }
        set innerStartExtent(a) {
            this.j = a;
            this.g("InnerStartExtent");
        }
        get innerEndExtent() {
            return this.i;
        }
        set innerEndExtent(a) {
            this.i = a;
            this.g("InnerEndExtent");
        }
        get outerStartExtent() {
            return this.l;
        }
        set outerStartExtent(a) {
            this.l = a;
            this.g("OuterStartExtent");
        }
        get outerEndExtent() {
            return this.k;
        }
        set outerEndExtent(a) {
            this.k = a;
            this.g("OuterEndExtent");
        }
        get strokeThickness() {
            return this.n;
        }
        set strokeThickness(a) {
            this.n = a;
            this.g("StrokeThickness");
        }
    }
    LinearGraphRangeDescription.$t = /*@__PURE__*/ markType(LinearGraphRangeDescription, 'LinearGraphRangeDescription', Description.$);
    return LinearGraphRangeDescription;
})();
