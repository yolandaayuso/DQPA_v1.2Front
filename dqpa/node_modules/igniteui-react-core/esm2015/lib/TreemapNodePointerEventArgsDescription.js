/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let TreemapNodePointerEventArgsDescription = /*@__PURE__*/ (() => {
    class TreemapNodePointerEventArgsDescription extends Description {
        get_type() {
            return "TreemapNodePointerEventArgs";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.s = 0;
            this.r = 0;
            this.x = null;
            this.y = null;
            this.aa = null;
            this.h = null;
            this.l = false;
            this.j = false;
            this.k = false;
            this.z = null;
            this.q = 0;
            this.ab = null;
            this.p = 0;
        }
        get value() {
            return this.s;
        }
        set value(a) {
            this.s = a;
            this.g("Value");
        }
        get sum() {
            return this.r;
        }
        set sum(a) {
            this.r = a;
            this.g("Sum");
        }
        get customValueRef() {
            return this.x;
        }
        set customValueRef(a) {
            this.x = a;
            this.g("CustomValueRef");
        }
        get itemRef() {
            return this.y;
        }
        set itemRef(a) {
            this.y = a;
            this.g("ItemRef");
        }
        get parentItemRef() {
            return this.aa;
        }
        set parentItemRef(a) {
            this.aa = a;
            this.g("ParentItemRef");
        }
        get position() {
            return this.h;
        }
        set position(a) {
            this.h = a;
            this.g("Position");
        }
        get isRightButton() {
            return this.l;
        }
        set isRightButton(a) {
            this.l = a;
            this.g("IsRightButton");
        }
        get isHandled() {
            return this.j;
        }
        set isHandled(a) {
            this.j = a;
            this.g("IsHandled");
        }
        get isOverHeader() {
            return this.k;
        }
        set isOverHeader(a) {
            this.k = a;
            this.g("IsOverHeader");
        }
        get label() {
            return this.z;
        }
        set label(a) {
            this.z = a;
            this.g("Label");
        }
        get parentValue() {
            return this.q;
        }
        set parentValue(a) {
            this.q = a;
            this.g("ParentValue");
        }
        get parentLabel() {
            return this.ab;
        }
        set parentLabel(a) {
            this.ab = a;
            this.g("ParentLabel");
        }
        get parentSum() {
            return this.p;
        }
        set parentSum(a) {
            this.p = a;
            this.g("ParentSum");
        }
    }
    TreemapNodePointerEventArgsDescription.$t = /*@__PURE__*/ markType(TreemapNodePointerEventArgsDescription, 'TreemapNodePointerEventArgsDescription', Description.$);
    return TreemapNodePointerEventArgsDescription;
})();
