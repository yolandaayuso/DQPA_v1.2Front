/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SeriesMatcherDescriptionMetadata } from "./SeriesMatcherDescriptionMetadata";
import { ChartSelectionDescription } from "./ChartSelectionDescription";
/**
 * @hidden
 */
export let ChartSelectionDescriptionMetadata = /*@__PURE__*/ (() => {
    class ChartSelectionDescriptionMetadata extends Base {
        static b(a) {
            if (ChartSelectionDescriptionMetadata.a == null) {
                ChartSelectionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ChartSelectionDescriptionMetadata.c(ChartSelectionDescriptionMetadata.a);
            }
            if (a.k(ChartSelectionDescriptionMetadata.a)) {
                return;
            }
            a.ac(ChartSelectionDescriptionMetadata.a);
            SeriesMatcherDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__marshalByValue", "Boolean");
            a.item("Item", "Unknown");
            a.item("SeriesRef", "(w:Series,wf:Series)DataRef::object");
            a.item("Matcher", "ExportedType:SeriesMatcher");
        }
        static d(a) {
            ChartSelectionDescriptionMetadata.b(a);
            a.ae("ChartSelection", () => new ChartSelectionDescription());
            a.ad("ChartSelection", ChartSelectionDescriptionMetadata.a);
        }
    }
    ChartSelectionDescriptionMetadata.$t = /*@__PURE__*/ markType(ChartSelectionDescriptionMetadata, 'ChartSelectionDescriptionMetadata');
    ChartSelectionDescriptionMetadata.a = null;
    return ChartSelectionDescriptionMetadata;
})();
