/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebRowDirectiveDescriptionMetadata } from "./WebRowDirectiveDescriptionMetadata";
import { WebGridRowDescription } from "./WebGridRowDescription";
/**
 * @hidden
 */
export let WebGridRowDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebGridRowDescriptionMetadata extends Base {
        static b(a) {
            if (WebGridRowDescriptionMetadata.a == null) {
                WebGridRowDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebGridRowDescriptionMetadata.c(WebGridRowDescriptionMetadata.a);
            }
            if (a.k(WebGridRowDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebGridRowDescriptionMetadata.a);
        }
        static c(a) {
            WebRowDirectiveDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:GridRow");
            a.item("__tagNameWC", "String:igc-grid-row");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            if (a.containsKey("__skipSuffix")) {
                a.removeItem("__skipSuffix");
            }
        }
        static d(a) {
            WebGridRowDescriptionMetadata.b(a);
            a.ae("WebGridRow", () => new WebGridRowDescription());
            a.ad("WebGridRow", WebGridRowDescriptionMetadata.a);
        }
    }
    WebGridRowDescriptionMetadata.$t = /*@__PURE__*/ markType(WebGridRowDescriptionMetadata, 'WebGridRowDescriptionMetadata');
    WebGridRowDescriptionMetadata.a = null;
    return WebGridRowDescriptionMetadata;
})();
