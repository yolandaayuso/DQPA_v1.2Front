/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { SeriesDescription } from "./SeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let AnnotationLayerDescription = /*@__PURE__*/ (() => {
    class AnnotationLayerDescription extends SeriesDescription {
        get_type() {
            return "AnnotationLayer";
        }
        constructor() {
            super();
            this.ff = false;
            this.fg = false;
            this.fb = null;
            this.fd = false;
            this.f0 = null;
            this.fx = null;
            this.fp = 0;
            this.fm = 0;
            this.f1 = null;
            this.fy = null;
            this.f2 = null;
            this.fz = null;
            this.fo = 0;
            this.fl = 0;
            this.fq = 0;
            this.fn = 0;
            this.e5 = null;
            this.e3 = null;
            this.e6 = null;
            this.e4 = null;
            this.fe = false;
        }
        get useIndex() {
            return this.ff;
        }
        set useIndex(a) {
            this.ff = a;
            this.g("UseIndex");
        }
        get useLegend() {
            return this.fg;
        }
        set useLegend(a) {
            this.fg = a;
            this.g("UseLegend");
        }
        get cursorPosition() {
            return this.fb;
        }
        set cursorPosition(a) {
            this.fb = a;
            this.g("CursorPosition");
        }
        get isDefaultCrosshairDisabled() {
            return this.fd;
        }
        set isDefaultCrosshairDisabled(a) {
            this.fd = a;
            this.g("IsDefaultCrosshairDisabled");
        }
        get appearanceMode() {
            return this.f0;
        }
        set appearanceMode(a) {
            this.f0 = a;
            this.g("AppearanceMode");
        }
        get actualAppearanceMode() {
            return this.fx;
        }
        set actualAppearanceMode(a) {
            this.fx = a;
            this.g("ActualAppearanceMode");
        }
        get shiftAmount() {
            return this.fp;
        }
        set shiftAmount(a) {
            this.fp = a;
            this.g("ShiftAmount");
        }
        get actualShiftAmount() {
            return this.fm;
        }
        set actualShiftAmount(a) {
            this.fm = a;
            this.g("ActualShiftAmount");
        }
        get horizontalAppearanceMode() {
            return this.f1;
        }
        set horizontalAppearanceMode(a) {
            this.f1 = a;
            this.g("HorizontalAppearanceMode");
        }
        get actualHorizontalAppearanceMode() {
            return this.fy;
        }
        set actualHorizontalAppearanceMode(a) {
            this.fy = a;
            this.g("ActualHorizontalAppearanceMode");
        }
        get verticalAppearanceMode() {
            return this.f2;
        }
        set verticalAppearanceMode(a) {
            this.f2 = a;
            this.g("VerticalAppearanceMode");
        }
        get actualVerticalAppearanceMode() {
            return this.fz;
        }
        set actualVerticalAppearanceMode(a) {
            this.fz = a;
            this.g("ActualVerticalAppearanceMode");
        }
        get horizontalShiftAmount() {
            return this.fo;
        }
        set horizontalShiftAmount(a) {
            this.fo = a;
            this.g("HorizontalShiftAmount");
        }
        get actualHorizontalShiftAmount() {
            return this.fl;
        }
        set actualHorizontalShiftAmount(a) {
            this.fl = a;
            this.g("ActualHorizontalShiftAmount");
        }
        get verticalShiftAmount() {
            return this.fq;
        }
        set verticalShiftAmount(a) {
            this.fq = a;
            this.g("VerticalShiftAmount");
        }
        get actualVerticalShiftAmount() {
            return this.fn;
        }
        set actualVerticalShiftAmount(a) {
            this.fn = a;
            this.g("ActualVerticalShiftAmount");
        }
        get horizontalDashArray() {
            return this.e5;
        }
        set horizontalDashArray(a) {
            this.e5 = a;
            this.g("HorizontalDashArray");
        }
        get actualHorizontalDashArray() {
            return this.e3;
        }
        set actualHorizontalDashArray(a) {
            this.e3 = a;
            this.g("ActualHorizontalDashArray");
        }
        get verticalDashArray() {
            return this.e6;
        }
        set verticalDashArray(a) {
            this.e6 = a;
            this.g("VerticalDashArray");
        }
        get actualVerticalDashArray() {
            return this.e4;
        }
        set actualVerticalDashArray(a) {
            this.e4 = a;
            this.g("ActualVerticalDashArray");
        }
        get shouldRenderAsOverlay() {
            return this.fe;
        }
        set shouldRenderAsOverlay(a) {
            this.fe = a;
            this.g("ShouldRenderAsOverlay");
        }
    }
    AnnotationLayerDescription.$t = /*@__PURE__*/ markType(AnnotationLayerDescription, 'AnnotationLayerDescription', SeriesDescription.$);
    return AnnotationLayerDescription;
})();
