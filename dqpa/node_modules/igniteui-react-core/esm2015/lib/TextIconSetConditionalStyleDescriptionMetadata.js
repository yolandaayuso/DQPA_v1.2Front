/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GridCompoundConditionalStyleDescriptionMetadata } from "./GridCompoundConditionalStyleDescriptionMetadata";
import { TextIconSetConditionalStyleDescription } from "./TextIconSetConditionalStyleDescription";
/**
 * @hidden
 */
export let TextIconSetConditionalStyleDescriptionMetadata = /*@__PURE__*/ (() => {
    class TextIconSetConditionalStyleDescriptionMetadata extends Base {
        static b(a) {
            if (TextIconSetConditionalStyleDescriptionMetadata.a == null) {
                TextIconSetConditionalStyleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                TextIconSetConditionalStyleDescriptionMetadata.c(TextIconSetConditionalStyleDescriptionMetadata.a);
            }
            if (a.k(TextIconSetConditionalStyleDescriptionMetadata.a)) {
                return;
            }
            a.ac(TextIconSetConditionalStyleDescriptionMetadata.a);
        }
        static c(a) {
            GridCompoundConditionalStyleDescriptionMetadata.c(a);
            a.item("IconType", "ExportedType:string:TextIconSetBuiltInTypes");
            a.item("IconType@names", "ThreeArrows;CheckOrDashOrX;ThreeBoxes;ThreeFaces");
        }
        static d(a) {
            TextIconSetConditionalStyleDescriptionMetadata.b(a);
            a.ae("TextIconSetConditionalStyle", () => new TextIconSetConditionalStyleDescription());
            a.ad("TextIconSetConditionalStyle", TextIconSetConditionalStyleDescriptionMetadata.a);
        }
    }
    TextIconSetConditionalStyleDescriptionMetadata.$t = /*@__PURE__*/ markType(TextIconSetConditionalStyleDescriptionMetadata, 'TextIconSetConditionalStyleDescriptionMetadata');
    TextIconSetConditionalStyleDescriptionMetadata.a = null;
    return TextIconSetConditionalStyleDescriptionMetadata;
})();
