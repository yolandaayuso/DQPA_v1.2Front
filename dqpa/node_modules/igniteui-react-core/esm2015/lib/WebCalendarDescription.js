/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { WebCalendarBaseDescription } from "./WebCalendarBaseDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebCalendarDescription = /*@__PURE__*/ (() => {
    class WebCalendarDescription extends WebCalendarBaseDescription {
        get_type() {
            return "WebCalendar";
        }
        constructor() {
            super();
            this.af = new Date();
            this.u = null;
            this.ae = new Date();
            this.ab = false;
            this.aa = false;
            this.am = null;
            this.an = null;
            this.ai = 0;
            this.ak = null;
            this.w = null;
            this.y = null;
            this.al = null;
        }
        get value() {
            return this.af;
        }
        set value(a) {
            this.af = a;
            this.g("Value");
        }
        get values() {
            return this.u;
        }
        set values(a) {
            this.u = a;
            this.g("Values");
        }
        get activeDate() {
            return this.ae;
        }
        set activeDate(a) {
            this.ae = a;
            this.g("ActiveDate");
        }
        get hideOutsideDays() {
            return this.ab;
        }
        set hideOutsideDays(a) {
            this.ab = a;
            this.g("HideOutsideDays");
        }
        get hideHeader() {
            return this.aa;
        }
        set hideHeader(a) {
            this.aa = a;
            this.g("HideHeader");
        }
        get headerOrientation() {
            return this.am;
        }
        set headerOrientation(a) {
            this.am = a;
            this.g("HeaderOrientation");
        }
        get orientation() {
            return this.an;
        }
        set orientation(a) {
            this.an = a;
            this.g("Orientation");
        }
        get visibleMonths() {
            return this.ai;
        }
        set visibleMonths(a) {
            this.ai = a;
            this.g("VisibleMonths");
        }
        get activeView() {
            return this.ak;
        }
        set activeView(a) {
            this.ak = a;
            this.g("ActiveView");
        }
        get formatOptions() {
            return this.w;
        }
        set formatOptions(a) {
            this.w = a;
            this.g("FormatOptions");
        }
        get resourceStrings() {
            return this.y;
        }
        set resourceStrings(a) {
            this.y = a;
            this.g("ResourceStrings");
        }
        get changeRef() {
            return this.al;
        }
        set changeRef(a) {
            this.al = a;
            this.g("ChangeRef");
        }
    }
    WebCalendarDescription.$t = /*@__PURE__*/ markType(WebCalendarDescription, 'WebCalendarDescription', WebCalendarBaseDescription.$);
    return WebCalendarDescription;
})();
