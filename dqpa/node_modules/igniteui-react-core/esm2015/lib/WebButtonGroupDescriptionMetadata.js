/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebComponentValueChangedEventArgsDescriptionMetadata } from "./WebComponentValueChangedEventArgsDescriptionMetadata";
import { WebButtonGroupDescription } from "./WebButtonGroupDescription";
/**
 * @hidden
 */
export let WebButtonGroupDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebButtonGroupDescriptionMetadata extends Base {
        static b(a) {
            if (WebButtonGroupDescriptionMetadata.a == null) {
                WebButtonGroupDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebButtonGroupDescriptionMetadata.c(WebButtonGroupDescriptionMetadata.a);
            }
            if (a.k(WebButtonGroupDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebButtonGroupDescriptionMetadata.a);
            WebComponentValueChangedEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:ButtonGroup");
            a.item("__tagNameWC", "String:igc-button-group");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
            a.item("Disabled", "Boolean");
            a.item("Alignment", "ExportedType:string:ButtonGroupAlignment");
            a.item("Alignment@stringUnion", "WebComponents;React");
            a.item("Alignment@names", "Horizontal;Vertical");
            a.item("Selection", "ExportedType:string:ButtonGroupSelection");
            a.item("Selection@stringUnion", "WebComponents;React");
            a.item("Selection@names", "Single;SingleRequired;Multiple");
            a.item("SelectedItems", "Array:string");
            a.item("SelectRef", "EventRef::select");
            a.item("DeselectRef", "EventRef::deselect");
        }
        static d(a) {
            WebButtonGroupDescriptionMetadata.b(a);
            a.ae("WebButtonGroup", () => new WebButtonGroupDescription());
            a.ad("WebButtonGroup", WebButtonGroupDescriptionMetadata.a);
        }
    }
    WebButtonGroupDescriptionMetadata.$t = /*@__PURE__*/ markType(WebButtonGroupDescriptionMetadata, 'WebButtonGroupDescriptionMetadata');
    WebButtonGroupDescriptionMetadata.a = null;
    return WebButtonGroupDescriptionMetadata;
})();
