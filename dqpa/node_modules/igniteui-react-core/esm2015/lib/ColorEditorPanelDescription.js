/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let ColorEditorPanelDescription = /*@__PURE__*/ (() => {
    class ColorEditorPanelDescription extends Description {
        get_type() {
            return "ColorEditorPanel";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.y = null;
            this.p = null;
            this.o = null;
            this.n = null;
            this.v = null;
            this.w = null;
            this.q = null;
            this.u = null;
            this.x = null;
            this.r = null;
            this.i = 0;
            this.s = null;
            this.t = null;
            this.j = 0;
            this.h = 0;
            this.z = null;
            this.aa = null;
        }
        get value() {
            return this.y;
        }
        set value(a) {
            this.y = a;
            this.g("Value");
        }
        get density() {
            return this.p;
        }
        set density(a) {
            this.p = a;
            this.g("Density");
        }
        get baseTheme() {
            return this.o;
        }
        set baseTheme(a) {
            this.o = a;
            this.g("BaseTheme");
        }
        get backgroundColor() {
            return this.n;
        }
        set backgroundColor(a) {
            this.n = a;
            this.g("BackgroundColor");
        }
        get selectedColorBorderColor() {
            return this.v;
        }
        set selectedColorBorderColor(a) {
            this.v = a;
            this.g("SelectedColorBorderColor");
        }
        get selectedFocusDateBackgroundColor() {
            return this.w;
        }
        set selectedFocusDateBackgroundColor(a) {
            this.w = a;
            this.g("SelectedFocusDateBackgroundColor");
        }
        get focusColorBorderColor() {
            return this.q;
        }
        set focusColorBorderColor(a) {
            this.q = a;
            this.g("FocusColorBorderColor");
        }
        get hoverBackgroundColor() {
            return this.u;
        }
        set hoverBackgroundColor(a) {
            this.u = a;
            this.g("HoverBackgroundColor");
        }
        get textColor() {
            return this.x;
        }
        set textColor(a) {
            this.x = a;
            this.g("TextColor");
        }
        get fontFamily() {
            return this.r;
        }
        set fontFamily(a) {
            this.r = a;
            this.g("FontFamily");
        }
        get fontSize() {
            return this.i;
        }
        set fontSize(a) {
            this.i = a;
            this.g("FontSize");
        }
        get fontStyle() {
            return this.s;
        }
        set fontStyle(a) {
            this.s = a;
            this.g("FontStyle");
        }
        get fontWeight() {
            return this.t;
        }
        set fontWeight(a) {
            this.t = a;
            this.g("FontWeight");
        }
        get pixelScalingRatio() {
            return this.j;
        }
        set pixelScalingRatio(a) {
            this.j = a;
            this.g("PixelScalingRatio");
        }
        get actualPixelScalingRatio() {
            return this.h;
        }
        set actualPixelScalingRatio(a) {
            this.h = a;
            this.g("ActualPixelScalingRatio");
        }
        get valueChangedRef() {
            return this.z;
        }
        set valueChangedRef(a) {
            this.z = a;
            this.g("ValueChangedRef");
        }
        get valueChangingRef() {
            return this.aa;
        }
        set valueChangingRef(a) {
            this.aa = a;
            this.g("ValueChangingRef");
        }
    }
    ColorEditorPanelDescription.$t = /*@__PURE__*/ markType(ColorEditorPanelDescription, 'ColorEditorPanelDescription', Description.$);
    return ColorEditorPanelDescription;
})();
