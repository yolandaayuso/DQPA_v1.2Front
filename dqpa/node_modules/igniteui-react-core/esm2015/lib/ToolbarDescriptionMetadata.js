/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolCommandEventArgsDescriptionMetadata } from "./ToolCommandEventArgsDescriptionMetadata";
import { ToolbarSubMenuOpeningEventArgsDescriptionMetadata } from "./ToolbarSubMenuOpeningEventArgsDescriptionMetadata";
import { ToolbarSubMenuClosingEventArgsDescriptionMetadata } from "./ToolbarSubMenuClosingEventArgsDescriptionMetadata";
import { ToolbarDescription } from "./ToolbarDescription";
/**
 * @hidden
 */
export let ToolbarDescriptionMetadata = /*@__PURE__*/ (() => {
    class ToolbarDescriptionMetadata extends Base {
        static b(a) {
            if (ToolbarDescriptionMetadata.a == null) {
                ToolbarDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ToolbarDescriptionMetadata.c(ToolbarDescriptionMetadata.a);
            }
            if (a.k(ToolbarDescriptionMetadata.a)) {
                return;
            }
            a.ac(ToolbarDescriptionMetadata.a);
            ToolCommandEventArgsDescriptionMetadata.d(a);
            ToolbarSubMenuOpeningEventArgsDescriptionMetadata.d(a);
            ToolbarSubMenuClosingEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("BaseTheme", "ExportedType:string:BaseControlTheme");
            a.item("BaseTheme@names", "Default;DenaliLight;MaterialLight;SlingshotLight;SlingshotDark;RevealLight;RevealDark");
            a.item("Density", "ExportedType:string:ControlDisplayDensity");
            a.item("Density@names", "Auto;Comfortable;Cosy;Compact;Minimal");
            a.item("AutoGeneratedActions", "Collection:ToolAction:ToolActionCollection:ToolAction");
            a.item("Actions", "Collection:ToolAction:ToolActionCollection:ToolAction");
            a.item("ActualActions", "Collection:ToolAction:ToolActionCollection:ToolAction");
            a.item("Orientation", "ExportedType:string:ToolbarOrientation");
            a.item("Orientation@names", "Vertical;Horizontal;HorizontalWrapped");
            a.item("TargetRef", "(w:Target,wf:Target)DataRef::object");
            a.item("BackgroundColor", "Brush");
            a.item("SubmenuBackgroundColor", "Brush");
            a.item("GroupHeaderBackgroundColor", "Brush");
            a.item("SeparatorBackgroundColor", "Brush");
            a.item("HoverBackgroundColor", "Brush");
            a.item("TextColor", "Brush");
            a.item("DisabledTextColor", "Brush");
            a.item("GroupHeaderTextColor", "Brush");
            a.item("ToolTipTextColor", "Brush");
            a.item("ToolTipBackgroundColor", "Brush");
            a.item("ToolTipCornerRadius", "Number:double");
            a.item("ToolTipElevation", "Number:double");
            a.item("IconFill", "Brush");
            a.item("IconStroke", "Brush");
            a.item("CellFontFamily", "(w:CellFontFamily/FontFamilyTransform,xam:CellFontFamily,wf:CellFontFamily,web:cellTextStyle/FontFamilyTransform)String");
            a.item("CellFontSize", "(w:CellFontSize,xam:CellFontSize,wf:CellFontSize,web:cellTextStyle/FontSizeTransform)Number:double");
            a.item("CellFontStyle", "(w:CellFontStyle/FontStyleTransform,xam:CellFontFamily/FontStyleTransform,wf:CellFontFamily/FontStyleTransform,web:cellTextStyle/FontStyleTransform)String");
            a.item("CellFontWeight", "(w:CellFontWeight/FontWeightTransform,xam:CellFontFamily/FontWeightTransform,wf:CellFontFamily/FontWeightTransform,web:cellTextStyle/FontWeightTransform)String");
            a.item("SubtitleFontFamily", "(w:SubtitleFontFamily/FontFamilyTransform,xam:SubtitleFontFamily,wf:SubtitleFontFamily,web:subtitleTextStyle/FontFamilyTransform)String");
            a.item("SubtitleFontSize", "(w:SubtitleFontSize,xam:SubtitleFontSize,wf:SubtitleFontSize,web:subtitleTextStyle/FontSizeTransform)Number:double");
            a.item("SubtitleFontStyle", "(w:SubtitleFontStyle/FontStyleTransform,xam:SubtitleFontFamily/FontStyleTransform,wf:SubtitleFontFamily/FontStyleTransform,web:subtitleTextStyle/FontStyleTransform)String");
            a.item("SubtitleFontWeight", "(w:SubtitleFontWeight/FontWeightTransform,xam:SubtitleFontFamily/FontWeightTransform,wf:SubtitleFontFamily/FontWeightTransform,web:subtitleTextStyle/FontWeightTransform)String");
            a.item("SeparatorVerticalPaddingLeft", "Number:double");
            a.item("SeparatorVerticalPaddingRight", "Number:double");
            a.item("SeparatorVerticalPaddingTop", "Number:double");
            a.item("SeparatorVerticalPaddingBottom", "Number:double");
            a.item("SeparatorHorizontalPaddingLeft", "Number:double");
            a.item("SeparatorHorizontalPaddingRight", "Number:double");
            a.item("SeparatorHorizontalPaddingTop", "Number:double");
            a.item("SeparatorHorizontalPaddingBottom", "Number:double");
            a.item("ShowOnHover", "Boolean");
            a.item("ShowTooltipOnHover", "Boolean");
            a.item("DropdownClickBuffer", "Number:int");
            a.item("HighlightWidth", "Number:double");
            a.item("HighlightRadius", "Number:double");
            a.item("HighlightColor", "Brush");
            a.item("MenuArrowStroke", "Brush");
            a.item("UncheckedBackgroundColor", "Brush");
            a.item("CheckedBackgroundColor", "Brush");
            a.item("UncheckedBorderColor", "Brush");
            a.item("CheckedBorderColor", "Brush");
            a.item("RowHeight", "Number:int");
            a.item("SubtitleTextColor", "Brush");
            a.item("GroupHeaderSubtitleTextColor", "Brush");
            a.item("DropdownDelay", "Number:int");
            a.item("OnCommandRef", "EventRef::onCommand");
            a.item("SubMenuOpeningRef", "EventRef::subMenuOpening");
            a.item("SubMenuClosingRef", "EventRef::subMenuClosing");
            ToolbarDescriptionMetadata.e(a);
        }
        static d(a) {
            ToolbarDescriptionMetadata.b(a);
            a.ae("Toolbar", () => new ToolbarDescription());
            a.ad("Toolbar", ToolbarDescriptionMetadata.a);
        }
        static e(a) {
            a.item("_qualifiedName", "String:Infragistics.Controls.Layouts.XamToolbar");
            a.item("Width", "(w:Width/DimensionTransform,xam:Width/DimensionTransform)String");
            a.item("Height", "(w:Height/DimensionTransform,xam:Height/DimensionTransform)String");
            a.item("Background", "(wf:BackColor/ColorTransform)Brush");
        }
    }
    ToolbarDescriptionMetadata.$t = /*@__PURE__*/ markType(ToolbarDescriptionMetadata, 'ToolbarDescriptionMetadata');
    ToolbarDescriptionMetadata.a = null;
    return ToolbarDescriptionMetadata;
})();
