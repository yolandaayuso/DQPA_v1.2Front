/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { FilterExpressionDescription } from "./FilterExpressionDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let WrapperExpressionDescription = /*@__PURE__*/ (() => {
    class WrapperExpressionDescription extends FilterExpressionDescription {
        get_type() {
            return "WrapperExpression";
        }
        constructor() {
            super();
            this.l = null;
            this.k = null;
            this.q = null;
        }
        get innerExpression() {
            return this.l;
        }
        set innerExpression(a) {
            this.l = a;
            this.g("InnerExpression");
        }
        get expression() {
            return this.k;
        }
        set expression(a) {
            this.k = a;
            this.g("Expression");
        }
        get propertyName() {
            return this.q;
        }
        set propertyName(a) {
            this.q = a;
            this.g("PropertyName");
        }
    }
    WrapperExpressionDescription.$t = /*@__PURE__*/ markType(WrapperExpressionDescription, 'WrapperExpressionDescription', FilterExpressionDescription.$);
    WrapperExpressionDescription.__marshalByValue1 = true;
    WrapperExpressionDescription.__marshalByValueAlias1 = "WrapperExpression";
    return WrapperExpressionDescription;
})();
