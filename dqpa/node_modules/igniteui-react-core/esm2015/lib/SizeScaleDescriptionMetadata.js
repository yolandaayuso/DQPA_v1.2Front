/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { PropertyUpdatedEventArgsDescriptionMetadata } from "./PropertyUpdatedEventArgsDescriptionMetadata";
import { SizeScaleDescription } from "./SizeScaleDescription";
/**
 * @hidden
 */
export let SizeScaleDescriptionMetadata = /*@__PURE__*/ (() => {
    class SizeScaleDescriptionMetadata extends Base {
        static b(a) {
            if (SizeScaleDescriptionMetadata.a == null) {
                SizeScaleDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                SizeScaleDescriptionMetadata.c(SizeScaleDescriptionMetadata.a);
            }
            if (a.k(SizeScaleDescriptionMetadata.a)) {
                return;
            }
            a.ac(SizeScaleDescriptionMetadata.a);
            PropertyUpdatedEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("GlobalMinimum", "Number:double");
            a.item("GlobalMaximum", "Number:double");
            a.item("MinimumValue", "Number:double");
            a.item("MaximumValue", "Number:double");
            a.item("IsLogarithmic", "Boolean");
            a.item("LogarithmBase", "Number:int");
            a.item("PropertyUpdatedRef", "EventRef::propertyUpdated");
        }
        static d(a) {
            SizeScaleDescriptionMetadata.b(a);
            a.ae("SizeScale", () => new SizeScaleDescription());
            a.ad("SizeScale", SizeScaleDescriptionMetadata.a);
        }
    }
    SizeScaleDescriptionMetadata.$t = /*@__PURE__*/ markType(SizeScaleDescriptionMetadata, 'SizeScaleDescriptionMetadata');
    SizeScaleDescriptionMetadata.a = null;
    return SizeScaleDescriptionMetadata;
})();
