/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CellInfoDescription } from "./CellInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let FilterCellInfoDescription = /*@__PURE__*/ (() => {
    class FilterCellInfoDescription extends CellInfoDescription {
        get_type() {
            return "FilterCellInfo";
        }
        constructor() {
            super();
            this.f5 = null;
            this.fn = null;
            this.fp = null;
            this.fl = null;
            this.f7 = null;
            this.f6 = null;
            this.fx = 0;
            this.fw = 0;
            this.fv = 0;
            this.fu = 0;
            this.ft = 0;
            this.fs = 0;
        }
        get dataType() {
            return this.f5;
        }
        set dataType(a) {
            this.f5 = a;
            this.g("DataType");
        }
        get filter() {
            return this.fn;
        }
        set filter(a) {
            this.fn = a;
            this.g("Filter");
        }
        get filterExpression() {
            return this.fp;
        }
        set filterExpression(a) {
            this.fp = a;
            this.g("FilterExpression");
        }
        get filterOperands() {
            return this.fl;
        }
        set filterOperands(a) {
            this.fl = a;
            this.g("FilterOperands");
        }
        get operatorType() {
            return this.f7;
        }
        set operatorType(a) {
            this.f7 = a;
            this.g("OperatorType");
        }
        get filterValueRef() {
            return this.f6;
        }
        set filterValueRef(a) {
            this.f6 = a;
            this.g("FilterValueRef");
        }
        get selectorTop() {
            return this.fx;
        }
        set selectorTop(a) {
            this.fx = a;
            this.g("SelectorTop");
        }
        get selectorLeft() {
            return this.fw;
        }
        set selectorLeft(a) {
            this.fw = a;
            this.g("SelectorLeft");
        }
        get editorTop() {
            return this.fv;
        }
        set editorTop(a) {
            this.fv = a;
            this.g("EditorTop");
        }
        get editorLeft() {
            return this.fu;
        }
        set editorLeft(a) {
            this.fu = a;
            this.g("EditorLeft");
        }
        get clearIconTop() {
            return this.ft;
        }
        set clearIconTop(a) {
            this.ft = a;
            this.g("ClearIconTop");
        }
        get clearIconLeft() {
            return this.fs;
        }
        set clearIconLeft(a) {
            this.fs = a;
            this.g("ClearIconLeft");
        }
    }
    FilterCellInfoDescription.$t = /*@__PURE__*/ markType(FilterCellInfoDescription, 'FilterCellInfoDescription', CellInfoDescription.$);
    FilterCellInfoDescription.__marshalByValue1 = true;
    FilterCellInfoDescription.__marshalByValueAlias1 = "FilterCellModel";
    return FilterCellInfoDescription;
})();
