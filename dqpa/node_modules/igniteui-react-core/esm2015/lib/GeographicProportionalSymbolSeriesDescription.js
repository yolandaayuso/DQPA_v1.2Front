/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GeographicMarkerSeriesDescription } from "./GeographicMarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let GeographicProportionalSymbolSeriesDescription = /*@__PURE__*/ (() => {
    class GeographicProportionalSymbolSeriesDescription extends GeographicMarkerSeriesDescription {
        get_type() {
            return "GeographicProportionalSymbolSeries";
        }
        constructor() {
            super();
            this.gi = null;
            this.gj = null;
            this.gk = null;
            this.fv = null;
            this.gh = null;
            this.gf = null;
            this.ft = null;
            this.fx = false;
            this.f0 = false;
            this.f8 = 0;
            this.f7 = 0;
            this.f1 = false;
            this.fz = false;
            this.fy = false;
            this.gg = null;
            this.gb = 0;
            this.ge = null;
            this.gd = null;
        }
        get latitudeMemberPath() {
            return this.gi;
        }
        set latitudeMemberPath(a) {
            this.gi = a;
            this.g("LatitudeMemberPath");
        }
        get longitudeMemberPath() {
            return this.gj;
        }
        set longitudeMemberPath(a) {
            this.gj = a;
            this.g("LongitudeMemberPath");
        }
        get radiusMemberPath() {
            return this.gk;
        }
        set radiusMemberPath(a) {
            this.gk = a;
            this.g("RadiusMemberPath");
        }
        get radiusScale() {
            return this.fv;
        }
        set radiusScale(a) {
            this.fv = a;
            this.g("RadiusScale");
        }
        get labelMemberPath() {
            return this.gh;
        }
        set labelMemberPath(a) {
            this.gh = a;
            this.g("LabelMemberPath");
        }
        get fillMemberPath() {
            return this.gf;
        }
        set fillMemberPath(a) {
            this.gf = a;
            this.g("FillMemberPath");
        }
        get fillScale() {
            return this.ft;
        }
        set fillScale(a) {
            this.ft = a;
            this.g("FillScale");
        }
        get fillScaleUseGlobalValues() {
            return this.fx;
        }
        set fillScaleUseGlobalValues(a) {
            this.fx = a;
            this.g("FillScaleUseGlobalValues");
        }
        get markerOutlineUsesFillScale() {
            return this.f0;
        }
        set markerOutlineUsesFillScale(a) {
            this.f0 = a;
            this.g("MarkerOutlineUsesFillScale");
        }
        get markerOutlineBrightness() {
            return this.f8;
        }
        set markerOutlineBrightness(a) {
            this.f8 = a;
            this.g("MarkerOutlineBrightness");
        }
        get markerBrushBrightness() {
            return this.f7;
        }
        set markerBrushBrightness(a) {
            this.f7 = a;
            this.g("MarkerBrushBrightness");
        }
        get radiusScaleUseGlobalValues() {
            return this.f1;
        }
        set radiusScaleUseGlobalValues(a) {
            this.f1 = a;
            this.g("RadiusScaleUseGlobalValues");
        }
        get isCustomScatterStyleAllowed() {
            return this.fz;
        }
        set isCustomScatterStyleAllowed(a) {
            this.fz = a;
            this.g("IsCustomScatterStyleAllowed");
        }
        get isCustomScatterMarkerStyleAllowed() {
            return this.fy;
        }
        set isCustomScatterMarkerStyleAllowed(a) {
            this.fy = a;
            this.g("IsCustomScatterMarkerStyleAllowed");
        }
        get itemSearchMode() {
            return this.gg;
        }
        set itemSearchMode(a) {
            this.gg = a;
            this.g("ItemSearchMode");
        }
        get itemSearchThreshold() {
            return this.gb;
        }
        set itemSearchThreshold(a) {
            this.gb = a;
            this.g("ItemSearchThreshold");
        }
        get assigningScatterStyleRef() {
            return this.ge;
        }
        set assigningScatterStyleRef(a) {
            this.ge = a;
            this.g("AssigningScatterStyleRef");
        }
        get assigningScatterMarkerStyleRef() {
            return this.gd;
        }
        set assigningScatterMarkerStyleRef(a) {
            this.gd = a;
            this.g("AssigningScatterMarkerStyleRef");
        }
    }
    GeographicProportionalSymbolSeriesDescription.$t = /*@__PURE__*/ markType(GeographicProportionalSymbolSeriesDescription, 'GeographicProportionalSymbolSeriesDescription', GeographicMarkerSeriesDescription.$);
    return GeographicProportionalSymbolSeriesDescription;
})();
