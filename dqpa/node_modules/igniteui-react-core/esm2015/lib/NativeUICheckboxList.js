/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { NativeUIComponent } from "./NativeUIComponent";
import { enumGetBox, EnumUtil, markType } from "./type";
import { NativeUICheckboxListIndexType_$type } from "./NativeUICheckboxListIndexType";
import { ControlDisplayDensity_$type } from "./ControlDisplayDensity";
/**
 * @hidden
 */
export let NativeUICheckboxList = /*@__PURE__*/ (() => {
    class NativeUICheckboxList extends NativeUIComponent {
        constructor() {
            super(...arguments);
            this.bn = null;
            this.bo = null;
            this.bp = null;
            this.bu = null;
            this.bw = null;
        }
        get_e() {
            return 16;
        }
        get bq() {
            return this.bn;
        }
        set bq(a) {
            let b = this.bn;
            this.bn = a;
            if (this.bn != b) {
                if (b != null) {
                    this.a2(2, b);
                }
                if (this.bn != null) {
                    this.aq(2, this.bn);
                }
            }
        }
        get br() {
            return this.bo;
        }
        set br(a) {
            let b = this.bo;
            this.bo = a;
            if (this.bo != b) {
                if (b != null) {
                    this.a2(18, b);
                }
                if (this.bo != null) {
                    this.aq(18, this.bo);
                }
            }
        }
        get bs() {
            return this.bp;
        }
        set bs(a) {
            let b = this.bp;
            this.bp = a;
            if (this.bp != b) {
                if (b != null) {
                    this.a2(19, b);
                }
                if (this.bp != null) {
                    this.aq(19, this.bp);
                }
            }
        }
        get bv() {
            return this.bu;
        }
        set bv(a) {
            let b = this.bu;
            this.bu = a;
            if (this.bu != b) {
                if (b != null) {
                    this.a2(21, b);
                }
                if (this.bp != null) {
                    this.aq(21, this.bu);
                }
            }
        }
        get bx() {
            return this.bw;
        }
        set bx(a) {
            let b = this.bw;
            this.bw = a;
            if (this.bw != b) {
                if (b != null) {
                    this.a2(25, b);
                }
                if (this.bp != null) {
                    this.aq(25, this.bw);
                }
            }
        }
        get bz() {
            let a = this.ag(8);
            return a;
        }
        set bz(a) {
            this.a4(8, a);
        }
        get b6() {
            let a = this.ag(23);
            return a;
        }
        set b6(a) {
            this.a4(23, a);
        }
        get b0() {
            let a = this.ag(75);
            return a;
        }
        set b0(a) {
            this.a4(75, a);
        }
        get b1() {
            let a = this.ag(74);
            return a;
        }
        set b1(a) {
            this.a4(74, a);
        }
        get bt() {
            let a = this.ag(96);
            return EnumUtil.getEnumValue(NativeUICheckboxListIndexType_$type, a);
        }
        set bt(a) {
            this.a4(96, enumGetBox(NativeUICheckboxListIndexType_$type, a));
        }
        get bl() {
            let a = this.ag(1);
            return EnumUtil.getEnumValue(ControlDisplayDensity_$type, a);
        }
        set bl(a) {
            this.a4(1, enumGetBox(ControlDisplayDensity_$type, a));
        }
        get by() {
            let a = this.ag(76);
            return a;
        }
        set by(a) {
            this.a4(76, a);
        }
        get bk() {
            let a = this.ag(77);
            return a;
        }
        set bk(a) {
            this.a4(77, a);
        }
        get ca() {
            let a = this.ag(33);
            return a;
        }
        set ca(a) {
            this.a4(33, a);
        }
        get b7() {
            let a = this.ag(24);
            return a;
        }
        set b7(a) {
            this.a4(24, a);
        }
        get b8() {
            let a = this.ag(78);
            return a;
        }
        set b8(a) {
            this.a4(78, a);
        }
        get b9() {
            let a = this.ag(79);
            return a;
        }
        set b9(a) {
            this.a4(79, a);
        }
        get bm() {
            return this.d;
        }
        b3() {
            this.bm.clearSelectedKeys(this.am);
        }
        b2(a, b) {
            this.bm.addSelectedKey(this.am, a, b);
        }
        b4(a, b, c) {
            this.bm.insertSelectedKey(this.am, a, b, c);
        }
        b5(a) {
            this.bm.removeSelectedKeyAt(this.am, a);
        }
    }
    NativeUICheckboxList.$t = /*@__PURE__*/ markType(NativeUICheckboxList, 'NativeUICheckboxList', NativeUIComponent.$);
    return NativeUICheckboxList;
})();
