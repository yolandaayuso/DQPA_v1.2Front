/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
/**
 * @hidden
 */
export let FilterSyntaxExpressionSyntax = /*@__PURE__*/ (() => {
    class FilterSyntaxExpressionSyntax extends Base {
    }
    FilterSyntaxExpressionSyntax.$t = /*@__PURE__*/ markType(FilterSyntaxExpressionSyntax, 'FilterSyntaxExpressionSyntax');
    return FilterSyntaxExpressionSyntax;
})();
/**
 * @hidden
 */
export let FilterSyntaxPrimitiveValueExpressionSyntax = /*@__PURE__*/ (() => {
    class FilterSyntaxPrimitiveValueExpressionSyntax extends FilterSyntaxExpressionSyntax {
        constructor() {
            super(...arguments);
            this.b = 0;
            this.c = null;
        }
        a(a) {
            a.i(this);
        }
    }
    FilterSyntaxPrimitiveValueExpressionSyntax.$t = /*@__PURE__*/ markType(FilterSyntaxPrimitiveValueExpressionSyntax, 'FilterSyntaxPrimitiveValueExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxPrimitiveValueExpressionSyntax;
})();
/**
 * @hidden
 */
export let FilterSyntaxNullExpressionSyntax = /*@__PURE__*/ (() => {
    class FilterSyntaxNullExpressionSyntax extends FilterSyntaxExpressionSyntax {
        constructor() {
            super(...arguments);
            this.b = 0;
            this.c = null;
        }
        a(a) {
            a.g(this);
        }
    }
    FilterSyntaxNullExpressionSyntax.$t = /*@__PURE__*/ markType(FilterSyntaxNullExpressionSyntax, 'FilterSyntaxNullExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxNullExpressionSyntax;
})();
/**
 * @hidden
 */
export let FilterSyntaxParenthesisExpressionSyntax = /*@__PURE__*/ (() => {
    class FilterSyntaxParenthesisExpressionSyntax extends FilterSyntaxExpressionSyntax {
        constructor() {
            super(...arguments);
            this.b = null;
        }
        a(a) {
            a.h(this);
        }
    }
    FilterSyntaxParenthesisExpressionSyntax.$t = /*@__PURE__*/ markType(FilterSyntaxParenthesisExpressionSyntax, 'FilterSyntaxParenthesisExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxParenthesisExpressionSyntax;
})();
/**
 * @hidden
 */
export let FilterSyntaxBinaryOperatorExpressionSyntax = /*@__PURE__*/ (() => {
    class FilterSyntaxBinaryOperatorExpressionSyntax extends FilterSyntaxExpressionSyntax {
        constructor() {
            super(...arguments);
            this.d = 0;
            this.b = null;
            this.c = null;
        }
        a(a) {
            a.c(this);
        }
    }
    FilterSyntaxBinaryOperatorExpressionSyntax.$t = /*@__PURE__*/ markType(FilterSyntaxBinaryOperatorExpressionSyntax, 'FilterSyntaxBinaryOperatorExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxBinaryOperatorExpressionSyntax;
})();
/**
 * @hidden
 */
export let FilterSyntaxMemberExpressionSyntax = /*@__PURE__*/ (() => {
    class FilterSyntaxMemberExpressionSyntax extends FilterSyntaxExpressionSyntax {
        constructor() {
            super(...arguments);
            this.b = null;
            this.c = null;
        }
        a(a) {
            a.e(this);
        }
    }
    FilterSyntaxMemberExpressionSyntax.$t = /*@__PURE__*/ markType(FilterSyntaxMemberExpressionSyntax, 'FilterSyntaxMemberExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxMemberExpressionSyntax;
})();
/**
 * @hidden
 */
export let FilterSyntaxMethodCallExpressionSyntax = /*@__PURE__*/ (() => {
    class FilterSyntaxMethodCallExpressionSyntax extends FilterSyntaxExpressionSyntax {
        constructor() {
            super(...arguments);
            this.c = null;
            this.b = null;
        }
        a(a) {
            a.f(this);
        }
    }
    FilterSyntaxMethodCallExpressionSyntax.$t = /*@__PURE__*/ markType(FilterSyntaxMethodCallExpressionSyntax, 'FilterSyntaxMethodCallExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxMethodCallExpressionSyntax;
})();
/**
 * @hidden
 */
export let FilterSyntaxIdentifierExpressionSyntax = /*@__PURE__*/ (() => {
    class FilterSyntaxIdentifierExpressionSyntax extends FilterSyntaxExpressionSyntax {
        constructor() {
            super(...arguments);
            this.b = 0;
            this.c = null;
        }
        a(a) {
            a.d(this);
        }
    }
    FilterSyntaxIdentifierExpressionSyntax.$t = /*@__PURE__*/ markType(FilterSyntaxIdentifierExpressionSyntax, 'FilterSyntaxIdentifierExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxIdentifierExpressionSyntax;
})();
/**
 * @hidden
 */
export let FilterSyntaxUnaryOperatorExpressionSyntax = /*@__PURE__*/ (() => {
    class FilterSyntaxUnaryOperatorExpressionSyntax extends FilterSyntaxExpressionSyntax {
        constructor() {
            super(...arguments);
            this.c = 0;
            this.b = null;
        }
        a(a) {
            a.j(this);
        }
    }
    FilterSyntaxUnaryOperatorExpressionSyntax.$t = /*@__PURE__*/ markType(FilterSyntaxUnaryOperatorExpressionSyntax, 'FilterSyntaxUnaryOperatorExpressionSyntax', FilterSyntaxExpressionSyntax.$);
    return FilterSyntaxUnaryOperatorExpressionSyntax;
})();
/**
 * @hidden
 */
export let FilterSyntaxVisitor = /*@__PURE__*/ (() => {
    class FilterSyntaxVisitor extends Base {
        constructor() {
            super();
        }
        b(a) {
            a.a(this);
        }
        a(a) {
        }
        j(a) {
            this.a(a);
        }
        c(a) {
            this.a(a);
        }
        d(a) {
            this.a(a);
        }
        e(a) {
            this.a(a);
        }
        f(a) {
            this.a(a);
        }
        g(a) {
            this.a(a);
        }
        h(a) {
            this.a(a);
        }
        i(a) {
            this.a(a);
        }
    }
    FilterSyntaxVisitor.$t = /*@__PURE__*/ markType(FilterSyntaxVisitor, 'FilterSyntaxVisitor');
    return FilterSyntaxVisitor;
})();
