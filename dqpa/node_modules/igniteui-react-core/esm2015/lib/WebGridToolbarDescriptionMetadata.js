/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebGridBaseDirectiveDescriptionMetadata } from "./WebGridBaseDirectiveDescriptionMetadata";
import { WebGridToolbarDescription } from "./WebGridToolbarDescription";
/**
 * @hidden
 */
export let WebGridToolbarDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebGridToolbarDescriptionMetadata extends Base {
        static b(a) {
            if (WebGridToolbarDescriptionMetadata.a == null) {
                WebGridToolbarDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebGridToolbarDescriptionMetadata.c(WebGridToolbarDescriptionMetadata.a);
            }
            if (a.k(WebGridToolbarDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebGridToolbarDescriptionMetadata.a);
            WebGridBaseDirectiveDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:GridToolbar");
            a.item("__tagNameWC", "String:igc-grid-toolbar");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("__portalChildrenWC", "Boolean");
            a.item("__manageCollectionInMarkup", "Boolean");
            a.item("__manageItemInMarkup", "Boolean");
            a.item("__mustUseNGParentAnchor", "Boolean");
            a.item("ShowProgress", "Boolean");
            a.item("Grid", "ExportedType:WebGridBaseDirective");
            a.item("Name", "String");
            a.item("Tools", "Collection:WebGridToolbarContent:WebGridToolbarContentCollection:WebGridToolbarContent");
        }
        static d(a) {
            WebGridToolbarDescriptionMetadata.b(a);
            a.ae("WebGridToolbar", () => new WebGridToolbarDescription());
            a.ad("WebGridToolbar", WebGridToolbarDescriptionMetadata.a);
        }
    }
    WebGridToolbarDescriptionMetadata.$t = /*@__PURE__*/ markType(WebGridToolbarDescriptionMetadata, 'WebGridToolbarDescriptionMetadata');
    WebGridToolbarDescriptionMetadata.a = null;
    return WebGridToolbarDescriptionMetadata;
})();
