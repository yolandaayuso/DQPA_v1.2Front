/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolActionDescriptionMetadata } from "./ToolActionDescriptionMetadata";
import { ToolActionRadioDescription } from "./ToolActionRadioDescription";
/**
 * @hidden
 */
export let ToolActionRadioDescriptionMetadata = /*@__PURE__*/ (() => {
    class ToolActionRadioDescriptionMetadata extends Base {
        static b(a) {
            if (ToolActionRadioDescriptionMetadata.a == null) {
                ToolActionRadioDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ToolActionRadioDescriptionMetadata.c(ToolActionRadioDescriptionMetadata.a);
            }
            if (a.k(ToolActionRadioDescriptionMetadata.a)) {
                return;
            }
            a.ac(ToolActionRadioDescriptionMetadata.a);
        }
        static c(a) {
            ToolActionDescriptionMetadata.c(a);
            a.item("Channel", "String");
            a.item("IsChecked", "Boolean");
            a.item("IsManual", "Boolean");
            a.item("UncheckedBackgroundColor", "Brush");
            a.item("ActualUncheckedBackgroundColor", "Brush");
            a.item("CheckedBackgroundColor", "Brush");
            a.item("ActualCheckedBackgroundColor", "Brush");
            a.item("UncheckedBorderColor", "Brush");
            a.item("ActualUncheckedBorderColor", "Brush");
            a.item("CheckedBorderColor", "Brush");
            a.item("ActualCheckedBorderColor", "Brush");
        }
        static d(a) {
            ToolActionRadioDescriptionMetadata.b(a);
            a.ae("ToolActionRadio", () => new ToolActionRadioDescription());
            a.ad("ToolActionRadio", ToolActionRadioDescriptionMetadata.a);
        }
    }
    ToolActionRadioDescriptionMetadata.$t = /*@__PURE__*/ markType(ToolActionRadioDescriptionMetadata, 'ToolActionRadioDescriptionMetadata');
    ToolActionRadioDescriptionMetadata.a = null;
    return ToolActionRadioDescriptionMetadata;
})();
