/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { StyleShapeEventArgsDescriptionMetadata } from "./StyleShapeEventArgsDescriptionMetadata";
import { GeographicShapeSeriesBaseDescriptionMetadata } from "./GeographicShapeSeriesBaseDescriptionMetadata";
import { GeographicPolylineSeriesDescription } from "./GeographicPolylineSeriesDescription";
/**
 * @hidden
 */
export let GeographicPolylineSeriesDescriptionMetadata = /*@__PURE__*/ (() => {
    class GeographicPolylineSeriesDescriptionMetadata extends Base {
        static b(a) {
            if (GeographicPolylineSeriesDescriptionMetadata.a == null) {
                GeographicPolylineSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                GeographicPolylineSeriesDescriptionMetadata.c(GeographicPolylineSeriesDescriptionMetadata.a);
            }
            if (a.k(GeographicPolylineSeriesDescriptionMetadata.a)) {
                return;
            }
            a.ac(GeographicPolylineSeriesDescriptionMetadata.a);
            StyleShapeEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            GeographicShapeSeriesBaseDescriptionMetadata.c(a);
            a.item("ShapeStyleSelectorRef", "(w:ShapeStyleSelector,wf:ShapeStyleSelector)DataRef::object");
            a.item("ShapeFill", "(w:ShapeStyle.Fill,wf:ShapeFill)String");
            a.item("ShapeStroke", "(w:ShapeStyle.Stroke,wf:ShapeStroke)String");
            a.item("ShapeStrokeThickness", "(w:ShapeStyle.StrokeThickness,wf:ShapeStrokeThickness)Number:double");
            a.item("ShapeOpacity", "(w:ShapeStyle.Opacity,wf:ShapeOpacity)Number:double");
            a.item("StyleShapeRef", "EventRef::styleShape");
        }
        static d(a) {
            GeographicPolylineSeriesDescriptionMetadata.b(a);
            a.ae("GeographicPolylineSeries", () => new GeographicPolylineSeriesDescription());
            a.ad("GeographicPolylineSeries", GeographicPolylineSeriesDescriptionMetadata.a);
        }
    }
    GeographicPolylineSeriesDescriptionMetadata.$t = /*@__PURE__*/ markType(GeographicPolylineSeriesDescriptionMetadata, 'GeographicPolylineSeriesDescriptionMetadata');
    GeographicPolylineSeriesDescriptionMetadata.a = null;
    return GeographicPolylineSeriesDescriptionMetadata;
})();
