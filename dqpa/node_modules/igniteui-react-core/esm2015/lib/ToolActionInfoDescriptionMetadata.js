/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolContextBindingInfoDescriptionMetadata } from "./ToolContextBindingInfoDescriptionMetadata";
import { ToolActionInfoDescription } from "./ToolActionInfoDescription";
/**
 * @hidden
 */
export let ToolActionInfoDescriptionMetadata = /*@__PURE__*/ (() => {
    class ToolActionInfoDescriptionMetadata extends Base {
        static b(a) {
            if (ToolActionInfoDescriptionMetadata.a == null) {
                ToolActionInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ToolActionInfoDescriptionMetadata.c(ToolActionInfoDescriptionMetadata.a);
            }
            if (a.k(ToolActionInfoDescriptionMetadata.a)) {
                return;
            }
            a.ac(ToolActionInfoDescriptionMetadata.a);
            ToolActionInfoDescriptionMetadata.d(a);
            ToolContextBindingInfoDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__marshalByValue", "Boolean");
            a.item("ParentId", "String");
            a.item("CommandId", "String");
            a.item("CommandArgument", "String");
            a.item("CommandArgumentValueRef", "(w:CommandArgumentValue,wf:CommandArgumentValue)DataRef");
            a.item("PaddingLeft", "Number:double");
            a.item("PaddingRight", "Number:double");
            a.item("PaddingBottom", "Number:double");
            a.item("PaddingTop", "Number:double");
            a.item("Name", "String");
            a.item("Title", "String");
            a.item("Subtitle", "String");
            a.item("IconName", "String");
            a.item("IconCollectionName", "String");
            a.item("IconViewBoxLeft", "Number:double");
            a.item("IconViewBoxTop", "Number:double");
            a.item("IconViewBoxWidth", "Number:double");
            a.item("IconViewBoxHeight", "Number:double");
            a.item("IconWidth", "Number:double");
            a.item("IconHeight", "Number:double");
            a.item("IsDisabled", "Boolean");
            a.item("IsHighlighted", "Boolean");
            a.item("TextColor", "String");
            a.item("DisabledTextColor", "String");
            a.item("CloseOnExecute", "Boolean");
            a.item("Density", "ExportedType:string:ToolActionInfoDensity");
            a.item("Density@names", "Auto;Comfortable;Cosy;Compact;Minimal");
            a.item("Actions", "Array:ToolActionInfoDescription:ToolActionInfo");
            a.item("ContextBindings", "Array:ToolContextBindingInfoDescription:ToolContextBindingInfo");
        }
        static d(a) {
            ToolActionInfoDescriptionMetadata.b(a);
            a.ae("ToolActionInfo", () => new ToolActionInfoDescription());
            a.ad("ToolActionInfo", ToolActionInfoDescriptionMetadata.a);
        }
    }
    ToolActionInfoDescriptionMetadata.$t = /*@__PURE__*/ markType(ToolActionInfoDescriptionMetadata, 'ToolActionInfoDescriptionMetadata');
    ToolActionInfoDescriptionMetadata.a = null;
    return ToolActionInfoDescriptionMetadata;
})();
