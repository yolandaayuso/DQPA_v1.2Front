/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { FormatSpecifierDescriptionMetadata } from "./FormatSpecifierDescriptionMetadata";
import { NumberFormatSpecifierDescription } from "./NumberFormatSpecifierDescription";
/**
 * @hidden
 */
export let NumberFormatSpecifierDescriptionMetadata = /*@__PURE__*/ (() => {
    class NumberFormatSpecifierDescriptionMetadata extends Base {
        static b(a) {
            if (NumberFormatSpecifierDescriptionMetadata.a == null) {
                NumberFormatSpecifierDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                NumberFormatSpecifierDescriptionMetadata.c(NumberFormatSpecifierDescriptionMetadata.a);
            }
            if (a.k(NumberFormatSpecifierDescriptionMetadata.a)) {
                return;
            }
            a.ac(NumberFormatSpecifierDescriptionMetadata.a);
        }
        static c(a) {
            FormatSpecifierDescriptionMetadata.c(a);
            a.item("Locale", "String");
            a.item("CompactDisplay", "String");
            a.item("Currency", "String");
            a.item("CurrencyDisplay", "String");
            a.item("CurrencySign", "String");
            a.item("CurrencyCode", "String");
            a.item("LocaleMatcher", "String");
            a.item("Notation", "String");
            a.item("NumberingSystem", "String");
            a.item("SignDisplay", "String");
            a.item("Style", "String");
            a.item("Unit", "String");
            a.item("UnitDisplay", "String");
            a.item("UseGrouping", "Boolean");
            a.item("MinimumIntegerDigits", "Number:int");
            a.item("MinimumFractionDigits", "Number:int");
            a.item("MaximumFractionDigits", "Number:int");
            a.item("MinimumSignificantDigits", "Number:int");
            a.item("MaximumSignificantDigits", "Number:int");
            NumberFormatSpecifierDescriptionMetadata.e(a);
        }
        static d(a) {
            NumberFormatSpecifierDescriptionMetadata.b(a);
            a.ae("NumberFormatSpecifier", () => new NumberFormatSpecifierDescription());
            a.ad("NumberFormatSpecifier", NumberFormatSpecifierDescriptionMetadata.a);
        }
        static e(a) {
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-core");
            a.item("__importTypesReact", "String:igniteui-react-core");
            a.item("__importTypesAngular", "String:igniteui-angular-core");
            a.item("__skipSuffix", "Boolean");
        }
    }
    NumberFormatSpecifierDescriptionMetadata.$t = /*@__PURE__*/ markType(NumberFormatSpecifierDescriptionMetadata, 'NumberFormatSpecifierDescriptionMetadata');
    NumberFormatSpecifierDescriptionMetadata.a = null;
    return NumberFormatSpecifierDescriptionMetadata;
})();
