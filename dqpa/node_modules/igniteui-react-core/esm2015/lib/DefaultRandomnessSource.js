/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
import { IRandomnessSource_$type } from "./IRandomnessSource";
import { Random } from "./Random";
import { DefaultRandomnessGenerator } from "./DefaultRandomnessGenerator";
/**
 * @hidden
 */
export let DefaultRandomnessSource = /*@__PURE__*/ (() => {
    class DefaultRandomnessSource extends Base {
        constructor(a, ..._rest) {
            super();
            this.a = null;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0: break;
                case 1:
                    {
                        let c = _rest[0];
                        this.a = c;
                    }
                    break;
            }
        }
        getGenerator(a) {
            if (this.a == null) {
                this.a = new Random(0);
            }
            return new DefaultRandomnessGenerator(this.a);
        }
    }
    DefaultRandomnessSource.$t = /*@__PURE__*/ markType(DefaultRandomnessSource, 'DefaultRandomnessSource', Base.$, [IRandomnessSource_$type]);
    return DefaultRandomnessSource;
})();
