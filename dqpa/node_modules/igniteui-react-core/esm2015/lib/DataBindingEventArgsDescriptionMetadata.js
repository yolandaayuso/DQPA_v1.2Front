/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DataBindingEventArgsDescription } from "./DataBindingEventArgsDescription";
/**
 * @hidden
 */
export let DataBindingEventArgsDescriptionMetadata = /*@__PURE__*/ (() => {
    class DataBindingEventArgsDescriptionMetadata extends Base {
        static b(a) {
            if (DataBindingEventArgsDescriptionMetadata.a == null) {
                DataBindingEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                DataBindingEventArgsDescriptionMetadata.c(DataBindingEventArgsDescriptionMetadata.a);
            }
            if (a.k(DataBindingEventArgsDescriptionMetadata.a)) {
                return;
            }
            a.ac(DataBindingEventArgsDescriptionMetadata.a);
        }
        static c(a) {
            a.item("ResolvedValueRef", "(w:ResolvedValue,wf:ResolvedValue)DataRef");
            a.item("RowObjectRef", "(w:RowObject,wf:RowObject)DataRef");
        }
        static d(a) {
            DataBindingEventArgsDescriptionMetadata.b(a);
            a.ae("DataBindingEventArgs", () => new DataBindingEventArgsDescription());
            a.ad("DataBindingEventArgs", DataBindingEventArgsDescriptionMetadata.a);
        }
    }
    DataBindingEventArgsDescriptionMetadata.$t = /*@__PURE__*/ markType(DataBindingEventArgsDescriptionMetadata, 'DataBindingEventArgsDescriptionMetadata');
    DataBindingEventArgsDescriptionMetadata.a = null;
    return DataBindingEventArgsDescriptionMetadata;
})();
