/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { UIElementPropertyAccessor } from "./UIElementPropertyAccessor";
import { Number_$type, markType } from "./type";
import { DoubleCollection } from "./DoubleCollection";
import { stringReplace, stringJoin1 } from "./string";
import { isNaN_ } from "./number";
/**
 * @hidden
 */
export let CssLengthArrayPropertyAccessor = /*@__PURE__*/ (() => {
    class CssLengthArrayPropertyAccessor extends UIElementPropertyAccessor {
        constructor(a) {
            super();
            this.d = null;
            this.d = a;
        }
        b(a) {
            let b = new DoubleCollection();
            let c = a;
            let d = c.getStyleProperty(this.d);
            let e = d.split(' ');
            for (let f = 0; f < e.length; f++) {
                let g = parseFloat(stringReplace(e[f], "px", ""));
                if (isNaN_(g)) {
                    g = 0;
                }
                b.add(g);
            }
            return b;
        }
        c(a, b) {
            let c = a;
            let d = b;
            let e = new Array(d.count);
            for (let f = 0; f < d.count; f++) {
                e[f] = d._inner[f].toString();
            }
            let g = stringJoin1(Number_$type, " ", d);
            c.setStyleProperty(this.d, g);
        }
    }
    CssLengthArrayPropertyAccessor.$t = /*@__PURE__*/ markType(CssLengthArrayPropertyAccessor, 'CssLengthArrayPropertyAccessor', UIElementPropertyAccessor.$);
    return CssLengthArrayPropertyAccessor;
})();
