/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DataContextDescription = /*@__PURE__*/ (() => {
    class DataContextDescription extends Description {
        get_type() {
            return "DataContext";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.o = null;
            this.l = null;
            this.q = null;
            this.n = null;
            this.m = null;
            this.i = 0;
            this.p = null;
        }
        get itemRef() {
            return this.o;
        }
        set itemRef(a) {
            this.o = a;
            this.g("ItemRef");
        }
        get actualItemBrush() {
            return this.l;
        }
        set actualItemBrush(a) {
            this.l = a;
            this.g("ActualItemBrush");
        }
        get outline() {
            return this.q;
        }
        set outline(a) {
            this.q = a;
            this.g("Outline");
        }
        get itemLabelRef() {
            return this.n;
        }
        set itemLabelRef(a) {
            this.n = a;
            this.g("ItemLabelRef");
        }
        get itemBrush() {
            return this.m;
        }
        set itemBrush(a) {
            this.m = a;
            this.g("ItemBrush");
        }
        get thickness() {
            return this.i;
        }
        set thickness(a) {
            this.i = a;
            this.g("Thickness");
        }
        get legendLabelRef() {
            return this.p;
        }
        set legendLabelRef(a) {
            this.p = a;
            this.g("LegendLabelRef");
        }
    }
    DataContextDescription.$t = /*@__PURE__*/ markType(DataContextDescription, 'DataContextDescription', Description.$);
    DataContextDescription.__marshalByValue = true;
    DataContextDescription.__marshalByValueAlias = "DataContext";
    return DataContextDescription;
})();
