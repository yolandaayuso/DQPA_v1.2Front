/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { FilterExpressionVisitor } from "./FilterExpressionVisitor";
import { markType } from "./type";
/**
 * @hidden
 */
export let ContainsPropertyDataSourceFilterExpressionVisitor = /*@__PURE__*/ (() => {
    class ContainsPropertyDataSourceFilterExpressionVisitor extends FilterExpressionVisitor {
        constructor(a) {
            super();
            this.h = null;
            this.f = false;
            this.h = a;
        }
        get contains() {
            return this.f;
        }
        visitPropertyReferenceExpression(a) {
            if (a.isPropertyReference && a.propertyReference == this.h) {
                this.f = true;
            }
        }
    }
    ContainsPropertyDataSourceFilterExpressionVisitor.$t = /*@__PURE__*/ markType(ContainsPropertyDataSourceFilterExpressionVisitor, 'ContainsPropertyDataSourceFilterExpressionVisitor', FilterExpressionVisitor.$);
    return ContainsPropertyDataSourceFilterExpressionVisitor;
})();
