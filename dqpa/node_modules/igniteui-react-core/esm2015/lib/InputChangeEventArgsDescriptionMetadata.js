/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { InputChangeEventArgsDescription } from "./InputChangeEventArgsDescription";
/**
 * @hidden
 */
export let InputChangeEventArgsDescriptionMetadata = /*@__PURE__*/ (() => {
    class InputChangeEventArgsDescriptionMetadata extends Base {
        static b(a) {
            if (InputChangeEventArgsDescriptionMetadata.a == null) {
                InputChangeEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                InputChangeEventArgsDescriptionMetadata.c(InputChangeEventArgsDescriptionMetadata.a);
            }
            if (a.k(InputChangeEventArgsDescriptionMetadata.a)) {
                return;
            }
            a.ac(InputChangeEventArgsDescriptionMetadata.a);
        }
        static c(a) {
            a.item("Value", "String");
            a.item("IsCompositionInProgress", "Boolean");
        }
        static d(a) {
            InputChangeEventArgsDescriptionMetadata.b(a);
            a.ae("InputChangeEventArgs", () => new InputChangeEventArgsDescription());
            a.ad("InputChangeEventArgs", InputChangeEventArgsDescriptionMetadata.a);
        }
    }
    InputChangeEventArgsDescriptionMetadata.$t = /*@__PURE__*/ markType(InputChangeEventArgsDescriptionMetadata, 'InputChangeEventArgsDescriptionMetadata');
    InputChangeEventArgsDescriptionMetadata.a = null;
    return InputChangeEventArgsDescriptionMetadata;
})();
