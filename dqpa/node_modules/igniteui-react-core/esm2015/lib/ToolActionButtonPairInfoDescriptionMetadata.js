/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ToolActionInfoDescriptionMetadata } from "./ToolActionInfoDescriptionMetadata";
import { ToolActionButtonPairInfoDescription } from "./ToolActionButtonPairInfoDescription";
/**
 * @hidden
 */
export let ToolActionButtonPairInfoDescriptionMetadata = /*@__PURE__*/ (() => {
    class ToolActionButtonPairInfoDescriptionMetadata extends Base {
        static b(a) {
            if (ToolActionButtonPairInfoDescriptionMetadata.a == null) {
                ToolActionButtonPairInfoDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ToolActionButtonPairInfoDescriptionMetadata.c(ToolActionButtonPairInfoDescriptionMetadata.a);
            }
            if (a.k(ToolActionButtonPairInfoDescriptionMetadata.a)) {
                return;
            }
            a.ac(ToolActionButtonPairInfoDescriptionMetadata.a);
        }
        static c(a) {
            ToolActionInfoDescriptionMetadata.c(a);
            a.item("LeftTitle", "String");
            a.item("LeftCommandArgument", "String");
            a.item("LeftIconName", "String");
            a.item("LeftIconCollectionName", "String");
            a.item("IsToggleDisabled", "Boolean");
            a.item("LeftIconViewBoxLeft", "Number:double");
            a.item("LeftIconViewBoxTop", "Number:double");
            a.item("LeftIconViewBoxWidth", "Number:double");
            a.item("LeftIconViewBoxHeight", "Number:double");
            a.item("RightTitle", "String");
            a.item("RightCommandArgument", "String");
            a.item("RightIconName", "String");
            a.item("RightIconCollectionName", "String");
            a.item("RightIconViewBoxLeft", "Number:double");
            a.item("RightIconViewBoxTop", "Number:double");
            a.item("RightIconViewBoxWidth", "Number:double");
            a.item("RightIconViewBoxHeight", "Number:double");
        }
        static d(a) {
            ToolActionButtonPairInfoDescriptionMetadata.b(a);
            a.ae("ToolActionButtonPairInfo", () => new ToolActionButtonPairInfoDescription());
            a.ad("ToolActionButtonPairInfo", ToolActionButtonPairInfoDescriptionMetadata.a);
        }
    }
    ToolActionButtonPairInfoDescriptionMetadata.$t = /*@__PURE__*/ markType(ToolActionButtonPairInfoDescriptionMetadata, 'ToolActionButtonPairInfoDescriptionMetadata');
    ToolActionButtonPairInfoDescriptionMetadata.a = null;
    return ToolActionButtonPairInfoDescriptionMetadata;
})();
