/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DoughnutChartDescription = /*@__PURE__*/ (() => {
    class DoughnutChartDescription extends Description {
        get background() {
            return this.z;
        }
        set background(a) {
            this.z = a;
            this.g("Background");
        }
        get_type() {
            return "DoughnutChart";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.z = null;
            this.k = false;
            this.l = false;
            this.j = false;
            this.h = null;
            this.q = 0;
            this.ab = null;
            this.ac = null;
            this.t = 0;
            this.s = 0;
            this.r = 0;
            this.p = 0;
            this.ad = null;
            this.aa = null;
        }
        get allowSliceSelection() {
            return this.k;
        }
        set allowSliceSelection(a) {
            this.k = a;
            this.g("AllowSliceSelection");
        }
        get isSurfaceInteractionDisabled() {
            return this.l;
        }
        set isSurfaceInteractionDisabled(a) {
            this.l = a;
            this.g("IsSurfaceInteractionDisabled");
        }
        get allowSliceExplosion() {
            return this.j;
        }
        set allowSliceExplosion(a) {
            this.j = a;
            this.g("AllowSliceExplosion");
        }
        get series() {
            return this.h;
        }
        set series(a) {
            this.h = a;
            this.g("Series");
        }
        get innerExtent() {
            return this.q;
        }
        set innerExtent(a) {
            this.q = a;
            this.g("InnerExtent");
        }
        get selectedSliceFill() {
            return this.ab;
        }
        set selectedSliceFill(a) {
            this.ab = a;
            this.g("SelectedSliceFill");
        }
        get selectedSliceStroke() {
            return this.ac;
        }
        set selectedSliceStroke(a) {
            this.ac = a;
            this.g("SelectedSliceStroke");
        }
        get selectedSliceStrokeThickness() {
            return this.t;
        }
        set selectedSliceStrokeThickness(a) {
            this.t = a;
            this.g("SelectedSliceStrokeThickness");
        }
        get selectedSliceOpacity() {
            return this.s;
        }
        set selectedSliceOpacity(a) {
            this.s = a;
            this.g("SelectedSliceOpacity");
        }
        get pixelScalingRatio() {
            return this.r;
        }
        set pixelScalingRatio(a) {
            this.r = a;
            this.g("PixelScalingRatio");
        }
        get actualPixelScalingRatio() {
            return this.p;
        }
        set actualPixelScalingRatio(a) {
            this.p = a;
            this.g("ActualPixelScalingRatio");
        }
        get sliceClickRef() {
            return this.ad;
        }
        set sliceClickRef(a) {
            this.ad = a;
            this.g("SliceClickRef");
        }
        get holeDimensionsChangedRef() {
            return this.aa;
        }
        set holeDimensionsChangedRef(a) {
            this.aa = a;
            this.g("HoleDimensionsChangedRef");
        }
    }
    DoughnutChartDescription.$t = /*@__PURE__*/ markType(DoughnutChartDescription, 'DoughnutChartDescription', Description.$);
    return DoughnutChartDescription;
})();
