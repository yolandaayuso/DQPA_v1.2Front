/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GeographicMapImageryDescriptionMetadata } from "./GeographicMapImageryDescriptionMetadata";
import { ImageTilesReadyEventArgsDescriptionMetadata } from "./ImageTilesReadyEventArgsDescriptionMetadata";
import { GeographicShapeSeriesBaseDescriptionMetadata } from "./GeographicShapeSeriesBaseDescriptionMetadata";
import { GeographicTileSeriesDescription } from "./GeographicTileSeriesDescription";
/**
 * @hidden
 */
export let GeographicTileSeriesDescriptionMetadata = /*@__PURE__*/ (() => {
    class GeographicTileSeriesDescriptionMetadata extends Base {
        static b(a) {
            if (GeographicTileSeriesDescriptionMetadata.a == null) {
                GeographicTileSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                GeographicTileSeriesDescriptionMetadata.c(GeographicTileSeriesDescriptionMetadata.a);
            }
            if (a.k(GeographicTileSeriesDescriptionMetadata.a)) {
                return;
            }
            a.ac(GeographicTileSeriesDescriptionMetadata.a);
            GeographicMapImageryDescriptionMetadata.d(a);
            ImageTilesReadyEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            GeographicShapeSeriesBaseDescriptionMetadata.c(a);
            a.item("TileImagery", "ExportedType:GeographicMapImagery");
            a.item("ImageTilesReadyRef", "EventRef::imageTilesReady");
        }
        static d(a) {
            GeographicTileSeriesDescriptionMetadata.b(a);
            a.ae("GeographicTileSeries", () => new GeographicTileSeriesDescription());
            a.ad("GeographicTileSeries", GeographicTileSeriesDescriptionMetadata.a);
        }
    }
    GeographicTileSeriesDescriptionMetadata.$t = /*@__PURE__*/ markType(GeographicTileSeriesDescriptionMetadata, 'GeographicTileSeriesDescriptionMetadata');
    GeographicTileSeriesDescriptionMetadata.a = null;
    return GeographicTileSeriesDescriptionMetadata;
})();
