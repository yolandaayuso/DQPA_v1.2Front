/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ProgressiveLoadStatusEventArgsDescriptionMetadata } from "./ProgressiveLoadStatusEventArgsDescriptionMetadata";
import { GeographicMapSeriesHostDescriptionMetadata } from "./GeographicMapSeriesHostDescriptionMetadata";
import { GeographicHighDensityScatterSeriesDescription } from "./GeographicHighDensityScatterSeriesDescription";
/**
 * @hidden
 */
export let GeographicHighDensityScatterSeriesDescriptionMetadata = /*@__PURE__*/ (() => {
    class GeographicHighDensityScatterSeriesDescriptionMetadata extends Base {
        static b(a) {
            if (GeographicHighDensityScatterSeriesDescriptionMetadata.a == null) {
                GeographicHighDensityScatterSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                GeographicHighDensityScatterSeriesDescriptionMetadata.c(GeographicHighDensityScatterSeriesDescriptionMetadata.a);
            }
            if (a.k(GeographicHighDensityScatterSeriesDescriptionMetadata.a)) {
                return;
            }
            a.ac(GeographicHighDensityScatterSeriesDescriptionMetadata.a);
            ProgressiveLoadStatusEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            GeographicMapSeriesHostDescriptionMetadata.c(a);
            a.item("LatitudeMemberPath", "String");
            a.item("LongitudeMemberPath", "String");
            a.item("UseBruteForce", "Boolean");
            a.item("ProgressiveLoad", "Boolean");
            a.item("HeatMinimum", "Number:double");
            a.item("HeatMaximum", "Number:double");
            a.item("HeatMinimumColor", "Color");
            a.item("HeatMaximumColor", "Color");
            a.item("PointExtent", "Number:int");
            a.item("ProgressiveStatus", "Number:int");
            a.item("ProgressiveLoadStatusChangedRef", "EventRef::progressiveLoadStatusChanged");
        }
        static d(a) {
            GeographicHighDensityScatterSeriesDescriptionMetadata.b(a);
            a.ae("GeographicHighDensityScatterSeries", () => new GeographicHighDensityScatterSeriesDescription());
            a.ad("GeographicHighDensityScatterSeries", GeographicHighDensityScatterSeriesDescriptionMetadata.a);
        }
    }
    GeographicHighDensityScatterSeriesDescriptionMetadata.$t = /*@__PURE__*/ markType(GeographicHighDensityScatterSeriesDescriptionMetadata, 'GeographicHighDensityScatterSeriesDescriptionMetadata');
    GeographicHighDensityScatterSeriesDescriptionMetadata.a = null;
    return GeographicHighDensityScatterSeriesDescriptionMetadata;
})();
