/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CellInfoDescription } from "./CellInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let EditorCellInfoDescription = /*@__PURE__*/ (() => {
    class EditorCellInfoDescription extends CellInfoDescription {
        get_type() {
            return "EditorCellInfo";
        }
        constructor() {
            super();
            this.fn = null;
            this.ft = null;
            this.fz = null;
            this.fy = null;
            this.fx = null;
            this.fv = null;
            this.fw = null;
            this.fl = null;
            this.fu = null;
            this.fq = false;
        }
        get editTarget() {
            return this.fn;
        }
        set editTarget(a) {
            this.fn = a;
            this.g("EditTarget");
        }
        get dataType() {
            return this.ft;
        }
        set dataType(a) {
            this.ft = a;
            this.g("DataType");
        }
        get errorMessage() {
            return this.fz;
        }
        set errorMessage(a) {
            this.fz = a;
            this.g("ErrorMessage");
        }
        get editValueRef() {
            return this.fy;
        }
        set editValueRef(a) {
            this.fy = a;
            this.g("EditValueRef");
        }
        get editorType() {
            return this.fx;
        }
        set editorType(a) {
            this.fx = a;
            this.g("EditorType");
        }
        get editorDataSourceRef() {
            return this.fv;
        }
        set editorDataSourceRef(a) {
            this.fv = a;
            this.g("EditorDataSourceRef");
        }
        get editorTextField() {
            return this.fw;
        }
        set editorTextField(a) {
            this.fw = a;
            this.g("EditorTextField");
        }
        get editorValueField() {
            return this.fl;
        }
        set editorValueField(a) {
            this.fl = a;
            this.g("EditorValueField");
        }
        get dateFormatString() {
            return this.fu;
        }
        set dateFormatString(a) {
            this.fu = a;
            this.g("DateFormatString");
        }
        get showTodayButton() {
            return this.fq;
        }
        set showTodayButton(a) {
            this.fq = a;
            this.g("ShowTodayButton");
        }
    }
    EditorCellInfoDescription.$t = /*@__PURE__*/ markType(EditorCellInfoDescription, 'EditorCellInfoDescription', CellInfoDescription.$);
    EditorCellInfoDescription.__marshalByValue1 = true;
    EditorCellInfoDescription.__marshalByValueAlias1 = "EditorCellModel";
    return EditorCellInfoDescription;
})();
