/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { TextCellInfoDescription } from "./TextCellInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let TextHeaderCellInfoDescription = /*@__PURE__*/ (() => {
    class TextHeaderCellInfoDescription extends TextCellInfoDescription {
        get_type() {
            return "TextHeaderCellInfo";
        }
        constructor() {
            super();
            this.fq = false;
            this.fw = null;
            this.ft = null;
            this.fv = null;
            this.fu = null;
        }
        get isColumnOptionsEnabled() {
            return this.fq;
        }
        set isColumnOptionsEnabled(a) {
            this.fq = a;
            this.g("IsColumnOptionsEnabled");
        }
        get sortIndicatorStyle() {
            return this.fw;
        }
        set sortIndicatorStyle(a) {
            this.fw = a;
            this.g("SortIndicatorStyle");
        }
        get columnOptionsIconAlignment() {
            return this.ft;
        }
        set columnOptionsIconAlignment(a) {
            this.ft = a;
            this.g("ColumnOptionsIconAlignment");
        }
        get columnOptionsIconColor() {
            return this.fv;
        }
        set columnOptionsIconColor(a) {
            this.fv = a;
            this.g("ColumnOptionsIconColor");
        }
        get columnOptionsIconBehavior() {
            return this.fu;
        }
        set columnOptionsIconBehavior(a) {
            this.fu = a;
            this.g("ColumnOptionsIconBehavior");
        }
    }
    TextHeaderCellInfoDescription.$t = /*@__PURE__*/ markType(TextHeaderCellInfoDescription, 'TextHeaderCellInfoDescription', TextCellInfoDescription.$);
    TextHeaderCellInfoDescription.__marshalByValue2 = true;
    TextHeaderCellInfoDescription.__marshalByValueAlias2 = "TextHeaderCellModel";
    return TextHeaderCellInfoDescription;
})();
