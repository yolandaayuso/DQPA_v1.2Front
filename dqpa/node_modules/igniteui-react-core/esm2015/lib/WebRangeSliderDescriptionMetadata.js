/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebRangeSliderValueEventArgsDescriptionMetadata } from "./WebRangeSliderValueEventArgsDescriptionMetadata";
import { WebSliderBaseDescriptionMetadata } from "./WebSliderBaseDescriptionMetadata";
import { WebRangeSliderDescription } from "./WebRangeSliderDescription";
/**
 * @hidden
 */
export let WebRangeSliderDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebRangeSliderDescriptionMetadata extends Base {
        static b(a) {
            if (WebRangeSliderDescriptionMetadata.a == null) {
                WebRangeSliderDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebRangeSliderDescriptionMetadata.c(WebRangeSliderDescriptionMetadata.a);
            }
            if (a.k(WebRangeSliderDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebRangeSliderDescriptionMetadata.a);
            WebRangeSliderValueEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            WebSliderBaseDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:RangeSlider");
            a.item("__tagNameWC", "String:igc-range-slider");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
            a.item("Lower", "Number:double");
            a.item("Upper", "Number:double");
            a.item("ThumbLabelLower", "String");
            a.item("ThumbLabelUpper", "String");
            a.item("InputRef", "EventRef::input");
            a.item("ChangeRef", "EventRef::change");
        }
        static d(a) {
            WebRangeSliderDescriptionMetadata.b(a);
            a.ae("WebRangeSlider", () => new WebRangeSliderDescription());
            a.ad("WebRangeSlider", WebRangeSliderDescriptionMetadata.a);
        }
    }
    WebRangeSliderDescriptionMetadata.$t = /*@__PURE__*/ markType(WebRangeSliderDescriptionMetadata, 'WebRangeSliderDescriptionMetadata');
    WebRangeSliderDescriptionMetadata.a = null;
    return WebRangeSliderDescriptionMetadata;
})();
