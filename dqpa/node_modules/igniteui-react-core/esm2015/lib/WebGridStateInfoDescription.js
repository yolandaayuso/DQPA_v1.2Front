/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebGridStateInfoDescription = /*@__PURE__*/ (() => {
    class WebGridStateInfoDescription extends Description {
        get_type() {
            return "WebGridStateInfo";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.i = null;
            this.y = null;
            this.x = null;
            this.ad = null;
            this.ak = false;
            this.o = null;
            this.ab = null;
            this.h = null;
            this.n = null;
            this.j = null;
            this.m = null;
            this.af = null;
            this.k = null;
            this.l = null;
            this.an = null;
            this.ah = null;
        }
        get columns() {
            return this.i;
        }
        set columns(a) {
            this.i = a;
            this.g("Columns");
        }
        get filtering() {
            return this.y;
        }
        set filtering(a) {
            this.y = a;
            this.g("Filtering");
        }
        get advancedFiltering() {
            return this.x;
        }
        set advancedFiltering(a) {
            this.x = a;
            this.g("AdvancedFiltering");
        }
        get paging() {
            return this.ad;
        }
        set paging(a) {
            this.ad = a;
            this.g("Paging");
        }
        get moving() {
            return this.ak;
        }
        set moving(a) {
            this.ak = a;
            this.g("Moving");
        }
        get sorting() {
            return this.o;
        }
        set sorting(a) {
            this.o = a;
            this.g("Sorting");
        }
        get groupBy() {
            return this.ab;
        }
        set groupBy(a) {
            this.ab = a;
            this.g("GroupBy");
        }
        get cellSelection() {
            return this.h;
        }
        set cellSelection(a) {
            this.h = a;
            this.g("CellSelection");
        }
        get rowSelection() {
            return this.n;
        }
        set rowSelection(a) {
            this.n = a;
            this.g("RowSelection");
        }
        get columnSelection() {
            return this.j;
        }
        set columnSelection(a) {
            this.j = a;
            this.g("ColumnSelection");
        }
        get rowPinning() {
            return this.m;
        }
        set rowPinning(a) {
            this.m = a;
            this.g("RowPinning");
        }
        get pinningConfig() {
            return this.af;
        }
        set pinningConfig(a) {
            this.af = a;
            this.g("PinningConfig");
        }
        get expansion() {
            return this.k;
        }
        set expansion(a) {
            this.k = a;
            this.g("Expansion");
        }
        get rowIslands() {
            return this.l;
        }
        set rowIslands(a) {
            this.l = a;
            this.g("RowIslands");
        }
        get id() {
            return this.an;
        }
        set id(a) {
            this.an = a;
            this.g("Id");
        }
        get pivotConfiguration() {
            return this.ah;
        }
        set pivotConfiguration(a) {
            this.ah = a;
            this.g("PivotConfiguration");
        }
    }
    WebGridStateInfoDescription.$t = /*@__PURE__*/ markType(WebGridStateInfoDescription, 'WebGridStateInfoDescription', Description.$);
    WebGridStateInfoDescription.__marshalByValue = true;
    WebGridStateInfoDescription.__marshalByValueAlias = "GridStateInfo";
    return WebGridStateInfoDescription;
})();
