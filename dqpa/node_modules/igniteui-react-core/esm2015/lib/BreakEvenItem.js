/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
/**
 * @hidden
 */
export let BreakEvenItem = /*@__PURE__*/ (() => {
    class BreakEvenItem extends Base {
        constructor() {
            super(...arguments);
            this._FixedCost = 0;
            this._VariableCost = 0;
            this._SalesRevenue = 0;
            this._MarginalProfit = 0;
            this._Units = 0;
            this._Ratio = 0;
        }
        get FixedCost() {
            return this._FixedCost;
        }
        set FixedCost(a) {
            this._FixedCost = a;
        }
        get VariableCost() {
            return this._VariableCost;
        }
        set VariableCost(a) {
            this._VariableCost = a;
        }
        get SalesRevenue() {
            return this._SalesRevenue;
        }
        set SalesRevenue(a) {
            this._SalesRevenue = a;
        }
        get MarginalProfit() {
            return this._MarginalProfit;
        }
        set MarginalProfit(a) {
            this._MarginalProfit = a;
        }
        get Units() {
            return this._Units;
        }
        set Units(a) {
            this._Units = a;
        }
        get Ratio() {
            return this._Ratio;
        }
        set Ratio(a) {
            this._Ratio = a;
        }
        get ActualProfit() {
            return this.SalesRevenue - this.VariableCost - this.FixedCost;
        }
        get TotalCost() {
            return this.FixedCost + this.VariableCost;
        }
    }
    BreakEvenItem.$t = /*@__PURE__*/ markType(BreakEvenItem, 'BreakEvenItem');
    return BreakEvenItem;
})();
