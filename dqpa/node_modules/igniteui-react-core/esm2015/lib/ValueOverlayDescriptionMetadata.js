/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { SeriesDescriptionMetadata } from "./SeriesDescriptionMetadata";
import { ValueOverlayDescription } from "./ValueOverlayDescription";
/**
 * @hidden
 */
export let ValueOverlayDescriptionMetadata = /*@__PURE__*/ (() => {
    class ValueOverlayDescriptionMetadata extends Base {
        static b(a) {
            if (ValueOverlayDescriptionMetadata.a == null) {
                ValueOverlayDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ValueOverlayDescriptionMetadata.c(ValueOverlayDescriptionMetadata.a);
            }
            if (a.k(ValueOverlayDescriptionMetadata.a)) {
                return;
            }
            a.ac(ValueOverlayDescriptionMetadata.a);
        }
        static c(a) {
            SeriesDescriptionMetadata.c(a);
            a.item("AxisRef", "(w:Axis,wf:Axis)DataRef::object");
            a.item("AxisRef@nameBinding", "true");
            a.item("Value", "Number:double");
            a.item("IsAxisAnnotationEnabled", "Boolean");
            a.item("AxisAnnotationFormatLabelRef", "(w:AxisAnnotationFormatLabel,wf:AxisAnnotationFormatLabel)MethodRef");
            a.item("AxisAnnotationTextColor", "Brush");
            a.item("AxisAnnotationBackground", "Brush");
            a.item("AxisAnnotationBackgroundCornerRadius", "Number:double");
            a.item("AxisAnnotationInterpolatedValuePrecision", "Number:int");
            a.item("AxisAnnotationOutline", "Brush");
            a.item("AxisAnnotationPaddingLeft", "Number:double");
            a.item("AxisAnnotationPaddingTop", "Number:double");
            a.item("AxisAnnotationPaddingRight", "Number:double");
            a.item("AxisAnnotationPaddingBottom", "Number:double");
            a.item("AxisAnnotationStrokeThickness", "Number:double");
        }
        static d(a) {
            ValueOverlayDescriptionMetadata.b(a);
            a.ae("ValueOverlay", () => new ValueOverlayDescription());
            a.ad("ValueOverlay", ValueOverlayDescriptionMetadata.a);
        }
    }
    ValueOverlayDescriptionMetadata.$t = /*@__PURE__*/ markType(ValueOverlayDescriptionMetadata, 'ValueOverlayDescriptionMetadata');
    ValueOverlayDescriptionMetadata.a = null;
    return ValueOverlayDescriptionMetadata;
})();
