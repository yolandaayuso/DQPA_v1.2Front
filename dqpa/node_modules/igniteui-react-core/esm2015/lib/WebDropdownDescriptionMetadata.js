/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { VoidEventArgsDescriptionMetadata } from "./VoidEventArgsDescriptionMetadata";
import { WebDropdownItemComponentEventArgsDescriptionMetadata } from "./WebDropdownItemComponentEventArgsDescriptionMetadata";
import { WebBaseComboBoxLikeDescriptionMetadata } from "./WebBaseComboBoxLikeDescriptionMetadata";
import { WebDropdownDescription } from "./WebDropdownDescription";
/**
 * @hidden
 */
export let WebDropdownDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebDropdownDescriptionMetadata extends Base {
        static b(a) {
            if (WebDropdownDescriptionMetadata.a == null) {
                WebDropdownDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebDropdownDescriptionMetadata.c(WebDropdownDescriptionMetadata.a);
            }
            if (a.k(WebDropdownDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebDropdownDescriptionMetadata.a);
            VoidEventArgsDescriptionMetadata.d(a);
            WebDropdownItemComponentEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            WebBaseComboBoxLikeDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:Dropdown");
            a.item("__tagNameWC", "String:igc-dropdown");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
            a.item("Placement", "ExportedType:string:DropdownPlacement");
            a.item("Placement@names", "Top;TopStart;TopEnd;Bottom;BottomStart;BottomEnd;Right;RightStart;RightEnd;Left;LeftStart;LeftEnd");
            a.item("ScrollStrategy", "ExportedType:string:DropdownScrollStrategy");
            a.item("ScrollStrategy@stringUnion", "WebComponents;React");
            a.item("ScrollStrategy@names", "Scroll;Block;Close");
            a.item("Flip", "Boolean");
            a.item("Distance", "Number:double");
            a.item("SameWidth", "Boolean");
            a.item("OpeningRef", "EventRef::opening");
            a.item("OpenedRef", "EventRef::opened");
            a.item("ClosingRef", "EventRef::closing");
            a.item("ClosedRef", "EventRef::closed");
            a.item("ChangeRef", "EventRef::change");
        }
        static d(a) {
            WebDropdownDescriptionMetadata.b(a);
            a.ae("WebDropdown", () => new WebDropdownDescription());
            a.ad("WebDropdown", WebDropdownDescriptionMetadata.a);
        }
    }
    WebDropdownDescriptionMetadata.$t = /*@__PURE__*/ markType(WebDropdownDescriptionMetadata, 'WebDropdownDescriptionMetadata');
    WebDropdownDescriptionMetadata.a = null;
    return WebDropdownDescriptionMetadata;
})();
