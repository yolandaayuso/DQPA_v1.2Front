/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { GridFilterDialogViewModelDescription } from "./GridFilterDialogViewModelDescription";
/**
 * @hidden
 */
export let GridFilterDialogViewModelDescriptionMetadata = /*@__PURE__*/ (() => {
    class GridFilterDialogViewModelDescriptionMetadata extends Base {
        static b(a) {
            if (GridFilterDialogViewModelDescriptionMetadata.a == null) {
                GridFilterDialogViewModelDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                GridFilterDialogViewModelDescriptionMetadata.c(GridFilterDialogViewModelDescriptionMetadata.a);
            }
            if (a.k(GridFilterDialogViewModelDescriptionMetadata.a)) {
                return;
            }
            a.ac(GridFilterDialogViewModelDescriptionMetadata.a);
        }
        static c(a) {
            a.item("PropertyType", "ExportedType:string:DataSourceSchemaPropertyType");
            a.item("PropertyType@names", "StringValue;IntValue;BooleanValue;LongValue;ShortValue;DoubleValue;DecimalValue;SingleValue;DateTimeValue;DateTimeOffsetValue;ByteValue;ObjectValue");
            a.item("IsTopLevelOr", "Boolean");
            a.item("MaxGroupingLevels", "Number:int");
            a.item("Rows", "Collection:GridFilterDialogViewModelRow:GridFilterDialogViewModelRowCollection:GridFilterDialogViewModelRow");
        }
        static d(a) {
            GridFilterDialogViewModelDescriptionMetadata.b(a);
            a.ae("GridFilterDialogViewModel", () => new GridFilterDialogViewModelDescription());
            a.ad("GridFilterDialogViewModel", GridFilterDialogViewModelDescriptionMetadata.a);
        }
    }
    GridFilterDialogViewModelDescriptionMetadata.$t = /*@__PURE__*/ markType(GridFilterDialogViewModelDescriptionMetadata, 'GridFilterDialogViewModelDescriptionMetadata');
    GridFilterDialogViewModelDescriptionMetadata.a = null;
    return GridFilterDialogViewModelDescriptionMetadata;
})();
