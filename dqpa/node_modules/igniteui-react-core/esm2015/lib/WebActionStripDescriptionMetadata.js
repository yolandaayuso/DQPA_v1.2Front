/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebActionStripResourceStringsDescriptionMetadata } from "./WebActionStripResourceStringsDescriptionMetadata";
import { WebActionStripDescription } from "./WebActionStripDescription";
/**
 * @hidden
 */
export let WebActionStripDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebActionStripDescriptionMetadata extends Base {
        static b(a) {
            if (WebActionStripDescriptionMetadata.a == null) {
                WebActionStripDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebActionStripDescriptionMetadata.c(WebActionStripDescriptionMetadata.a);
            }
            if (a.k(WebActionStripDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebActionStripDescriptionMetadata.a);
            WebActionStripResourceStringsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:ActionStrip");
            a.item("__tagNameWC", "String:igc-action-strip");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("__portalChildrenWC", "Boolean");
            a.item("__manageCollectionInMarkup", "Boolean");
            a.item("__manageItemInMarkup", "Boolean");
            a.item("ActionButtons", "Collection:WebGridActionsBaseDirective:GridActionsBaseDirectiveCollection:WebGridActionsBaseDirective");
            a.item("Hidden", "Boolean");
            a.item("ResourceStrings", "ExportedType:WebActionStripResourceStrings");
            a.item("Name", "String");
        }
        static d(a) {
            WebActionStripDescriptionMetadata.b(a);
            a.ae("WebActionStrip", () => new WebActionStripDescription());
            a.ad("WebActionStrip", WebActionStripDescriptionMetadata.a);
        }
    }
    WebActionStripDescriptionMetadata.$t = /*@__PURE__*/ markType(WebActionStripDescriptionMetadata, 'WebActionStripDescriptionMetadata');
    WebActionStripDescriptionMetadata.a = null;
    return WebActionStripDescriptionMetadata;
})();
