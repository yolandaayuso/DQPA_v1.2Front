/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let ComboEditorDescription = /*@__PURE__*/ (() => {
    class ComboEditorDescription extends Description {
        get_type() {
            return "ComboEditor";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.j = null;
            this.cx = null;
            this.cj = null;
            this.cy = null;
            this.ck = null;
            this.cz = null;
            this.cl = null;
            this.at = 0;
            this.ab = 0;
            this.au = 0;
            this.av = 0;
            this.aw = 0;
            this.ax = 0;
            this.ac = 0;
            this.ad = 0;
            this.ae = 0;
            this.af = 0;
            this.az = 0;
            this.ay = 0;
            this.a0 = 0;
            this.a1 = 0;
            this.ah = 0;
            this.ag = 0;
            this.ai = 0;
            this.aj = 0;
            this.i = null;
            this.c3 = null;
            this.cm = null;
            this.r = false;
            this.c4 = null;
            this.cn = null;
            this.a2 = 0;
            this.ak = 0;
            this.c5 = null;
            this.co = null;
            this.a3 = 0;
            this.al = 0;
            this.a4 = 0;
            this.am = 0;
            this.da = null;
            this.cp = null;
            this.a6 = 0;
            this.an = 0;
            this.a7 = 0;
            this.ao = 0;
            this.c2 = null;
            this.dc = null;
            this.dg = null;
            this.cq = null;
            this.dd = null;
            this.a8 = 0;
            this.de = null;
            this.df = null;
            this.p = false;
            this.di = null;
            this.cr = null;
            this.dj = null;
            this.cs = null;
            this.dn = null;
            this.ct = null;
            this.dk = null;
            this.a9 = 0;
            this.dl = null;
            this.dm = null;
            this.dp = null;
            this.dt = null;
            this.cu = null;
            this.c6 = null;
            this.a5 = 0;
            this.c7 = null;
            this.c8 = null;
            this.dw = null;
            this.cv = null;
            this.ba = 0;
            this.ap = 0;
            this.dx = null;
            this.cw = null;
            this.bb = 0;
            this.aq = 0;
            this.bc = 0;
            this.ar = 0;
            this.bd = 0;
            this.as = 0;
            this.q = false;
            this.du = null;
            this.dr = null;
            this.k = null;
            this.h = null;
            this.ch = null;
            this.s = false;
            this.t = false;
            this.u = false;
            this.c9 = null;
            this.dh = null;
            this.dv = null;
            this.dq = null;
            this.db = null;
            this.c0 = null;
            this.c1 = null;
            this.ds = null;
            this.dy = null;
        }
        get fields() {
            return this.j;
        }
        set fields(a) {
            this.j = a;
            this.g("Fields");
        }
        get backgroundColor() {
            return this.cx;
        }
        set backgroundColor(a) {
            this.cx = a;
            this.g("BackgroundColor");
        }
        get actualBackgroundColor() {
            return this.cj;
        }
        set actualBackgroundColor(a) {
            this.cj = a;
            this.g("ActualBackgroundColor");
        }
        get baseTheme() {
            return this.cy;
        }
        set baseTheme(a) {
            this.cy = a;
            this.g("BaseTheme");
        }
        get actualBaseTheme() {
            return this.ck;
        }
        set actualBaseTheme(a) {
            this.ck = a;
            this.g("ActualBaseTheme");
        }
        get borderColor() {
            return this.cz;
        }
        set borderColor(a) {
            this.cz = a;
            this.g("BorderColor");
        }
        get actualBorderColor() {
            return this.cl;
        }
        set actualBorderColor(a) {
            this.cl = a;
            this.g("ActualBorderColor");
        }
        get borderWidth() {
            return this.at;
        }
        set borderWidth(a) {
            this.at = a;
            this.g("BorderWidth");
        }
        get actualBorderWidth() {
            return this.ab;
        }
        set actualBorderWidth(a) {
            this.ab = a;
            this.g("ActualBorderWidth");
        }
        get contentPaddingBottom() {
            return this.au;
        }
        set contentPaddingBottom(a) {
            this.au = a;
            this.g("ContentPaddingBottom");
        }
        get contentPaddingLeft() {
            return this.av;
        }
        set contentPaddingLeft(a) {
            this.av = a;
            this.g("ContentPaddingLeft");
        }
        get contentPaddingRight() {
            return this.aw;
        }
        set contentPaddingRight(a) {
            this.aw = a;
            this.g("ContentPaddingRight");
        }
        get contentPaddingTop() {
            return this.ax;
        }
        set contentPaddingTop(a) {
            this.ax = a;
            this.g("ContentPaddingTop");
        }
        get actualContentPaddingBottom() {
            return this.ac;
        }
        set actualContentPaddingBottom(a) {
            this.ac = a;
            this.g("ActualContentPaddingBottom");
        }
        get actualContentPaddingLeft() {
            return this.ad;
        }
        set actualContentPaddingLeft(a) {
            this.ad = a;
            this.g("ActualContentPaddingLeft");
        }
        get actualContentPaddingRight() {
            return this.ae;
        }
        set actualContentPaddingRight(a) {
            this.ae = a;
            this.g("ActualContentPaddingRight");
        }
        get actualContentPaddingTop() {
            return this.af;
        }
        set actualContentPaddingTop(a) {
            this.af = a;
            this.g("ActualContentPaddingTop");
        }
        get cornerRadiusBottomRight() {
            return this.az;
        }
        set cornerRadiusBottomRight(a) {
            this.az = a;
            this.g("CornerRadiusBottomRight");
        }
        get cornerRadiusBottomLeft() {
            return this.ay;
        }
        set cornerRadiusBottomLeft(a) {
            this.ay = a;
            this.g("CornerRadiusBottomLeft");
        }
        get cornerRadiusTopLeft() {
            return this.a0;
        }
        set cornerRadiusTopLeft(a) {
            this.a0 = a;
            this.g("CornerRadiusTopLeft");
        }
        get cornerRadiusTopRight() {
            return this.a1;
        }
        set cornerRadiusTopRight(a) {
            this.a1 = a;
            this.g("CornerRadiusTopRight");
        }
        get actualCornerRadiusBottomRight() {
            return this.ah;
        }
        set actualCornerRadiusBottomRight(a) {
            this.ah = a;
            this.g("ActualCornerRadiusBottomRight");
        }
        get actualCornerRadiusBottomLeft() {
            return this.ag;
        }
        set actualCornerRadiusBottomLeft(a) {
            this.ag = a;
            this.g("ActualCornerRadiusBottomLeft");
        }
        get actualCornerRadiusTopLeft() {
            return this.ai;
        }
        set actualCornerRadiusTopLeft(a) {
            this.ai = a;
            this.g("ActualCornerRadiusTopLeft");
        }
        get actualCornerRadiusTopRight() {
            return this.aj;
        }
        set actualCornerRadiusTopRight(a) {
            this.aj = a;
            this.g("ActualCornerRadiusTopRight");
        }
        get dataSourceDesiredProperties() {
            return this.i;
        }
        set dataSourceDesiredProperties(a) {
            this.i = a;
            this.g("DataSourceDesiredProperties");
        }
        get density() {
            return this.c3;
        }
        set density(a) {
            this.c3 = a;
            this.g("Density");
        }
        get actualDensity() {
            return this.cm;
        }
        set actualDensity(a) {
            this.cm = a;
            this.g("ActualDensity");
        }
        get dropDownButtonVisible() {
            return this.r;
        }
        set dropDownButtonVisible(a) {
            this.r = a;
            this.g("DropDownButtonVisible");
        }
        get focusBorderColor() {
            return this.c4;
        }
        set focusBorderColor(a) {
            this.c4 = a;
            this.g("FocusBorderColor");
        }
        get actualFocusBorderColor() {
            return this.cn;
        }
        set actualFocusBorderColor(a) {
            this.cn = a;
            this.g("ActualFocusBorderColor");
        }
        get focusBorderWidth() {
            return this.a2;
        }
        set focusBorderWidth(a) {
            this.a2 = a;
            this.g("FocusBorderWidth");
        }
        get actualFocusBorderWidth() {
            return this.ak;
        }
        set actualFocusBorderWidth(a) {
            this.ak = a;
            this.g("ActualFocusBorderWidth");
        }
        get focusUnderlineColor() {
            return this.c5;
        }
        set focusUnderlineColor(a) {
            this.c5 = a;
            this.g("FocusUnderlineColor");
        }
        get actualFocusUnderlineColor() {
            return this.co;
        }
        set actualFocusUnderlineColor(a) {
            this.co = a;
            this.g("ActualFocusUnderlineColor");
        }
        get focusUnderlineOpacity() {
            return this.a3;
        }
        set focusUnderlineOpacity(a) {
            this.a3 = a;
            this.g("FocusUnderlineOpacity");
        }
        get actualFocusUnderlineOpacity() {
            return this.al;
        }
        set actualFocusUnderlineOpacity(a) {
            this.al = a;
            this.g("ActualFocusUnderlineOpacity");
        }
        get focusUnderlineRippleOpacity() {
            return this.a4;
        }
        set focusUnderlineRippleOpacity(a) {
            this.a4 = a;
            this.g("FocusUnderlineRippleOpacity");
        }
        get actualFocusUnderlineRippleOpacity() {
            return this.am;
        }
        set actualFocusUnderlineRippleOpacity(a) {
            this.am = a;
            this.g("ActualFocusUnderlineRippleOpacity");
        }
        get hoverUnderlineColor() {
            return this.da;
        }
        set hoverUnderlineColor(a) {
            this.da = a;
            this.g("HoverUnderlineColor");
        }
        get actualHoverUnderlineColor() {
            return this.cp;
        }
        set actualHoverUnderlineColor(a) {
            this.cp = a;
            this.g("ActualHoverUnderlineColor");
        }
        get hoverUnderlineOpacity() {
            return this.a6;
        }
        set hoverUnderlineOpacity(a) {
            this.a6 = a;
            this.g("HoverUnderlineOpacity");
        }
        get actualHoverUnderlineOpacity() {
            return this.an;
        }
        set actualHoverUnderlineOpacity(a) {
            this.an = a;
            this.g("ActualHoverUnderlineOpacity");
        }
        get hoverUnderlineWidth() {
            return this.a7;
        }
        set hoverUnderlineWidth(a) {
            this.a7 = a;
            this.g("HoverUnderlineWidth");
        }
        get actualHoverUnderlineWidth() {
            return this.ao;
        }
        set actualHoverUnderlineWidth(a) {
            this.ao = a;
            this.g("ActualHoverUnderlineWidth");
        }
        get dataSourceRef() {
            return this.c2;
        }
        set dataSourceRef(a) {
            this.c2 = a;
            this.g("DataSourceRef");
        }
        get label() {
            return this.dc;
        }
        set label(a) {
            this.dc = a;
            this.g("Label");
        }
        get labelTextColor() {
            return this.dg;
        }
        set labelTextColor(a) {
            this.dg = a;
            this.g("LabelTextColor");
        }
        get actualLabelTextColor() {
            return this.cq;
        }
        set actualLabelTextColor(a) {
            this.cq = a;
            this.g("ActualLabelTextColor");
        }
        get labelFontFamily() {
            return this.dd;
        }
        set labelFontFamily(a) {
            this.dd = a;
            this.g("LabelFontFamily");
        }
        get labelFontSize() {
            return this.a8;
        }
        set labelFontSize(a) {
            this.a8 = a;
            this.g("LabelFontSize");
        }
        get labelFontStyle() {
            return this.de;
        }
        set labelFontStyle(a) {
            this.de = a;
            this.g("LabelFontStyle");
        }
        get labelFontWeight() {
            return this.df;
        }
        set labelFontWeight(a) {
            this.df = a;
            this.g("LabelFontWeight");
        }
        get actualLabelVisible() {
            return this.p;
        }
        set actualLabelVisible(a) {
            this.p = a;
            this.g("ActualLabelVisible");
        }
        get noMatchesFoundLabel() {
            return this.di;
        }
        set noMatchesFoundLabel(a) {
            this.di = a;
            this.g("NoMatchesFoundLabel");
        }
        get actualNoMatchesFoundLabel() {
            return this.cr;
        }
        set actualNoMatchesFoundLabel(a) {
            this.cr = a;
            this.g("ActualNoMatchesFoundLabel");
        }
        get noMatchesFoundLabelBackgroundColor() {
            return this.dj;
        }
        set noMatchesFoundLabelBackgroundColor(a) {
            this.dj = a;
            this.g("NoMatchesFoundLabelBackgroundColor");
        }
        get actualNoMatchesFoundLabelBackgroundColor() {
            return this.cs;
        }
        set actualNoMatchesFoundLabelBackgroundColor(a) {
            this.cs = a;
            this.g("ActualNoMatchesFoundLabelBackgroundColor");
        }
        get noMatchesFoundLabelTextColor() {
            return this.dn;
        }
        set noMatchesFoundLabelTextColor(a) {
            this.dn = a;
            this.g("NoMatchesFoundLabelTextColor");
        }
        get actualNoMatchesFoundLabelTextColor() {
            return this.ct;
        }
        set actualNoMatchesFoundLabelTextColor(a) {
            this.ct = a;
            this.g("ActualNoMatchesFoundLabelTextColor");
        }
        get noMatchesFoundLabelFontFamily() {
            return this.dk;
        }
        set noMatchesFoundLabelFontFamily(a) {
            this.dk = a;
            this.g("NoMatchesFoundLabelFontFamily");
        }
        get noMatchesFoundLabelFontSize() {
            return this.a9;
        }
        set noMatchesFoundLabelFontSize(a) {
            this.a9 = a;
            this.g("NoMatchesFoundLabelFontSize");
        }
        get noMatchesFoundLabelFontStyle() {
            return this.dl;
        }
        set noMatchesFoundLabelFontStyle(a) {
            this.dl = a;
            this.g("NoMatchesFoundLabelFontStyle");
        }
        get noMatchesFoundLabelFontWeight() {
            return this.dm;
        }
        set noMatchesFoundLabelFontWeight(a) {
            this.dm = a;
            this.g("NoMatchesFoundLabelFontWeight");
        }
        get placeholder() {
            return this.dp;
        }
        set placeholder(a) {
            this.dp = a;
            this.g("Placeholder");
        }
        get textColor() {
            return this.dt;
        }
        set textColor(a) {
            this.dt = a;
            this.g("TextColor");
        }
        get actualTextColor() {
            return this.cu;
        }
        set actualTextColor(a) {
            this.cu = a;
            this.g("ActualTextColor");
        }
        get fontFamily() {
            return this.c6;
        }
        set fontFamily(a) {
            this.c6 = a;
            this.g("FontFamily");
        }
        get fontSize() {
            return this.a5;
        }
        set fontSize(a) {
            this.a5 = a;
            this.g("FontSize");
        }
        get fontStyle() {
            return this.c7;
        }
        set fontStyle(a) {
            this.c7 = a;
            this.g("FontStyle");
        }
        get fontWeight() {
            return this.c8;
        }
        set fontWeight(a) {
            this.c8 = a;
            this.g("FontWeight");
        }
        get underlineColor() {
            return this.dw;
        }
        set underlineColor(a) {
            this.dw = a;
            this.g("UnderlineColor");
        }
        get actualUnderlineColor() {
            return this.cv;
        }
        set actualUnderlineColor(a) {
            this.cv = a;
            this.g("ActualUnderlineColor");
        }
        get underlineOpacity() {
            return this.ba;
        }
        set underlineOpacity(a) {
            this.ba = a;
            this.g("UnderlineOpacity");
        }
        get actualUnderlineOpacity() {
            return this.ap;
        }
        set actualUnderlineOpacity(a) {
            this.ap = a;
            this.g("ActualUnderlineOpacity");
        }
        get underlineRippleColor() {
            return this.dx;
        }
        set underlineRippleColor(a) {
            this.dx = a;
            this.g("UnderlineRippleColor");
        }
        get actualUnderlineRippleColor() {
            return this.cw;
        }
        set actualUnderlineRippleColor(a) {
            this.cw = a;
            this.g("ActualUnderlineRippleColor");
        }
        get underlineRippleOpacity() {
            return this.bb;
        }
        set underlineRippleOpacity(a) {
            this.bb = a;
            this.g("UnderlineRippleOpacity");
        }
        get actualUnderlineRippleOpacity() {
            return this.aq;
        }
        set actualUnderlineRippleOpacity(a) {
            this.aq = a;
            this.g("ActualUnderlineRippleOpacity");
        }
        get underlineRippleWidth() {
            return this.bc;
        }
        set underlineRippleWidth(a) {
            this.bc = a;
            this.g("UnderlineRippleWidth");
        }
        get actualUnderlineRippleWidth() {
            return this.ar;
        }
        set actualUnderlineRippleWidth(a) {
            this.ar = a;
            this.g("ActualUnderlineRippleWidth");
        }
        get underlineWidth() {
            return this.bd;
        }
        set underlineWidth(a) {
            this.bd = a;
            this.g("UnderlineWidth");
        }
        get actualUnderlineWidth() {
            return this.as;
        }
        set actualUnderlineWidth(a) {
            this.as = a;
            this.g("ActualUnderlineWidth");
        }
        get allowFilter() {
            return this.q;
        }
        set allowFilter(a) {
            this.q = a;
            this.g("AllowFilter");
        }
        get textField() {
            return this.du;
        }
        set textField(a) {
            this.du = a;
            this.g("TextField");
        }
        get text() {
            return this.dr;
        }
        set text(a) {
            this.dr = a;
            this.g("Text");
        }
        get valueField() {
            return this.k;
        }
        set valueField(a) {
            this.k = a;
            this.g("ValueField");
        }
        get actualValueField() {
            return this.h;
        }
        set actualValueField(a) {
            this.h = a;
            this.g("ActualValueField");
        }
        get value() {
            return this.ch;
        }
        set value(a) {
            this.ch = a;
            this.g("Value");
        }
        get isFixed() {
            return this.s;
        }
        set isFixed(a) {
            this.s = a;
            this.g("IsFixed");
        }
        get openAsChild() {
            return this.t;
        }
        set openAsChild(a) {
            this.t = a;
            this.g("OpenAsChild");
        }
        get useTopLayer() {
            return this.u;
        }
        set useTopLayer(a) {
            this.u = a;
            this.g("UseTopLayer");
        }
        get gotFocusRef() {
            return this.c9;
        }
        set gotFocusRef(a) {
            this.c9 = a;
            this.g("GotFocusRef");
        }
        get lostFocusRef() {
            return this.dh;
        }
        set lostFocusRef(a) {
            this.dh = a;
            this.g("LostFocusRef");
        }
        get textValueChangedRef() {
            return this.dv;
        }
        set textValueChangedRef(a) {
            this.dv = a;
            this.g("TextValueChangedRef");
        }
        get selectedValueChangedRef() {
            return this.dq;
        }
        set selectedValueChangedRef(a) {
            this.dq = a;
            this.g("SelectedValueChangedRef");
        }
        get keyDownRef() {
            return this.db;
        }
        set keyDownRef(a) {
            this.db = a;
            this.g("KeyDownRef");
        }
        get changeRef() {
            return this.c0;
        }
        set changeRef(a) {
            this.c0 = a;
            this.g("ChangeRef");
        }
        get changingRef() {
            return this.c1;
        }
        set changingRef(a) {
            this.c1 = a;
            this.g("ChangingRef");
        }
        get textChangeRef() {
            return this.ds;
        }
        set textChangeRef(a) {
            this.ds = a;
            this.g("TextChangeRef");
        }
        get valueChangeRef() {
            return this.dy;
        }
        set valueChangeRef(a) {
            this.dy = a;
            this.g("ValueChangeRef");
        }
    }
    ComboEditorDescription.$t = /*@__PURE__*/ markType(ComboEditorDescription, 'ComboEditorDescription', Description.$);
    return ComboEditorDescription;
})();
