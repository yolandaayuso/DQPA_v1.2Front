/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { WebDockManagerPaneDescription } from "./WebDockManagerPaneDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebTabGroupPaneDescription = /*@__PURE__*/ (() => {
    class WebTabGroupPaneDescription extends WebDockManagerPaneDescription {
        get_type() {
            return "WebTabGroupPane";
        }
        constructor() {
            super();
            this.y = null;
            this.z = null;
            this.m = null;
            this.u = 0;
            this.t = 0;
            this.p = false;
            this.q = false;
        }
        get id() {
            return this.y;
        }
        set id(a) {
            this.y = a;
            this.g("Id");
        }
        get paneType() {
            return this.z;
        }
        set paneType(a) {
            this.z = a;
            this.g("PaneType");
        }
        get panes() {
            return this.m;
        }
        set panes(a) {
            this.m = a;
            this.g("Panes");
        }
        get size() {
            return this.u;
        }
        set size(a) {
            this.u = a;
            this.g("Size");
        }
        get selectedIndex() {
            return this.t;
        }
        set selectedIndex(a) {
            this.t = a;
            this.g("SelectedIndex");
        }
        get allowEmpty() {
            return this.p;
        }
        set allowEmpty(a) {
            this.p = a;
            this.g("AllowEmpty");
        }
        get isMaximized() {
            return this.q;
        }
        set isMaximized(a) {
            this.q = a;
            this.g("IsMaximized");
        }
    }
    WebTabGroupPaneDescription.$t = /*@__PURE__*/ markType(WebTabGroupPaneDescription, 'WebTabGroupPaneDescription', WebDockManagerPaneDescription.$);
    WebTabGroupPaneDescription.__marshalByValue1 = true;
    WebTabGroupPaneDescription.__marshalByValueAlias1 = "TabGroupPane";
    return WebTabGroupPaneDescription;
})();
