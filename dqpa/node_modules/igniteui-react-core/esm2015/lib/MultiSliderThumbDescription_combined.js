/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let MultiSliderThumbDescription = /*@__PURE__*/ (() => {
    class MultiSliderThumbDescription extends Description {
        get_type() {
            return "MultiSliderThumb";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.j = 0;
            this.m = null;
            this.h = null;
            this.l = null;
        }
        get value() {
            return this.j;
        }
        set value(a) {
            this.j = a;
            this.g("Value");
        }
        get rangePosition() {
            return this.m;
        }
        set rangePosition(a) {
            this.m = a;
            this.g("RangePosition");
        }
        get range() {
            return this.h;
        }
        set range(a) {
            this.h = a;
            this.g("Range");
        }
        get propertyUpdatedRef() {
            return this.l;
        }
        set propertyUpdatedRef(a) {
            this.l = a;
            this.g("PropertyUpdatedRef");
        }
    }
    MultiSliderThumbDescription.$t = /*@__PURE__*/ markType(MultiSliderThumbDescription, 'MultiSliderThumbDescription', Description.$);
    return MultiSliderThumbDescription;
})();
/**
 * @hidden
 */
export let MultiSliderTrackThumbRangeDescription = /*@__PURE__*/ (() => {
    class MultiSliderTrackThumbRangeDescription extends Description {
        get_type() {
            return "MultiSliderTrackThumbRange";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.n = 0;
            this.o = 0;
            this.m = 0;
            this.l = 0;
            this.i = null;
            this.h = null;
        }
        get position() {
            return this.n;
        }
        set position(a) {
            this.n = a;
            this.g("Position");
        }
        get width() {
            return this.o;
        }
        set width(a) {
            this.o = a;
            this.g("Width");
        }
        get minWidth() {
            return this.m;
        }
        set minWidth(a) {
            this.m = a;
            this.g("MinWidth");
        }
        get maxWidth() {
            return this.l;
        }
        set maxWidth(a) {
            this.l = a;
            this.g("MaxWidth");
        }
        get lowerThumb() {
            return this.i;
        }
        set lowerThumb(a) {
            this.i = a;
            this.g("LowerThumb");
        }
        get higherThumb() {
            return this.h;
        }
        set higherThumb(a) {
            this.h = a;
            this.g("HigherThumb");
        }
    }
    MultiSliderTrackThumbRangeDescription.$t = /*@__PURE__*/ markType(MultiSliderTrackThumbRangeDescription, 'MultiSliderTrackThumbRangeDescription', Description.$);
    return MultiSliderTrackThumbRangeDescription;
})();
