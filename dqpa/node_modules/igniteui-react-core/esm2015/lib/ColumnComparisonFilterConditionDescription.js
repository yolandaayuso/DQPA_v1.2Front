/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ColumnFilterConditionDescription } from "./ColumnFilterConditionDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ColumnComparisonFilterConditionDescription = /*@__PURE__*/ (() => {
    class ColumnComparisonFilterConditionDescription extends ColumnFilterConditionDescription {
        get_type() {
            return "ColumnComparisonFilterCondition";
        }
        constructor() {
            super();
            this.k = null;
            this.l = null;
            this.i = false;
        }
        get operator() {
            return this.k;
        }
        set operator(a) {
            this.k = a;
            this.g("Operator");
        }
        get valueRef() {
            return this.l;
        }
        set valueRef(a) {
            this.l = a;
            this.g("ValueRef");
        }
        get isCaseSensitive() {
            return this.i;
        }
        set isCaseSensitive(a) {
            this.i = a;
            this.g("IsCaseSensitive");
        }
    }
    ColumnComparisonFilterConditionDescription.$t = /*@__PURE__*/ markType(ColumnComparisonFilterConditionDescription, 'ColumnComparisonFilterConditionDescription', ColumnFilterConditionDescription.$);
    return ColumnComparisonFilterConditionDescription;
})();
