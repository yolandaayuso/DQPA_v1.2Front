/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebOverlaySettingsDescriptionMetadata } from "./WebOverlaySettingsDescriptionMetadata";
import { WebGridToolbarBaseActionDescriptionMetadata } from "./WebGridToolbarBaseActionDescriptionMetadata";
import { WebGridToolbarAdvancedFilteringDescription } from "./WebGridToolbarAdvancedFilteringDescription";
/**
 * @hidden
 */
export let WebGridToolbarAdvancedFilteringDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebGridToolbarAdvancedFilteringDescriptionMetadata extends Base {
        static b(a) {
            if (WebGridToolbarAdvancedFilteringDescriptionMetadata.a == null) {
                WebGridToolbarAdvancedFilteringDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebGridToolbarAdvancedFilteringDescriptionMetadata.c(WebGridToolbarAdvancedFilteringDescriptionMetadata.a);
            }
            if (a.k(WebGridToolbarAdvancedFilteringDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebGridToolbarAdvancedFilteringDescriptionMetadata.a);
            WebOverlaySettingsDescriptionMetadata.d(a);
        }
        static c(a) {
            WebGridToolbarBaseActionDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:GridToolbarAdvancedFiltering");
            a.item("__tagNameWC", "String:igc-grid-toolbar-advanced-filtering");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("__portalChildrenWC", "Boolean");
            a.item("__manageItemInMarkup", "Boolean");
            a.item("OverlaySettings", "ExportedType:WebOverlaySettings");
            a.item("Name", "String");
        }
        static d(a) {
            WebGridToolbarAdvancedFilteringDescriptionMetadata.b(a);
            a.ae("WebGridToolbarAdvancedFiltering", () => new WebGridToolbarAdvancedFilteringDescription());
            a.ad("WebGridToolbarAdvancedFiltering", WebGridToolbarAdvancedFilteringDescriptionMetadata.a);
        }
    }
    WebGridToolbarAdvancedFilteringDescriptionMetadata.$t = /*@__PURE__*/ markType(WebGridToolbarAdvancedFilteringDescriptionMetadata, 'WebGridToolbarAdvancedFilteringDescriptionMetadata');
    WebGridToolbarAdvancedFilteringDescriptionMetadata.a = null;
    return WebGridToolbarAdvancedFilteringDescriptionMetadata;
})();
