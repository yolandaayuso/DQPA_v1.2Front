/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPaneDragActionDescriptionMetadata } from "./WebPaneDragActionDescriptionMetadata";
import { WebMoveTabActionDescription } from "./WebMoveTabActionDescription";
/**
 * @hidden
 */
export let WebMoveTabActionDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebMoveTabActionDescriptionMetadata extends Base {
        static b(a) {
            if (WebMoveTabActionDescriptionMetadata.a == null) {
                WebMoveTabActionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebMoveTabActionDescriptionMetadata.c(WebMoveTabActionDescriptionMetadata.a);
            }
            if (a.k(WebMoveTabActionDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebMoveTabActionDescriptionMetadata.a);
        }
        static c(a) {
            WebPaneDragActionDescriptionMetadata.c(a);
            a.item("__qualifiedNameTS", "String:MoveTabAction");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
            a.item("__skipSuffix", "Boolean");
            a.item("ActionType", "(wc:Type)ExportedType:string:PaneDragActionType");
            a.item("ActionType@names", "FloatPane;MoveFloatingPane;DockPane;MoveTab");
            a.item("OldIndex", "Number:double");
            a.item("NewIndex", "Number:double");
        }
        static d(a) {
            WebMoveTabActionDescriptionMetadata.b(a);
            a.ae("WebMoveTabAction", () => new WebMoveTabActionDescription());
            a.ad("WebMoveTabAction", WebMoveTabActionDescriptionMetadata.a);
        }
    }
    WebMoveTabActionDescriptionMetadata.$t = /*@__PURE__*/ markType(WebMoveTabActionDescriptionMetadata, 'WebMoveTabActionDescriptionMetadata');
    WebMoveTabActionDescriptionMetadata.a = null;
    return WebMoveTabActionDescriptionMetadata;
})();
