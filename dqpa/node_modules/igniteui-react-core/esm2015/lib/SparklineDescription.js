/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let SparklineDescription = /*@__PURE__*/ (() => {
    class SparklineDescription extends Description {
        get_type() {
            return "Sparkline";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.as = null;
            this.bc = null;
            this.ba = null;
            this.bd = null;
            this.av = null;
            this.a6 = null;
            this.az = null;
            this.a8 = null;
            this.bh = null;
            this.a1 = null;
            this.bl = null;
            this.bf = null;
            this.a3 = null;
            this.bn = null;
            this.bb = null;
            this.be = null;
            this.aw = null;
            this.a7 = null;
            this.a9 = null;
            this.a0 = null;
            this.bg = null;
            this.l = false;
            this.t = 0;
            this.o = 0;
            this.q = 0;
            this.p = 0;
            this.s = 0;
            this.w = 0;
            this.r = 0;
            this.v = 0;
            this.u = 0;
            this.at = null;
            this.bk = null;
            this.a5 = null;
            this.bi = null;
            this.ap = 0;
            this.aa = 0;
            this.y = 0;
            this.x = 0;
            this.au = null;
            this.bj = null;
            this.bm = null;
            this.a2 = null;
            this.ax = null;
            this.a4 = null;
            this.h = null;
            this.bo = null;
            this.i = null;
            this.z = 0;
            this.n = 0;
            this.bp = null;
            this.ay = null;
            this.ar = null;
        }
        get brush() {
            return this.as;
        }
        set brush(a) {
            this.as = a;
            this.g("Brush");
        }
        get negativeBrush() {
            return this.bc;
        }
        set negativeBrush(a) {
            this.bc = a;
            this.g("NegativeBrush");
        }
        get markerBrush() {
            return this.ba;
        }
        set markerBrush(a) {
            this.ba = a;
            this.g("MarkerBrush");
        }
        get negativeMarkerBrush() {
            return this.bd;
        }
        set negativeMarkerBrush(a) {
            this.bd = a;
            this.g("NegativeMarkerBrush");
        }
        get firstMarkerBrush() {
            return this.av;
        }
        set firstMarkerBrush(a) {
            this.av = a;
            this.g("FirstMarkerBrush");
        }
        get lastMarkerBrush() {
            return this.a6;
        }
        set lastMarkerBrush(a) {
            this.a6 = a;
            this.g("LastMarkerBrush");
        }
        get highMarkerBrush() {
            return this.az;
        }
        set highMarkerBrush(a) {
            this.az = a;
            this.g("HighMarkerBrush");
        }
        get lowMarkerBrush() {
            return this.a8;
        }
        set lowMarkerBrush(a) {
            this.a8 = a;
            this.g("LowMarkerBrush");
        }
        get trendLineBrush() {
            return this.bh;
        }
        set trendLineBrush(a) {
            this.bh = a;
            this.g("TrendLineBrush");
        }
        get horizontalAxisBrush() {
            return this.a1;
        }
        set horizontalAxisBrush(a) {
            this.a1 = a;
            this.g("HorizontalAxisBrush");
        }
        get verticalAxisBrush() {
            return this.bl;
        }
        set verticalAxisBrush(a) {
            this.bl = a;
            this.g("VerticalAxisBrush");
        }
        get normalRangeFill() {
            return this.bf;
        }
        set normalRangeFill(a) {
            this.bf = a;
            this.g("NormalRangeFill");
        }
        get horizontalAxisVisibility() {
            return this.a3;
        }
        set horizontalAxisVisibility(a) {
            this.a3 = a;
            this.g("HorizontalAxisVisibility");
        }
        get verticalAxisVisibility() {
            return this.bn;
        }
        set verticalAxisVisibility(a) {
            this.bn = a;
            this.g("VerticalAxisVisibility");
        }
        get markerVisibility() {
            return this.bb;
        }
        set markerVisibility(a) {
            this.bb = a;
            this.g("MarkerVisibility");
        }
        get negativeMarkerVisibility() {
            return this.be;
        }
        set negativeMarkerVisibility(a) {
            this.be = a;
            this.g("NegativeMarkerVisibility");
        }
        get firstMarkerVisibility() {
            return this.aw;
        }
        set firstMarkerVisibility(a) {
            this.aw = a;
            this.g("FirstMarkerVisibility");
        }
        get lastMarkerVisibility() {
            return this.a7;
        }
        set lastMarkerVisibility(a) {
            this.a7 = a;
            this.g("LastMarkerVisibility");
        }
        get lowMarkerVisibility() {
            return this.a9;
        }
        set lowMarkerVisibility(a) {
            this.a9 = a;
            this.g("LowMarkerVisibility");
        }
        get highMarkerVisibility() {
            return this.a0;
        }
        set highMarkerVisibility(a) {
            this.a0 = a;
            this.g("HighMarkerVisibility");
        }
        get normalRangeVisibility() {
            return this.bg;
        }
        set normalRangeVisibility(a) {
            this.bg = a;
            this.g("NormalRangeVisibility");
        }
        get displayNormalRangeInFront() {
            return this.l;
        }
        set displayNormalRangeInFront(a) {
            this.l = a;
            this.g("DisplayNormalRangeInFront");
        }
        get markerSize() {
            return this.t;
        }
        set markerSize(a) {
            this.t = a;
            this.g("MarkerSize");
        }
        get firstMarkerSize() {
            return this.o;
        }
        set firstMarkerSize(a) {
            this.o = a;
            this.g("FirstMarkerSize");
        }
        get lastMarkerSize() {
            return this.q;
        }
        set lastMarkerSize(a) {
            this.q = a;
            this.g("LastMarkerSize");
        }
        get highMarkerSize() {
            return this.p;
        }
        set highMarkerSize(a) {
            this.p = a;
            this.g("HighMarkerSize");
        }
        get lowMarkerSize() {
            return this.s;
        }
        set lowMarkerSize(a) {
            this.s = a;
            this.g("LowMarkerSize");
        }
        get negativeMarkerSize() {
            return this.w;
        }
        set negativeMarkerSize(a) {
            this.w = a;
            this.g("NegativeMarkerSize");
        }
        get lineThickness() {
            return this.r;
        }
        set lineThickness(a) {
            this.r = a;
            this.g("LineThickness");
        }
        get minimum() {
            return this.v;
        }
        set minimum(a) {
            this.v = a;
            this.g("Minimum");
        }
        get maximum() {
            return this.u;
        }
        set maximum(a) {
            this.u = a;
            this.g("Maximum");
        }
        get dataSourceRef() {
            return this.at;
        }
        set dataSourceRef(a) {
            this.at = a;
            this.g("DataSourceRef");
        }
        get valueMemberPath() {
            return this.bk;
        }
        set valueMemberPath(a) {
            this.bk = a;
            this.g("ValueMemberPath");
        }
        get labelMemberPath() {
            return this.a5;
        }
        set labelMemberPath(a) {
            this.a5 = a;
            this.g("LabelMemberPath");
        }
        get trendLineType() {
            return this.bi;
        }
        set trendLineType(a) {
            this.bi = a;
            this.g("TrendLineType");
        }
        get trendLinePeriod() {
            return this.ap;
        }
        set trendLinePeriod(a) {
            this.ap = a;
            this.g("TrendLinePeriod");
        }
        get trendLineThickness() {
            return this.aa;
        }
        set trendLineThickness(a) {
            this.aa = a;
            this.g("TrendLineThickness");
        }
        get normalRangeMinimum() {
            return this.y;
        }
        set normalRangeMinimum(a) {
            this.y = a;
            this.g("NormalRangeMinimum");
        }
        get normalRangeMaximum() {
            return this.x;
        }
        set normalRangeMaximum(a) {
            this.x = a;
            this.g("NormalRangeMaximum");
        }
        get displayType() {
            return this.au;
        }
        set displayType(a) {
            this.au = a;
            this.g("DisplayType");
        }
        get unknownValuePlotting() {
            return this.bj;
        }
        set unknownValuePlotting(a) {
            this.bj = a;
            this.g("UnknownValuePlotting");
        }
        get verticalAxisLabelRef() {
            return this.bm;
        }
        set verticalAxisLabelRef(a) {
            this.bm = a;
            this.g("VerticalAxisLabelRef");
        }
        get horizontalAxisLabelRef() {
            return this.a2;
        }
        set horizontalAxisLabelRef(a) {
            this.a2 = a;
            this.g("HorizontalAxisLabelRef");
        }
        get formatLabelRef() {
            return this.ax;
        }
        set formatLabelRef(a) {
            this.ax = a;
            this.g("FormatLabelRef");
        }
        get horizontalLabelFormat() {
            return this.a4;
        }
        set horizontalLabelFormat(a) {
            this.a4 = a;
            this.g("HorizontalLabelFormat");
        }
        get horizontalLabelFormatSpecifiers() {
            return this.h;
        }
        set horizontalLabelFormatSpecifiers(a) {
            this.h = a;
            this.g("HorizontalLabelFormatSpecifiers");
        }
        get verticalLabelFormat() {
            return this.bo;
        }
        set verticalLabelFormat(a) {
            this.bo = a;
            this.g("VerticalLabelFormat");
        }
        get verticalLabelFormatSpecifiers() {
            return this.i;
        }
        set verticalLabelFormatSpecifiers(a) {
            this.i = a;
            this.g("VerticalLabelFormatSpecifiers");
        }
        get pixelScalingRatio() {
            return this.z;
        }
        set pixelScalingRatio(a) {
            this.z = a;
            this.g("PixelScalingRatio");
        }
        get actualPixelScalingRatio() {
            return this.n;
        }
        set actualPixelScalingRatio(a) {
            this.n = a;
            this.g("ActualPixelScalingRatio");
        }
        get width() {
            return this.bp;
        }
        set width(a) {
            this.bp = a;
            this.g("Width");
        }
        get height() {
            return this.ay;
        }
        set height(a) {
            this.ay = a;
            this.g("Height");
        }
        get background() {
            return this.ar;
        }
        set background(a) {
            this.ar = a;
            this.g("Background");
        }
    }
    SparklineDescription.$t = /*@__PURE__*/ markType(SparklineDescription, 'SparklineDescription', Description.$);
    return SparklineDescription;
})();
