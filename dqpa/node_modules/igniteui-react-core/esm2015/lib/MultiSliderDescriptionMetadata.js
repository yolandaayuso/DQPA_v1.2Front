/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { MultiSliderResolvingToolTipValueEventArgsDescriptionMetadata } from "./MultiSliderResolvingToolTipValueEventArgsDescriptionMetadata";
import { MultiSliderThumbValueChangingEventArgsDescriptionMetadata } from "./MultiSliderThumbValueChangingEventArgsDescriptionMetadata";
import { MultiSliderYValueChangingEventArgsDescriptionMetadata } from "./MultiSliderYValueChangingEventArgsDescriptionMetadata";
import { MultiSliderDescription } from "./MultiSliderDescription";
/**
 * @hidden
 */
export let MultiSliderDescriptionMetadata = /*@__PURE__*/ (() => {
    class MultiSliderDescriptionMetadata extends Base {
        static b(a) {
            if (MultiSliderDescriptionMetadata.a == null) {
                MultiSliderDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                MultiSliderDescriptionMetadata.c(MultiSliderDescriptionMetadata.a);
            }
            if (a.k(MultiSliderDescriptionMetadata.a)) {
                return;
            }
            a.ac(MultiSliderDescriptionMetadata.a);
            MultiSliderResolvingToolTipValueEventArgsDescriptionMetadata.d(a);
            MultiSliderThumbValueChangingEventArgsDescriptionMetadata.d(a);
            MultiSliderYValueChangingEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("Thumbs", "Collection:MultiSliderThumb:MultiSliderThumbCollection:MultiSliderThumb");
            a.item("Min", "Number:double");
            a.item("Max", "Number:double");
            a.item("Step", "Number:double");
            a.item("YMax", "Number:double");
            a.item("YMin", "Number:double");
            a.item("YStep", "Number:double");
            a.item("PixelScalingRatio", "Number:double");
            a.item("ActualPixelScalingRatio", "Number:double");
            a.item("WindowRect", "Rect");
            a.item("YValue", "Number:double");
            a.item("StartInset", "Number:double");
            a.item("EndInset", "Number:double");
            a.item("TrackStartInset", "Number:double");
            a.item("TrackEndInset", "Number:double");
            a.item("YTrackStartInset", "Number:double");
            a.item("YTrackEndInset", "Number:double");
            a.item("BarExtent", "Number:double");
            a.item("Orientation", "ExportedType:string:MultiSliderOrientation");
            a.item("Orientation@names", "Horizontal;Vertical;TwoDimensional");
            a.item("ThumbBrush", "Brush");
            a.item("ThumbStrokeThickness", "Number:double");
            a.item("ThumbOutline", "Brush");
            a.item("ThumbWidth", "Number:double");
            a.item("ThumbHeight", "Number:double");
            a.item("BarBrush", "Brush");
            a.item("BarOutline", "Brush");
            a.item("BarStrokeThickness", "Number:double");
            a.item("RangeThumbBrush", "Brush");
            a.item("RangeThumbOutline", "Brush");
            a.item("RangeThumbStrokeThickness", "Number:double");
            a.item("RangeThumbRidgesBrush", "Brush");
            a.item("ThumbRidgesBrush", "Brush");
            a.item("CalloutBrush", "Brush");
            a.item("CalloutTextColor", "Brush");
            a.item("CalloutOutline", "Brush");
            a.item("CalloutStrokeThickness", "Number:double");
            a.item("AreThumbCalloutsEnabled", "Boolean");
            a.item("ThumbCalloutFontFamily", "(w:ThumbCalloutFontFamily/FontFamilyTransform,xam:ThumbCalloutFontFamily,wf:ThumbCalloutFontFamily,web:thumbCalloutTextStyle/FontFamilyTransform)String");
            a.item("ThumbCalloutFontSize", "(w:ThumbCalloutFontSize,xam:ThumbCalloutFontSize,wf:ThumbCalloutFontSize,web:thumbCalloutTextStyle/FontSizeTransform)Number:double");
            a.item("ThumbCalloutFontStyle", "(w:ThumbCalloutFontStyle/FontStyleTransform,xam:ThumbCalloutFontFamily/FontStyleTransform,wf:ThumbCalloutFontFamily/FontStyleTransform,web:thumbCalloutTextStyle/FontStyleTransform)String");
            a.item("ThumbCalloutFontWeight", "(w:ThumbCalloutFontWeight/FontWeightTransform,xam:ThumbCalloutFontFamily/FontWeightTransform,wf:ThumbCalloutFontFamily/FontWeightTransform,web:thumbCalloutTextStyle/FontWeightTransform)String");
            a.item("ResolvingToolTipValueRef", "EventRef::resolvingToolTipValue");
            a.item("ThumbValueChangingRef", "EventRef::thumbValueChanging");
            a.item("ThumbValueChangedRef", "EventRef::thumbValueChanged");
            a.item("YValueChangingRef", "EventRef::yValueChanging");
            a.item("YValueChangedRef", "EventRef::yValueChanged");
        }
        static d(a) {
            MultiSliderDescriptionMetadata.b(a);
            a.ae("MultiSlider", () => new MultiSliderDescription());
            a.ad("MultiSlider", MultiSliderDescriptionMetadata.a);
        }
    }
    MultiSliderDescriptionMetadata.$t = /*@__PURE__*/ markType(MultiSliderDescriptionMetadata, 'MultiSliderDescriptionMetadata');
    MultiSliderDescriptionMetadata.a = null;
    return MultiSliderDescriptionMetadata;
})();
