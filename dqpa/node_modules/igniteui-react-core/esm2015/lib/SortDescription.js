/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
/**
 * @hidden
 */
export let SortDescription = /*@__PURE__*/ (() => {
    class SortDescription extends Base {
        constructor() {
            super();
            this.b = false;
            this.h = null;
            this.d = 0;
            this.g = null;
        }
        get propertyName() {
            return this.h;
        }
        set propertyName(a) {
            this.h = a;
        }
        get direction() {
            return this.d;
        }
        set direction(a) {
            this.d = a;
        }
        get displayName() {
            return this.g;
        }
        set displayName(a) {
            this.g = a;
        }
        equals(a) {
            let b = a;
            if (b == null) {
                return super.equals(a);
            }
            return b.propertyName == this.propertyName && b.direction == this.direction && b.displayName == this.displayName;
        }
        getHashCode() {
            return Base.getHashCodeStatic(this.propertyName) * 17 + this.direction;
        }
        k() {
            this.b = true;
        }
        static create(a, b, c = null) {
            let d = new SortDescription();
            d.propertyName = a;
            d.direction = b;
            d.displayName = c;
            return d;
        }
    }
    SortDescription.$t = /*@__PURE__*/ markType(SortDescription, 'SortDescription');
    return SortDescription;
})();
