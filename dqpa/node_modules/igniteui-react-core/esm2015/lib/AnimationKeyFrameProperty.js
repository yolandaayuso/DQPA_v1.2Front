/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
import { MatrixTransform } from "./MatrixTransform";
import { TransformMatrixHelpler } from "./TransformMatrixHelpler";
/**
 * @hidden
 */
export let AnimationKeyFrameProperty = /*@__PURE__*/ (() => {
    class AnimationKeyFrameProperty extends Base {
        constructor(a, b) {
            super();
            this.a = 0;
            this.b = null;
            this.a = a;
            this.d = b;
        }
        get d() {
            return this.b;
        }
        set d(a) {
            let b = this.c(a);
            this.b = b;
        }
        c(a) {
            if (this.a == 0) {
                return a;
            }
            switch (this.a) {
                case 14:
                    let b = TransformMatrixHelpler.f(a);
                    let c = new MatrixTransform();
                    c.j = b;
                    return c;
            }
            return a;
        }
    }
    AnimationKeyFrameProperty.$t = /*@__PURE__*/ markType(AnimationKeyFrameProperty, 'AnimationKeyFrameProperty');
    return AnimationKeyFrameProperty;
})();
