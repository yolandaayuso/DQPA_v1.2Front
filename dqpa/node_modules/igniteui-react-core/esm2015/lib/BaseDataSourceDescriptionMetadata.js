/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { DataSourceSchemaChangedEventArgsDescriptionMetadata } from "./DataSourceSchemaChangedEventArgsDescriptionMetadata";
import { DataSourceRowExpansionChangedEventArgsDescriptionMetadata } from "./DataSourceRowExpansionChangedEventArgsDescriptionMetadata";
import { DataSourceRootSummariesChangedEventArgsDescriptionMetadata } from "./DataSourceRootSummariesChangedEventArgsDescriptionMetadata";
/**
 * @hidden
 */
export let BaseDataSourceDescriptionMetadata = /*@__PURE__*/ (() => {
    class BaseDataSourceDescriptionMetadata extends Base {
        static b(a) {
            if (BaseDataSourceDescriptionMetadata.a == null) {
                BaseDataSourceDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                BaseDataSourceDescriptionMetadata.c(BaseDataSourceDescriptionMetadata.a);
            }
            if (a.k(BaseDataSourceDescriptionMetadata.a)) {
                return;
            }
            a.ac(BaseDataSourceDescriptionMetadata.a);
            DataSourceSchemaChangedEventArgsDescriptionMetadata.d(a);
            DataSourceRowExpansionChangedEventArgsDescriptionMetadata.d(a);
            DataSourceRootSummariesChangedEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("IsReadOnly", "Boolean");
            a.item("IsBatchingEnabled", "Boolean");
            a.item("ActualCount", "Number:int");
            a.item("FirstVisibleIndexRequested", "Number:int");
            a.item("LastVisibleIndexRequested", "Number:int");
            a.item("DeferAutoRefresh", "Boolean");
            a.item("PrimaryKey", "Array:string");
            a.item("PropertiesRequested", "Array:string");
            a.item("SchemaIncludedProperties", "Array:string");
            a.item("SectionHeaderDisplayMode", "ExportedType:string:DataSourceSectionHeaderDisplayMode");
            a.item("SectionHeaderDisplayMode@names", "Combined;Split");
            a.item("IsSectionCollapsable", "Boolean");
            a.item("IsSectionExpandedDefault", "Boolean");
            a.item("IncludeSummaryRowsInSection", "Boolean");
            a.item("IsSectionSummaryRowsAtBottom", "Boolean");
            a.item("IsSectionHeaderNormalRow", "Boolean");
            a.item("IsSectionContentVisible", "Boolean");
            a.item("ShouldEmitSectionHeaders", "Boolean");
            a.item("ShouldEmitSectionFooters", "Boolean");
            a.item("ShouldEmitShiftedRows", "Boolean");
            a.item("ShouldEmitSummaryRows", "Boolean");
            a.item("SchemaChangedRef", "EventRef::schemaChanged");
            a.item("RowExpansionChangedRef", "EventRef::rowExpansionChanged");
            a.item("RootSummariesChangedRef", "EventRef::rootSummariesChanged");
        }
        static d(a) {
            BaseDataSourceDescriptionMetadata.b(a);
            a.ad("BaseDataSource", BaseDataSourceDescriptionMetadata.a);
        }
    }
    BaseDataSourceDescriptionMetadata.$t = /*@__PURE__*/ markType(BaseDataSourceDescriptionMetadata, 'BaseDataSourceDescriptionMetadata');
    BaseDataSourceDescriptionMetadata.a = null;
    return BaseDataSourceDescriptionMetadata;
})();
