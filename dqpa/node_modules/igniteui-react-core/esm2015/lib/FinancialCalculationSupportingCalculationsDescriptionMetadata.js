/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnSupportingCalculationDescriptionMetadata } from "./ColumnSupportingCalculationDescriptionMetadata";
import { DataSourceSupportingCalculationDescriptionMetadata } from "./DataSourceSupportingCalculationDescriptionMetadata";
import { FinancialCalculationSupportingCalculationsDescription } from "./FinancialCalculationSupportingCalculationsDescription";
/**
 * @hidden
 */
export let FinancialCalculationSupportingCalculationsDescriptionMetadata = /*@__PURE__*/ (() => {
    class FinancialCalculationSupportingCalculationsDescriptionMetadata extends Base {
        static b(a) {
            if (FinancialCalculationSupportingCalculationsDescriptionMetadata.a == null) {
                FinancialCalculationSupportingCalculationsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                FinancialCalculationSupportingCalculationsDescriptionMetadata.c(FinancialCalculationSupportingCalculationsDescriptionMetadata.a);
            }
            if (a.k(FinancialCalculationSupportingCalculationsDescriptionMetadata.a)) {
                return;
            }
            a.ac(FinancialCalculationSupportingCalculationsDescriptionMetadata.a);
            ColumnSupportingCalculationDescriptionMetadata.d(a);
            DataSourceSupportingCalculationDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("EMA", "ExportedType:ColumnSupportingCalculation");
            a.item("SMA", "ExportedType:ColumnSupportingCalculation");
            a.item("STDEV", "ExportedType:ColumnSupportingCalculation");
            a.item("MovingSum", "ExportedType:ColumnSupportingCalculation");
            a.item("ShortVolumeOscillatorAverage", "ExportedType:DataSourceSupportingCalculation");
            a.item("LongVolumeOscillatorAverage", "ExportedType:DataSourceSupportingCalculation");
            a.item("ShortPriceOscillatorAverage", "ExportedType:DataSourceSupportingCalculation");
            a.item("LongPriceOscillatorAverage", "ExportedType:DataSourceSupportingCalculation");
            a.item("MakeSafeRef", "(w:MakeSafe,wf:MakeSafe)MethodRef");
        }
        static d(a) {
            FinancialCalculationSupportingCalculationsDescriptionMetadata.b(a);
            a.ae("FinancialCalculationSupportingCalculations", () => new FinancialCalculationSupportingCalculationsDescription());
            a.ad("FinancialCalculationSupportingCalculations", FinancialCalculationSupportingCalculationsDescriptionMetadata.a);
        }
    }
    FinancialCalculationSupportingCalculationsDescriptionMetadata.$t = /*@__PURE__*/ markType(FinancialCalculationSupportingCalculationsDescriptionMetadata, 'FinancialCalculationSupportingCalculationsDescriptionMetadata');
    FinancialCalculationSupportingCalculationsDescriptionMetadata.a = null;
    return FinancialCalculationSupportingCalculationsDescriptionMetadata;
})();
