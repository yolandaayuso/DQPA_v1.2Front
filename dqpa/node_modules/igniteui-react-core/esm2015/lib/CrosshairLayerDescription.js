/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let CrosshairLayerDescription = /*@__PURE__*/ (() => {
    class CrosshairLayerDescription extends AnnotationLayerDescription {
        get_type() {
            return "CrosshairLayer";
        }
        constructor() {
            super();
            this.g7 = null;
            this.hb = null;
            this.g9 = null;
            this.ha = null;
            this.gb = false;
            this.f9 = false;
            this.hg = null;
            this.hd = null;
            this.gf = 0;
            this.g3 = 0;
            this.hf = null;
            this.gh = 0;
            this.gj = 0;
            this.gi = 0;
            this.gg = 0;
            this.gn = 0;
            this.gp = 0;
            this.go = 0;
            this.gm = 0;
            this.gk = 0;
            this.hk = null;
            this.hh = null;
            this.gl = 0;
            this.g4 = 0;
            this.hj = null;
            this.gq = 0;
            this.hc = null;
            this.g8 = null;
            this.ga = false;
            this.he = null;
            this.hi = null;
        }
        get horizontalLineStroke() {
            return this.g7;
        }
        set horizontalLineStroke(a) {
            this.g7 = a;
            this.g("HorizontalLineStroke");
        }
        get verticalLineStroke() {
            return this.hb;
        }
        set verticalLineStroke(a) {
            this.hb = a;
            this.g("VerticalLineStroke");
        }
        get targetSeriesName() {
            return this.g9;
        }
        set targetSeriesName(a) {
            this.g9 = a;
            this.g("TargetSeriesName");
        }
        get targetSeriesRef() {
            return this.ha;
        }
        set targetSeriesRef(a) {
            this.ha = a;
            this.g("TargetSeriesRef");
        }
        get useInterpolation() {
            return this.gb;
        }
        set useInterpolation(a) {
            this.gb = a;
            this.g("UseInterpolation");
        }
        get isAxisAnnotationEnabled() {
            return this.f9;
        }
        set isAxisAnnotationEnabled(a) {
            this.f9 = a;
            this.g("IsAxisAnnotationEnabled");
        }
        get xAxisAnnotationTextColor() {
            return this.hg;
        }
        set xAxisAnnotationTextColor(a) {
            this.hg = a;
            this.g("XAxisAnnotationTextColor");
        }
        get xAxisAnnotationBackground() {
            return this.hd;
        }
        set xAxisAnnotationBackground(a) {
            this.hd = a;
            this.g("XAxisAnnotationBackground");
        }
        get xAxisAnnotationBackgroundCornerRadius() {
            return this.gf;
        }
        set xAxisAnnotationBackgroundCornerRadius(a) {
            this.gf = a;
            this.g("XAxisAnnotationBackgroundCornerRadius");
        }
        get xAxisAnnotationInterpolatedValuePrecision() {
            return this.g3;
        }
        set xAxisAnnotationInterpolatedValuePrecision(a) {
            this.g3 = a;
            this.g("XAxisAnnotationInterpolatedValuePrecision");
        }
        get xAxisAnnotationOutline() {
            return this.hf;
        }
        set xAxisAnnotationOutline(a) {
            this.hf = a;
            this.g("XAxisAnnotationOutline");
        }
        get xAxisAnnotationPaddingLeft() {
            return this.gh;
        }
        set xAxisAnnotationPaddingLeft(a) {
            this.gh = a;
            this.g("XAxisAnnotationPaddingLeft");
        }
        get xAxisAnnotationPaddingTop() {
            return this.gj;
        }
        set xAxisAnnotationPaddingTop(a) {
            this.gj = a;
            this.g("XAxisAnnotationPaddingTop");
        }
        get xAxisAnnotationPaddingRight() {
            return this.gi;
        }
        set xAxisAnnotationPaddingRight(a) {
            this.gi = a;
            this.g("XAxisAnnotationPaddingRight");
        }
        get xAxisAnnotationPaddingBottom() {
            return this.gg;
        }
        set xAxisAnnotationPaddingBottom(a) {
            this.gg = a;
            this.g("XAxisAnnotationPaddingBottom");
        }
        get yAxisAnnotationPaddingLeft() {
            return this.gn;
        }
        set yAxisAnnotationPaddingLeft(a) {
            this.gn = a;
            this.g("YAxisAnnotationPaddingLeft");
        }
        get yAxisAnnotationPaddingTop() {
            return this.gp;
        }
        set yAxisAnnotationPaddingTop(a) {
            this.gp = a;
            this.g("YAxisAnnotationPaddingTop");
        }
        get yAxisAnnotationPaddingRight() {
            return this.go;
        }
        set yAxisAnnotationPaddingRight(a) {
            this.go = a;
            this.g("YAxisAnnotationPaddingRight");
        }
        get yAxisAnnotationPaddingBottom() {
            return this.gm;
        }
        set yAxisAnnotationPaddingBottom(a) {
            this.gm = a;
            this.g("YAxisAnnotationPaddingBottom");
        }
        get xAxisAnnotationStrokeThickness() {
            return this.gk;
        }
        set xAxisAnnotationStrokeThickness(a) {
            this.gk = a;
            this.g("XAxisAnnotationStrokeThickness");
        }
        get yAxisAnnotationTextColor() {
            return this.hk;
        }
        set yAxisAnnotationTextColor(a) {
            this.hk = a;
            this.g("YAxisAnnotationTextColor");
        }
        get yAxisAnnotationBackground() {
            return this.hh;
        }
        set yAxisAnnotationBackground(a) {
            this.hh = a;
            this.g("YAxisAnnotationBackground");
        }
        get yAxisAnnotationBackgroundCornerRadius() {
            return this.gl;
        }
        set yAxisAnnotationBackgroundCornerRadius(a) {
            this.gl = a;
            this.g("YAxisAnnotationBackgroundCornerRadius");
        }
        get yAxisAnnotationInterpolatedValuePrecision() {
            return this.g4;
        }
        set yAxisAnnotationInterpolatedValuePrecision(a) {
            this.g4 = a;
            this.g("YAxisAnnotationInterpolatedValuePrecision");
        }
        get yAxisAnnotationOutline() {
            return this.hj;
        }
        set yAxisAnnotationOutline(a) {
            this.hj = a;
            this.g("YAxisAnnotationOutline");
        }
        get yAxisAnnotationStrokeThickness() {
            return this.gq;
        }
        set yAxisAnnotationStrokeThickness(a) {
            this.gq = a;
            this.g("YAxisAnnotationStrokeThickness");
        }
        get verticalLineVisibility() {
            return this.hc;
        }
        set verticalLineVisibility(a) {
            this.hc = a;
            this.g("VerticalLineVisibility");
        }
        get horizontalLineVisibility() {
            return this.g8;
        }
        set horizontalLineVisibility(a) {
            this.g8 = a;
            this.g("HorizontalLineVisibility");
        }
        get skipUnknownValues() {
            return this.ga;
        }
        set skipUnknownValues(a) {
            this.ga = a;
            this.g("SkipUnknownValues");
        }
        get xAxisAnnotationFormatLabelRef() {
            return this.he;
        }
        set xAxisAnnotationFormatLabelRef(a) {
            this.he = a;
            this.g("XAxisAnnotationFormatLabelRef");
        }
        get yAxisAnnotationFormatLabelRef() {
            return this.hi;
        }
        set yAxisAnnotationFormatLabelRef(a) {
            this.hi = a;
            this.g("YAxisAnnotationFormatLabelRef");
        }
    }
    CrosshairLayerDescription.$t = /*@__PURE__*/ markType(CrosshairLayerDescription, 'CrosshairLayerDescription', AnnotationLayerDescription.$);
    return CrosshairLayerDescription;
})();
