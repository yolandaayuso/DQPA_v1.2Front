/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ScatterBaseDescription = /*@__PURE__*/ (() => {
    class ScatterBaseDescription extends MarkerSeriesDescription {
        get_type() {
            return "ScatterBase";
        }
        constructor() {
            super();
            this.gh = null;
            this.gl = null;
            this.gk = null;
            this.go = null;
            this.gb = null;
            this.gc = null;
            this.gi = null;
            this.gm = null;
            this.gj = null;
            this.gn = null;
            this.gg = null;
            this.gf = null;
            this.f8 = null;
            this.fx = 0;
            this.fr = null;
            this.f1 = 0;
            this.ge = null;
            this.f2 = 0;
            this.f0 = 0;
            this.gd = null;
            this.fz = 0;
            this.f7 = null;
            this.fu = false;
            this.ft = false;
            this.ga = null;
            this.f9 = null;
        }
        get xAxisRef() {
            return this.gh;
        }
        set xAxisRef(a) {
            this.gh = a;
            this.g("XAxisRef");
        }
        get yAxisRef() {
            return this.gl;
        }
        set yAxisRef(a) {
            this.gl = a;
            this.g("YAxisRef");
        }
        get xMemberPath() {
            return this.gk;
        }
        set xMemberPath(a) {
            this.gk = a;
            this.g("XMemberPath");
        }
        get yMemberPath() {
            return this.go;
        }
        set yMemberPath(a) {
            this.go = a;
            this.g("YMemberPath");
        }
        get highlightedXMemberPath() {
            return this.gb;
        }
        set highlightedXMemberPath(a) {
            this.gb = a;
            this.g("HighlightedXMemberPath");
        }
        get highlightedYMemberPath() {
            return this.gc;
        }
        set highlightedYMemberPath(a) {
            this.gc = a;
            this.g("HighlightedYMemberPath");
        }
        get xMemberAsLegendLabel() {
            return this.gi;
        }
        set xMemberAsLegendLabel(a) {
            this.gi = a;
            this.g("XMemberAsLegendLabel");
        }
        get yMemberAsLegendLabel() {
            return this.gm;
        }
        set yMemberAsLegendLabel(a) {
            this.gm = a;
            this.g("YMemberAsLegendLabel");
        }
        get xMemberAsLegendUnit() {
            return this.gj;
        }
        set xMemberAsLegendUnit(a) {
            this.gj = a;
            this.g("XMemberAsLegendUnit");
        }
        get yMemberAsLegendUnit() {
            return this.gn;
        }
        set yMemberAsLegendUnit(a) {
            this.gn = a;
            this.g("YMemberAsLegendUnit");
        }
        get trendLineType() {
            return this.gg;
        }
        set trendLineType(a) {
            this.gg = a;
            this.g("TrendLineType");
        }
        get trendLineBrush() {
            return this.gf;
        }
        set trendLineBrush(a) {
            this.gf = a;
            this.g("TrendLineBrush");
        }
        get actualTrendLineBrush() {
            return this.f8;
        }
        set actualTrendLineBrush(a) {
            this.f8 = a;
            this.g("ActualTrendLineBrush");
        }
        get trendLineThickness() {
            return this.fx;
        }
        set trendLineThickness(a) {
            this.fx = a;
            this.g("TrendLineThickness");
        }
        get trendLineDashArray() {
            return this.fr;
        }
        set trendLineDashArray(a) {
            this.fr = a;
            this.g("TrendLineDashArray");
        }
        get trendLinePeriod() {
            return this.f1;
        }
        set trendLinePeriod(a) {
            this.f1 = a;
            this.g("TrendLinePeriod");
        }
        get markerCollisionAvoidance() {
            return this.ge;
        }
        set markerCollisionAvoidance(a) {
            this.ge = a;
            this.g("MarkerCollisionAvoidance");
        }
        get trendLineZIndex() {
            return this.f2;
        }
        set trendLineZIndex(a) {
            this.f2 = a;
            this.g("TrendLineZIndex");
        }
        get maximumMarkers() {
            return this.f0;
        }
        set maximumMarkers(a) {
            this.f0 = a;
            this.g("MaximumMarkers");
        }
        get itemSearchMode() {
            return this.gd;
        }
        set itemSearchMode(a) {
            this.gd = a;
            this.g("ItemSearchMode");
        }
        get itemSearchThreshold() {
            return this.fz;
        }
        set itemSearchThreshold(a) {
            this.fz = a;
            this.g("ItemSearchThreshold");
        }
        get actualItemSearchMode() {
            return this.f7;
        }
        set actualItemSearchMode(a) {
            this.f7 = a;
            this.g("ActualItemSearchMode");
        }
        get isCustomScatterStyleAllowed() {
            return this.fu;
        }
        set isCustomScatterStyleAllowed(a) {
            this.fu = a;
            this.g("IsCustomScatterStyleAllowed");
        }
        get isCustomScatterMarkerStyleAllowed() {
            return this.ft;
        }
        set isCustomScatterMarkerStyleAllowed(a) {
            this.ft = a;
            this.g("IsCustomScatterMarkerStyleAllowed");
        }
        get assigningScatterStyleRef() {
            return this.ga;
        }
        set assigningScatterStyleRef(a) {
            this.ga = a;
            this.g("AssigningScatterStyleRef");
        }
        get assigningScatterMarkerStyleRef() {
            return this.f9;
        }
        set assigningScatterMarkerStyleRef(a) {
            this.f9 = a;
            this.g("AssigningScatterMarkerStyleRef");
        }
    }
    ScatterBaseDescription.$t = /*@__PURE__*/ markType(ScatterBaseDescription, 'ScatterBaseDescription', MarkerSeriesDescription.$);
    return ScatterBaseDescription;
})();
