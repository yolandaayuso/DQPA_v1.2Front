/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let IconDescription = /*@__PURE__*/ (() => {
    class IconDescription extends Description {
        get_type() {
            return "Icon";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.at = null;
            this.ap = null;
            this.aq = null;
            this.ar = null;
            this.r = 0;
            this.av = null;
            this.a8 = null;
            this.w = 0;
            this.bb = null;
            this.az = null;
            this.a0 = null;
            this.u = 0;
            this.a1 = null;
            this.h = null;
            this.i = null;
            this.a3 = null;
            this.a4 = null;
            this.a5 = null;
            this.a6 = null;
            this.a7 = null;
            this.au = null;
            this.ba = null;
            this.a9 = null;
            this.j = null;
            this.aw = null;
            this.s = 0;
            this.ax = null;
            this.ay = null;
            this.a2 = null;
            this.an = 0;
            this.as = null;
            this.o = false;
            this.n = false;
            this.v = 0;
            this.y = 0;
            this.z = 0;
            this.aa = 0;
            this.x = 0;
            this.ab = 0;
            this.t = 0;
        }
        get baseTheme() {
            return this.at;
        }
        set baseTheme(a) {
            this.at = a;
            this.g("BaseTheme");
        }
        get actualFill() {
            return this.ap;
        }
        set actualFill(a) {
            this.ap = a;
            this.g("ActualFill");
        }
        get actualStroke() {
            return this.aq;
        }
        set actualStroke(a) {
            this.aq = a;
            this.g("ActualStroke");
        }
        get actualTextColor() {
            return this.ar;
        }
        set actualTextColor(a) {
            this.ar = a;
            this.g("ActualTextColor");
        }
        get actualStrokeWidth() {
            return this.r;
        }
        set actualStrokeWidth(a) {
            this.r = a;
            this.g("ActualStrokeWidth");
        }
        get fill() {
            return this.av;
        }
        set fill(a) {
            this.av = a;
            this.g("Fill");
        }
        get stroke() {
            return this.a8;
        }
        set stroke(a) {
            this.a8 = a;
            this.g("Stroke");
        }
        get strokeWidth() {
            return this.w;
        }
        set strokeWidth(a) {
            this.w = a;
            this.g("StrokeWidth");
        }
        get textColor() {
            return this.bb;
        }
        set textColor(a) {
            this.bb = a;
            this.g("TextColor");
        }
        get hoverFill() {
            return this.az;
        }
        set hoverFill(a) {
            this.az = a;
            this.g("HoverFill");
        }
        get hoverStroke() {
            return this.a0;
        }
        set hoverStroke(a) {
            this.a0 = a;
            this.g("HoverStroke");
        }
        get hoverStrokeThickness() {
            return this.u;
        }
        set hoverStrokeThickness(a) {
            this.u = a;
            this.g("HoverStrokeThickness");
        }
        get hoverTextColor() {
            return this.a1;
        }
        set hoverTextColor(a) {
            this.a1 = a;
            this.g("HoverTextColor");
        }
        get fillColors() {
            return this.h;
        }
        set fillColors(a) {
            this.h = a;
            this.g("FillColors");
        }
        get strokeColors() {
            return this.i;
        }
        set strokeColors(a) {
            this.i = a;
            this.g("StrokeColors");
        }
        get primaryFillColor() {
            return this.a3;
        }
        set primaryFillColor(a) {
            this.a3 = a;
            this.g("PrimaryFillColor");
        }
        get primaryStrokeColor() {
            return this.a4;
        }
        set primaryStrokeColor(a) {
            this.a4 = a;
            this.g("PrimaryStrokeColor");
        }
        get secondaryFillColor() {
            return this.a5;
        }
        set secondaryFillColor(a) {
            this.a5 = a;
            this.g("SecondaryFillColor");
        }
        get secondaryStrokeColor() {
            return this.a6;
        }
        set secondaryStrokeColor(a) {
            this.a6 = a;
            this.g("SecondaryStrokeColor");
        }
        get sourceRef() {
            return this.a7;
        }
        set sourceRef(a) {
            this.a7 = a;
            this.g("SourceRef");
        }
        get dataURL() {
            return this.au;
        }
        set dataURL(a) {
            this.au = a;
            this.g("DataURL");
        }
        get svgPath() {
            return this.ba;
        }
        set svgPath(a) {
            this.ba = a;
            this.g("SvgPath");
        }
        get svg() {
            return this.a9;
        }
        set svg(a) {
            this.a9 = a;
            this.g("Svg");
        }
        get sVGPaths() {
            return this.j;
        }
        set sVGPaths(a) {
            this.j = a;
            this.g("SVGPaths");
        }
        get fontFamily() {
            return this.aw;
        }
        set fontFamily(a) {
            this.aw = a;
            this.g("FontFamily");
        }
        get fontSize() {
            return this.s;
        }
        set fontSize(a) {
            this.s = a;
            this.g("FontSize");
        }
        get fontStyle() {
            return this.ax;
        }
        set fontStyle(a) {
            this.ax = a;
            this.g("FontStyle");
        }
        get fontWeight() {
            return this.ay;
        }
        set fontWeight(a) {
            this.ay = a;
            this.g("FontWeight");
        }
        get id() {
            return this.a2;
        }
        set id(a) {
            this.a2 = a;
            this.g("Id");
        }
        get tabIndex() {
            return this.an;
        }
        set tabIndex(a) {
            this.an = a;
            this.g("TabIndex");
        }
        get ariaLabel() {
            return this.as;
        }
        set ariaLabel(a) {
            this.as = a;
            this.g("AriaLabel");
        }
        get isHover() {
            return this.o;
        }
        set isHover(a) {
            this.o = a;
            this.g("IsHover");
        }
        get disabled() {
            return this.n;
        }
        set disabled(a) {
            this.n = a;
            this.g("Disabled");
        }
        get opacity() {
            return this.v;
        }
        set opacity(a) {
            this.v = a;
            this.g("Opacity");
        }
        get viewBoxLeft() {
            return this.y;
        }
        set viewBoxLeft(a) {
            this.y = a;
            this.g("ViewBoxLeft");
        }
        get viewBoxTop() {
            return this.z;
        }
        set viewBoxTop(a) {
            this.z = a;
            this.g("ViewBoxTop");
        }
        get viewBoxWidth() {
            return this.aa;
        }
        set viewBoxWidth(a) {
            this.aa = a;
            this.g("ViewBoxWidth");
        }
        get viewBoxHeight() {
            return this.x;
        }
        set viewBoxHeight(a) {
            this.x = a;
            this.g("ViewBoxHeight");
        }
        get width() {
            return this.ab;
        }
        set width(a) {
            this.ab = a;
            this.g("Width");
        }
        get height() {
            return this.t;
        }
        set height(a) {
            this.t = a;
            this.g("Height");
        }
    }
    IconDescription.$t = /*@__PURE__*/ markType(IconDescription, 'IconDescription', Description.$);
    return IconDescription;
})();
