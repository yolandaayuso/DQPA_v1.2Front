/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ColumnGroupingDescription } from "./ColumnGroupingDescription";
/**
 * @hidden
 */
export let ColumnGroupingDescriptionMetadata = /*@__PURE__*/ (() => {
    class ColumnGroupingDescriptionMetadata extends Base {
        static b(a) {
            if (ColumnGroupingDescriptionMetadata.a == null) {
                ColumnGroupingDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ColumnGroupingDescriptionMetadata.c(ColumnGroupingDescriptionMetadata.a);
            }
            if (a.k(ColumnGroupingDescriptionMetadata.a)) {
                return;
            }
            a.ac(ColumnGroupingDescriptionMetadata.a);
        }
        static c(a) {
            a.item("TargetGridRef", "(w:TargetGrid,wf:TargetGrid)DataRef::object");
            a.item("BaseTheme", "ExportedType:string:BaseControlTheme");
            a.item("BaseTheme@names", "Default;DenaliLight;MaterialLight;SlingshotLight;SlingshotDark;RevealLight;RevealDark");
            a.item("Density", "ExportedType:string:ControlDisplayDensity");
            a.item("Density@names", "Auto;Comfortable;Cosy;Compact;Minimal");
            a.item("Title", "String");
            a.item("TitleColor", "Brush");
            a.item("ColumnGroupTitleFontFamily", "(w:ColumnGroupTitleFontFamily/FontFamilyTransform,xam:ColumnGroupTitleFontFamily,wf:ColumnGroupTitleFontFamily,web:textStyle/FontFamilyTransform)String");
            a.item("ColumnGroupTitleFontSize", "(w:ColumnGroupTitleFontSize,xam:ColumnGroupTitleFontSize,wf:ColumnGroupTitleFontSize,web:textStyle/FontSizeTransform)Number:double");
            a.item("ColumnGroupTitleFontStyle", "(w:ColumnGroupTitleFontStyle/FontStyleTransform,xam:ColumnGroupTitleFontFamily/FontStyleTransform,wf:ColumnGroupTitleFontFamily/FontStyleTransform,web:textStyle/FontStyleTransform)String");
            a.item("ColumnGroupTitleFontWeight", "(w:ColumnGroupTitleFontWeight/FontWeightTransform,xam:ColumnGroupTitleFontFamily/FontWeightTransform,wf:ColumnGroupTitleFontFamily/FontWeightTransform,web:textStyle/FontWeightTransform)String");
            a.item("TextColor", "Brush");
            a.item("IconColor", "Brush");
            a.item("ItemBackgroundColor", "Brush");
            a.item("ItemHoverBackgroundColor", "Brush");
            a.item("BackgroundColor", "Brush");
        }
        static d(a) {
            ColumnGroupingDescriptionMetadata.b(a);
            a.ae("ColumnGrouping", () => new ColumnGroupingDescription());
            a.ad("ColumnGrouping", ColumnGroupingDescriptionMetadata.a);
        }
    }
    ColumnGroupingDescriptionMetadata.$t = /*@__PURE__*/ markType(ColumnGroupingDescriptionMetadata, 'ColumnGroupingDescriptionMetadata');
    ColumnGroupingDescriptionMetadata.a = null;
    return ColumnGroupingDescriptionMetadata;
})();
