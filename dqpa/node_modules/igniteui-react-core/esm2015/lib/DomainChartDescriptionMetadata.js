/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ChartSeriesEventArgsDescriptionMetadata } from "./ChartSeriesEventArgsDescriptionMetadata";
import { DomainChartSeriesPointerEventArgsDescriptionMetadata } from "./DomainChartSeriesPointerEventArgsDescriptionMetadata";
import { DomainChartPlotAreaPointerEventArgsDescriptionMetadata } from "./DomainChartPlotAreaPointerEventArgsDescriptionMetadata";
import { CalloutStyleUpdatingEventArgsDescriptionMetadata } from "./CalloutStyleUpdatingEventArgsDescriptionMetadata";
import { CalloutRenderStyleUpdatingEventArgsDescriptionMetadata } from "./CalloutRenderStyleUpdatingEventArgsDescriptionMetadata";
import { SeriesViewerSelectedSeriesItemsChangedEventArgsDescriptionMetadata } from "./SeriesViewerSelectedSeriesItemsChangedEventArgsDescriptionMetadata";
import { FilterStringErrorsParsingEventArgsDescriptionMetadata } from "./FilterStringErrorsParsingEventArgsDescriptionMetadata";
/**
 * @hidden
 */
export let DomainChartDescriptionMetadata = /*@__PURE__*/ (() => {
    class DomainChartDescriptionMetadata extends Base {
        static b(a) {
            if (DomainChartDescriptionMetadata.a == null) {
                DomainChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                DomainChartDescriptionMetadata.c(DomainChartDescriptionMetadata.a);
            }
            if (a.k(DomainChartDescriptionMetadata.a)) {
                return;
            }
            a.ac(DomainChartDescriptionMetadata.a);
            ChartSeriesEventArgsDescriptionMetadata.d(a);
            DomainChartSeriesPointerEventArgsDescriptionMetadata.d(a);
            DomainChartPlotAreaPointerEventArgsDescriptionMetadata.d(a);
            CalloutStyleUpdatingEventArgsDescriptionMetadata.d(a);
            CalloutRenderStyleUpdatingEventArgsDescriptionMetadata.d(a);
            SeriesViewerSelectedSeriesItemsChangedEventArgsDescriptionMetadata.d(a);
            FilterStringErrorsParsingEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("PixelScalingRatio", "Number:double");
            a.item("TitleLeftMargin", "Number:double");
            a.item("TitleRightMargin", "Number:double");
            a.item("TitleTopMargin", "Number:double");
            a.item("TitleBottomMargin", "Number:double");
            a.item("SubtitleLeftMargin", "Number:double");
            a.item("SubtitleTopMargin", "Number:double");
            a.item("SubtitleRightMargin", "Number:double");
            a.item("SubtitleBottomMargin", "Number:double");
            a.item("SubtitleTextColor", "Brush");
            a.item("TitleTextColor", "Brush");
            a.item("LeftMargin", "Number:double");
            a.item("TopMargin", "Number:double");
            a.item("RightMargin", "Number:double");
            a.item("BottomMargin", "Number:double");
            a.item("TransitionDuration", "Number:int");
            a.item("TransitionEasingFunctionRef", "(w:TransitionEasingFunction,wf:TransitionEasingFunction)MethodRef");
            a.item("HighlightingTransitionDuration", "Number:int");
            a.item("SelectionTransitionDuration", "Number:int");
            a.item("FocusTransitionDuration", "Number:int");
            a.item("SubtitleTextStyle", "String");
            a.item("TitleTextStyle", "String");
            a.item("DataToolTipGroupingMode", "ExportedType:string:DataToolTipLayerGroupingMode");
            a.item("DataToolTipGroupingMode@names", "Auto;Grouped;Individual");
            a.item("DataToolTipPositionOffsetX", "Number:double");
            a.item("DataToolTipPositionOffsetY", "Number:double");
            a.item("DataToolTipDefaultPositionOffsetX", "Number:double");
            a.item("DataToolTipDefaultPositionOffsetY", "Number:double");
            a.item("DataToolTipGroupedPositionModeX", "ExportedType:string:DataTooltipGroupedPositionX");
            a.item("DataToolTipGroupedPositionModeX@names", "Auto;SnapLeft;SnapRight;SnapMiddle;LeftEdgeSnapLeft;LeftEdgeSnapRight;LeftEdgeSnapMiddle;RightEdgeSnapLeft;RightEdgeSnapRight;RightEdgeSnapMiddle;TrackLeft;TrackRight;TrackMiddle;PinLeft;PinRight;PinMiddle");
            a.item("DataToolTipGroupedPositionModeY", "ExportedType:string:DataTooltipGroupedPositionY");
            a.item("DataToolTipGroupedPositionModeY@names", "Auto;SnapTop;SnapBottom;SnapMiddle;TopEdgeSnapTop;TopEdgeSnapBottom;TopEdgeSnapMiddle;BottomEdgeSnapTop;BottomEdgeSnapBottom;BottomEdgeSnapMiddle;TrackTop;TrackBottom;TrackMiddle;PinTop;PinBottom;PinMiddle");
            a.item("DataToolTipShouldUpdateWhenSeriesDataChanges", "Boolean");
            a.item("DataToolTipIncludedSeries", "Array:string");
            a.item("DataToolTipExcludedSeries", "Array:string");
            a.item("DataToolTipIncludedColumns", "Array:string");
            a.item("DataToolTipExcludedColumns", "Array:string");
            a.item("DataToolTipValueFormatAbbreviation", "ExportedType:string:DataAbbreviationMode");
            a.item("DataToolTipValueFormatAbbreviation@names", "Auto;Independent;Shared;Kilo;Million;Billion;Trillion;Quadrillion;Unset;None");
            a.item("DataToolTipValueFormatMaxFractions", "Number:int");
            a.item("DataToolTipValueFormatMinFractions", "Number:int");
            a.item("DataToolTipValueFormatMode", "ExportedType:string:DataLegendValueMode");
            a.item("DataToolTipValueFormatMode@names", "Auto;Decimal;Currency");
            a.item("DataToolTipValueFormatCulture", "String");
            a.item("DataToolTipValueFormatUseGrouping", "Boolean");
            a.item("DataToolTipValueFormatString", "String");
            a.item("DataToolTipValueFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
            a.item("DataToolTipValueFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
            a.item("DataToolTipValueRowMarginBottom", "(w:DataToolTipValueRowMargin.Bottom,wf:DataToolTipValueRowMarginBottom)Number:double");
            a.item("DataToolTipValueRowMarginLeft", "(w:DataToolTipValueRowMargin.Left,wf:DataToolTipValueRowMarginLeft)Number:double");
            a.item("DataToolTipValueRowMarginRight", "(w:DataToolTipValueRowMargin.Right,wf:DataToolTipValueRowMarginRight)Number:double");
            a.item("DataToolTipValueRowMarginTop", "(w:DataToolTipValueRowMargin.Top,wf:DataToolTipValueRowMarginTop)Number:double");
            a.item("DataToolTipValueRowVisible", "Boolean");
            a.item("DataToolTipValueTextWhenMissingData", "String");
            a.item("DataToolTipValueTextUseSeriesColors", "Boolean");
            a.item("DataToolTipValueTextMarginBottom", "(w:DataToolTipValueTextMargin.Bottom,wf:DataToolTipValueTextMarginBottom)Number:double");
            a.item("DataToolTipValueTextMarginLeft", "(w:DataToolTipValueTextMargin.Left,wf:DataToolTipValueTextMarginLeft)Number:double");
            a.item("DataToolTipValueTextMarginRight", "(w:DataToolTipValueTextMargin.Right,wf:DataToolTipValueTextMarginRight)Number:double");
            a.item("DataToolTipValueTextMarginTop", "(w:DataToolTipValueTextMargin.Top,wf:DataToolTipValueTextMarginTop)Number:double");
            a.item("DataToolTipValueTextColor", "Brush");
            a.item("DataToolTipValueTextFontFamily", "(w:DataToolTipValueTextFontFamily/FontFamilyTransform,xam:DataToolTipValueTextFontFamily,wf:DataToolTipValueTextFontFamily,web:dataToolTipValueTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipValueTextFontSize", "(w:DataToolTipValueTextFontSize,xam:DataToolTipValueTextFontSize,wf:DataToolTipValueTextFontSize,web:dataToolTipValueTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipValueTextFontStyle", "(w:DataToolTipValueTextFontStyle/FontStyleTransform,xam:DataToolTipValueTextFontFamily/FontStyleTransform,wf:DataToolTipValueTextFontFamily/FontStyleTransform,web:dataToolTipValueTextStyle/FontStyleTransform)String");
            a.item("DataToolTipValueTextFontWeight", "(w:DataToolTipValueTextFontWeight/FontWeightTransform,xam:DataToolTipValueTextFontFamily/FontWeightTransform,wf:DataToolTipValueTextFontFamily/FontWeightTransform,web:dataToolTipValueTextStyle/FontWeightTransform)String");
            a.item("DataToolTipHeaderFormatString", "String");
            a.item("DataToolTipHeaderFormatSpecifiers", "Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier");
            a.item("DataToolTipHeaderFormatSpecifiers@mustSetInCode", "WebComponents;Blazor;React;WPF;Angular");
            a.item("DataToolTipHeaderFormatCulture", "String");
            a.item("DataToolTipHeaderFormatDate", "ExportedType:string:DataLegendHeaderDateMode");
            a.item("DataToolTipHeaderFormatDate@names", "Auto;ShortStyle;LongStyle;MediumStyle;FullStyle;None");
            a.item("DataToolTipHeaderFormatTime", "ExportedType:string:DataLegendHeaderTimeMode");
            a.item("DataToolTipHeaderFormatTime@names", "Auto;ShortStyle;LongStyle;MediumStyle;FullStyle;None");
            a.item("DataToolTipHeaderText", "String");
            a.item("DataToolTipHeaderTextColor", "Brush");
            a.item("DataToolTipHeaderTextMarginBottom", "(w:DataToolTipHeaderTextMargin.Bottom,wf:DataToolTipHeaderTextMarginBottom)Number:double");
            a.item("DataToolTipHeaderTextMarginLeft", "(w:DataToolTipHeaderTextMargin.Left,wf:DataToolTipHeaderTextMarginLeft)Number:double");
            a.item("DataToolTipHeaderTextMarginRight", "(w:DataToolTipHeaderTextMargin.Right,wf:DataToolTipHeaderTextMarginRight)Number:double");
            a.item("DataToolTipHeaderTextMarginTop", "(w:DataToolTipHeaderTextMargin.Top,wf:DataToolTipHeaderTextMarginTop)Number:double");
            a.item("DataToolTipHeaderRowMarginBottom", "(w:DataToolTipHeaderRowMargin.Bottom,wf:DataToolTipHeaderRowMarginBottom)Number:double");
            a.item("DataToolTipHeaderRowMarginLeft", "(w:DataToolTipHeaderRowMargin.Left,wf:DataToolTipHeaderRowMarginLeft)Number:double");
            a.item("DataToolTipHeaderRowMarginRight", "(w:DataToolTipHeaderRowMargin.Right,wf:DataToolTipHeaderRowMarginRight)Number:double");
            a.item("DataToolTipHeaderRowMarginTop", "(w:DataToolTipHeaderRowMargin.Top,wf:DataToolTipHeaderRowMarginTop)Number:double");
            a.item("DataToolTipHeaderRowVisible", "Boolean");
            a.item("DataToolTipHeaderTextFontFamily", "(w:DataToolTipHeaderTextFontFamily/FontFamilyTransform,xam:DataToolTipHeaderTextFontFamily,wf:DataToolTipHeaderTextFontFamily,web:dataToolTipHeaderTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipHeaderTextFontSize", "(w:DataToolTipHeaderTextFontSize,xam:DataToolTipHeaderTextFontSize,wf:DataToolTipHeaderTextFontSize,web:dataToolTipHeaderTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipHeaderTextFontStyle", "(w:DataToolTipHeaderTextFontStyle/FontStyleTransform,xam:DataToolTipHeaderTextFontFamily/FontStyleTransform,wf:DataToolTipHeaderTextFontFamily/FontStyleTransform,web:dataToolTipHeaderTextStyle/FontStyleTransform)String");
            a.item("DataToolTipHeaderTextFontWeight", "(w:DataToolTipHeaderTextFontWeight/FontWeightTransform,xam:DataToolTipHeaderTextFontFamily/FontWeightTransform,wf:DataToolTipHeaderTextFontFamily/FontWeightTransform,web:dataToolTipHeaderTextStyle/FontWeightTransform)String");
            a.item("DataToolTipGroupTextColor", "Brush");
            a.item("DataToolTipGroupTextMarginBottom", "(w:DataToolTipGroupTextMargin.Bottom,wf:DataToolTipGroupTextMarginBottom)Number:double");
            a.item("DataToolTipGroupTextMarginLeft", "(w:DataToolTipGroupTextMargin.Left,wf:DataToolTipGroupTextMarginLeft)Number:double");
            a.item("DataToolTipGroupTextMarginRight", "(w:DataToolTipGroupTextMargin.Right,wf:DataToolTipGroupTextMarginRight)Number:double");
            a.item("DataToolTipGroupTextMarginTop", "(w:DataToolTipGroupTextMargin.Top,wf:DataToolTipGroupTextMarginTop)Number:double");
            a.item("DataToolTipGroupRowMarginBottom", "(w:DataToolTipGroupRowMargin.Bottom,wf:DataToolTipGroupRowMarginBottom)Number:double");
            a.item("DataToolTipGroupRowMarginLeft", "(w:DataToolTipGroupRowMargin.Left,wf:DataToolTipGroupRowMarginLeft)Number:double");
            a.item("DataToolTipGroupRowMarginRight", "(w:DataToolTipGroupRowMargin.Right,wf:DataToolTipGroupRowMarginRight)Number:double");
            a.item("DataToolTipGroupRowMarginTop", "(w:DataToolTipGroupRowMargin.Top,wf:DataToolTipGroupRowMarginTop)Number:double");
            a.item("DataToolTipGroupRowVisible", "Boolean");
            a.item("DataToolTipGroupTextFontFamily", "(w:DataToolTipGroupTextFontFamily/FontFamilyTransform,xam:DataToolTipGroupTextFontFamily,wf:DataToolTipGroupTextFontFamily,web:dataToolTipGroupTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipGroupTextFontSize", "(w:DataToolTipGroupTextFontSize,xam:DataToolTipGroupTextFontSize,wf:DataToolTipGroupTextFontSize,web:dataToolTipGroupTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipGroupTextFontStyle", "(w:DataToolTipGroupTextFontStyle/FontStyleTransform,xam:DataToolTipGroupTextFontFamily/FontStyleTransform,wf:DataToolTipGroupTextFontFamily/FontStyleTransform,web:dataToolTipGroupTextStyle/FontStyleTransform)String");
            a.item("DataToolTipGroupTextFontWeight", "(w:DataToolTipGroupTextFontWeight/FontWeightTransform,xam:DataToolTipGroupTextFontFamily/FontWeightTransform,wf:DataToolTipGroupTextFontFamily/FontWeightTransform,web:dataToolTipGroupTextStyle/FontWeightTransform)String");
            a.item("DataToolTipSummaryTitleTextColor", "Brush");
            a.item("DataToolTipSummaryTitleTextFontFamily", "(w:DataToolTipSummaryTitleTextFontFamily/FontFamilyTransform,xam:DataToolTipSummaryTitleTextFontFamily,wf:DataToolTipSummaryTitleTextFontFamily,web:dataToolTipSummaryTitleTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipSummaryTitleTextFontSize", "(w:DataToolTipSummaryTitleTextFontSize,xam:DataToolTipSummaryTitleTextFontSize,wf:DataToolTipSummaryTitleTextFontSize,web:dataToolTipSummaryTitleTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipSummaryTitleTextFontStyle", "(w:DataToolTipSummaryTitleTextFontStyle/FontStyleTransform,xam:DataToolTipSummaryTitleTextFontFamily/FontStyleTransform,wf:DataToolTipSummaryTitleTextFontFamily/FontStyleTransform,web:dataToolTipSummaryTitleTextStyle/FontStyleTransform)String");
            a.item("DataToolTipSummaryTitleTextFontWeight", "(w:DataToolTipSummaryTitleTextFontWeight/FontWeightTransform,xam:DataToolTipSummaryTitleTextFontFamily/FontWeightTransform,wf:DataToolTipSummaryTitleTextFontFamily/FontWeightTransform,web:dataToolTipSummaryTitleTextStyle/FontWeightTransform)String");
            a.item("DataToolTipSummaryType", "ExportedType:string:DataLegendSummaryType");
            a.item("DataToolTipSummaryType@names", "Auto;Total;Average;Min;Max;None");
            a.item("DataToolTipSummaryTitleText", "String");
            a.item("DataToolTipSummaryTitleTextMarginBottom", "(w:DataToolTipSummaryTitleTextMargin.Bottom,wf:DataToolTipSummaryTitleTextMarginBottom)Number:double");
            a.item("DataToolTipSummaryTitleTextMarginLeft", "(w:DataToolTipSummaryTitleTextMargin.Left,wf:DataToolTipSummaryTitleTextMarginLeft)Number:double");
            a.item("DataToolTipSummaryTitleTextMarginRight", "(w:DataToolTipSummaryTitleTextMargin.Right,wf:DataToolTipSummaryTitleTextMarginRight)Number:double");
            a.item("DataToolTipSummaryTitleTextMarginTop", "(w:DataToolTipSummaryTitleTextMargin.Top,wf:DataToolTipSummaryTitleTextMarginTop)Number:double");
            a.item("DataToolTipSummaryRowMarginBottom", "(w:DataToolTipSummaryRowMargin.Bottom,wf:DataToolTipSummaryRowMarginBottom)Number:double");
            a.item("DataToolTipSummaryRowMarginLeft", "(w:DataToolTipSummaryRowMargin.Left,wf:DataToolTipSummaryRowMarginLeft)Number:double");
            a.item("DataToolTipSummaryRowMarginRight", "(w:DataToolTipSummaryRowMargin.Right,wf:DataToolTipSummaryRowMarginRight)Number:double");
            a.item("DataToolTipSummaryRowMarginTop", "(w:DataToolTipSummaryRowMargin.Top,wf:DataToolTipSummaryRowMarginTop)Number:double");
            a.item("DataToolTipSummaryValueTextColor", "Brush");
            a.item("DataToolTipSummaryValueTextFontFamily", "(w:DataToolTipSummaryValueTextFontFamily/FontFamilyTransform,xam:DataToolTipSummaryValueTextFontFamily,wf:DataToolTipSummaryValueTextFontFamily,web:dataToolTipSummaryValueTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipSummaryValueTextFontSize", "(w:DataToolTipSummaryValueTextFontSize,xam:DataToolTipSummaryValueTextFontSize,wf:DataToolTipSummaryValueTextFontSize,web:dataToolTipSummaryValueTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipSummaryValueTextFontStyle", "(w:DataToolTipSummaryValueTextFontStyle/FontStyleTransform,xam:DataToolTipSummaryValueTextFontFamily/FontStyleTransform,wf:DataToolTipSummaryValueTextFontFamily/FontStyleTransform,web:dataToolTipSummaryValueTextStyle/FontStyleTransform)String");
            a.item("DataToolTipSummaryValueTextFontWeight", "(w:DataToolTipSummaryValueTextFontWeight/FontWeightTransform,xam:DataToolTipSummaryValueTextFontFamily/FontWeightTransform,wf:DataToolTipSummaryValueTextFontFamily/FontWeightTransform,web:dataToolTipSummaryValueTextStyle/FontWeightTransform)String");
            a.item("DataToolTipSummaryLabelText", "String");
            a.item("DataToolTipSummaryLabelTextColor", "Brush");
            a.item("DataToolTipSummaryLabelTextFontFamily", "(w:DataToolTipSummaryLabelTextFontFamily/FontFamilyTransform,xam:DataToolTipSummaryLabelTextFontFamily,wf:DataToolTipSummaryLabelTextFontFamily,web:dataToolTipSummaryLabelTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipSummaryLabelTextFontSize", "(w:DataToolTipSummaryLabelTextFontSize,xam:DataToolTipSummaryLabelTextFontSize,wf:DataToolTipSummaryLabelTextFontSize,web:dataToolTipSummaryLabelTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipSummaryLabelTextFontStyle", "(w:DataToolTipSummaryLabelTextFontStyle/FontStyleTransform,xam:DataToolTipSummaryLabelTextFontFamily/FontStyleTransform,wf:DataToolTipSummaryLabelTextFontFamily/FontStyleTransform,web:dataToolTipSummaryLabelTextStyle/FontStyleTransform)String");
            a.item("DataToolTipSummaryLabelTextFontWeight", "(w:DataToolTipSummaryLabelTextFontWeight/FontWeightTransform,xam:DataToolTipSummaryLabelTextFontFamily/FontWeightTransform,wf:DataToolTipSummaryLabelTextFontFamily/FontWeightTransform,web:dataToolTipSummaryLabelTextStyle/FontWeightTransform)String");
            a.item("DataToolTipSummaryUnitsText", "String");
            a.item("DataToolTipSummaryUnitsTextColor", "Brush");
            a.item("DataToolTipSummaryUnitsTextFontFamily", "(w:DataToolTipSummaryUnitsTextFontFamily/FontFamilyTransform,xam:DataToolTipSummaryUnitsTextFontFamily,wf:DataToolTipSummaryUnitsTextFontFamily,web:dataToolTipSummaryUnitsTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipSummaryUnitsTextFontSize", "(w:DataToolTipSummaryUnitsTextFontSize,xam:DataToolTipSummaryUnitsTextFontSize,wf:DataToolTipSummaryUnitsTextFontSize,web:dataToolTipSummaryUnitsTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipSummaryUnitsTextFontStyle", "(w:DataToolTipSummaryUnitsTextFontStyle/FontStyleTransform,xam:DataToolTipSummaryUnitsTextFontFamily/FontStyleTransform,wf:DataToolTipSummaryUnitsTextFontFamily/FontStyleTransform,web:dataToolTipSummaryUnitsTextStyle/FontStyleTransform)String");
            a.item("DataToolTipSummaryUnitsTextFontWeight", "(w:DataToolTipSummaryUnitsTextFontWeight/FontWeightTransform,xam:DataToolTipSummaryUnitsTextFontFamily/FontWeightTransform,wf:DataToolTipSummaryUnitsTextFontFamily/FontWeightTransform,web:dataToolTipSummaryUnitsTextStyle/FontWeightTransform)String");
            a.item("DataToolTipBadgeMarginBottom", "(w:DataToolTipBadgeMargin.Bottom,wf:DataToolTipBadgeMarginBottom)Number:double");
            a.item("DataToolTipBadgeMarginLeft", "(w:DataToolTipBadgeMargin.Left,wf:DataToolTipBadgeMarginLeft)Number:double");
            a.item("DataToolTipBadgeMarginRight", "(w:DataToolTipBadgeMargin.Right,wf:DataToolTipBadgeMarginRight)Number:double");
            a.item("DataToolTipBadgeMarginTop", "(w:DataToolTipBadgeMargin.Top,wf:DataToolTipBadgeMarginTop)Number:double");
            a.item("DataToolTipBadgeShape", "ExportedType:string:LegendItemBadgeShape");
            a.item("DataToolTipBadgeShape@names", "Automatic;Circle;Line;Square;Marker;Bar;Column;Hidden");
            a.item("DataToolTipUnitsDisplayMode", "ExportedType:string:DataLegendUnitsMode");
            a.item("DataToolTipUnitsDisplayMode@names", "Auto;Visible;Hidden");
            a.item("DataToolTipUnitsText", "String");
            a.item("DataToolTipUnitsTextColor", "Brush");
            a.item("DataToolTipUnitsTextMarginBottom", "(w:DataToolTipUnitsTextMargin.Bottom,wf:DataToolTipUnitsTextMarginBottom)Number:double");
            a.item("DataToolTipUnitsTextMarginLeft", "(w:DataToolTipUnitsTextMargin.Left,wf:DataToolTipUnitsTextMarginLeft)Number:double");
            a.item("DataToolTipUnitsTextMarginRight", "(w:DataToolTipUnitsTextMargin.Right,wf:DataToolTipUnitsTextMarginRight)Number:double");
            a.item("DataToolTipUnitsTextMarginTop", "(w:DataToolTipUnitsTextMargin.Top,wf:DataToolTipUnitsTextMarginTop)Number:double");
            a.item("DataToolTipUnitsTextFontFamily", "(w:DataToolTipUnitsTextFontFamily/FontFamilyTransform,xam:DataToolTipUnitsTextFontFamily,wf:DataToolTipUnitsTextFontFamily,web:dataToolTipUnitsTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipUnitsTextFontSize", "(w:DataToolTipUnitsTextFontSize,xam:DataToolTipUnitsTextFontSize,wf:DataToolTipUnitsTextFontSize,web:dataToolTipUnitsTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipUnitsTextFontStyle", "(w:DataToolTipUnitsTextFontStyle/FontStyleTransform,xam:DataToolTipUnitsTextFontFamily/FontStyleTransform,wf:DataToolTipUnitsTextFontFamily/FontStyleTransform,web:dataToolTipUnitsTextStyle/FontStyleTransform)String");
            a.item("DataToolTipUnitsTextFontWeight", "(w:DataToolTipUnitsTextFontWeight/FontWeightTransform,xam:DataToolTipUnitsTextFontFamily/FontWeightTransform,wf:DataToolTipUnitsTextFontFamily/FontWeightTransform,web:dataToolTipUnitsTextStyle/FontWeightTransform)String");
            a.item("DataToolTipTitleTextMarginBottom", "(w:DataToolTipTitleTextMargin.Bottom,wf:DataToolTipTitleTextMarginBottom)Number:double");
            a.item("DataToolTipTitleTextMarginLeft", "(w:DataToolTipTitleTextMargin.Left,wf:DataToolTipTitleTextMarginLeft)Number:double");
            a.item("DataToolTipTitleTextMarginRight", "(w:DataToolTipTitleTextMargin.Right,wf:DataToolTipTitleTextMarginRight)Number:double");
            a.item("DataToolTipTitleTextMarginTop", "(w:DataToolTipTitleTextMargin.Top,wf:DataToolTipTitleTextMarginTop)Number:double");
            a.item("DataToolTipTitleTextColor", "Brush");
            a.item("DataToolTipTitleTextFontFamily", "(w:DataToolTipTitleTextFontFamily/FontFamilyTransform,xam:DataToolTipTitleTextFontFamily,wf:DataToolTipTitleTextFontFamily,web:dataToolTipTitleTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipTitleTextFontSize", "(w:DataToolTipTitleTextFontSize,xam:DataToolTipTitleTextFontSize,wf:DataToolTipTitleTextFontSize,web:dataToolTipTitleTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipTitleTextFontStyle", "(w:DataToolTipTitleTextFontStyle/FontStyleTransform,xam:DataToolTipTitleTextFontFamily/FontStyleTransform,wf:DataToolTipTitleTextFontFamily/FontStyleTransform,web:dataToolTipTitleTextStyle/FontStyleTransform)String");
            a.item("DataToolTipTitleTextFontWeight", "(w:DataToolTipTitleTextFontWeight/FontWeightTransform,xam:DataToolTipTitleTextFontFamily/FontWeightTransform,wf:DataToolTipTitleTextFontFamily/FontWeightTransform,web:dataToolTipTitleTextStyle/FontWeightTransform)String");
            a.item("DataToolTipLabelDisplayMode", "ExportedType:string:DataLegendLabelMode");
            a.item("DataToolTipLabelDisplayMode@names", "Auto;Visible;Hidden");
            a.item("DataToolTipLabelTextColor", "Brush");
            a.item("DataToolTipLabelTextMarginBottom", "(w:DataToolTipLabelTextMargin.Bottom,wf:DataToolTipLabelTextMarginBottom)Number:double");
            a.item("DataToolTipLabelTextMarginLeft", "(w:DataToolTipLabelTextMargin.Left,wf:DataToolTipLabelTextMarginLeft)Number:double");
            a.item("DataToolTipLabelTextMarginRight", "(w:DataToolTipLabelTextMargin.Right,wf:DataToolTipLabelTextMarginRight)Number:double");
            a.item("DataToolTipLabelTextMarginTop", "(w:DataToolTipLabelTextMargin.Top,wf:DataToolTipLabelTextMarginTop)Number:double");
            a.item("DataToolTipLabelTextFontFamily", "(w:DataToolTipLabelTextFontFamily/FontFamilyTransform,xam:DataToolTipLabelTextFontFamily,wf:DataToolTipLabelTextFontFamily,web:dataToolTipLabelTextStyle/FontFamilyTransform)String");
            a.item("DataToolTipLabelTextFontSize", "(w:DataToolTipLabelTextFontSize,xam:DataToolTipLabelTextFontSize,wf:DataToolTipLabelTextFontSize,web:dataToolTipLabelTextStyle/FontSizeTransform)Number:double");
            a.item("DataToolTipLabelTextFontStyle", "(w:DataToolTipLabelTextFontStyle/FontStyleTransform,xam:DataToolTipLabelTextFontFamily/FontStyleTransform,wf:DataToolTipLabelTextFontFamily/FontStyleTransform,web:dataToolTipLabelTextStyle/FontStyleTransform)String");
            a.item("DataToolTipLabelTextFontWeight", "(w:DataToolTipLabelTextFontWeight/FontWeightTransform,xam:DataToolTipLabelTextFontFamily/FontWeightTransform,wf:DataToolTipLabelTextFontFamily/FontWeightTransform,web:dataToolTipLabelTextStyle/FontWeightTransform)String");
            a.item("SortDescriptions", "Collection:ChartSortDescription:ChartSortDescriptionCollection:ChartSortDescription");
            a.item("GroupSortDescriptions", "Collection:ChartSortDescription:ChartSortDescriptionCollection:ChartSortDescription");
            a.item("GroupDescriptions", "Collection:ChartSortDescription:ChartSortDescriptionCollection:ChartSortDescription");
            a.item("FilterExpressions", "Collection:FilterExpression:FilterExpressionCollection:FilterExpression");
            a.item("HighlightFilterExpressions", "Collection:FilterExpression:FilterExpressionCollection:FilterExpression");
            a.item("SummaryDescriptions", "Collection:ChartSummaryDescription:ChartSummaryDescriptionCollection:ChartSummaryDescription");
            a.item("SelectionMode", "ExportedType:string:SeriesSelectionMode");
            a.item("SelectionMode@names", "Auto;None;Brighten;FadeOthers;GrayscaleOthers;FocusColorThickOutline;FocusColorOutline;SelectionColorThickOutline;SelectionColorOutline;FocusColorFill;SelectionColorFill;ThickOutline");
            a.item("FocusMode", "ExportedType:string:SeriesSelectionMode");
            a.item("FocusMode@names", "Auto;None;Brighten;FadeOthers;GrayscaleOthers;FocusColorThickOutline;FocusColorOutline;SelectionColorThickOutline;SelectionColorOutline;FocusColorFill;SelectionColorFill;ThickOutline");
            a.item("SelectionBrush", "Brush");
            a.item("FocusBrush", "Brush");
            a.item("SelectionBehavior", "ExportedType:string:SeriesSelectionBehavior");
            a.item("SelectionBehavior@names", "Auto;PerDataItemMultiSelect;PerDataItemSingleSelect;PerSeriesAndDataItemMultiSelect;PerSeriesAndDataItemSingleSelect;PerSeriesAndDataItemGlobalSingleSelect;PerSeriesMultiSelect;PerSeriesSingleSelect");
            a.item("SelectedSeriesItems", "Collection:ChartSelection:ChartSelectedItemCollection:ChartSelection");
            a.item("FocusedSeriesItems", "Collection:ChartSelection:ChartSelectedItemCollection:ChartSelection");
            a.item("InitialSortDescriptions", "Collection:ChartSortDescription:ChartSortDescriptionCollection:ChartSortDescription");
            a.item("InitialGroupSortDescriptions", "Collection:ChartSortDescription:ChartSortDescriptionCollection:ChartSortDescription");
            a.item("InitialGroupDescriptions", "Collection:ChartSortDescription:ChartSortDescriptionCollection:ChartSortDescription");
            a.item("InitialFilterExpressions", "Collection:FilterExpression:FilterExpressionCollection:FilterExpression");
            a.item("InitialHighlightFilterExpressions", "Collection:FilterExpression:FilterExpressionCollection:FilterExpression");
            a.item("InitialSummaryDescriptions", "Collection:ChartSummaryDescription:ChartSummaryDescriptionCollection:ChartSummaryDescription");
            a.item("InitialSorts", "String");
            a.item("GroupSorts", "String");
            a.item("InitialGroups", "String");
            a.item("InitialFilter", "String");
            a.item("InitialHighlightFilter", "String");
            a.item("InitialSummaries", "String");
            a.item("DataSourceRef", "(w:ItemsSource,xam:ItemsSource,wf:DataSource)DataRef::object");
            a.item("DataSource", "(w:ItemsSource,xam:ItemsSource)ExportedType:BaseDataSource:BaseDataSource");
            a.item("HighlightedDataSourceRef", "(w:HighlightedItemsSource,xam:HighlightedItemsSource,wf:HighlightedDataSource)DataRef::object");
            a.item("HighlightedDataSource", "(w:HighlightedItemsSource,xam:HighlightedItemsSource)ExportedType:BaseDataSource:BaseDataSource");
            a.item("IncludedProperties", "Array:string");
            a.item("ExcludedProperties", "Array:string");
            a.item("Brushes", "BrushCollection:string");
            a.item("Outlines", "BrushCollection:string");
            a.item("ActualBrushes", "BrushCollection:string");
            a.item("ActualOutlines", "BrushCollection:string");
            a.item("LegendRef", "(w:Legend,wf:Legend)DataRef::object");
            a.item("IsHorizontalZoomEnabled", "Boolean");
            a.item("IsVerticalZoomEnabled", "Boolean");
            a.item("ShouldDisplayMockData", "Boolean");
            a.item("ShouldUseSkeletonStyleForMockData", "Boolean");
            a.item("HighlightedValuesDisplayMode", "ExportedType:string:SeriesHighlightedValuesDisplayMode");
            a.item("HighlightedValuesDisplayMode@names", "Auto;Hidden;Overlay");
            a.item("IsSeriesHighlightingEnabled", "Boolean");
            a.item("HighlightedLegendItemVisibility", "ExportedType:string:Visibility");
            a.item("HighlightedLegendItemVisibility@names", "Visible;Collapsed");
            a.item("LegendItemVisibility", "ExportedType:string:Visibility");
            a.item("LegendItemVisibility@names", "Visible;Collapsed");
            a.item("WindowRect", "Rect");
            a.item("ChartTitle", "(w:Title,xam:Title,wf:Title)String");
            a.item("Subtitle", "String");
            a.item("TitleAlignment", "ExportedType:string:HorizontalAlignment");
            a.item("TitleAlignment@names", "Left;Center;Right;Stretch");
            a.item("SubtitleAlignment", "ExportedType:string:HorizontalAlignment");
            a.item("SubtitleAlignment@names", "Left;Center;Right;Stretch");
            a.item("UnknownValuePlotting", "ExportedType:string:UnknownValuePlotting");
            a.item("UnknownValuePlotting@names", "LinearInterpolate;DontPlot");
            a.item("Resolution", "Number:double");
            a.item("Thickness", "Number:double");
            a.item("OutlineMode", "ExportedType:string:SeriesOutlineMode");
            a.item("OutlineMode@names", "Auto;Visible;Collapsed");
            a.item("MarkerOutlineMode", "ExportedType:string:MarkerOutlineMode");
            a.item("MarkerOutlineMode@names", "Auto;Normal;MatchMarkerBrush");
            a.item("MarkerFillMode", "ExportedType:string:MarkerFillMode");
            a.item("MarkerFillMode@names", "Auto;Normal;MatchMarkerOutline");
            a.item("MarkerFillOpacity", "Number:double");
            a.item("MarkerThickness", "Number:double");
            a.item("MarkerTypes", "Collection:string:MarkerTypeCollection:MarkerType");
            a.item("MarkerTypes@names", "Unset;None;Automatic;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram;Hidden");
            a.item("MarkerAutomaticBehavior", "ExportedType:string:MarkerAutomaticBehavior");
            a.item("MarkerAutomaticBehavior@names", "CircleSmart;None;SmartIndexed;Indexed;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram");
            a.item("MarkerBrushes", "BrushCollection:string");
            a.item("MarkerOutlines", "BrushCollection:string");
            a.item("MarkerMaxCount", "Number:int");
            a.item("AreaFillOpacity", "Number:double");
            a.item("AnimateSeriesWhenAxisRangeChanges", "Boolean");
            a.item("TrendLineBrushes", "BrushCollection:string");
            a.item("TrendLineType", "ExportedType:string:TrendLineType");
            a.item("TrendLineType@names", "None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage");
            a.item("TrendLineThickness", "Number:double");
            a.item("AlignsGridLinesToPixels", "Boolean");
            a.item("PlotAreaMarginLeft", "Number:double");
            a.item("PlotAreaMarginTop", "Number:double");
            a.item("PlotAreaMarginRight", "Number:double");
            a.item("PlotAreaMarginBottom", "Number:double");
            a.item("ComputedPlotAreaMarginMode", "ExportedType:string:ComputedPlotAreaMarginMode");
            a.item("ComputedPlotAreaMarginMode@names", "Auto;Series;None");
            a.item("SeriesPlotAreaMarginHorizontalMode", "ExportedType:string:SeriesPlotAreaMarginHorizontalMode");
            a.item("SeriesPlotAreaMarginHorizontalMode@names", "Auto;LeftMarginRightMargin;LeftBufferRightBuffer;LeftMarginRightBuffer;LeftBufferRightMargin;None");
            a.item("SeriesPlotAreaMarginVerticalMode", "ExportedType:string:SeriesPlotAreaMarginVerticalMode");
            a.item("SeriesPlotAreaMarginVerticalMode@names", "Auto;BottomMarginTopMargin;BottomBufferTopBuffer;BottomMarginTopBuffer;BottomBufferTopMargin;None");
            a.item("HighlightingMode", "ExportedType:string:SeriesHighlightingMode");
            a.item("HighlightingMode@names", "Auto;None;BrightenSpecific;Brighten;FadeOthersSpecific;FadeOthers");
            a.item("HighlightingBehavior", "ExportedType:string:SeriesHighlightingBehavior");
            a.item("HighlightingBehavior@names", "Auto;DirectlyOver;NearestItems;NearestItemsRetainMainShapes;NearestItemsAndSeries");
            a.item("LegendHighlightingMode", "ExportedType:string:LegendHighlightingMode");
            a.item("LegendHighlightingMode@names", "Auto;None;MatchSeries");
            a.item("LegendItemBadgeShape", "ExportedType:string:LegendItemBadgeShape");
            a.item("LegendItemBadgeShape@names", "Automatic;Circle;Line;Square;Marker;Bar;Column;Hidden");
            a.item("LegendItemBadgeMode", "ExportedType:string:LegendItemBadgeMode");
            a.item("LegendItemBadgeMode@names", "Simplified;MatchSeries");
            a.item("TrendLinePeriod", "Number:int");
            a.item("ToolTipType", "ExportedType:string:ToolTipType");
            a.item("ToolTipType@names", "Default;Item;Category;None;Data");
            a.item("CrosshairsDisplayMode", "ExportedType:string:CrosshairsDisplayMode");
            a.item("CrosshairsDisplayMode@names", "Auto;None;Horizontal;Vertical;Both");
            a.item("CrosshairsSnapToData", "Boolean");
            a.item("CrosshairsLineVerticalStroke", "Brush");
            a.item("CrosshairsLineThickness", "Number:double");
            a.item("CrosshairsLineHorizontalStroke", "Brush");
            a.item("CrosshairsAnnotationEnabled", "Boolean");
            a.item("CrosshairsAnnotationXAxisBackground", "Brush");
            a.item("CrosshairsAnnotationYAxisBackground", "Brush");
            a.item("CrosshairsAnnotationXAxisTextColor", "Brush");
            a.item("CrosshairsAnnotationYAxisTextColor", "Brush");
            a.item("CrosshairsAnnotationXAxisPrecision", "Number:int");
            a.item("CrosshairsAnnotationYAxisPrecision", "Number:int");
            a.item("ShouldAvoidAxisAnnotationCollisions", "Boolean");
            a.item("ShouldPanOnMaximumZoom", "Boolean");
            a.item("FinalValueAnnotationsVisible", "Boolean");
            a.item("FinalValueAnnotationsBackground", "Brush");
            a.item("FinalValueAnnotationsTextColor", "Brush");
            a.item("FinalValueAnnotationsPrecision", "Number:int");
            a.item("AutoCalloutsVisible", "Boolean");
            a.item("CalloutsVisible", "Boolean");
            a.item("CalloutStyleUpdatingEventEnabled", "Boolean");
            a.item("UseValueForAutoCalloutLabels", "Boolean");
            a.item("CalloutCollisionMode", "ExportedType:string:CalloutCollisionMode");
            a.item("CalloutCollisionMode@names", "Auto;SimulatedAnnealing;Greedy;GreedyCenterOfMass;RadialBestFit;RadialInsideEnd;RadialOutsideEnd;RadialCenter");
            a.item("CalloutsUseItemColorForFill", "Boolean");
            a.item("CalloutsUseItemColorForOutline", "Boolean");
            a.item("CalloutsUseAutoContrastingLabelColors", "Boolean");
            a.item("CalloutsStrokeThickness", "Number:double");
            a.item("CalloutsBackground", "Brush");
            a.item("CalloutsAutoLabelPrecision", "Number:int");
            a.item("CalloutsDataSourceRef", "(w:CalloutsItemsSource,xam:CalloutsItemsSource,wf:CalloutsDataSource)DataRef::object");
            a.item("CalloutsAllowedPositions", "Collection:string:CalloutPlacementPositionsCollection:CalloutPlacementPositions");
            a.item("CalloutsAllowedPositions@names", "Top;Left;Right;Bottom;TopLeft;TopRight;BottomLeft;BottomRight");
            a.item("CalloutsXMemberPath", "String");
            a.item("CalloutsYMemberPath", "String");
            a.item("CalloutsLabelMemberPath", "String");
            a.item("CalloutsContentMemberPath", "String");
            a.item("ValueLines", "Collection:string:ValueModeCollection:ValueLayerValueMode");
            a.item("ValueLines@names", "Auto;Minimum;Maximum;Average;GlobalMinimum;GlobalMaximum;GlobalAverage");
            a.item("ValueLinesBrushes", "BrushCollection:string");
            a.item("ValueLinesThickness", "Number:double");
            a.item("SeriesValueLayerUseLegend", "Boolean");
            a.item("HorizontalViewScrollbarMode", "ExportedType:string:SeriesViewerScrollbarMode");
            a.item("HorizontalViewScrollbarMode@names", "None;Fading;FadeToLine;Persistent");
            a.item("VerticalViewScrollbarMode", "ExportedType:string:SeriesViewerScrollbarMode");
            a.item("VerticalViewScrollbarMode@names", "None;Fading;FadeToLine;Persistent");
            a.item("HorizontalViewScrollbarPosition", "ExportedType:string:SeriesViewerHorizontalScrollbarPosition");
            a.item("HorizontalViewScrollbarPosition@names", "Auto;InsideBottom;InsideTop");
            a.item("VerticalViewScrollbarPosition", "ExportedType:string:SeriesViewerVerticalScrollbarPosition");
            a.item("VerticalViewScrollbarPosition@names", "Auto;InsideLeft;InsideRight");
            a.item("HorizontalViewScrollbarFill", "Brush");
            a.item("HorizontalViewScrollbarOutline", "Brush");
            a.item("HorizontalViewScrollbarStrokeThickness", "Number:double");
            a.item("HorizontalViewScrollbarMaxOpacity", "Number:double");
            a.item("HorizontalViewScrollbarCornerRadius", "Number:double");
            a.item("HorizontalViewScrollbarHeight", "Number:double");
            a.item("HorizontalViewScrollbarInset", "Number:double");
            a.item("HorizontalViewScrollbarTrackStartInset", "Number:double");
            a.item("HorizontalViewScrollbarTrackEndInset", "Number:double");
            a.item("HorizontalViewScrollbarShouldAddAutoTrackInsets", "Boolean");
            a.item("VerticalViewScrollbarFill", "Brush");
            a.item("VerticalViewScrollbarOutline", "Brush");
            a.item("VerticalViewScrollbarStrokeThickness", "Number:double");
            a.item("VerticalViewScrollbarMaxOpacity", "Number:double");
            a.item("VerticalViewScrollbarCornerRadius", "Number:double");
            a.item("VerticalViewScrollbarWidth", "Number:double");
            a.item("VerticalViewScrollbarInset", "Number:double");
            a.item("VerticalViewScrollbarTrackStartInset", "Number:double");
            a.item("VerticalViewScrollbarTrackEndInset", "Number:double");
            a.item("VerticalViewScrollbarShouldAddAutoTrackInsets", "Boolean");
            a.item("WindowRectMinWidth", "Number:double");
            a.item("WindowRectMinHeight", "Number:double");
            a.item("WindowSizeMinWidth", "Number:double");
            a.item("WindowSizeMinHeight", "Number:double");
            a.item("SeriesAddedRef", "EventRef::seriesAdded");
            a.item("SeriesRemovedRef", "EventRef::seriesRemoved");
            a.item("SeriesPointerEnterRef", "EventRef::seriesPointerEnter");
            a.item("SeriesPointerLeaveRef", "EventRef::seriesPointerLeave");
            a.item("SeriesPointerMoveRef", "EventRef::seriesPointerMove");
            a.item("SeriesPointerDownRef", "EventRef::seriesPointerDown");
            a.item("SeriesPointerUpRef", "EventRef::seriesPointerUp");
            a.item("SeriesClickRef", "EventRef::seriesClick");
            a.item("PlotAreaPointerEnterRef", "EventRef::plotAreaPointerEnter");
            a.item("PlotAreaPointerLeaveRef", "EventRef::plotAreaPointerLeave");
            a.item("PlotAreaPointerMoveRef", "EventRef::plotAreaPointerMove");
            a.item("PlotAreaPointerDownRef", "EventRef::plotAreaPointerDown");
            a.item("PlotAreaPointerUpRef", "EventRef::plotAreaPointerUp");
            a.item("CalloutStyleUpdatingRef", "EventRef::calloutStyleUpdating");
            a.item("CalloutRenderStyleUpdatingRef", "EventRef::calloutRenderStyleUpdating");
            a.item("SelectedSeriesItemsChangedRef", "EventRef::selectedSeriesItemsChanged");
            a.item("FocusedSeriesItemsChangedRef", "EventRef::focusedSeriesItemsChanged");
            a.item("FilterStringErrorsParsingRef", "EventRef::filterStringErrorsParsing");
        }
        static d(a) {
            DomainChartDescriptionMetadata.b(a);
            a.ad("DomainChart", DomainChartDescriptionMetadata.a);
        }
    }
    DomainChartDescriptionMetadata.$t = /*@__PURE__*/ markType(DomainChartDescriptionMetadata, 'DomainChartDescriptionMetadata');
    DomainChartDescriptionMetadata.a = null;
    return DomainChartDescriptionMetadata;
})();
