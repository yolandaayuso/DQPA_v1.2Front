/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { NativeUIComponent } from "./NativeUIComponent";
import { enumGetBox, EnumUtil, markType } from "./type";
import { NativeUIDisplayDensity_$type } from "./NativeUIDisplayDensity";
import { NativeUIButtonGroupDisplayType_$type } from "./NativeUIButtonGroupDisplayType";
/**
 * @hidden
 */
export let NativeUIButtonGroup = /*@__PURE__*/ (() => {
    class NativeUIButtonGroup extends NativeUIComponent {
        constructor() {
            super(...arguments);
            this.bo = null;
        }
        get_e() {
            return 17;
        }
        get bk() {
            let a = this.ag(84);
            return a;
        }
        set bk(a) {
            this.a4(84, a);
        }
        get bq() {
            let a = this.ag(1);
            return a == null ? 1 : EnumUtil.getEnumValue(NativeUIDisplayDensity_$type, a);
        }
        set bq(a) {
            this.a4(1, enumGetBox(NativeUIDisplayDensity_$type, a));
        }
        get bn() {
            let a = this.ag(0);
            return a == null ? 1 : EnumUtil.getEnumValue(NativeUIButtonGroupDisplayType_$type, a);
        }
        set bn(a) {
            this.a4(0, enumGetBox(NativeUIButtonGroupDisplayType_$type, a));
        }
        get br() {
            return this.ag(32);
        }
        set br(a) {
            this.a4(32, a);
        }
        get by() {
            return this.ag(24);
        }
        set by(a) {
            this.a4(24, a);
        }
        get bx() {
            return this.ag(17);
        }
        set bx(a) {
            this.a4(17, a);
        }
        get bl() {
            return this.d;
        }
        bs(a) {
            this.bl.addButton(this.am, a);
        }
        bw(a, b) {
            this.bl.updateButton(this.am, a, b);
        }
        bu(a, b) {
            this.bl.insertButton(this.am, a, b);
        }
        bv(a) {
            this.bl.removeButton(this.am, a);
        }
        bm(a) {
            return this.bl.getButtonAt(this.am, a);
        }
        get bp() {
            return this.bo;
        }
        set bp(a) {
            let b = this.bo;
            this.bo = a;
            if (this.bo != b) {
                if (b != null) {
                    this.a2(3, b);
                }
                if (this.bo != null) {
                    this.aq(3, this.bo);
                }
            }
        }
        bt() {
            this.bl.clearSelection(this.am);
        }
    }
    NativeUIButtonGroup.$t = /*@__PURE__*/ markType(NativeUIButtonGroup, 'NativeUIButtonGroup', NativeUIComponent.$);
    return NativeUIButtonGroup;
})();
