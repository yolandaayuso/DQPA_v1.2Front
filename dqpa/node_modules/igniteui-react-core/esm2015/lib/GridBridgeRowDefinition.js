/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
import { isNaN_ } from "./number";
/**
 * @hidden
 */
export let GridBridgeRowDefinition = /*@__PURE__*/ (() => {
    class GridBridgeRowDefinition extends Base {
        constructor() {
            super();
            this.a = 0;
            this.b = 0;
            this.c = 0;
            this.c = NaN;
        }
        d() {
            switch (this.a) {
                case 0: return "auto";
                case 1: return this.b + "px";
                case 2: return isNaN_(this.c) ? this.b + "fr" : "minmax(" + this.c + "px," + this.b + "fr)";
            }
            return "";
        }
    }
    GridBridgeRowDefinition.$t = /*@__PURE__*/ markType(GridBridgeRowDefinition, 'GridBridgeRowDefinition');
    return GridBridgeRowDefinition;
})();
