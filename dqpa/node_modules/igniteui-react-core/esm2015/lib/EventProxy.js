/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "./type";
/**
 * @hidden
 */
export let EventProxy = /*@__PURE__*/ (() => {
    class EventProxy extends Base {
        constructor() {
            super(...arguments);
            this.onMouseWheel = null;
            this.onMouseWheelHorizontal = null;
            this.onPinchStarted = null;
            this.onPinchDelta = null;
            this.onGestureCompleted = null;
            this.onZoomStarted = null;
            this.onZoomDelta = null;
            this.onZoomCompleted = null;
            this.onFlingStarted = null;
            this.onContactStarted = null;
            this.onManipulationCancelled = null;
            this.onDragStarted = null;
            this.onContactMoved = null;
            this.onDragDelta = null;
            this.onContactCompleted = null;
            this.onDragCompleted = null;
            this.onMouseLeave = null;
            this.onMouseOver = null;
            this.onMouseEnter = null;
            this.onMouseDown = null;
            this.onMouseUp = null;
            this.onDoubleTap = null;
            this.onHold = null;
            this.onKeyDown = null;
            this.onKeyUp = null;
            this.bl = null;
            this.bi = 0;
            this.al = false;
            this.am = false;
            this.ao = null;
            this.aq = null;
            this.ar = null;
            this.as = null;
            this.aa = false;
            this.ab = false;
            this.af = false;
            this.ap = null;
        }
        ad(a, b, c) {
            if (this.aq != null) {
                return this.aq(a, b, c);
            }
            return this.ao(a);
        }
        get_an() {
            return false;
        }
        get an() {
            return this.get_an();
        }
        get_ac() {
            return false;
        }
        get ac() {
            return this.get_ac();
        }
        au() {
        }
        aj(a, b) {
            if (this.onMouseWheel != null && !this.ae) {
                return this.onMouseWheel(a, b);
            }
            return false;
        }
        ak(a, b) {
            if (this.onMouseWheelHorizontal != null && !this.ae) {
                return this.onMouseWheelHorizontal(a, b);
            }
            return false;
        }
        bd(a, b) {
            if (this.onPinchStarted != null && !this.ae) {
                this.onPinchStarted(a, b);
            }
        }
        bg(a, b, c, d) {
            if (this.onZoomStarted != null && !this.ae) {
                this.onZoomStarted(a, b, c, d);
            }
        }
        ag(a, b, c) {
            if (this.onFlingStarted != null && !this.ae) {
                return this.onFlingStarted(a, b, c);
            }
            return true;
        }
        bc(a, b) {
            if (this.onPinchDelta != null && !this.ae) {
                this.onPinchDelta(a, b);
            }
        }
        bf(a, b, c, d) {
            if (this.onZoomDelta != null && !this.ae) {
                this.onZoomDelta(a, b, c, d);
            }
        }
        be(a, b, c, d) {
            if (this.onZoomCompleted != null && !this.ae) {
                this.onZoomCompleted(a, b, c, d);
            }
        }
        a4(a, b) {
            if (this.onGestureCompleted != null && !this.ae) {
                this.onGestureCompleted(a, b);
            }
        }
        a6(a) {
            if (this.onManipulationCancelled != null && !this.ae) {
                this.onManipulationCancelled(a);
            }
        }
        az(a, b) {
            if (this.onContactStarted != null && !this.ae) {
                this.onContactStarted(a, b);
            }
        }
        a3(a) {
            if (this.onDragStarted != null && !this.ae) {
                this.onDragStarted(a);
            }
        }
        ay(a, b) {
            if (this.onContactMoved != null && !this.ae) {
                this.onContactMoved(a, b);
            }
        }
        a2(a) {
            if (this.onDragDelta != null && !this.ae) {
                this.onDragDelta(a);
            }
        }
        ax(a, b, c) {
            if (this.onContactCompleted != null && !this.ae) {
                this.am = c;
                this.onContactCompleted(a, b);
                this.am = false;
            }
        }
        a1(a) {
            if (this.onDragCompleted != null && !this.ae) {
                this.onDragCompleted(a);
            }
        }
        a9(a) {
            if (this.onMouseLeave != null && !this.ae) {
                this.onMouseLeave(a);
            }
        }
        ba(a, b, c) {
            if (this.onMouseOver != null && !this.ae) {
                this.onMouseOver(a, b, c);
            }
        }
        a8(a) {
            if (this.onMouseEnter != null && !this.ae) {
                this.onMouseEnter(a);
            }
        }
        a7(a) {
            if (this.onMouseDown != null && !this.ae) {
                this.onMouseDown(a);
            }
        }
        bb(a) {
            if (this.onMouseUp != null && !this.ae) {
                this.onMouseUp(a);
            }
        }
        ah(a) {
            if (this.onKeyDown != null && !this.ae) {
                return this.onKeyDown(a);
            }
            return false;
        }
        ai(a) {
            if (this.onKeyUp != null && !this.ae) {
                return this.onKeyUp(a);
            }
            return false;
        }
        a0(a) {
            if (this.onDoubleTap != null && !this.ae) {
                this.onDoubleTap(a);
            }
        }
        a5(a) {
            if (this.onHold != null && !this.ae) {
                this.onHold(a);
            }
        }
        get ae() {
            return this.aa;
        }
        set ae(a) {
            this.aa = a;
            this.aw();
        }
        aw() {
        }
    }
    EventProxy.$t = /*@__PURE__*/ markType(EventProxy, 'EventProxy');
    return EventProxy;
})();
