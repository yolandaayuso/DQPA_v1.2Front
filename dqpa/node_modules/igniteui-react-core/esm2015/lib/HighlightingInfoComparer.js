/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, IEqualityComparer$1_$type, markType } from "./type";
import { HighlightingInfo } from "./HighlightingInfo";
/**
 * @hidden
 */
export let HighlightingInfoComparer = /*@__PURE__*/ (() => {
    class HighlightingInfoComparer extends Base {
        equalsC(a, b) {
            if (a == null && b != null) {
                return false;
            }
            if (a != null && b == null) {
                return false;
            }
            return a.d == b.d && a.g == b.g && a.f == b.f && a.i == b.i;
        }
        getHashCodeC(a) {
            let b = 23;
            b = b * 31 + (a.d ? 1 : 0);
            b = b * 31 + a.g;
            b = b * 31 + a.f;
            b = b * 31 + (a.i != null ? Base.getHashCodeStatic(a.i) : 0);
            return b;
        }
    }
    HighlightingInfoComparer.$t = /*@__PURE__*/ markType(HighlightingInfoComparer, 'HighlightingInfoComparer', Base.$, [/*@__PURE__*/ IEqualityComparer$1_$type.specialize(HighlightingInfo.$)]);
    return HighlightingInfoComparer;
})();
