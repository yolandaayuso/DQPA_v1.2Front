/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ShapefileRecordDescription } from "./ShapefileRecordDescription";
/**
 * @hidden
 */
export let ShapefileRecordDescriptionMetadata = /*@__PURE__*/ (() => {
    class ShapefileRecordDescriptionMetadata extends Base {
        static b(a) {
            if (ShapefileRecordDescriptionMetadata.a == null) {
                ShapefileRecordDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ShapefileRecordDescriptionMetadata.c(ShapefileRecordDescriptionMetadata.a);
            }
            if (a.k(ShapefileRecordDescriptionMetadata.a)) {
                return;
            }
            a.ac(ShapefileRecordDescriptionMetadata.a);
        }
        static c(a) {
            a.item("FieldValuesRef", "(w:FieldValues,wf:FieldValues)DataRef");
            a.item("Bounds", "Rect");
        }
        static d(a) {
            ShapefileRecordDescriptionMetadata.b(a);
            a.ae("ShapefileRecord", () => new ShapefileRecordDescription());
            a.ad("ShapefileRecord", ShapefileRecordDescriptionMetadata.a);
        }
    }
    ShapefileRecordDescriptionMetadata.$t = /*@__PURE__*/ markType(ShapefileRecordDescriptionMetadata, 'ShapefileRecordDescriptionMetadata');
    ShapefileRecordDescriptionMetadata.a = null;
    return ShapefileRecordDescriptionMetadata;
})();
