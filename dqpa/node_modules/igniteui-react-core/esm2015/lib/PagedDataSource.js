/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { LocalDataSource } from "./LocalDataSource";
import { DataSourceExecutionContext } from "./DataSourceExecutionContext";
import { markType } from "./type";
/**
 * @hidden
 */
export let PagedDataSource = /*@__PURE__*/ (() => {
    class PagedDataSource extends LocalDataSource {
        constructor(a) {
            super();
            this.ec = null;
            this.ed = false;
            this.actualDataProvider = a;
            this.actualDataProvider.executionContext = new DataSourceExecutionContext();
        }
        isPlaceholderItem(a) {
            return !this.ed;
        }
        getItemPropertyAtIndex(a, b) {
            if (this.ec.isVirtual) {
                if (this.getRowType(a) != 0) {
                    return super.getItemPropertyAtIndex(a, b);
                }
                else {
                    let c = this.getItemAtIndex(a);
                    if (c == null) {
                        return null;
                    }
                    return this.getItemProperty(c, b);
                }
            }
            return super.getItemPropertyAtIndex(a, b);
        }
        getItemProperty(a, b) {
            if (a == null) {
                return null;
            }
            if (this.ec.isVirtual) {
                return this.ec.getItemProperty(a, b);
            }
            return super.getItemProperty(a, b);
        }
        setSchema(a) {
            if (this.actualBaseDataProvider != null) {
                this.actualBaseDataProvider.setSchema(a);
                this.queueAutoRefresh();
            }
        }
    }
    PagedDataSource.$t = /*@__PURE__*/ markType(PagedDataSource, 'PagedDataSource', LocalDataSource.$);
    return PagedDataSource;
})();
