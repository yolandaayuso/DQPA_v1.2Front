/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebFilteringExpressionDescription = /*@__PURE__*/ (() => {
    class WebFilteringExpressionDescription extends Description {
        get_type() {
            return "WebFilteringExpression";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.p = null;
            this.h = null;
            this.m = null;
            this.k = false;
        }
        get fieldName() {
            return this.p;
        }
        set fieldName(a) {
            this.p = a;
            this.g("FieldName");
        }
        get condition() {
            return this.h;
        }
        set condition(a) {
            this.h = a;
            this.g("Condition");
        }
        get searchVal() {
            return this.m;
        }
        set searchVal(a) {
            this.m = a;
            this.g("SearchVal");
        }
        get ignoreCase() {
            return this.k;
        }
        set ignoreCase(a) {
            this.k = a;
            this.g("IgnoreCase");
        }
    }
    WebFilteringExpressionDescription.$t = /*@__PURE__*/ markType(WebFilteringExpressionDescription, 'WebFilteringExpressionDescription', Description.$);
    WebFilteringExpressionDescription.__marshalByValue = true;
    WebFilteringExpressionDescription.__marshalByValueAlias = "FilteringExpression";
    return WebFilteringExpressionDescription;
})();
