/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GeographicMapSeriesHostDescription } from "./GeographicMapSeriesHostDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let GeographicShapeSeriesBaseDescription = /*@__PURE__*/ (() => {
    class GeographicShapeSeriesBaseDescription extends GeographicMapSeriesHostDescription {
        get_type() {
            return "GeographicShapeSeriesBase";
        }
        constructor() {
            super();
            this.fr = null;
            this.fd = false;
            this.fc = false;
            this.fq = null;
            this.fk = 0;
            this.fp = null;
            this.e7 = null;
            this.fb = false;
            this.fj = 0;
            this.e9 = null;
            this.fh = 0;
            this.fo = null;
            this.fn = null;
        }
        get shapeMemberPath() {
            return this.fr;
        }
        set shapeMemberPath(a) {
            this.fr = a;
            this.g("ShapeMemberPath");
        }
        get isCustomShapeStyleAllowed() {
            return this.fd;
        }
        set isCustomShapeStyleAllowed(a) {
            this.fd = a;
            this.g("IsCustomShapeStyleAllowed");
        }
        get isCustomShapeMarkerStyleAllowed() {
            return this.fc;
        }
        set isCustomShapeMarkerStyleAllowed(a) {
            this.fc = a;
            this.g("IsCustomShapeMarkerStyleAllowed");
        }
        get itemSearchMode() {
            return this.fq;
        }
        set itemSearchMode(a) {
            this.fq = a;
            this.g("ItemSearchMode");
        }
        get itemSearchThreshold() {
            return this.fk;
        }
        set itemSearchThreshold(a) {
            this.fk = a;
            this.g("ItemSearchThreshold");
        }
        get fillMemberPath() {
            return this.fp;
        }
        set fillMemberPath(a) {
            this.fp = a;
            this.g("FillMemberPath");
        }
        get fillScale() {
            return this.e7;
        }
        set fillScale(a) {
            this.e7 = a;
            this.g("FillScale");
        }
        get fillScaleUseGlobalValues() {
            return this.fb;
        }
        set fillScaleUseGlobalValues(a) {
            this.fb = a;
            this.g("FillScaleUseGlobalValues");
        }
        get itemSearchPointsThreshold() {
            return this.fj;
        }
        set itemSearchPointsThreshold(a) {
            this.fj = a;
            this.g("ItemSearchPointsThreshold");
        }
        get shapefileDataSource() {
            return this.e9;
        }
        set shapefileDataSource(a) {
            this.e9 = a;
            this.g("ShapefileDataSource");
        }
        get shapeFilterResolution() {
            return this.fh;
        }
        set shapeFilterResolution(a) {
            this.fh = a;
            this.g("ShapeFilterResolution");
        }
        get assigningShapeStyleRef() {
            return this.fo;
        }
        set assigningShapeStyleRef(a) {
            this.fo = a;
            this.g("AssigningShapeStyleRef");
        }
        get assigningShapeMarkerStyleRef() {
            return this.fn;
        }
        set assigningShapeMarkerStyleRef(a) {
            this.fn = a;
            this.g("AssigningShapeMarkerStyleRef");
        }
    }
    GeographicShapeSeriesBaseDescription.$t = /*@__PURE__*/ markType(GeographicShapeSeriesBaseDescription, 'GeographicShapeSeriesBaseDescription', GeographicMapSeriesHostDescription.$);
    return GeographicShapeSeriesBaseDescription;
})();
