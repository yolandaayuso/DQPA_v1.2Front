/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotDimensionStrategyDescriptionMetadata } from "./WebPivotDimensionStrategyDescriptionMetadata";
import { WebPivotDimensionDescriptionMetadata } from "./WebPivotDimensionDescriptionMetadata";
import { WebPivotValueDescriptionMetadata } from "./WebPivotValueDescriptionMetadata";
import { WebPivotKeysDescriptionMetadata } from "./WebPivotKeysDescriptionMetadata";
import { WebPivotConfigurationDescription } from "./WebPivotConfigurationDescription";
/**
 * @hidden
 */
export let WebPivotConfigurationDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebPivotConfigurationDescriptionMetadata extends Base {
        static b(a) {
            if (WebPivotConfigurationDescriptionMetadata.a == null) {
                WebPivotConfigurationDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebPivotConfigurationDescriptionMetadata.c(WebPivotConfigurationDescriptionMetadata.a);
            }
            if (a.k(WebPivotConfigurationDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebPivotConfigurationDescriptionMetadata.a);
            WebPivotDimensionStrategyDescriptionMetadata.d(a);
            WebPivotDimensionDescriptionMetadata.d(a);
            WebPivotValueDescriptionMetadata.d(a);
            WebPivotKeysDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:PivotConfiguration");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("__isPlainObject", "Boolean");
            a.item("__marshalByValue", "Boolean");
            a.item("__skipSuffix", "Boolean");
            a.item("RowStrategy", "ExportedType:WebPivotDimensionStrategy");
            a.item("ColumnStrategy", "ExportedType:WebPivotDimensionStrategy");
            a.item("Rows", "Array:WebPivotDimensionDescription:PivotDimension");
            a.item("Columns", "Array:WebPivotDimensionDescription:PivotDimension");
            a.item("Values", "Array:WebPivotValueDescription:PivotValue");
            a.item("Filters", "Array:WebPivotDimensionDescription:PivotDimension");
            a.item("PivotKeys", "ExportedType:WebPivotKeys");
        }
        static d(a) {
            WebPivotConfigurationDescriptionMetadata.b(a);
            a.ae("WebPivotConfiguration", () => new WebPivotConfigurationDescription());
            a.ad("WebPivotConfiguration", WebPivotConfigurationDescriptionMetadata.a);
        }
    }
    WebPivotConfigurationDescriptionMetadata.$t = /*@__PURE__*/ markType(WebPivotConfigurationDescriptionMetadata, 'WebPivotConfigurationDescriptionMetadata');
    WebPivotConfigurationDescriptionMetadata.a = null;
    return WebPivotConfigurationDescriptionMetadata;
})();
