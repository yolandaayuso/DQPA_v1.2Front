/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { NumericAxisBaseDescriptionMetadata } from "./NumericAxisBaseDescriptionMetadata";
/**
 * @hidden
 */
export let StraightNumericAxisBaseDescriptionMetadata = /*@__PURE__*/ (() => {
    class StraightNumericAxisBaseDescriptionMetadata extends Base {
        static b(a) {
            if (StraightNumericAxisBaseDescriptionMetadata.a == null) {
                StraightNumericAxisBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                StraightNumericAxisBaseDescriptionMetadata.c(StraightNumericAxisBaseDescriptionMetadata.a);
            }
            if (a.k(StraightNumericAxisBaseDescriptionMetadata.a)) {
                return;
            }
            a.ac(StraightNumericAxisBaseDescriptionMetadata.a);
        }
        static c(a) {
            NumericAxisBaseDescriptionMetadata.c(a);
            a.item("ScaleMode", "ExportedType:string:NumericScaleMode");
            a.item("ScaleMode@names", "Linear;Logarithmic");
        }
        static d(a) {
            StraightNumericAxisBaseDescriptionMetadata.b(a);
            a.ad("StraightNumericAxisBase", StraightNumericAxisBaseDescriptionMetadata.a);
        }
    }
    StraightNumericAxisBaseDescriptionMetadata.$t = /*@__PURE__*/ markType(StraightNumericAxisBaseDescriptionMetadata, 'StraightNumericAxisBaseDescriptionMetadata');
    StraightNumericAxisBaseDescriptionMetadata.a = null;
    return StraightNumericAxisBaseDescriptionMetadata;
})();
