/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { ResponsiveStateEnteringEventArgsDescriptionMetadata } from "./ResponsiveStateEnteringEventArgsDescriptionMetadata";
import { ResponsiveStateEnteredEventArgsDescriptionMetadata } from "./ResponsiveStateEnteredEventArgsDescriptionMetadata";
import { ResponsiveStateExitedEventArgsDescriptionMetadata } from "./ResponsiveStateExitedEventArgsDescriptionMetadata";
import { ResponsiveStateDescription } from "./ResponsiveStateDescription";
/**
 * @hidden
 */
export let ResponsiveStateDescriptionMetadata = /*@__PURE__*/ (() => {
    class ResponsiveStateDescriptionMetadata extends Base {
        static b(a) {
            if (ResponsiveStateDescriptionMetadata.a == null) {
                ResponsiveStateDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                ResponsiveStateDescriptionMetadata.c(ResponsiveStateDescriptionMetadata.a);
            }
            if (a.k(ResponsiveStateDescriptionMetadata.a)) {
                return;
            }
            a.ac(ResponsiveStateDescriptionMetadata.a);
            ResponsiveStateEnteringEventArgsDescriptionMetadata.d(a);
            ResponsiveStateEnteredEventArgsDescriptionMetadata.d(a);
            ResponsiveStateExitedEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("Name", "String");
            a.item("MinimumWidth", "Number:double");
            a.item("MaximumWidth", "Number:double");
            a.item("IsManualState", "Boolean");
            a.item("StateEnteringRef", "EventRef::stateEntering");
            a.item("StateEnteredRef", "EventRef::stateEntered");
            a.item("StateExitedRef", "EventRef::stateExited");
        }
        static d(a) {
            ResponsiveStateDescriptionMetadata.b(a);
            a.ae("ResponsiveState", () => new ResponsiveStateDescription());
            a.ad("ResponsiveState", ResponsiveStateDescriptionMetadata.a);
        }
    }
    ResponsiveStateDescriptionMetadata.$t = /*@__PURE__*/ markType(ResponsiveStateDescriptionMetadata, 'ResponsiveStateDescriptionMetadata');
    ResponsiveStateDescriptionMetadata.a = null;
    return ResponsiveStateDescriptionMetadata;
})();
