/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { IDataSeriesAdapterRule_$type } from "./IDataSeriesAdapterRule";
import { List$1 } from "./List$1";
/**
 * @hidden
 */
export let PriorityDataRule = /*@__PURE__*/ (() => {
    class PriorityDataRule extends Base {
        constructor() {
            super(...arguments);
            this._priority = 0;
        }
        get priority() {
            return this._priority;
        }
        set priority(a) {
            this._priority = a;
        }
        evaluate(a) {
        }
        getPrimaryAxisLabelsString(a) {
            return null;
        }
        a(a) {
            let b = new List$1(String_$type, 0);
            for (let d = 0; d < a.length; d++) {
                let c = a[d];
                b.add(c);
            }
            return b;
        }
        getPrimaryAxisLabelsStrings(a) {
            let b = this.getPrimaryAxisLabelsString(a);
            if (b == null) {
                return null;
            }
            return [b];
        }
        getAdditionalValuePropertyStrings(a) {
            return null;
        }
    }
    PriorityDataRule.$t = /*@__PURE__*/ markType(PriorityDataRule, 'PriorityDataRule', Base.$, [IDataSeriesAdapterRule_$type]);
    return PriorityDataRule;
})();
