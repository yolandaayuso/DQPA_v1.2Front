/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { FilterSyntaxVisitor } from "./FilterSyntaxVisitor";
import { StringBuilder } from "./StringBuilder";
import { markType } from "./type";
import { FilterSyntaxPrintingHelper } from "./FilterSyntaxPrintingHelper";
/**
 * @hidden
 */
export let TestFilterSyntaxVisitor = /*@__PURE__*/ (() => {
    class TestFilterSyntaxVisitor extends FilterSyntaxVisitor {
        constructor() {
            super();
            this.l = new StringBuilder(0);
        }
        get k() {
            return this.l.toString();
        }
        c(a) {
            this.l.l("[[");
            this.l.l(FilterSyntaxPrintingHelper.b(a.d));
            this.l.l(" ");
            this.b(a.b);
            this.l.l(" ");
            this.b(a.c);
            this.l.l("]]");
        }
        d(a) {
            this.l.l(FilterSyntaxPrintingHelper.a(a));
        }
        e(a) {
            this.b(a.b);
            if (a.c != null) {
                this.l.l(".");
                this.b(a.c);
            }
        }
        f(a) {
            this.b(a.c);
            this.l.l("(");
            if (a.b != null) {
                let b = true;
                let e = a.b;
                for (let d = 0; d < e.length; d++) {
                    let c = e[d];
                    if (b) {
                        b = false;
                    }
                    else {
                        this.l.l(", ");
                    }
                    this.b(c);
                }
            }
            this.l.l(")");
        }
        g(a) {
            this.l.l("null");
        }
        h(a) {
            this.l.l("(");
            this.b(a.b);
            this.l.l(")");
        }
        i(a) {
            this.l.l(FilterSyntaxPrintingHelper.c(a));
        }
        j(a) {
            this.l.l("[[");
            this.l.l(FilterSyntaxPrintingHelper.b(a.c));
            this.l.l(" ");
            this.b(a.b);
            this.l.l("]]");
        }
    }
    TestFilterSyntaxVisitor.$t = /*@__PURE__*/ markType(TestFilterSyntaxVisitor, 'TestFilterSyntaxVisitor', FilterSyntaxVisitor.$);
    return TestFilterSyntaxVisitor;
})();
