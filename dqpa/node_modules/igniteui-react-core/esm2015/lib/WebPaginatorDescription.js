/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebPaginatorDescription = /*@__PURE__*/ (() => {
    class WebPaginatorDescription extends Description {
        get_type() {
            return "WebPaginator";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.p = 0;
            this.n = 0;
            this.o = 0;
            this.q = 0;
            this.h = null;
            this.j = null;
            this.l = null;
            this.v = null;
            this.z = null;
            this.w = null;
            this.x = null;
            this.y = null;
        }
        get totalPages() {
            return this.p;
        }
        set totalPages(a) {
            this.p = a;
            this.g("TotalPages");
        }
        get page() {
            return this.n;
        }
        set page(a) {
            this.n = a;
            this.g("Page");
        }
        get perPage() {
            return this.o;
        }
        set perPage(a) {
            this.o = a;
            this.g("PerPage");
        }
        get totalRecords() {
            return this.q;
        }
        set totalRecords(a) {
            this.q = a;
            this.g("TotalRecords");
        }
        get selectOptions() {
            return this.h;
        }
        set selectOptions(a) {
            this.h = a;
            this.g("SelectOptions");
        }
        get overlaySettings() {
            return this.j;
        }
        set overlaySettings(a) {
            this.j = a;
            this.g("OverlaySettings");
        }
        get resourceStrings() {
            return this.l;
        }
        set resourceStrings(a) {
            this.l = a;
            this.g("ResourceStrings");
        }
        get name() {
            return this.v;
        }
        set name(a) {
            this.v = a;
            this.g("Name");
        }
        get perPageChangeRef() {
            return this.z;
        }
        set perPageChangeRef(a) {
            this.z = a;
            this.g("PerPageChangeRef");
        }
        get pageChangeRef() {
            return this.w;
        }
        set pageChangeRef(a) {
            this.w = a;
            this.g("PageChangeRef");
        }
        get pagingRef() {
            return this.x;
        }
        set pagingRef(a) {
            this.x = a;
            this.g("PagingRef");
        }
        get pagingDoneRef() {
            return this.y;
        }
        set pagingDoneRef(a) {
            this.y = a;
            this.g("PagingDoneRef");
        }
    }
    WebPaginatorDescription.$t = /*@__PURE__*/ markType(WebPaginatorDescription, 'WebPaginatorDescription', Description.$);
    return WebPaginatorDescription;
})();
