/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ToolActionInfoDescription } from "./ToolActionInfoDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let ToolActionButtonPairInfoDescription = /*@__PURE__*/ (() => {
    class ToolActionButtonPairInfoDescription extends ToolActionInfoDescription {
        get_type() {
            return "ToolActionButtonPairInfo";
        }
        constructor() {
            super();
            this.bz = null;
            this.bw = null;
            this.by = null;
            this.bx = null;
            this.bd = false;
            this.bg = 0;
            this.bh = 0;
            this.bi = 0;
            this.bf = 0;
            this.b3 = null;
            this.b0 = null;
            this.b2 = null;
            this.b1 = null;
            this.bk = 0;
            this.bl = 0;
            this.bm = 0;
            this.bj = 0;
        }
        get leftTitle() {
            return this.bz;
        }
        set leftTitle(a) {
            this.bz = a;
            this.g("LeftTitle");
        }
        get leftCommandArgument() {
            return this.bw;
        }
        set leftCommandArgument(a) {
            this.bw = a;
            this.g("LeftCommandArgument");
        }
        get leftIconName() {
            return this.by;
        }
        set leftIconName(a) {
            this.by = a;
            this.g("LeftIconName");
        }
        get leftIconCollectionName() {
            return this.bx;
        }
        set leftIconCollectionName(a) {
            this.bx = a;
            this.g("LeftIconCollectionName");
        }
        get isToggleDisabled() {
            return this.bd;
        }
        set isToggleDisabled(a) {
            this.bd = a;
            this.g("IsToggleDisabled");
        }
        get leftIconViewBoxLeft() {
            return this.bg;
        }
        set leftIconViewBoxLeft(a) {
            this.bg = a;
            this.g("LeftIconViewBoxLeft");
        }
        get leftIconViewBoxTop() {
            return this.bh;
        }
        set leftIconViewBoxTop(a) {
            this.bh = a;
            this.g("LeftIconViewBoxTop");
        }
        get leftIconViewBoxWidth() {
            return this.bi;
        }
        set leftIconViewBoxWidth(a) {
            this.bi = a;
            this.g("LeftIconViewBoxWidth");
        }
        get leftIconViewBoxHeight() {
            return this.bf;
        }
        set leftIconViewBoxHeight(a) {
            this.bf = a;
            this.g("LeftIconViewBoxHeight");
        }
        get rightTitle() {
            return this.b3;
        }
        set rightTitle(a) {
            this.b3 = a;
            this.g("RightTitle");
        }
        get rightCommandArgument() {
            return this.b0;
        }
        set rightCommandArgument(a) {
            this.b0 = a;
            this.g("RightCommandArgument");
        }
        get rightIconName() {
            return this.b2;
        }
        set rightIconName(a) {
            this.b2 = a;
            this.g("RightIconName");
        }
        get rightIconCollectionName() {
            return this.b1;
        }
        set rightIconCollectionName(a) {
            this.b1 = a;
            this.g("RightIconCollectionName");
        }
        get rightIconViewBoxLeft() {
            return this.bk;
        }
        set rightIconViewBoxLeft(a) {
            this.bk = a;
            this.g("RightIconViewBoxLeft");
        }
        get rightIconViewBoxTop() {
            return this.bl;
        }
        set rightIconViewBoxTop(a) {
            this.bl = a;
            this.g("RightIconViewBoxTop");
        }
        get rightIconViewBoxWidth() {
            return this.bm;
        }
        set rightIconViewBoxWidth(a) {
            this.bm = a;
            this.g("RightIconViewBoxWidth");
        }
        get rightIconViewBoxHeight() {
            return this.bj;
        }
        set rightIconViewBoxHeight(a) {
            this.bj = a;
            this.g("RightIconViewBoxHeight");
        }
    }
    ToolActionButtonPairInfoDescription.$t = /*@__PURE__*/ markType(ToolActionButtonPairInfoDescription, 'ToolActionButtonPairInfoDescription', ToolActionInfoDescription.$);
    ToolActionButtonPairInfoDescription.__marshalByValue1 = true;
    ToolActionButtonPairInfoDescription.__marshalByValueAlias1 = "ToolActionButtonPairInfo";
    return ToolActionButtonPairInfoDescription;
})();
