/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebTabComponentEventArgsDescriptionMetadata } from "./WebTabComponentEventArgsDescriptionMetadata";
import { WebTabsDescription } from "./WebTabsDescription";
/**
 * @hidden
 */
export let WebTabsDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebTabsDescriptionMetadata extends Base {
        static b(a) {
            if (WebTabsDescriptionMetadata.a == null) {
                WebTabsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebTabsDescriptionMetadata.c(WebTabsDescriptionMetadata.a);
            }
            if (a.k(WebTabsDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebTabsDescriptionMetadata.a);
            WebTabComponentEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:Tabs");
            a.item("__tagNameWC", "String:igc-tabs");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents");
            a.item("Alignment", "ExportedType:string:TabsAlignment");
            a.item("Alignment@stringUnion", "WebComponents;React");
            a.item("Alignment@names", "Start;End;Center;Justify");
            a.item("Activation", "ExportedType:string:TabsActivation");
            a.item("Activation@stringUnion", "WebComponents;React");
            a.item("Activation@names", "Auto;Manual");
            a.item("ChangeRef", "EventRef::change");
        }
        static d(a) {
            WebTabsDescriptionMetadata.b(a);
            a.ae("WebTabs", () => new WebTabsDescription());
            a.ad("WebTabs", WebTabsDescriptionMetadata.a);
        }
    }
    WebTabsDescriptionMetadata.$t = /*@__PURE__*/ markType(WebTabsDescriptionMetadata, 'WebTabsDescriptionMetadata');
    WebTabsDescriptionMetadata.a = null;
    return WebTabsDescriptionMetadata;
})();
