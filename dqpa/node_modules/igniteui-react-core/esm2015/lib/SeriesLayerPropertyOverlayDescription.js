/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let SeriesLayerPropertyOverlayDescription = /*@__PURE__*/ (() => {
    class SeriesLayerPropertyOverlayDescription extends Description {
        get_type() {
            return "SeriesLayerPropertyOverlay";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.i = false;
            this.h = false;
            this.m = null;
            this.l = null;
            this.o = null;
            this.n = null;
            this.p = null;
        }
        get isSourceOverlay() {
            return this.i;
        }
        set isSourceOverlay(a) {
            this.i = a;
            this.g("IsSourceOverlay");
        }
        get isAlwaysApplied() {
            return this.h;
        }
        set isAlwaysApplied(a) {
            this.h = a;
            this.g("IsAlwaysApplied");
        }
        get propertyName() {
            return this.m;
        }
        set propertyName(a) {
            this.m = a;
            this.g("PropertyName");
        }
        get currentValuePropertyName() {
            return this.l;
        }
        set currentValuePropertyName(a) {
            this.l = a;
            this.g("CurrentValuePropertyName");
        }
        get valueRef() {
            return this.o;
        }
        set valueRef(a) {
            this.o = a;
            this.g("ValueRef");
        }
        get propertyUpdatedRef() {
            return this.n;
        }
        set propertyUpdatedRef(a) {
            this.n = a;
            this.g("PropertyUpdatedRef");
        }
        get valueResolvingRef() {
            return this.p;
        }
        set valueResolvingRef(a) {
            this.p = a;
            this.g("ValueResolvingRef");
        }
    }
    SeriesLayerPropertyOverlayDescription.$t = /*@__PURE__*/ markType(SeriesLayerPropertyOverlayDescription, 'SeriesLayerPropertyOverlayDescription', Description.$);
    return SeriesLayerPropertyOverlayDescription;
})();
