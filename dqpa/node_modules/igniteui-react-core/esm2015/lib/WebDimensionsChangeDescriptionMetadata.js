/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { WebPivotDimensionDescriptionMetadata } from "./WebPivotDimensionDescriptionMetadata";
import { WebDimensionsChangeDescription } from "./WebDimensionsChangeDescription";
/**
 * @hidden
 */
export let WebDimensionsChangeDescriptionMetadata = /*@__PURE__*/ (() => {
    class WebDimensionsChangeDescriptionMetadata extends Base {
        static b(a) {
            if (WebDimensionsChangeDescriptionMetadata.a == null) {
                WebDimensionsChangeDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                WebDimensionsChangeDescriptionMetadata.c(WebDimensionsChangeDescriptionMetadata.a);
            }
            if (a.k(WebDimensionsChangeDescriptionMetadata.a)) {
                return;
            }
            a.ac(WebDimensionsChangeDescriptionMetadata.a);
            WebPivotDimensionDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("__qualifiedNameTS", "String:DimensionsChange");
            a.item("__packageNameWC", "String:grids");
            a.item("__skipModuleRegisterWebComponents", "Boolean");
            a.item("__importOverrideWebComponents", "String:igniteui-webcomponents-grids/grids/combined");
            a.item("__importTypesWebComponents", "String:igniteui-webcomponents-grids/grids");
            a.item("__isPlainObject", "Boolean");
            a.item("__skipSuffix", "Boolean");
            a.item("Dimensions", "Array:WebPivotDimensionDescription:PivotDimension");
            a.item("DimensionCollectionType", "ExportedType:string:PivotDimensionType");
            a.item("DimensionCollectionType@names", "Row;Column;Filter");
        }
        static d(a) {
            WebDimensionsChangeDescriptionMetadata.b(a);
            a.ae("WebDimensionsChange", () => new WebDimensionsChangeDescription());
            a.ad("WebDimensionsChange", WebDimensionsChangeDescriptionMetadata.a);
        }
    }
    WebDimensionsChangeDescriptionMetadata.$t = /*@__PURE__*/ markType(WebDimensionsChangeDescriptionMetadata, 'WebDimensionsChangeDescriptionMetadata');
    WebDimensionsChangeDescriptionMetadata.a = null;
    return WebDimensionsChangeDescriptionMetadata;
})();
