/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, String_$type, markType } from "./type";
import { Dictionary$2 } from "./Dictionary$2";
import { PropertyUpdatedEventArgsDescriptionMetadata } from "./PropertyUpdatedEventArgsDescriptionMetadata";
import { SeriesLayerPropertyOverlayValueResolvingEventArgsDescriptionMetadata } from "./SeriesLayerPropertyOverlayValueResolvingEventArgsDescriptionMetadata";
import { SeriesLayerPropertyOverlayDescription } from "./SeriesLayerPropertyOverlayDescription";
/**
 * @hidden
 */
export let SeriesLayerPropertyOverlayDescriptionMetadata = /*@__PURE__*/ (() => {
    class SeriesLayerPropertyOverlayDescriptionMetadata extends Base {
        static b(a) {
            if (SeriesLayerPropertyOverlayDescriptionMetadata.a == null) {
                SeriesLayerPropertyOverlayDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);
                SeriesLayerPropertyOverlayDescriptionMetadata.c(SeriesLayerPropertyOverlayDescriptionMetadata.a);
            }
            if (a.k(SeriesLayerPropertyOverlayDescriptionMetadata.a)) {
                return;
            }
            a.ac(SeriesLayerPropertyOverlayDescriptionMetadata.a);
            PropertyUpdatedEventArgsDescriptionMetadata.d(a);
            SeriesLayerPropertyOverlayValueResolvingEventArgsDescriptionMetadata.d(a);
        }
        static c(a) {
            a.item("IsSourceOverlay", "Boolean");
            a.item("IsAlwaysApplied", "Boolean");
            a.item("PropertyName", "String");
            a.item("CurrentValuePropertyName", "String");
            a.item("ValueRef", "(w:Value,wf:Value)DataRef");
            a.item("PropertyUpdatedRef", "EventRef::propertyUpdated");
            a.item("ValueResolvingRef", "EventRef::valueResolving");
        }
        static d(a) {
            SeriesLayerPropertyOverlayDescriptionMetadata.b(a);
            a.ae("SeriesLayerPropertyOverlay", () => new SeriesLayerPropertyOverlayDescription());
            a.ad("SeriesLayerPropertyOverlay", SeriesLayerPropertyOverlayDescriptionMetadata.a);
        }
    }
    SeriesLayerPropertyOverlayDescriptionMetadata.$t = /*@__PURE__*/ markType(SeriesLayerPropertyOverlayDescriptionMetadata, 'SeriesLayerPropertyOverlayDescriptionMetadata');
    SeriesLayerPropertyOverlayDescriptionMetadata.a = null;
    return SeriesLayerPropertyOverlayDescriptionMetadata;
})();
