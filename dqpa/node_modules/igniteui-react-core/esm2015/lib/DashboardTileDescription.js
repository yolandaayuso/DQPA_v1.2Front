/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let DashboardTileDescription = /*@__PURE__*/ (() => {
    class DashboardTileDescription extends Description {
        get_type() {
            return "DashboardTile";
        }
        get type() {
            return this.get_type();
        }
        constructor() {
            super();
            this.k = null;
            this.b0 = null;
            this.v = null;
            this.t = null;
            this.s = null;
            this.r = null;
            this.u = null;
            this.w = null;
            this.by = null;
            this.br = null;
            this.bw = null;
            this.bv = null;
            this.bx = null;
            this.bz = null;
            this.z = null;
            this.o = null;
            this.n = null;
            this.m = null;
            this.p = null;
            this.aa = null;
            this.bo = null;
            this.a1 = null;
            this.bt = null;
            this.a2 = null;
            this.a9 = false;
            this.a8 = false;
            this.b1 = null;
            this.ba = false;
            this.bu = null;
            this.q = null;
            this.ab = null;
            this.l = null;
            this.j = null;
            this.x = null;
            this.y = null;
            this.h = null;
            this.i = null;
            this.bl = null;
            this.ac = null;
            this.ad = null;
            this.a5 = false;
            this.a6 = false;
            this.a7 = false;
            this.bn = null;
            this.b2 = null;
            this.bh = 0;
            this.bk = null;
            this.bp = null;
            this.bj = null;
            this.bm = null;
            this.bq = null;
            this.b3 = null;
            this.bs = null;
        }
        get customizations() {
            return this.k;
        }
        set customizations(a) {
            this.k = a;
            this.g("Customizations");
        }
        get tileTitle() {
            return this.b0;
        }
        set tileTitle(a) {
            this.b0 = a;
            this.g("TileTitle");
        }
        get initialSortDescriptions() {
            return this.v;
        }
        set initialSortDescriptions(a) {
            this.v = a;
            this.g("InitialSortDescriptions");
        }
        get initialGroupSortDescriptions() {
            return this.t;
        }
        set initialGroupSortDescriptions(a) {
            this.t = a;
            this.g("InitialGroupSortDescriptions");
        }
        get initialGroupDescriptions() {
            return this.s;
        }
        set initialGroupDescriptions(a) {
            this.s = a;
            this.g("InitialGroupDescriptions");
        }
        get initialFilterExpressions() {
            return this.r;
        }
        set initialFilterExpressions(a) {
            this.r = a;
            this.g("InitialFilterExpressions");
        }
        get initialHighlightFilterExpressions() {
            return this.u;
        }
        set initialHighlightFilterExpressions(a) {
            this.u = a;
            this.g("InitialHighlightFilterExpressions");
        }
        get initialSummaryDescriptions() {
            return this.w;
        }
        set initialSummaryDescriptions(a) {
            this.w = a;
            this.g("InitialSummaryDescriptions");
        }
        get initialSorts() {
            return this.by;
        }
        set initialSorts(a) {
            this.by = a;
            this.g("InitialSorts");
        }
        get groupSorts() {
            return this.br;
        }
        set groupSorts(a) {
            this.br = a;
            this.g("GroupSorts");
        }
        get initialGroups() {
            return this.bw;
        }
        set initialGroups(a) {
            this.bw = a;
            this.g("InitialGroups");
        }
        get initialFilter() {
            return this.bv;
        }
        set initialFilter(a) {
            this.bv = a;
            this.g("InitialFilter");
        }
        get initialHighlightFilter() {
            return this.bx;
        }
        set initialHighlightFilter(a) {
            this.bx = a;
            this.g("InitialHighlightFilter");
        }
        get initialSummaries() {
            return this.bz;
        }
        set initialSummaries(a) {
            this.bz = a;
            this.g("InitialSummaries");
        }
        get sortDescriptions() {
            return this.z;
        }
        set sortDescriptions(a) {
            this.z = a;
            this.g("SortDescriptions");
        }
        get groupSortDescriptions() {
            return this.o;
        }
        set groupSortDescriptions(a) {
            this.o = a;
            this.g("GroupSortDescriptions");
        }
        get groupDescriptions() {
            return this.n;
        }
        set groupDescriptions(a) {
            this.n = a;
            this.g("GroupDescriptions");
        }
        get filterExpressions() {
            return this.m;
        }
        set filterExpressions(a) {
            this.m = a;
            this.g("FilterExpressions");
        }
        get highlightFilterExpressions() {
            return this.p;
        }
        set highlightFilterExpressions(a) {
            this.p = a;
            this.g("HighlightFilterExpressions");
        }
        get summaryDescriptions() {
            return this.aa;
        }
        set summaryDescriptions(a) {
            this.aa = a;
            this.g("SummaryDescriptions");
        }
        get dataSourceRef() {
            return this.bo;
        }
        set dataSourceRef(a) {
            this.bo = a;
            this.g("DataSourceRef");
        }
        get dataSource() {
            return this.a1;
        }
        set dataSource(a) {
            this.a1 = a;
            this.g("DataSource");
        }
        get highlightedDataSourceRef() {
            return this.bt;
        }
        set highlightedDataSourceRef(a) {
            this.bt = a;
            this.g("HighlightedDataSourceRef");
        }
        get highlightedDataSource() {
            return this.a2;
        }
        set highlightedDataSource(a) {
            this.a2 = a;
            this.g("HighlightedDataSource");
        }
        get shouldDisplayMockData() {
            return this.a9;
        }
        set shouldDisplayMockData(a) {
            this.a9 = a;
            this.g("ShouldDisplayMockData");
        }
        get shouldAvoidAxisAnnotationCollisions() {
            return this.a8;
        }
        set shouldAvoidAxisAnnotationCollisions(a) {
            this.a8 = a;
            this.g("ShouldAvoidAxisAnnotationCollisions");
        }
        get trendLineType() {
            return this.b1;
        }
        set trendLineType(a) {
            this.b1 = a;
            this.g("TrendLineType");
        }
        get shouldUseSkeletonStyleForMockData() {
            return this.ba;
        }
        set shouldUseSkeletonStyleForMockData(a) {
            this.ba = a;
            this.g("ShouldUseSkeletonStyleForMockData");
        }
        get highlightedValuesDisplayMode() {
            return this.bu;
        }
        set highlightedValuesDisplayMode(a) {
            this.bu = a;
            this.g("HighlightedValuesDisplayMode");
        }
        get includedProperties() {
            return this.q;
        }
        set includedProperties(a) {
            this.q = a;
            this.g("IncludedProperties");
        }
        get validVisualizationTypes() {
            return this.ab;
        }
        set validVisualizationTypes(a) {
            this.ab = a;
            this.g("ValidVisualizationTypes");
        }
        get excludedProperties() {
            return this.l;
        }
        set excludedProperties(a) {
            this.l = a;
            this.g("ExcludedProperties");
        }
        get brushes() {
            return this.j;
        }
        set brushes(a) {
            this.j = a;
            this.g("Brushes");
        }
        get outlines() {
            return this.x;
        }
        set outlines(a) {
            this.x = a;
            this.g("Outlines");
        }
        get selectedSeriesItems() {
            return this.y;
        }
        set selectedSeriesItems(a) {
            this.y = a;
            this.g("SelectedSeriesItems");
        }
        get actualBrushes() {
            return this.h;
        }
        set actualBrushes(a) {
            this.h = a;
            this.g("ActualBrushes");
        }
        get actualOutlines() {
            return this.i;
        }
        set actualOutlines(a) {
            this.i = a;
            this.g("ActualOutlines");
        }
        get categoryAxisMajorStroke() {
            return this.bl;
        }
        set categoryAxisMajorStroke(a) {
            this.bl = a;
            this.g("CategoryAxisMajorStroke");
        }
        get valueLines() {
            return this.ac;
        }
        set valueLines(a) {
            this.ac = a;
            this.g("ValueLines");
        }
        get valueLinesBrushes() {
            return this.ad;
        }
        set valueLinesBrushes(a) {
            this.ad = a;
            this.g("ValueLinesBrushes");
        }
        get autoCalloutsVisible() {
            return this.a5;
        }
        set autoCalloutsVisible(a) {
            this.a5 = a;
            this.g("AutoCalloutsVisible");
        }
        get crosshairsAnnotationEnabled() {
            return this.a6;
        }
        set crosshairsAnnotationEnabled(a) {
            this.a6 = a;
            this.g("CrosshairsAnnotationEnabled");
        }
        get finalValueAnnotationsVisible() {
            return this.a7;
        }
        set finalValueAnnotationsVisible(a) {
            this.a7 = a;
            this.g("FinalValueAnnotationsVisible");
        }
        get crosshairsDisplayMode() {
            return this.bn;
        }
        set crosshairsDisplayMode(a) {
            this.bn = a;
            this.g("CrosshairsDisplayMode");
        }
        get visualizationType() {
            return this.b2;
        }
        set visualizationType(a) {
            this.b2 = a;
            this.g("VisualizationType");
        }
        get validVisualizationTypePriorityThreshold() {
            return this.bh;
        }
        set validVisualizationTypePriorityThreshold(a) {
            this.bh = a;
            this.g("ValidVisualizationTypePriorityThreshold");
        }
        get baseTheme() {
            return this.bk;
        }
        set baseTheme(a) {
            this.bk = a;
            this.g("BaseTheme");
        }
        get density() {
            return this.bp;
        }
        set density(a) {
            this.bp = a;
            this.g("Density");
        }
        get backgroundColor() {
            return this.bj;
        }
        set backgroundColor(a) {
            this.bj = a;
            this.g("BackgroundColor");
        }
        get changingContentRef() {
            return this.bm;
        }
        set changingContentRef(a) {
            this.bm = a;
            this.g("ChangingContentRef");
        }
        get filterStringErrorsParsingRef() {
            return this.bq;
        }
        set filterStringErrorsParsingRef(a) {
            this.bq = a;
            this.g("FilterStringErrorsParsingRef");
        }
        get width() {
            return this.b3;
        }
        set width(a) {
            this.b3 = a;
            this.g("Width");
        }
        get height() {
            return this.bs;
        }
        set height(a) {
            this.bs = a;
            this.g("Height");
        }
    }
    DashboardTileDescription.$t = /*@__PURE__*/ markType(DashboardTileDescription, 'DashboardTileDescription', Description.$);
    return DashboardTileDescription;
})();
