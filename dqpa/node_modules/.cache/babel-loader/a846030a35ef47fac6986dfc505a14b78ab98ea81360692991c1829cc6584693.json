{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(true);const[sessionHandled,setSessionHandled]=useState(false);// Flag para evitar eventos duplicados\nconst navigate=useNavigate();// Función para eliminar el token de las cookies\nconst clearTokenCookie=()=>{document.cookie='token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;';};useEffect(()=>{const handleSessionExpired=()=>{if(sessionHandled)return;// Evitar manejar múltiples veces\nsetSessionHandled(true);// Marcar el evento como manejado\n// Eliminar el token de las cookies\nclearTokenCookie();// Cambiar el estado de autenticación\nsetIsAuthenticated(false);// Mostrar notificación profesional\ntoast.error('Tu sesión ha expirado. Redirigiendo al inicio de sesión...',{position:'top-right',autoClose:3000});// Redirigir al login después de 3 segundos\nsetTimeout(()=>{navigate('/login');setSessionHandled(false);// Resetear el flag después de redirigir\n},3000);};// Escuchar el evento `sessionExpired`\nwindow.addEventListener('sessionExpired',handleSessionExpired);return()=>{// Limpiar el evento al desmontar el componente\nwindow.removeEventListener('sessionExpired',handleSessionExpired);};},[navigate,sessionHandled]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,setIsAuthenticated},children:children});};export default AuthProvider;","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","toast","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","sessionHandled","setSessionHandled","navigate","clearTokenCookie","document","cookie","handleSessionExpired","error","position","autoClose","setTimeout","window","addEventListener","removeEventListener","Provider","value"],"sources":["C:/Users/Yolanda Ayuso/Desktop/frontDespliegueDef/DQPA_v1.2Front/dqpa/src/authContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\r\n  const [sessionHandled, setSessionHandled] = useState(false); // Flag para evitar eventos duplicados\r\n  const navigate = useNavigate();\r\n\r\n  // Función para eliminar el token de las cookies\r\n  const clearTokenCookie = () => {\r\n    document.cookie = 'token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 UTC;';\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleSessionExpired = () => {\r\n      if (sessionHandled) return; // Evitar manejar múltiples veces\r\n      setSessionHandled(true); // Marcar el evento como manejado\r\n\r\n      // Eliminar el token de las cookies\r\n      clearTokenCookie();\r\n\r\n      // Cambiar el estado de autenticación\r\n      setIsAuthenticated(false);\r\n\r\n      // Mostrar notificación profesional\r\n      toast.error('Tu sesión ha expirado. Redirigiendo al inicio de sesión...', {\r\n        position: 'top-right',\r\n        autoClose: 3000,\r\n      });\r\n\r\n      // Redirigir al login después de 3 segundos\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n        setSessionHandled(false); // Resetear el flag después de redirigir\r\n      }, 3000);\r\n    };\r\n\r\n    // Escuchar el evento `sessionExpired`\r\n    window.addEventListener('sessionExpired', handleSessionExpired);\r\n\r\n    return () => {\r\n      // Limpiar el evento al desmontar el componente\r\n      window.removeEventListener('sessionExpired', handleSessionExpired);\r\n    };\r\n  }, [navigate, sessionHandled]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,KAAK,KAAQ,gBAAgB,CACtC,MAAO,uCAAuC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,MAAO,MAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAE1C,KAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACY,cAAc,CAAEC,iBAAiB,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAAE;AAC7D,KAAM,CAAAc,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAa,gBAAgB,CAAGA,CAAA,GAAM,CAC7BC,QAAQ,CAACC,MAAM,CAAG,wDAAwD,CAC5E,CAAC,CAEDhB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,oBAAoB,CAAGA,CAAA,GAAM,CACjC,GAAIN,cAAc,CAAE,OAAQ;AAC5BC,iBAAiB,CAAC,IAAI,CAAC,CAAE;AAEzB;AACAE,gBAAgB,CAAC,CAAC,CAElB;AACAJ,kBAAkB,CAAC,KAAK,CAAC,CAEzB;AACAR,KAAK,CAACgB,KAAK,CAAC,4DAA4D,CAAE,CACxEC,QAAQ,CAAE,WAAW,CACrBC,SAAS,CAAE,IACb,CAAC,CAAC,CAEF;AACAC,UAAU,CAAC,IAAM,CACfR,QAAQ,CAAC,QAAQ,CAAC,CAClBD,iBAAiB,CAAC,KAAK,CAAC,CAAE;AAC5B,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED;AACAU,MAAM,CAACC,gBAAgB,CAAC,gBAAgB,CAAEN,oBAAoB,CAAC,CAE/D,MAAO,IAAM,CACX;AACAK,MAAM,CAACE,mBAAmB,CAAC,gBAAgB,CAAEP,oBAAoB,CAAC,CACpE,CAAC,CACH,CAAC,CAAE,CAACJ,QAAQ,CAAEF,cAAc,CAAC,CAAC,CAE9B,mBACEP,IAAA,CAACC,WAAW,CAACoB,QAAQ,EAACC,KAAK,CAAE,CAAEjB,eAAe,CAAEC,kBAAmB,CAAE,CAAAF,QAAA,CAClEA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,cAAe,CAAAF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}