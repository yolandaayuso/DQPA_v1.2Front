{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,Typography,Button,Paper,CircularProgress,Select,MenuItem,FormControl,InputLabel,Checkbox,FormControlLabel,LinearProgress,IconButton,Tooltip,Dialog,DialogTitle,DialogContent}from'@mui/material';import HelpOutlineIcon from'@mui/icons-material/HelpOutline';import CheckCircleIcon from'@mui/icons-material/CheckCircle';import Cookies from'js-cookie';import axios from'axios';import{useParams,useLocation,useNavigate}from'react-router-dom';import Swal from'sweetalert2';import{Breadcrumbs,Link as MuiLink}from'@mui/material';import{Link as RouterLink}from'react-router-dom';import{Home as HomeIcon,NavigateNext as NavigateNextIcon}from\"@mui/icons-material\";import TipsAndUpdatesOutlinedIcon from\"@mui/icons-material/TipsAndUpdatesOutlined\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CuestionarioPage=()=>{var _procesosFiltrados$fi;const{cuestionarioId}=useParams();const location=useLocation();const navigate=useNavigate();const isCompleted=new URLSearchParams(location.search).get('completed')==='true';const autoevaluacionId=cuestionarioId;const[cuestionario,setCuestionario]=useState(null);const[procesos,setProcesos]=useState([]);const[procesosFiltrados,setProcesosFiltrados]=useState([]);const[procesoSeleccionado,setProcesoSeleccionado]=useState(null);const[preguntas,setPreguntas]=useState([]);const[progreso,setProgreso]=useState(0);const[nivelSeleccionado,setNivelSeleccionado]=useState('Todos los niveles');const[respuestasSeleccionadas,setRespuestasSeleccionadas]=useState({});const[dialogoAbierto,setDialogoAbierto]=useState(false);const[ayudaSeleccionada,setAyudaSeleccionada]=useState('');const[dialogoInstruccionesAbierto,setDialogoInstruccionesAbierto]=useState(true);const[isLoadingFinalizar,setIsLoadingFinalizar]=useState(false);useEffect(()=>{const fetchCuestionario=async()=>{try{const token=Cookies.get('token');const config={headers:{Authorization:`Bearer ${token}`}};console.log(\"este es el cuestionario Id\");console.log(cuestionarioId);const response=await axios.get(`http://localhost:9092/api/autoevaluaciones/obtenerOptimizado/${autoevaluacionId}`,config);console.log(response.data);const cuestionarioData=response.data.cuestionario;// Actualizar cuestionario y progreso\nsetCuestionario(cuestionarioData);setProgreso(cuestionarioData.progreso);// Inicializar respuestas seleccionadas\nconst initialRespuestas={};[...(cuestionarioData.preguntasGenerales||[]),...(cuestionarioData.preguntasPorProceso||[])].forEach(pregunta=>{if(pregunta.respuestaSeleccionada){initialRespuestas[pregunta.pregunta]=pregunta.respuestaSeleccionada;}});setRespuestasSeleccionadas(initialRespuestas);// Mapear preguntas generales por nivel\nconst preguntasGeneralesPorNivel=(cuestionarioData.preguntasGenerales||[]).reduce((acc,pregunta)=>{const nivel=pregunta.general||'Sin Nivel';if(!acc[nivel]){acc[nivel]={proceso:{_id:`general-${nivel}`,nombre:`Preguntas Generales Nivel ${nivel}`,nivel:nivel},preguntas:[]};}acc[nivel].preguntas.push(pregunta);return acc;},{});// Mapear preguntas por proceso\nconst procesosMap=(cuestionarioData.preguntasPorProceso||[]).reduce((acc,pregunta)=>{var _pregunta$proceso;const procesoId=(_pregunta$proceso=pregunta.proceso)===null||_pregunta$proceso===void 0?void 0:_pregunta$proceso._id;if(!procesoId)return acc;// Ignorar preguntas sin proceso\nif(!acc[procesoId]){acc[procesoId]={proceso:pregunta.proceso,preguntas:[]};}acc[procesoId].preguntas.push(pregunta);return acc;},{});// Combinar procesos y preguntas generales\nconst procesosList=[...Object.values(procesosMap),...Object.values(preguntasGeneralesPorNivel)];setProcesos(procesosList);setProcesosFiltrados(procesosList);// Seleccionar el primer proceso si hay disponibles\nif(procesosList.length>0){var _procesosList$;seleccionarProceso((_procesosList$=procesosList[0])===null||_procesosList$===void 0?void 0:_procesosList$.proceso._id,procesosList);}}catch(error){console.error('Error al cargar el cuestionario:',error);}};fetchCuestionario();},[autoevaluacionId]);const cerrarDialogoInstrucciones=()=>{setDialogoInstruccionesAbierto(false);};const filtrarPorNivel=nivel=>{setNivelSeleccionado(nivel);if(nivel==='Todos los niveles'){// Si selecciona \"Todos los niveles\", no aplicar filtro\nsetProcesosFiltrados(procesos);}else{const nivelInt=parseInt(nivel,10);const filtrados=procesos.filter(p=>{const procesoNivel=p.proceso.nivel;return procesoNivel===nivelInt||p.proceso.nombre.includes(`Nivel ${nivel}`);});setProcesosFiltrados(filtrados);if(filtrados.length>0){var _filtrados$;seleccionarProceso((_filtrados$=filtrados[0])===null||_filtrados$===void 0?void 0:_filtrados$.proceso._id,filtrados);}else{setProcesoSeleccionado(null);setPreguntas([]);}}};const seleccionarProceso=(procesoId,listaProcesos)=>{setProcesoSeleccionado(procesoId);const proceso=listaProcesos.find(p=>p.proceso._id===procesoId);setPreguntas((proceso===null||proceso===void 0?void 0:proceso.preguntas)||[]);};const manejarSeleccionRespuesta=async(preguntaId,respuestaId)=>{if(isCompleted)return;// Actualiza el estado local primero para una mejor experiencia de usuario\nsetRespuestasSeleccionadas(prev=>({...prev,[preguntaId]:respuestaId}));try{const token=Cookies.get('token');const config={headers:{Authorization:`Bearer ${token}`}};// Llamar al backend para actualizar el cuestionario\nconst payload={preguntaId,respuesta:respuestaId};// Cambiado a 'respuesta'\nconst response=await axios.put(`http://localhost:9092/api/autoevaluaciones/actualizar/${cuestionario._id}`,payload,config);// Actualizar el progreso y las respuestas del cuestionario localmente\nsetProgreso(response.data.cuestionario.progreso);setCuestionario(response.data.cuestionario);}catch(error){}};const abrirDialogoAyuda=ayuda=>{setAyudaSeleccionada(ayuda);setDialogoAbierto(true);};const cerrarDialogoAyuda=()=>{setDialogoAbierto(false);setAyudaSeleccionada('');};const finalizarCuestionario=async()=>{if(isCompleted){navigate('/autoevaluaciones');return;}const totalPreguntas=cuestionario.preguntasRespuestas?cuestionario.preguntasRespuestas.length:0;const respondidas=Object.keys(respuestasSeleccionadas).length;if(respondidas<totalPreguntas||totalPreguntas===0){Swal.fire({title:'¿Deseas salir del cuestionario?',text:'Aún no has completado todas las preguntas. Puedes continuar más tarde.',showCancelButton:true,confirmButtonText:'Aceptar',cancelButtonText:'Cancelar',confirmButtonColor:'#A5D6A7',cancelButtonColor:'#EF9A9A'}).then(async result=>{if(result.isConfirmed){try{var _cuestionario$pregunt;setIsLoadingFinalizar(true);// 🔥 Activa el spinner\nconst token=Cookies.get('token');const config={headers:{Authorization:`Bearer ${token}`}};const payload={respuestas:((_cuestionario$pregunt=cuestionario.preguntasRespuestas)===null||_cuestionario$pregunt===void 0?void 0:_cuestionario$pregunt.map(pr=>({pregunta:pr.pregunta,respuestaSeleccionada:respuestasSeleccionadas[pr.pregunta]||null})))||[]};await axios.post(`http://localhost:9092/api/autoevaluaciones/guardarProgreso/${cuestionario._id}`,payload,config);navigate('/autoevaluaciones');}catch(error){Swal.fire('Error','No se pudo guardar el progreso.','error');}finally{setIsLoadingFinalizar(false);// 🔥 Desactiva el spinner\n}}});return;}Swal.fire({title:'¿Finalizar el cuestionario?',text:'Has respondido todas las preguntas.',showCancelButton:true,confirmButtonText:'Aceptar',cancelButtonText:'Cancelar',confirmButtonColor:'#A5D6A7',cancelButtonColor:'#EF9A9A'}).then(async result=>{if(result.isConfirmed){try{var _cuestionario$pregunt2;setIsLoadingFinalizar(true);// 🔥 Activa el spinner\nconst token=Cookies.get('token');const config={headers:{Authorization:`Bearer ${token}`}};const payload={respuestas:((_cuestionario$pregunt2=cuestionario.preguntasRespuestas)===null||_cuestionario$pregunt2===void 0?void 0:_cuestionario$pregunt2.map(pr=>({pregunta:pr.pregunta,respuestaSeleccionada:respuestasSeleccionadas[pr.pregunta]||null})))||[]};await axios.post(`http://localhost:9092/api/autoevaluaciones/finalizarCuestionario/${cuestionario._id}`,payload,config);navigate('/autoevaluaciones');}catch(error){Swal.fire('Error','No se pudo finalizar el cuestionario.','error');}finally{setIsLoadingFinalizar(false);// 🔥 Desactiva el spinner\n}}});};if(!cuestionario){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'calc(100vh - 64px)'},children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Box,{sx:{minHeight:\"100vh\",pb:6},children:[/*#__PURE__*/_jsx(Box,{sx:{bgcolor:\"#f9f9f9\",px:3,py:2,borderRadius:2,mb:3},children:/*#__PURE__*/_jsxs(Breadcrumbs,{separator:/*#__PURE__*/_jsx(NavigateNextIcon,{fontSize:\"small\"}),\"aria-label\":\"breadcrumb\",children:[/*#__PURE__*/_jsxs(MuiLink,{component:RouterLink,to:\"/mis-autoevaluaciones\",sx:{display:\"flex\",alignItems:\"center\",color:\"#1e4b81\",fontWeight:\"bold\",\"&:hover\":{textDecoration:\"underline\"}},children:[/*#__PURE__*/_jsx(HomeIcon,{sx:{fontSize:18,mr:0.5}}),\"Inicio\"]}),/*#__PURE__*/_jsx(Typography,{sx:{color:\"#d37d36\",fontWeight:\"bold\"},children:\"Cuestionario   \"})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flex:1,height:'100vh'},children:[/*#__PURE__*/_jsxs(Box,{sx:{width:'20%',bgcolor:'#f3f4f6',p:3,height:'100vh',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,variant:\"outlined\",sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"nivel-select-label\",children:\"Filtrar por Nivel\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"nivel-select-label\",value:nivelSeleccionado,onChange:e=>filtrarPorNivel(e.target.value),sx:{borderRadius:\"8px\",bgcolor:\"#fff\",fontWeight:\"bold\",boxShadow:\"0px 2px 5px rgba(0, 0, 0, 0.1)\",\"& .MuiOutlinedInput-notchedOutline\":{borderColor:\"#ddd\"},\"&:hover .MuiOutlinedInput-notchedOutline\":{borderColor:\"#1E4B81\"},\"&.Mui-focused .MuiOutlinedInput-notchedOutline\":{borderColor:\"#1E4B81\"}},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"Todos los niveles\",children:\"\\uD83D\\uDD39 Todos los niveles\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"1\",children:\"\\uD83D\\uDD39 Nivel 1\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"2\",children:\"\\uD83D\\uDD39 Nivel 2\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"3\",children:\"\\uD83D\\uDD39 Nivel 3\"})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{fontWeight:'bold',mb:2},children:\"Procesos\"}),procesosFiltrados.map(p=>{const preguntasTotales=p.preguntas.length;const preguntasRespondidas=p.preguntas.filter(pregunta=>respuestasSeleccionadas[pregunta.pregunta]).length;const completado=preguntasTotales===preguntasRespondidas;return/*#__PURE__*/_jsx(Paper,{sx:{p:2,mb:2,display:'flex',alignItems:'center',justifyContent:'space-between',border:procesoSeleccionado===p.proceso._id?'2px solid #1e4b81':'1px solid #e0e0e0',borderRadius:'8px',cursor:'pointer','&:hover':{boxShadow:'0 4px 10px rgba(0, 0, 0, 0.1)'}},onClick:()=>seleccionarProceso(p.proceso._id,procesosFiltrados),children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{fontWeight:procesoSeleccionado===p.proceso._id?'bold':'normal',color:completado?'#4caf50':'#000'},children:p.proceso.nombre})},p.proceso._id);})]}),/*#__PURE__*/_jsxs(Box,{sx:{width:'55%'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{mb:3,fontWeight:'bold'},children:procesoSeleccionado?`Preguntas de ${(_procesosFiltrados$fi=procesosFiltrados.find(p=>p.proceso._id===procesoSeleccionado))===null||_procesosFiltrados$fi===void 0?void 0:_procesosFiltrados$fi.proceso.nombre}`:'Seleccione un proceso'}),preguntas.map(p=>/*#__PURE__*/_jsxs(Paper,{sx:{p:3,// Más padding para mejor lectura\nmb:2,borderRadius:'10px',boxShadow:'0 3px 6px rgba(0, 0, 0, 0.1)',// Sombra suave\ntransition:'0.2s',\"&:hover\":{boxShadow:'0 5px 12px rgba(0, 0, 0, 0.15)',// Efecto al pasar el mouse\ntransform:\"translateY(-2px)\"// Pequeño efecto de elevación\n}},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'flex-start'},children:[/*#__PURE__*/_jsx(Typography,{sx:{mb:2,fontWeight:'bold',flex:1},children:p.descripcion}),p.ayuda&&/*#__PURE__*/_jsx(Tooltip,{title:\"Ver ayuda\",placement:\"top\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{sx:{color:'#d37d36',backgroundColor:'#f5f5f5',boxShadow:'0 2px 5px rgba(0, 0, 0, 0.2)',borderRadius:'50%',ml:2,'&:hover':{backgroundColor:'#e0e0e0'}},onClick:()=>abrirDialogoAyuda(p.ayuda),children:/*#__PURE__*/_jsx(HelpOutlineIcon,{})})})]}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexDirection:'column',gap:1},children:p.respuestas.map(r=>/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:respuestasSeleccionadas[p.pregunta]===r._id,disabled:isCompleted,onChange:()=>manejarSeleccionRespuesta(p.pregunta,r._id)}),label:r.descripcion},r._id))})]},p.pregunta))]}),/*#__PURE__*/_jsxs(Box,{sx:{width:'25%',p:3,borderRadius:'8px'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{fontWeight:'bold',mb:2,color:'#1e4b81'},children:\"Tu Progreso\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:3},children:[/*#__PURE__*/_jsxs(Typography,{sx:{mb:1},children:[\"Progreso Total: \",progreso,\"%\"]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:progreso,sx:{height:'10px',borderRadius:'5px','& .MuiLinearProgress-bar':{backgroundColor:'#1e4b81'}}})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{mb:2,fontWeight:'bold',color:'#1e4b81'},children:[\"Procesos completados: \",procesos.filter(p=>p.preguntas.length===p.preguntas.filter(pregunta=>respuestasSeleccionadas[pregunta.pregunta]).length).length,\"/\",procesos.length]}),/*#__PURE__*/_jsx(Box,{children:procesos.map(p=>{const preguntasTotales=p.preguntas.length;const preguntasRespondidas=p.preguntas.filter(pregunta=>respuestasSeleccionadas[pregunta.pregunta]).length;const completado=preguntasTotales===preguntasRespondidas;return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between',mb:1,p:1,borderRadius:'4px',backgroundColor:completado?'#e8f5e9':'#fff',boxShadow:completado?'0 1px 3px rgba(0, 128, 0, 0.2)':'0 1px 3px rgba(0, 0, 0, 0.1)'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:completado?'#4caf50':'#000',fontWeight:completado?'bold':'normal'},children:p.proceso.nombre}),completado?/*#__PURE__*/_jsx(CheckCircleIcon,{sx:{color:'#4caf50',fontSize:18}}):/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:'#ff5722',fontSize:12},children:[preguntasRespondidas,\"/\",preguntasTotales]})]},p.proceso._id);})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,startIcon:/*#__PURE__*/_jsx(TipsAndUpdatesOutlinedIcon,{})// Bombilla moderna\n,sx:{mb:2,// Margen inferior para separar del botón de finalizar\nbgcolor:\"#FFE082\",// Amarillo dorado\ncolor:\"#000\",// Texto en negro\nfontWeight:\"bold\",textTransform:\"none\",// Mantiene el texto sin mayúsculas forzadas\n\"&:hover\":{bgcolor:\"#FFC107\"// Un amarillo más oscuro en hover\n}},onClick:()=>navigate(`/instrucciones/${cuestionarioId}`),children:\"Ver Instrucciones\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",fullWidth:true,sx:{mt:3,py:1.5,// Hace el botón más alto\nfontSize:\"1.1rem\",// Texto más grande\nfontWeight:\"bold\",bgcolor:isLoadingFinalizar?\"#FFC107\":\"#1e4b81\",// Amarillo si está cargando\ncolor:\"#fff\",boxShadow:\"0px 4px 10px rgba(30, 75, 129, 0.3)\",borderRadius:\"8px\",transition:\"0.3s\",\"&:hover\":{bgcolor:isLoadingFinalizar?\"#FFA000\":\"#163a63\",transform:isLoadingFinalizar?\"none\":\"scale(1.05)\"}},disabled:isLoadingFinalizar// 🔥 Deshabilita el botón mientras carga\n,onClick:finalizarCuestionario,children:isLoadingFinalizar?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CircularProgress,{size:24,sx:{color:\"#fff\",mr:1}}),\" Finalizando...\"]}):isCompleted?\"Finalizar Revisión\":\"Finalizar Cuestionario\"})]}),/*#__PURE__*/_jsxs(Dialog,{open:dialogoAbierto,onClose:cerrarDialogoAyuda,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Ayuda\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Typography,{children:ayudaSeleccionada})})]})]})]});};export default CuestionarioPage;","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Button","Paper","CircularProgress","Select","MenuItem","FormControl","InputLabel","Checkbox","FormControlLabel","LinearProgress","IconButton","Tooltip","Dialog","DialogTitle","DialogContent","HelpOutlineIcon","CheckCircleIcon","Cookies","axios","useParams","useLocation","useNavigate","Swal","Breadcrumbs","Link","MuiLink","RouterLink","Home","HomeIcon","NavigateNext","NavigateNextIcon","TipsAndUpdatesOutlinedIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CuestionarioPage","_procesosFiltrados$fi","cuestionarioId","location","navigate","isCompleted","URLSearchParams","search","get","autoevaluacionId","cuestionario","setCuestionario","procesos","setProcesos","procesosFiltrados","setProcesosFiltrados","procesoSeleccionado","setProcesoSeleccionado","preguntas","setPreguntas","progreso","setProgreso","nivelSeleccionado","setNivelSeleccionado","respuestasSeleccionadas","setRespuestasSeleccionadas","dialogoAbierto","setDialogoAbierto","ayudaSeleccionada","setAyudaSeleccionada","dialogoInstruccionesAbierto","setDialogoInstruccionesAbierto","isLoadingFinalizar","setIsLoadingFinalizar","fetchCuestionario","token","config","headers","Authorization","console","log","response","data","cuestionarioData","initialRespuestas","preguntasGenerales","preguntasPorProceso","forEach","pregunta","respuestaSeleccionada","preguntasGeneralesPorNivel","reduce","acc","nivel","general","proceso","_id","nombre","push","procesosMap","_pregunta$proceso","procesoId","procesosList","Object","values","length","_procesosList$","seleccionarProceso","error","cerrarDialogoInstrucciones","filtrarPorNivel","nivelInt","parseInt","filtrados","filter","p","procesoNivel","includes","_filtrados$","listaProcesos","find","manejarSeleccionRespuesta","preguntaId","respuestaId","prev","payload","respuesta","put","abrirDialogoAyuda","ayuda","cerrarDialogoAyuda","finalizarCuestionario","totalPreguntas","preguntasRespuestas","respondidas","keys","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","_cuestionario$pregunt","respuestas","map","pr","post","_cuestionario$pregunt2","sx","display","justifyContent","alignItems","height","children","minHeight","pb","bgcolor","px","py","borderRadius","mb","separator","fontSize","component","to","color","fontWeight","textDecoration","mr","flex","width","flexDirection","fullWidth","variant","id","labelId","value","onChange","e","target","boxShadow","borderColor","preguntasTotales","preguntasRespondidas","completado","border","cursor","onClick","transition","transform","descripcion","placement","arrow","backgroundColor","ml","gap","r","control","checked","disabled","label","startIcon","textTransform","mt","size","open","onClose"],"sources":["C:/Users/Yolanda Ayuso/Desktop/frontDespliegueDef/DQPA_v1.2Front/dqpa/src/pages/CuestionarioPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  LinearProgress,\r\n  IconButton,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from '@mui/material';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { Breadcrumbs, Link as MuiLink } from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Home as HomeIcon, NavigateNext as NavigateNextIcon } from \"@mui/icons-material\";\r\nimport TipsAndUpdatesOutlinedIcon from \"@mui/icons-material/TipsAndUpdatesOutlined\";\r\n\r\nconst CuestionarioPage = () => {\r\n  const { cuestionarioId } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const isCompleted = new URLSearchParams(location.search).get('completed') === 'true';\r\n  const autoevaluacionId  =  cuestionarioId\r\n  const [cuestionario, setCuestionario] = useState(null);\r\n  const [procesos, setProcesos] = useState([]);\r\n  const [procesosFiltrados, setProcesosFiltrados] = useState([]);\r\n  const [procesoSeleccionado, setProcesoSeleccionado] = useState(null);\r\n  const [preguntas, setPreguntas] = useState([]);\r\n  const [progreso, setProgreso] = useState(0);\r\n  const [nivelSeleccionado, setNivelSeleccionado] = useState('Todos los niveles');\r\n  const [respuestasSeleccionadas, setRespuestasSeleccionadas] = useState({});\r\n  const [dialogoAbierto, setDialogoAbierto] = useState(false);\r\n  const [ayudaSeleccionada, setAyudaSeleccionada] = useState('');\r\n  const [dialogoInstruccionesAbierto, setDialogoInstruccionesAbierto] = useState(true);\r\n  const [isLoadingFinalizar, setIsLoadingFinalizar] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchCuestionario = async () => {\r\n      try {\r\n        const token = Cookies.get('token');\r\n        const config = { headers: { Authorization: `Bearer ${token}` } };\r\n        console.log(\"este es el cuestionario Id\")\r\n        console.log(cuestionarioId)\r\n        const response = await axios.get(\r\n          `http://localhost:9092/api/autoevaluaciones/obtenerOptimizado/${autoevaluacionId}`,\r\n          config\r\n        );\r\n        console.log(response.data);\r\n        const cuestionarioData = response.data.cuestionario;\r\n  \r\n        // Actualizar cuestionario y progreso\r\n        setCuestionario(cuestionarioData);\r\n        setProgreso(cuestionarioData.progreso);\r\n  \r\n        // Inicializar respuestas seleccionadas\r\n        const initialRespuestas = {};\r\n        [...(cuestionarioData.preguntasGenerales || []), ...(cuestionarioData.preguntasPorProceso || [])].forEach((pregunta) => {\r\n          if (pregunta.respuestaSeleccionada) {\r\n            initialRespuestas[pregunta.pregunta] = pregunta.respuestaSeleccionada;\r\n          }\r\n        });\r\n        setRespuestasSeleccionadas(initialRespuestas);\r\n  \r\n        // Mapear preguntas generales por nivel\r\n        const preguntasGeneralesPorNivel = (cuestionarioData.preguntasGenerales || []).reduce((acc, pregunta) => {\r\n          const nivel = pregunta.general || 'Sin Nivel';\r\n          if (!acc[nivel]) {\r\n            acc[nivel] = { proceso: { _id: `general-${nivel}`, nombre: `Preguntas Generales Nivel ${nivel}`, nivel: nivel }, preguntas: [] };\r\n          }\r\n          acc[nivel].preguntas.push(pregunta);\r\n          return acc;\r\n        }, {});\r\n  \r\n        // Mapear preguntas por proceso\r\n        const procesosMap = (cuestionarioData.preguntasPorProceso || []).reduce((acc, pregunta) => {\r\n          const procesoId = pregunta.proceso?._id;\r\n          if (!procesoId) return acc; // Ignorar preguntas sin proceso\r\n          if (!acc[procesoId]) {\r\n            acc[procesoId] = { proceso: pregunta.proceso, preguntas: [] };\r\n          }\r\n          acc[procesoId].preguntas.push(pregunta);\r\n          return acc;\r\n        }, {});\r\n  \r\n        // Combinar procesos y preguntas generales\r\n        const procesosList = [...Object.values(procesosMap), ...Object.values(preguntasGeneralesPorNivel)];\r\n        setProcesos(procesosList);\r\n        setProcesosFiltrados(procesosList);\r\n  \r\n        // Seleccionar el primer proceso si hay disponibles\r\n        if (procesosList.length > 0) {\r\n          seleccionarProceso(procesosList[0]?.proceso._id, procesosList);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cargar el cuestionario:', error);\r\n      }\r\n    };\r\n  \r\n    fetchCuestionario();\r\n  }, [autoevaluacionId]);\r\n  \r\n\r\n  const cerrarDialogoInstrucciones = () => {\r\n    setDialogoInstruccionesAbierto(false);\r\n  };\r\n  const filtrarPorNivel = (nivel) => {\r\n    setNivelSeleccionado(nivel);\r\n  \r\n    if (nivel === 'Todos los niveles') {\r\n      // Si selecciona \"Todos los niveles\", no aplicar filtro\r\n      setProcesosFiltrados(procesos);\r\n    } else {\r\n      const nivelInt = parseInt(nivel, 10);\r\n      const filtrados = procesos.filter((p) => {\r\n        const procesoNivel = p.proceso.nivel;\r\n        return procesoNivel === nivelInt || p.proceso.nombre.includes(`Nivel ${nivel}`);\r\n      });\r\n  \r\n      setProcesosFiltrados(filtrados);\r\n  \r\n      if (filtrados.length > 0) {\r\n        seleccionarProceso(filtrados[0]?.proceso._id, filtrados);\r\n      } else {\r\n        setProcesoSeleccionado(null);\r\n        setPreguntas([]);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const seleccionarProceso = (procesoId, listaProcesos) => {\r\n    setProcesoSeleccionado(procesoId);\r\n    const proceso = listaProcesos.find((p) => p.proceso._id === procesoId);\r\n    setPreguntas(proceso?.preguntas || []);\r\n  };\r\n  \r\n  \r\n\r\n  const manejarSeleccionRespuesta = async (preguntaId, respuestaId) => {\r\n    if (isCompleted) return;\r\n  \r\n    // Actualiza el estado local primero para una mejor experiencia de usuario\r\n    setRespuestasSeleccionadas((prev) => ({\r\n      ...prev,\r\n      [preguntaId]: respuestaId,\r\n    }));\r\n  \r\n    try {\r\n      const token = Cookies.get('token');\r\n      const config = { headers: { Authorization: `Bearer ${token}` } };\r\n  \r\n      // Llamar al backend para actualizar el cuestionario\r\n      const payload = { preguntaId, respuesta: respuestaId }; // Cambiado a 'respuesta'\r\n      const response = await axios.put(\r\n        `http://localhost:9092/api/autoevaluaciones/actualizar/${cuestionario._id}`,\r\n        payload,\r\n        config\r\n      );\r\n  \r\n      // Actualizar el progreso y las respuestas del cuestionario localmente\r\n      setProgreso(response.data.cuestionario.progreso);\r\n      setCuestionario(response.data.cuestionario);\r\n    } catch (error) {\r\n      \r\n    }\r\n  };\r\n  \r\n  const abrirDialogoAyuda = (ayuda) => {\r\n    setAyudaSeleccionada(ayuda);\r\n    setDialogoAbierto(true);\r\n  };\r\n\r\n  const cerrarDialogoAyuda = () => {\r\n    setDialogoAbierto(false);\r\n    setAyudaSeleccionada('');\r\n  };\r\n\r\n  const finalizarCuestionario = async () => {\r\n    if (isCompleted) {\r\n      navigate('/autoevaluaciones');\r\n      return;\r\n    }\r\n  \r\n    const totalPreguntas = cuestionario.preguntasRespuestas ? cuestionario.preguntasRespuestas.length : 0;\r\n    const respondidas = Object.keys(respuestasSeleccionadas).length;\r\n  \r\n    if (respondidas < totalPreguntas || totalPreguntas === 0) {\r\n      Swal.fire({\r\n        title: '¿Deseas salir del cuestionario?',\r\n        text: 'Aún no has completado todas las preguntas. Puedes continuar más tarde.',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Aceptar',\r\n        cancelButtonText: 'Cancelar',\r\n        confirmButtonColor: '#A5D6A7',\r\n        cancelButtonColor: '#EF9A9A',\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          try {\r\n            setIsLoadingFinalizar(true); // 🔥 Activa el spinner\r\n            const token = Cookies.get('token');\r\n            const config = { headers: { Authorization: `Bearer ${token}` } };\r\n  \r\n            const payload = {\r\n              respuestas: cuestionario.preguntasRespuestas?.map((pr) => ({\r\n                pregunta: pr.pregunta,\r\n                respuestaSeleccionada: respuestasSeleccionadas[pr.pregunta] || null,\r\n              })) || [],\r\n            };\r\n  \r\n            await axios.post(\r\n              `http://localhost:9092/api/autoevaluaciones/guardarProgreso/${cuestionario._id}`,\r\n              payload,\r\n              config\r\n            );\r\n  \r\n            navigate('/autoevaluaciones');\r\n          } catch (error) {\r\n            Swal.fire('Error', 'No se pudo guardar el progreso.', 'error');\r\n          } finally {\r\n            setIsLoadingFinalizar(false); // 🔥 Desactiva el spinner\r\n          }\r\n        }\r\n      });\r\n      return;\r\n    }\r\n  \r\n    Swal.fire({\r\n      title: '¿Finalizar el cuestionario?',\r\n      text: 'Has respondido todas las preguntas.',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Aceptar',\r\n      cancelButtonText: 'Cancelar',\r\n      confirmButtonColor: '#A5D6A7',\r\n      cancelButtonColor: '#EF9A9A',\r\n    }).then(async (result) => {\r\n      if (result.isConfirmed) {\r\n        try {\r\n          setIsLoadingFinalizar(true); // 🔥 Activa el spinner\r\n          const token = Cookies.get('token');\r\n          const config = { headers: { Authorization: `Bearer ${token}` } };\r\n  \r\n          const payload = {\r\n            respuestas: cuestionario.preguntasRespuestas?.map((pr) => ({\r\n              pregunta: pr.pregunta,\r\n              respuestaSeleccionada: respuestasSeleccionadas[pr.pregunta] || null,\r\n            })) || [],\r\n          };\r\n  \r\n          await axios.post(\r\n            `http://localhost:9092/api/autoevaluaciones/finalizarCuestionario/${cuestionario._id}`,\r\n            payload,\r\n            config\r\n          );\r\n  \r\n          navigate('/autoevaluaciones');\r\n        } catch (error) {\r\n          Swal.fire('Error', 'No se pudo finalizar el cuestionario.', 'error');\r\n        } finally {\r\n          setIsLoadingFinalizar(false); // 🔥 Desactiva el spinner\r\n        }\r\n      }\r\n    });\r\n  };\r\n  \r\n\r\n  if (!cuestionario) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: 'calc(100vh - 64px)' }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n<Box sx={{  minHeight: \"100vh\", pb: 6 }}>\r\n      <Box sx={{ bgcolor: \"#f9f9f9\", px: 3, py: 2, borderRadius: 2, mb: 3 }}>\r\n  <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n    <MuiLink \r\n      component={RouterLink} \r\n      to=\"/mis-autoevaluaciones\" \r\n      sx={{ display: \"flex\", alignItems: \"center\", color: \"#1e4b81\", fontWeight: \"bold\", \"&:hover\": { textDecoration: \"underline\" } }}\r\n    >\r\n      <HomeIcon sx={{ fontSize: 18, mr: 0.5 }} />\r\n      Inicio\r\n    </MuiLink>\r\n    <Typography sx={{ color: \"#d37d36\", fontWeight: \"bold\" }}>\r\n      Cuestionario   </Typography>\r\n  </Breadcrumbs>\r\n</Box>\r\n\r\n\r\n  {/* 🔹 Aquí empieza la estructura principal con las columnas */}\r\n  <Box sx={{ display: 'flex', flex: 1, height: '100vh' }}>\r\n    \r\n    {/* 🏷️ Sidebar de procesos */}\r\n    <Box sx={{ width: '20%', bgcolor: '#f3f4f6', p: 3, height: '100vh', display: 'flex', flexDirection: 'column' }}>\r\n    <FormControl fullWidth variant=\"outlined\" sx={{ mb: 2 }}>\r\n  <InputLabel id=\"nivel-select-label\">Filtrar por Nivel</InputLabel>\r\n  <Select\r\n    labelId=\"nivel-select-label\"\r\n    value={nivelSeleccionado}\r\n    onChange={(e) => filtrarPorNivel(e.target.value)}\r\n    sx={{\r\n      borderRadius: \"8px\",\r\n      bgcolor: \"#fff\",\r\n      fontWeight: \"bold\",\r\n      boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.1)\",\r\n      \"& .MuiOutlinedInput-notchedOutline\": { borderColor: \"#ddd\" },\r\n      \"&:hover .MuiOutlinedInput-notchedOutline\": { borderColor: \"#1E4B81\" },\r\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": { borderColor: \"#1E4B81\" },\r\n    }}\r\n  >\r\n    <MenuItem value=\"Todos los niveles\">🔹 Todos los niveles</MenuItem>\r\n    <MenuItem value=\"1\">🔹 Nivel 1</MenuItem>\r\n    <MenuItem value=\"2\">🔹 Nivel 2</MenuItem>\r\n    <MenuItem value=\"3\">🔹 Nivel 3</MenuItem>\r\n  </Select>\r\n</FormControl>\r\n\r\n\r\n      <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2 }}>\r\n        Procesos\r\n      </Typography>\r\n\r\n      {/* Lista de procesos */}\r\n      {procesosFiltrados.map((p) => {\r\n        const preguntasTotales = p.preguntas.length;\r\n        const preguntasRespondidas = p.preguntas.filter(\r\n          (pregunta) => respuestasSeleccionadas[pregunta.pregunta]\r\n        ).length;\r\n        const completado = preguntasTotales === preguntasRespondidas;\r\n\r\n        return (\r\n          <Paper\r\n            key={p.proceso._id}\r\n            sx={{\r\n              p: 2,\r\n              mb: 2,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-between',\r\n              border: procesoSeleccionado === p.proceso._id ? '2px solid #1e4b81' : '1px solid #e0e0e0',\r\n              borderRadius: '8px',\r\n              cursor: 'pointer',\r\n              '&:hover': { boxShadow: '0 4px 10px rgba(0, 0, 0, 0.1)' },\r\n            }}\r\n            onClick={() => seleccionarProceso(p.proceso._id, procesosFiltrados)}\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{ fontWeight: procesoSeleccionado === p.proceso._id ? 'bold' : 'normal', color: completado ? '#4caf50' : '#000' }}\r\n            >\r\n              {p.proceso.nombre}\r\n            </Typography>\r\n          </Paper>\r\n        );\r\n      })}\r\n    </Box>\r\n\r\n      <Box sx={{ width: '55%' }}>\r\n        <Typography variant=\"h5\" sx={{ mb: 3, fontWeight: 'bold' }}>\r\n          {procesoSeleccionado\r\n            ? `Preguntas de ${procesosFiltrados.find((p) => p.proceso._id === procesoSeleccionado)?.proceso.nombre}`\r\n            : 'Seleccione un proceso'}\r\n        </Typography>\r\n       \r\n\r\n        {preguntas.map((p) => (\r\n          <Paper\r\n  key={p.pregunta}\r\n  sx={{\r\n    p: 3, // Más padding para mejor lectura\r\n    mb: 2,\r\n    borderRadius: '10px',\r\n    boxShadow: '0 3px 6px rgba(0, 0, 0, 0.1)', // Sombra suave\r\n    transition: '0.2s',\r\n    \"&:hover\": { \r\n      boxShadow: '0 5px 12px rgba(0, 0, 0, 0.15)', // Efecto al pasar el mouse\r\n      transform: \"translateY(-2px)\" // Pequeño efecto de elevación\r\n    },\r\n  }}\r\n>\r\n\r\n    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n      <Typography sx={{ mb: 2, fontWeight: 'bold', flex: 1 }}>{p.descripcion}</Typography>\r\n      {p.ayuda && (\r\n        <Tooltip title=\"Ver ayuda\" placement=\"top\" arrow>\r\n          <IconButton\r\n            sx={{\r\n              color: '#d37d36',\r\n              backgroundColor: '#f5f5f5',\r\n              boxShadow: '0 2px 5px rgba(0, 0, 0, 0.2)',\r\n              borderRadius: '50%',\r\n              ml: 2,\r\n              '&:hover': { backgroundColor: '#e0e0e0' },\r\n            }}\r\n            onClick={() => abrirDialogoAyuda(p.ayuda)}\r\n          >\r\n            <HelpOutlineIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Box>\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n      {p.respuestas.map((r) => (\r\n        <FormControlLabel\r\n          key={r._id}\r\n          control={\r\n            <Checkbox\r\n              checked={respuestasSeleccionadas[p.pregunta] === r._id}\r\n              disabled={isCompleted}\r\n              onChange={() => manejarSeleccionRespuesta(p.pregunta, r._id)}\r\n            />\r\n          }\r\n          label={r.descripcion}\r\n        />\r\n      ))}\r\n    </Box>\r\n  </Paper>\r\n))}\r\n\r\n      </Box>\r\n\r\n      <Box\r\n  sx={{\r\n    width: '25%',\r\n    p: 3,\r\n    borderRadius: '8px',\r\n  }}\r\n>\r\n  {/* Título de progreso */}\r\n  <Typography variant=\"h6\" sx={{ fontWeight: 'bold', mb: 2, color: '#1e4b81' }}>\r\n    Tu Progreso\r\n  </Typography>\r\n\r\n  {/* Barra de progreso general */}\r\n  <Box sx={{ mb: 3 }}>\r\n    <Typography sx={{ mb: 1 }}>Progreso Total: {progreso}%</Typography>\r\n    <LinearProgress\r\n      variant=\"determinate\"\r\n      value={progreso}\r\n      sx={{\r\n        height: '10px',\r\n        borderRadius: '5px',\r\n        '& .MuiLinearProgress-bar': {\r\n          backgroundColor: '#1e4b81',\r\n        },\r\n      }}\r\n    />\r\n  </Box>\r\n\r\n  {/* Detalles de los procesos */}\r\n  <Typography variant=\"body1\" sx={{ mb: 2, fontWeight: 'bold', color: '#1e4b81' }}>\r\n    Procesos completados: {procesos.filter((p) => p.preguntas.length === p.preguntas.filter((pregunta) => respuestasSeleccionadas[pregunta.pregunta]).length).length}/{procesos.length}\r\n  </Typography>\r\n\r\n  {/* Lista de procesos con estado */}\r\n  <Box>\r\n    {procesos.map((p) => {\r\n      const preguntasTotales = p.preguntas.length;\r\n      const preguntasRespondidas = p.preguntas.filter((pregunta) => respuestasSeleccionadas[pregunta.pregunta]).length;\r\n      const completado = preguntasTotales === preguntasRespondidas;\r\n\r\n      return (\r\n        <Box\r\n          key={p.proceso._id}\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n            mb: 1,\r\n            p: 1,\r\n            borderRadius: '4px',\r\n            backgroundColor: completado ? '#e8f5e9' : '#fff',\r\n            boxShadow: completado ? '0 1px 3px rgba(0, 128, 0, 0.2)' : '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"body2\"\r\n            sx={{\r\n              color: completado ? '#4caf50' : '#000',\r\n              fontWeight: completado ? 'bold' : 'normal',\r\n            }}\r\n          >\r\n            {p.proceso.nombre}\r\n          </Typography>\r\n          {completado ? (\r\n            <CheckCircleIcon sx={{ color: '#4caf50', fontSize: 18 }} />\r\n          ) : (\r\n            <Typography variant=\"body2\" sx={{ color: '#ff5722', fontSize: 12 }}>\r\n              {preguntasRespondidas}/{preguntasTotales}\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      );\r\n    })}\r\n  </Box>\r\n{/* 🔹 Botón para ver instrucciones */}\r\n<Button\r\n  variant=\"contained\"\r\n  fullWidth\r\n  startIcon={<TipsAndUpdatesOutlinedIcon />} // Bombilla moderna\r\n  sx={{\r\n    mb: 2, // Margen inferior para separar del botón de finalizar\r\n    bgcolor: \"#FFE082\", // Amarillo dorado\r\n    color: \"#000\", // Texto en negro\r\n    fontWeight: \"bold\",\r\n    textTransform: \"none\", // Mantiene el texto sin mayúsculas forzadas\r\n    \"&:hover\": {\r\n      bgcolor: \"#FFC107\", // Un amarillo más oscuro en hover\r\n    },\r\n  }}\r\n  onClick={() => navigate(`/instrucciones/${cuestionarioId}`)}\r\n>\r\n  Ver Instrucciones\r\n</Button>\r\n\r\n<Button\r\n  variant=\"contained\"\r\n  fullWidth\r\n  sx={{\r\n    mt: 3,\r\n    py: 1.5, // Hace el botón más alto\r\n    fontSize: \"1.1rem\", // Texto más grande\r\n    fontWeight: \"bold\",\r\n    bgcolor: isLoadingFinalizar ? \"#FFC107\" : \"#1e4b81\", // Amarillo si está cargando\r\n    color: \"#fff\",\r\n    boxShadow: \"0px 4px 10px rgba(30, 75, 129, 0.3)\",\r\n    borderRadius: \"8px\",\r\n    transition: \"0.3s\",\r\n    \"&:hover\": { \r\n      bgcolor: isLoadingFinalizar ? \"#FFA000\" : \"#163a63\",\r\n      transform: isLoadingFinalizar ? \"none\" : \"scale(1.05)\",\r\n    },\r\n  }}\r\n  disabled={isLoadingFinalizar} // 🔥 Deshabilita el botón mientras carga\r\n  onClick={finalizarCuestionario}\r\n>\r\n  {isLoadingFinalizar ? (\r\n    <>\r\n      <CircularProgress size={24} sx={{ color: \"#fff\", mr: 1 }} /> Finalizando...\r\n    </>\r\n  ) : (\r\n    isCompleted ? \"Finalizar Revisión\" : \"Finalizar Cuestionario\"\r\n  )}\r\n</Button>\r\n\r\n\r\n</Box>\r\n\r\n\r\n      <Dialog open={dialogoAbierto} onClose={cerrarDialogoAyuda}>\r\n        <DialogTitle>Ayuda</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>{ayudaSeleccionada}</Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Box>\r\n    </Box>\r\n\r\n  );\r\n};\r\n\r\nexport default CuestionarioPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}