{"ast":null,"code":"var _excluded = [\"verticalAnchor\", \"scaleToFit\", \"angle\", \"width\", \"lineHeight\", \"capHeight\", \"children\", \"style\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { useMemo } from 'react';\nimport reduceCSSCalc from 'reduce-css-calc';\nimport getStringWidth from '../util/getStringWidth';\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\nfunction isXOrYInValid(xOrY) {\n  return (\n    // number that is not NaN or Infinity\n    typeof xOrY === 'number' && Number.isFinite(xOrY) ||\n    // for percentage\n    typeof xOrY === 'string'\n  );\n}\nexport default function useText(props) {\n  var _props$verticalAnchor = props.verticalAnchor,\n    verticalAnchor = _props$verticalAnchor === void 0 ? 'end' : _props$verticalAnchor,\n    _props$scaleToFit = props.scaleToFit,\n    scaleToFit = _props$scaleToFit === void 0 ? false : _props$scaleToFit,\n    angle = props.angle,\n    width = props.width,\n    _props$lineHeight = props.lineHeight,\n    lineHeight = _props$lineHeight === void 0 ? '1em' : _props$lineHeight,\n    _props$capHeight = props.capHeight,\n    capHeight = _props$capHeight === void 0 ? '0.71em' : _props$capHeight,\n    children = props.children,\n    style = props.style,\n    textProps = _objectWithoutPropertiesLoose(props, _excluded);\n  var _textProps$x = textProps.x,\n    x = _textProps$x === void 0 ? 0 : _textProps$x,\n    _textProps$y = textProps.y,\n    y = _textProps$y === void 0 ? 0 : _textProps$y;\n  var isXOrYNotValid = !isXOrYInValid(x) || !isXOrYInValid(y);\n  var _useMemo = useMemo(function () {\n      var words = children == null ? [] : children.toString().split(/(?:(?!\\u00A0+)\\s+)/);\n      return {\n        wordsWithWidth: words.map(function (word) {\n          return {\n            word: word,\n            wordWidth: getStringWidth(word, style) || 0\n          };\n        }),\n        spaceWidth: getStringWidth(\"\\xA0\", style) || 0\n      };\n    }, [children, style]),\n    wordsWithWidth = _useMemo.wordsWithWidth,\n    spaceWidth = _useMemo.spaceWidth;\n  var wordsByLines = useMemo(function () {\n    if (isXOrYNotValid) {\n      return [];\n    }\n\n    // Only perform calculations if using features that require them (multiline, scaleToFit)\n    if (width || scaleToFit) {\n      return wordsWithWidth.reduce(function (result, _ref) {\n        var word = _ref.word,\n          wordWidth = _ref.wordWidth;\n        var currentLine = result[result.length - 1];\n        if (currentLine && (width == null || scaleToFit || (currentLine.width || 0) + wordWidth + spaceWidth < width)) {\n          // Word can be added to an existing line\n          currentLine.words.push(word);\n          currentLine.width = currentLine.width || 0;\n          currentLine.width += wordWidth + spaceWidth;\n        } else {\n          // Add first word to line or word is too long to scaleToFit on existing line\n          var newLine = {\n            words: [word],\n            width: wordWidth\n          };\n          result.push(newLine);\n        }\n        return result;\n      }, []);\n    }\n    return [{\n      words: children == null ? [] : children.toString().split(/(?:(?!\\u00A0+)\\s+)/)\n    }];\n  }, [isXOrYNotValid, width, scaleToFit, children, wordsWithWidth, spaceWidth]);\n  var startDy = useMemo(function () {\n    var startDyStr = isXOrYNotValid ? '' : verticalAnchor === 'start' ? reduceCSSCalc(\"calc(\" + capHeight + \")\") : verticalAnchor === 'middle' ? reduceCSSCalc(\"calc(\" + (wordsByLines.length - 1) / 2 + \" * -\" + lineHeight + \" + (\" + capHeight + \" / 2))\") : reduceCSSCalc(\"calc(\" + (wordsByLines.length - 1) + \" * -\" + lineHeight + \")\");\n    return startDyStr;\n  }, [isXOrYNotValid, verticalAnchor, capHeight, wordsByLines.length, lineHeight]);\n  var transform = useMemo(function () {\n    var transforms = [];\n    if (isXOrYNotValid) {\n      return '';\n    }\n    if (isNumber(x) && isNumber(y) && isNumber(width) && scaleToFit && wordsByLines.length > 0) {\n      var lineWidth = wordsByLines[0].width || 1;\n      var sx = scaleToFit === 'shrink-only' ? Math.min(width / lineWidth, 1) : width / lineWidth;\n      var sy = sx;\n      var originX = x - sx * x;\n      var originY = y - sy * y;\n      transforms.push(\"matrix(\" + sx + \", 0, 0, \" + sy + \", \" + originX + \", \" + originY + \")\");\n    }\n    if (angle) {\n      transforms.push(\"rotate(\" + angle + \", \" + x + \", \" + y + \")\");\n    }\n    return transforms.length > 0 ? transforms.join(' ') : '';\n  }, [isXOrYNotValid, x, y, width, scaleToFit, wordsByLines, angle]);\n  return {\n    wordsByLines: wordsByLines,\n    startDy: startDy,\n    transform: transform\n  };\n}","map":{"version":3,"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","useMemo","reduceCSSCalc","getStringWidth","isNumber","val","isXOrYInValid","xOrY","Number","isFinite","useText","props","_props$verticalAnchor","verticalAnchor","_props$scaleToFit","scaleToFit","angle","width","_props$lineHeight","lineHeight","_props$capHeight","capHeight","children","style","textProps","_textProps$x","x","_textProps$y","y","isXOrYNotValid","_useMemo","words","toString","split","wordsWithWidth","map","word","wordWidth","spaceWidth","wordsByLines","reduce","result","_ref","currentLine","push","newLine","startDy","startDyStr","transform","transforms","lineWidth","sx","Math","min","sy","originX","originY","join"],"sources":["C:/Users/Yolanda Ayuso/Desktop/frontDespliegueDef/DQPA_v1.2Front/dqpa/node_modules/@visx/text/esm/hooks/useText.js"],"sourcesContent":["var _excluded = [\"verticalAnchor\", \"scaleToFit\", \"angle\", \"width\", \"lineHeight\", \"capHeight\", \"children\", \"style\"];\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\nimport { useMemo } from 'react';\r\nimport reduceCSSCalc from 'reduce-css-calc';\r\nimport getStringWidth from '../util/getStringWidth';\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\nfunction isXOrYInValid(xOrY) {\r\n  return (\r\n    // number that is not NaN or Infinity\r\n    typeof xOrY === 'number' && Number.isFinite(xOrY) ||\r\n    // for percentage\r\n    typeof xOrY === 'string'\r\n  );\r\n}\r\nexport default function useText(props) {\r\n  var _props$verticalAnchor = props.verticalAnchor,\r\n    verticalAnchor = _props$verticalAnchor === void 0 ? 'end' : _props$verticalAnchor,\r\n    _props$scaleToFit = props.scaleToFit,\r\n    scaleToFit = _props$scaleToFit === void 0 ? false : _props$scaleToFit,\r\n    angle = props.angle,\r\n    width = props.width,\r\n    _props$lineHeight = props.lineHeight,\r\n    lineHeight = _props$lineHeight === void 0 ? '1em' : _props$lineHeight,\r\n    _props$capHeight = props.capHeight,\r\n    capHeight = _props$capHeight === void 0 ? '0.71em' : _props$capHeight,\r\n    children = props.children,\r\n    style = props.style,\r\n    textProps = _objectWithoutPropertiesLoose(props, _excluded);\r\n  var _textProps$x = textProps.x,\r\n    x = _textProps$x === void 0 ? 0 : _textProps$x,\r\n    _textProps$y = textProps.y,\r\n    y = _textProps$y === void 0 ? 0 : _textProps$y;\r\n  var isXOrYNotValid = !isXOrYInValid(x) || !isXOrYInValid(y);\r\n  var _useMemo = useMemo(function () {\r\n      var words = children == null ? [] : children.toString().split(/(?:(?!\\u00A0+)\\s+)/);\r\n      return {\r\n        wordsWithWidth: words.map(function (word) {\r\n          return {\r\n            word: word,\r\n            wordWidth: getStringWidth(word, style) || 0\r\n          };\r\n        }),\r\n        spaceWidth: getStringWidth(\"\\xA0\", style) || 0\r\n      };\r\n    }, [children, style]),\r\n    wordsWithWidth = _useMemo.wordsWithWidth,\r\n    spaceWidth = _useMemo.spaceWidth;\r\n  var wordsByLines = useMemo(function () {\r\n    if (isXOrYNotValid) {\r\n      return [];\r\n    }\r\n\r\n    // Only perform calculations if using features that require them (multiline, scaleToFit)\r\n    if (width || scaleToFit) {\r\n      return wordsWithWidth.reduce(function (result, _ref) {\r\n        var word = _ref.word,\r\n          wordWidth = _ref.wordWidth;\r\n        var currentLine = result[result.length - 1];\r\n        if (currentLine && (width == null || scaleToFit || (currentLine.width || 0) + wordWidth + spaceWidth < width)) {\r\n          // Word can be added to an existing line\r\n          currentLine.words.push(word);\r\n          currentLine.width = currentLine.width || 0;\r\n          currentLine.width += wordWidth + spaceWidth;\r\n        } else {\r\n          // Add first word to line or word is too long to scaleToFit on existing line\r\n          var newLine = {\r\n            words: [word],\r\n            width: wordWidth\r\n          };\r\n          result.push(newLine);\r\n        }\r\n        return result;\r\n      }, []);\r\n    }\r\n    return [{\r\n      words: children == null ? [] : children.toString().split(/(?:(?!\\u00A0+)\\s+)/)\r\n    }];\r\n  }, [isXOrYNotValid, width, scaleToFit, children, wordsWithWidth, spaceWidth]);\r\n  var startDy = useMemo(function () {\r\n    var startDyStr = isXOrYNotValid ? '' : verticalAnchor === 'start' ? reduceCSSCalc(\"calc(\" + capHeight + \")\") : verticalAnchor === 'middle' ? reduceCSSCalc(\"calc(\" + (wordsByLines.length - 1) / 2 + \" * -\" + lineHeight + \" + (\" + capHeight + \" / 2))\") : reduceCSSCalc(\"calc(\" + (wordsByLines.length - 1) + \" * -\" + lineHeight + \")\");\r\n    return startDyStr;\r\n  }, [isXOrYNotValid, verticalAnchor, capHeight, wordsByLines.length, lineHeight]);\r\n  var transform = useMemo(function () {\r\n    var transforms = [];\r\n    if (isXOrYNotValid) {\r\n      return '';\r\n    }\r\n    if (isNumber(x) && isNumber(y) && isNumber(width) && scaleToFit && wordsByLines.length > 0) {\r\n      var lineWidth = wordsByLines[0].width || 1;\r\n      var sx = scaleToFit === 'shrink-only' ? Math.min(width / lineWidth, 1) : width / lineWidth;\r\n      var sy = sx;\r\n      var originX = x - sx * x;\r\n      var originY = y - sy * y;\r\n      transforms.push(\"matrix(\" + sx + \", 0, 0, \" + sy + \", \" + originX + \", \" + originY + \")\");\r\n    }\r\n    if (angle) {\r\n      transforms.push(\"rotate(\" + angle + \", \" + x + \", \" + y + \")\");\r\n    }\r\n    return transforms.length > 0 ? transforms.join(' ') : '';\r\n  }, [isXOrYNotValid, x, y, width, scaleToFit, wordsByLines, angle]);\r\n  return {\r\n    wordsByLines: wordsByLines,\r\n    startDy: startDy,\r\n    transform: transform\r\n  };\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}