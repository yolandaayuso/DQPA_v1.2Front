{"ast":null,"code":"import _pt from \"prop-types\";\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useMemo } from 'react';\nimport getSplitLineSegments from '../util/getSplitLineSegments';\nimport { line } from '../util/D3ShapeFactories';\nimport LinePath from './LinePath';\nvar getX = function getX(d) {\n  return d.x || 0;\n};\nvar getY = function getY(d) {\n  return d.y || 0;\n};\nexport default function SplitLinePath(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    curve = _ref.curve,\n    defined = _ref.defined,\n    segmentation = _ref.segmentation,\n    sampleRate = _ref.sampleRate,\n    segments = _ref.segments,\n    x = _ref.x,\n    y = _ref.y,\n    styles = _ref.styles;\n  // Convert data in all segments to points.\n  var pointsInSegments = useMemo(function () {\n    var xFn = typeof x === 'number' || typeof x === 'undefined' ? function () {\n      return x;\n    } : x;\n    var yFn = typeof y === 'number' || typeof y === 'undefined' ? function () {\n      return y;\n    } : y;\n    return segments.map(function (s) {\n      return s.map(function (value, i) {\n        return {\n          x: xFn(value, i, s),\n          y: yFn(value, i, s)\n        };\n      });\n    });\n  }, [x, y, segments]);\n  var pathString = useMemo(function () {\n    var path = line({\n      x: x,\n      y: y,\n      defined: defined,\n      curve: curve\n    });\n    return path(segments.flat()) || '';\n  }, [x, y, defined, curve, segments]);\n  var splitLineSegments = useMemo(function () {\n    return getSplitLineSegments({\n      path: pathString,\n      segmentation: segmentation,\n      pointsInSegments: pointsInSegments,\n      sampleRate: sampleRate\n    });\n  }, [pathString, segmentation, pointsInSegments, sampleRate]);\n  return /*#__PURE__*/React.createElement(\"g\", null, splitLineSegments.map(function (segment, index) {\n    return children ? /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index\n    }, children({\n      index: index,\n      segment: segment,\n      styles: styles[index] || styles[index % styles.length]\n    })) : /*#__PURE__*/React.createElement(LinePath, _extends({\n      key: index,\n      className: className,\n      data: segment,\n      x: getX,\n      y: getY\n    }, styles[index] || styles[index % styles.length]));\n  }));\n}\nSplitLinePath.propTypes = {\n  segments: _pt.arrayOf(_pt.array).isRequired,\n  styles: _pt.array.isRequired,\n  children: _pt.func,\n  className: _pt.string\n};","map":{"version":3,"names":["_pt","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useMemo","getSplitLineSegments","line","LinePath","getX","d","x","getY","y","SplitLinePath","_ref","children","className","curve","defined","segmentation","sampleRate","segments","styles","pointsInSegments","xFn","yFn","map","s","value","pathString","path","flat","splitLineSegments","createElement","segment","index","Fragment","data","propTypes","arrayOf","array","isRequired","func","string"],"sources":["C:/Users/Yolanda Ayuso/Desktop/frontDespliegueDef/DQPA_v1.2Front/dqpa/node_modules/@visx/shape/esm/shapes/SplitLinePath.js"],"sourcesContent":["import _pt from \"prop-types\";\r\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\r\nimport React, { useMemo } from 'react';\r\nimport getSplitLineSegments from '../util/getSplitLineSegments';\r\nimport { line } from '../util/D3ShapeFactories';\r\nimport LinePath from './LinePath';\r\nvar getX = function getX(d) {\r\n  return d.x || 0;\r\n};\r\nvar getY = function getY(d) {\r\n  return d.y || 0;\r\n};\r\nexport default function SplitLinePath(_ref) {\r\n  var children = _ref.children,\r\n    className = _ref.className,\r\n    curve = _ref.curve,\r\n    defined = _ref.defined,\r\n    segmentation = _ref.segmentation,\r\n    sampleRate = _ref.sampleRate,\r\n    segments = _ref.segments,\r\n    x = _ref.x,\r\n    y = _ref.y,\r\n    styles = _ref.styles;\r\n  // Convert data in all segments to points.\r\n  var pointsInSegments = useMemo(function () {\r\n    var xFn = typeof x === 'number' || typeof x === 'undefined' ? function () {\r\n      return x;\r\n    } : x;\r\n    var yFn = typeof y === 'number' || typeof y === 'undefined' ? function () {\r\n      return y;\r\n    } : y;\r\n    return segments.map(function (s) {\r\n      return s.map(function (value, i) {\r\n        return {\r\n          x: xFn(value, i, s),\r\n          y: yFn(value, i, s)\r\n        };\r\n      });\r\n    });\r\n  }, [x, y, segments]);\r\n  var pathString = useMemo(function () {\r\n    var path = line({\r\n      x: x,\r\n      y: y,\r\n      defined: defined,\r\n      curve: curve\r\n    });\r\n    return path(segments.flat()) || '';\r\n  }, [x, y, defined, curve, segments]);\r\n  var splitLineSegments = useMemo(function () {\r\n    return getSplitLineSegments({\r\n      path: pathString,\r\n      segmentation: segmentation,\r\n      pointsInSegments: pointsInSegments,\r\n      sampleRate: sampleRate\r\n    });\r\n  }, [pathString, segmentation, pointsInSegments, sampleRate]);\r\n  return /*#__PURE__*/React.createElement(\"g\", null, splitLineSegments.map(function (segment, index) {\r\n    return children ? /*#__PURE__*/React.createElement(React.Fragment, {\r\n      key: index\r\n    }, children({\r\n      index: index,\r\n      segment: segment,\r\n      styles: styles[index] || styles[index % styles.length]\r\n    })) : /*#__PURE__*/React.createElement(LinePath, _extends({\r\n      key: index,\r\n      className: className,\r\n      data: segment,\r\n      x: getX,\r\n      y: getY\r\n    }, styles[index] || styles[index % styles.length]));\r\n  }));\r\n}\r\nSplitLinePath.propTypes = {\r\n  segments: _pt.arrayOf(_pt.array).isRequired,\r\n  styles: _pt.array.isRequired,\r\n  children: _pt.func,\r\n  className: _pt.string\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}