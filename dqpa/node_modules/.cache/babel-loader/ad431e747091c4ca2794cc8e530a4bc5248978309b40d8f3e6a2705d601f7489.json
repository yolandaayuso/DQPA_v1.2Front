{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport React, { PureComponent } from 'react';\nimport { bind, clear } from 'size-sensor';\nimport { pick } from './helper/pick';\nimport { isFunction } from './helper/is-function';\nimport { isString } from './helper/is-string';\nimport { isEqual } from './helper/is-equal';\n/**\r\n * core component for echarts binding\r\n */\nvar EChartsReactCore = /** @class */function (_super) {\n  __extends(EChartsReactCore, _super);\n  function EChartsReactCore(props) {\n    var _this = _super.call(this, props) || this;\n    _this.echarts = props.echarts;\n    _this.ele = null;\n    _this.isInitialResize = true;\n    return _this;\n  }\n  EChartsReactCore.prototype.componentDidMount = function () {\n    this.renderNewEcharts();\n  };\n  // update\n  EChartsReactCore.prototype.componentDidUpdate = function (prevProps) {\n    /**\r\n     * if shouldSetOption return false, then return, not update echarts options\r\n     * default is true\r\n     */\n    var shouldSetOption = this.props.shouldSetOption;\n    if (isFunction(shouldSetOption) && !shouldSetOption(prevProps, this.props)) {\n      return;\n    }\n    // 以下属性修改的时候，需要 dispose 之后再新建\n    // 1. 切换 theme 的时候\n    // 2. 修改 opts 的时候\n    // 3. 修改 onEvents 的时候，这样可以取消所有之前绑定的事件 issue #151\n    if (!isEqual(prevProps.theme, this.props.theme) || !isEqual(prevProps.opts, this.props.opts) || !isEqual(prevProps.onEvents, this.props.onEvents)) {\n      this.dispose();\n      this.renderNewEcharts(); // 重建\n      return;\n    }\n    // when these props are not isEqual, update echarts\n    var pickKeys = ['option', 'notMerge', 'lazyUpdate', 'showLoading', 'loadingOption'];\n    if (!isEqual(pick(this.props, pickKeys), pick(prevProps, pickKeys))) {\n      this.updateEChartsOption();\n    }\n    /**\r\n     * when style or class name updated, change size.\r\n     */\n    if (!isEqual(prevProps.style, this.props.style) || !isEqual(prevProps.className, this.props.className)) {\n      this.resize();\n    }\n  };\n  EChartsReactCore.prototype.componentWillUnmount = function () {\n    this.dispose();\n  };\n  /**\r\n   * return the echart object\r\n   * 1. if exist, return the existed instance\r\n   * 2. or new one instance\r\n   */\n  EChartsReactCore.prototype.getEchartsInstance = function () {\n    return this.echarts.getInstanceByDom(this.ele) || this.echarts.init(this.ele, this.props.theme, this.props.opts);\n  };\n  /**\r\n   * dispose echarts and clear size-sensor\r\n   */\n  EChartsReactCore.prototype.dispose = function () {\n    if (this.ele) {\n      try {\n        clear(this.ele);\n      } catch (e) {\n        console.warn(e);\n      }\n      // dispose echarts instance\n      this.echarts.dispose(this.ele);\n    }\n  };\n  /**\r\n   * render a new echarts instance\r\n   */\n  EChartsReactCore.prototype.renderNewEcharts = function () {\n    var _this = this;\n    var _a = this.props,\n      onEvents = _a.onEvents,\n      onChartReady = _a.onChartReady;\n    // 1. new echarts instance\n    var echartsInstance = this.updateEChartsOption();\n    // 2. bind events\n    this.bindEvents(echartsInstance, onEvents || {});\n    // 3. on chart ready\n    if (isFunction(onChartReady)) onChartReady(echartsInstance);\n    // 4. on resize\n    if (this.ele) {\n      bind(this.ele, function () {\n        _this.resize();\n      });\n    }\n  };\n  // bind the events\n  EChartsReactCore.prototype.bindEvents = function (instance, events) {\n    function _bindEvent(eventName, func) {\n      // ignore the event config which not satisfy\n      if (isString(eventName) && isFunction(func)) {\n        // binding event\n        instance.on(eventName, function (param) {\n          func(param, instance);\n        });\n      }\n    }\n    // loop and bind\n    for (var eventName in events) {\n      if (Object.prototype.hasOwnProperty.call(events, eventName)) {\n        _bindEvent(eventName, events[eventName]);\n      }\n    }\n  };\n  /**\r\n   * render the echarts\r\n   */\n  EChartsReactCore.prototype.updateEChartsOption = function () {\n    var _a = this.props,\n      option = _a.option,\n      _b = _a.notMerge,\n      notMerge = _b === void 0 ? false : _b,\n      _c = _a.lazyUpdate,\n      lazyUpdate = _c === void 0 ? false : _c,\n      showLoading = _a.showLoading,\n      _d = _a.loadingOption,\n      loadingOption = _d === void 0 ? null : _d;\n    // 1. get or initial the echarts object\n    var echartInstance = this.getEchartsInstance();\n    // 2. set the echarts option\n    echartInstance.setOption(option, notMerge, lazyUpdate);\n    // 3. set loading mask\n    if (showLoading) echartInstance.showLoading(loadingOption);else echartInstance.hideLoading();\n    return echartInstance;\n  };\n  /**\r\n   * resize wrapper\r\n   */\n  EChartsReactCore.prototype.resize = function () {\n    // 1. get the echarts object\n    var echartsInstance = this.getEchartsInstance();\n    // 2. call echarts instance resize if not the initial resize\n    // resize should not happen on first render as it will cancel initial echarts animations\n    if (!this.isInitialResize) {\n      try {\n        echartsInstance.resize();\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n    // 3. update variable for future calls\n    this.isInitialResize = false;\n  };\n  EChartsReactCore.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      style = _a.style,\n      _b = _a.className,\n      className = _b === void 0 ? '' : _b;\n    // default height = 300\n    var newStyle = __assign({\n      height: 300\n    }, style);\n    return React.createElement(\"div\", {\n      ref: function (e) {\n        _this.ele = e;\n      },\n      style: newStyle,\n      className: \"echarts-for-react \" + className\n    });\n  };\n  return EChartsReactCore;\n}(PureComponent);\nexport default EChartsReactCore;","map":{"version":3,"names":["React","PureComponent","bind","clear","pick","isFunction","isString","isEqual","EChartsReactCore","_super","__extends","props","_this","call","echarts","ele","isInitialResize","prototype","componentDidMount","renderNewEcharts","componentDidUpdate","prevProps","shouldSetOption","theme","opts","onEvents","dispose","pickKeys","updateEChartsOption","style","className","resize","componentWillUnmount","getEchartsInstance","getInstanceByDom","init","e","console","warn","_a","onChartReady","echartsInstance","bindEvents","instance","events","_bindEvent","eventName","func","on","param","Object","hasOwnProperty","option","_b","notMerge","_c","lazyUpdate","showLoading","_d","loadingOption","echartInstance","setOption","hideLoading","render","newStyle","__assign","height","createElement","ref"],"sources":["C:\\Users\\Yolanda Ayuso\\Desktop\\frontDespliegueDef\\DQPA_v1.2Front\\dqpa\\node_modules\\echarts-for-react\\src\\core.tsx"],"sourcesContent":["import type { ECharts } from 'echarts';\nimport React, { PureComponent } from 'react';\nimport { bind, clear } from 'size-sensor';\nimport { pick } from './helper/pick';\nimport { isFunction } from './helper/is-function';\nimport { isString } from './helper/is-string';\nimport { isEqual } from './helper/is-equal';\nimport { EChartsReactProps, EChartsInstance } from './types';\n\n/**\n * core component for echarts binding\n */\nexport default class EChartsReactCore extends PureComponent<EChartsReactProps> {\n  /**\n   * echarts render container\n   */\n  public ele: HTMLElement;\n\n  /**\n   * if this is the first time we are resizing\n   */\n  private isInitialResize: boolean;\n\n  /**\n   * echarts library entry\n   */\n  protected echarts: any;\n\n  constructor(props: EChartsReactProps) {\n    super(props);\n\n    this.echarts = props.echarts;\n    this.ele = null;\n    this.isInitialResize = true;\n  }\n\n  componentDidMount() {\n    this.renderNewEcharts();\n  }\n\n  // update\n  componentDidUpdate(prevProps: EChartsReactProps) {\n    /**\n     * if shouldSetOption return false, then return, not update echarts options\n     * default is true\n     */\n    const { shouldSetOption } = this.props;\n    if (isFunction(shouldSetOption) && !shouldSetOption(prevProps, this.props)) {\n      return;\n    }\n\n    // 以下属性修改的时候，需要 dispose 之后再新建\n    // 1. 切换 theme 的时候\n    // 2. 修改 opts 的时候\n    // 3. 修改 onEvents 的时候，这样可以取消所有之前绑定的事件 issue #151\n    if (\n      !isEqual(prevProps.theme, this.props.theme) ||\n      !isEqual(prevProps.opts, this.props.opts) ||\n      !isEqual(prevProps.onEvents, this.props.onEvents)\n    ) {\n      this.dispose();\n\n      this.renderNewEcharts(); // 重建\n      return;\n    }\n\n    // when these props are not isEqual, update echarts\n    const pickKeys = ['option', 'notMerge', 'lazyUpdate', 'showLoading', 'loadingOption'];\n    if (!isEqual(pick(this.props, pickKeys), pick(prevProps, pickKeys))) {\n      this.updateEChartsOption();\n    }\n\n    /**\n     * when style or class name updated, change size.\n     */\n    if (!isEqual(prevProps.style, this.props.style) || !isEqual(prevProps.className, this.props.className)) {\n      this.resize();\n    }\n  }\n\n  componentWillUnmount() {\n    this.dispose();\n  }\n\n  /**\n   * return the echart object\n   * 1. if exist, return the existed instance\n   * 2. or new one instance\n   */\n  public getEchartsInstance(): ECharts {\n    return this.echarts.getInstanceByDom(this.ele) || this.echarts.init(this.ele, this.props.theme, this.props.opts);\n  }\n\n  /**\n   * dispose echarts and clear size-sensor\n   */\n  private dispose() {\n    if (this.ele) {\n      try {\n        clear(this.ele);\n      } catch (e) {\n        console.warn(e);\n      }\n      // dispose echarts instance\n      this.echarts.dispose(this.ele);\n    }\n  }\n\n  /**\n   * render a new echarts instance\n   */\n  private renderNewEcharts() {\n    const { onEvents, onChartReady } = this.props;\n\n    // 1. new echarts instance\n    const echartsInstance = this.updateEChartsOption();\n\n    // 2. bind events\n    this.bindEvents(echartsInstance, onEvents || {});\n\n    // 3. on chart ready\n    if (isFunction(onChartReady)) onChartReady(echartsInstance);\n\n    // 4. on resize\n    if (this.ele) {\n      bind(this.ele, () => {\n        this.resize();\n      });\n    }\n  }\n\n  // bind the events\n  private bindEvents(instance, events: EChartsReactProps['onEvents']) {\n    function _bindEvent(eventName: string, func: Function) {\n      // ignore the event config which not satisfy\n      if (isString(eventName) && isFunction(func)) {\n        // binding event\n        instance.on(eventName, (param) => {\n          func(param, instance);\n        });\n      }\n    }\n\n    // loop and bind\n    for (const eventName in events) {\n      if (Object.prototype.hasOwnProperty.call(events, eventName)) {\n        _bindEvent(eventName, events[eventName]);\n      }\n    }\n  }\n\n  /**\n   * render the echarts\n   */\n  private updateEChartsOption(): EChartsInstance {\n    const { option, notMerge = false, lazyUpdate = false, showLoading, loadingOption = null } = this.props;\n    // 1. get or initial the echarts object\n    const echartInstance = this.getEchartsInstance();\n    // 2. set the echarts option\n    echartInstance.setOption(option, notMerge, lazyUpdate);\n    // 3. set loading mask\n    if (showLoading) echartInstance.showLoading(loadingOption);\n    else echartInstance.hideLoading();\n\n    return echartInstance;\n  }\n\n  /**\n   * resize wrapper\n   */\n  private resize() {\n    // 1. get the echarts object\n    const echartsInstance = this.getEchartsInstance();\n\n    // 2. call echarts instance resize if not the initial resize\n    // resize should not happen on first render as it will cancel initial echarts animations\n    if (!this.isInitialResize) {\n      try {\n        echartsInstance.resize();\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n\n    // 3. update variable for future calls\n    this.isInitialResize = false;\n  }\n\n  render(): JSX.Element {\n    const { style, className = '' } = this.props;\n    // default height = 300\n    const newStyle = { height: 300, ...style };\n\n    return (\n      <div\n        ref={(e: HTMLElement) => {\n          this.ele = e;\n        }}\n        style={newStyle}\n        className={`echarts-for-react ${className}`}\n      />\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}