{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\nfunction isEmpty(obj) {\n  return isObjectEmpty(obj) || obj.outerHeightStyle === 0 && !obj.overflowing;\n}\n\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\r\n *\r\n * API:\r\n *\r\n * - [TextareaAutosize API](https://mui.com/material-ui/api/textarea-autosize/)\r\n */\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value,\n    ...other\n  } = props;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const textareaRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, textareaRef);\n  const heightRef = React.useRef(null);\n  const hiddenTextareaRef = React.useRef(null);\n  const calculateTextareaStyles = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const hiddenTextarea = hiddenTextareaRef.current;\n    if (!textarea || !hiddenTextarea) {\n      return undefined;\n    }\n    const containerWindow = ownerWindow(textarea);\n    const computedStyle = containerWindow.getComputedStyle(textarea);\n\n    // If input's width is shrunk and it's not visible, don't sync height.\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0,\n        overflowing: false\n      };\n    }\n    hiddenTextarea.style.width = computedStyle.width;\n    hiddenTextarea.value = textarea.value || props.placeholder || 'x';\n    if (hiddenTextarea.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      hiddenTextarea.value += ' ';\n    }\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\n\n    // The height of the inner content\n    const innerHeight = hiddenTextarea.scrollHeight;\n\n    // Measure height of a textarea with a single row\n    hiddenTextarea.value = 'x';\n    const singleRowHeight = hiddenTextarea.scrollHeight;\n\n    // The height of the outer content\n    let outerHeight = innerHeight;\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n\n    // Take the box sizing into account for applying this value as a style.\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflowing\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const syncHeight = React.useCallback(() => {\n    const textarea = textareaRef.current;\n    const textareaStyles = calculateTextareaStyles();\n    if (!textarea || !textareaStyles || isEmpty(textareaStyles)) {\n      return;\n    }\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n    if (heightRef.current !== outerHeightStyle) {\n      heightRef.current = outerHeightStyle;\n      textarea.style.height = `${outerHeightStyle}px`;\n    }\n    textarea.style.overflow = textareaStyles.overflowing ? 'hidden' : '';\n  }, [calculateTextareaStyles]);\n  const frameRef = React.useRef(-1);\n  useEnhancedEffect(() => {\n    const debounceHandleResize = debounce(() => syncHeight());\n    const textarea = textareaRef?.current;\n    if (!textarea) {\n      return undefined;\n    }\n    const containerWindow = ownerWindow(textarea);\n    containerWindow.addEventListener('resize', debounceHandleResize);\n    let resizeObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(() => {\n        // avoid \"ResizeObserver loop completed with undelivered notifications\" error\n        // by temporarily unobserving the textarea element while manipulating the height\n        // and reobserving one frame later\n        resizeObserver.unobserve(textarea);\n        cancelAnimationFrame(frameRef.current);\n        syncHeight();\n        frameRef.current = requestAnimationFrame(() => {\n          resizeObserver.observe(textarea);\n        });\n      });\n      resizeObserver.observe(textarea);\n    }\n    return () => {\n      debounceHandleResize.clear();\n      cancelAnimationFrame(frameRef.current);\n      containerWindow.removeEventListener('resize', debounceHandleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [calculateTextareaStyles, syncHeight]);\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  const handleChange = event => {\n    if (!isControlled) {\n      syncHeight();\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", {\n      value: value,\n      onChange: handleChange,\n      ref: handleRef\n      // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n\n      rows: minRows,\n      style: style,\n      ...other\n    }), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: hiddenTextareaRef,\n      tabIndex: -1,\n      style: {\n        ...styles.shadow,\n        ...style,\n        paddingTop: 0,\n        paddingBottom: 0\n      }\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * Maximum number of rows to display.\r\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\r\n   * Minimum number of rows to display.\r\n   * @default 1\r\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\r\n   * @ignore\r\n   */\n  onChange: PropTypes.func,\n  /**\r\n   * @ignore\r\n   */\n  placeholder: PropTypes.string,\n  /**\r\n   * @ignore\r\n   */\n  style: PropTypes.object,\n  /**\r\n   * @ignore\r\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","map":{"version":3,"names":["React","PropTypes","unstable_debounce","debounce","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","unstable_ownerWindow","ownerWindow","jsx","_jsx","jsxs","_jsxs","getStyleValue","value","parseInt","styles","shadow","visibility","position","overflow","height","top","left","transform","isObjectEmpty","object","_","isEmpty","obj","outerHeightStyle","overflowing","TextareaAutosize","forwardRef","props","forwardedRef","onChange","maxRows","minRows","style","other","current","isControlled","useRef","textareaRef","handleRef","heightRef","hiddenTextareaRef","calculateTextareaStyles","useCallback","textarea","hiddenTextarea","undefined","containerWindow","computedStyle","getComputedStyle","width","placeholder","slice","boxSizing","padding","paddingBottom","paddingTop","border","borderBottomWidth","borderTopWidth","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","abs","syncHeight","textareaStyles","frameRef","debounceHandleResize","addEventListener","resizeObserver","ResizeObserver","unobserve","cancelAnimationFrame","requestAnimationFrame","observe","clear","removeEventListener","disconnect","handleChange","event","Fragment","children","ref","rows","className","readOnly","tabIndex","process","env","NODE_ENV","propTypes","string","oneOfType","number","func","arrayOf"],"sources":["C:/Users/Yolanda Ayuso/Desktop/frontDespliegueDef/DQPA_v1.2Front/dqpa/node_modules/@mui/material/TextareaAutosize/TextareaAutosize.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nfunction getStyleValue(value) {\r\n  return parseInt(value, 10) || 0;\r\n}\r\nconst styles = {\r\n  shadow: {\r\n    // Visibility needed to hide the extra text area on iPads\r\n    visibility: 'hidden',\r\n    // Remove from the content flow\r\n    position: 'absolute',\r\n    // Ignore the scrollbar width\r\n    overflow: 'hidden',\r\n    height: 0,\r\n    top: 0,\r\n    left: 0,\r\n    // Create a new layer, increase the isolation of the computed values\r\n    transform: 'translateZ(0)'\r\n  }\r\n};\r\nfunction isObjectEmpty(object) {\r\n  // eslint-disable-next-line\r\n  for (const _ in object) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction isEmpty(obj) {\r\n  return isObjectEmpty(obj) || obj.outerHeightStyle === 0 && !obj.overflowing;\r\n}\r\n\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\r\n *\r\n * API:\r\n *\r\n * - [TextareaAutosize API](https://mui.com/material-ui/api/textarea-autosize/)\r\n */\r\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\r\n  const {\r\n    onChange,\r\n    maxRows,\r\n    minRows = 1,\r\n    style,\r\n    value,\r\n    ...other\r\n  } = props;\r\n  const {\r\n    current: isControlled\r\n  } = React.useRef(value != null);\r\n  const textareaRef = React.useRef(null);\r\n  const handleRef = useForkRef(forwardedRef, textareaRef);\r\n  const heightRef = React.useRef(null);\r\n  const hiddenTextareaRef = React.useRef(null);\r\n  const calculateTextareaStyles = React.useCallback(() => {\r\n    const textarea = textareaRef.current;\r\n    const hiddenTextarea = hiddenTextareaRef.current;\r\n    if (!textarea || !hiddenTextarea) {\r\n      return undefined;\r\n    }\r\n    const containerWindow = ownerWindow(textarea);\r\n    const computedStyle = containerWindow.getComputedStyle(textarea);\r\n\r\n    // If input's width is shrunk and it's not visible, don't sync height.\r\n    if (computedStyle.width === '0px') {\r\n      return {\r\n        outerHeightStyle: 0,\r\n        overflowing: false\r\n      };\r\n    }\r\n    hiddenTextarea.style.width = computedStyle.width;\r\n    hiddenTextarea.value = textarea.value || props.placeholder || 'x';\r\n    if (hiddenTextarea.value.slice(-1) === '\\n') {\r\n      // Certain fonts which overflow the line height will cause the textarea\r\n      // to report a different scrollHeight depending on whether the last line\r\n      // is empty. Make it non-empty to avoid this issue.\r\n      hiddenTextarea.value += ' ';\r\n    }\r\n    const boxSizing = computedStyle.boxSizing;\r\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\r\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\r\n\r\n    // The height of the inner content\r\n    const innerHeight = hiddenTextarea.scrollHeight;\r\n\r\n    // Measure height of a textarea with a single row\r\n    hiddenTextarea.value = 'x';\r\n    const singleRowHeight = hiddenTextarea.scrollHeight;\r\n\r\n    // The height of the outer content\r\n    let outerHeight = innerHeight;\r\n    if (minRows) {\r\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\r\n    }\r\n    if (maxRows) {\r\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\r\n    }\r\n    outerHeight = Math.max(outerHeight, singleRowHeight);\r\n\r\n    // Take the box sizing into account for applying this value as a style.\r\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\r\n    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;\r\n    return {\r\n      outerHeightStyle,\r\n      overflowing\r\n    };\r\n  }, [maxRows, minRows, props.placeholder]);\r\n  const syncHeight = React.useCallback(() => {\r\n    const textarea = textareaRef.current;\r\n    const textareaStyles = calculateTextareaStyles();\r\n    if (!textarea || !textareaStyles || isEmpty(textareaStyles)) {\r\n      return;\r\n    }\r\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\r\n    if (heightRef.current !== outerHeightStyle) {\r\n      heightRef.current = outerHeightStyle;\r\n      textarea.style.height = `${outerHeightStyle}px`;\r\n    }\r\n    textarea.style.overflow = textareaStyles.overflowing ? 'hidden' : '';\r\n  }, [calculateTextareaStyles]);\r\n  const frameRef = React.useRef(-1);\r\n  useEnhancedEffect(() => {\r\n    const debounceHandleResize = debounce(() => syncHeight());\r\n    const textarea = textareaRef?.current;\r\n    if (!textarea) {\r\n      return undefined;\r\n    }\r\n    const containerWindow = ownerWindow(textarea);\r\n    containerWindow.addEventListener('resize', debounceHandleResize);\r\n    let resizeObserver;\r\n    if (typeof ResizeObserver !== 'undefined') {\r\n      resizeObserver = new ResizeObserver(() => {\r\n        // avoid \"ResizeObserver loop completed with undelivered notifications\" error\r\n        // by temporarily unobserving the textarea element while manipulating the height\r\n        // and reobserving one frame later\r\n        resizeObserver.unobserve(textarea);\r\n        cancelAnimationFrame(frameRef.current);\r\n        syncHeight();\r\n        frameRef.current = requestAnimationFrame(() => {\r\n          resizeObserver.observe(textarea);\r\n        });\r\n      });\r\n      resizeObserver.observe(textarea);\r\n    }\r\n    return () => {\r\n      debounceHandleResize.clear();\r\n      cancelAnimationFrame(frameRef.current);\r\n      containerWindow.removeEventListener('resize', debounceHandleResize);\r\n      if (resizeObserver) {\r\n        resizeObserver.disconnect();\r\n      }\r\n    };\r\n  }, [calculateTextareaStyles, syncHeight]);\r\n  useEnhancedEffect(() => {\r\n    syncHeight();\r\n  });\r\n  const handleChange = event => {\r\n    if (!isControlled) {\r\n      syncHeight();\r\n    }\r\n    if (onChange) {\r\n      onChange(event);\r\n    }\r\n  };\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [/*#__PURE__*/_jsx(\"textarea\", {\r\n      value: value,\r\n      onChange: handleChange,\r\n      ref: handleRef\r\n      // Apply the rows prop to get a \"correct\" first SSR paint\r\n      ,\r\n      rows: minRows,\r\n      style: style,\r\n      ...other\r\n    }), /*#__PURE__*/_jsx(\"textarea\", {\r\n      \"aria-hidden\": true,\r\n      className: props.className,\r\n      readOnly: true,\r\n      ref: hiddenTextareaRef,\r\n      tabIndex: -1,\r\n      style: {\r\n        ...styles.shadow,\r\n        ...style,\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n      }\r\n    })]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * Maximum number of rows to display.\r\n   */\r\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * Minimum number of rows to display.\r\n   * @default 1\r\n   */\r\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  /**\r\n   * @ignore\r\n   */\r\n  onChange: PropTypes.func,\r\n  /**\r\n   * @ignore\r\n   */\r\n  placeholder: PropTypes.string,\r\n  /**\r\n   * @ignore\r\n   */\r\n  style: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\r\n} : void 0;\r\nexport default TextareaAutosize;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}