{"ast":null,"code":"import { useState as T, useRef as p, useEffect as u, useMemo as M } from \"react\";\nfunction g(n, t) {\n  let o;\n  return function () {\n    for (var _len = arguments.length, i = new Array(_len), _key = 0; _key < _len; _key++) {\n      i[_key] = arguments[_key];\n    }\n    window.clearTimeout(o), o = window.setTimeout(() => n(...i), t);\n  };\n}\nfunction j() {\n  let {\n    debounce: n,\n    scroll: t,\n    polyfill: o,\n    offsetSize: i\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    debounce: 0,\n    scroll: !1,\n    offsetSize: !1\n  };\n  const a = o || (typeof window == \"undefined\" ? class {} : window.ResizeObserver);\n  if (!a) throw new Error(\"This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills\");\n  const [c, h] = T({\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0,\n      bottom: 0,\n      right: 0,\n      x: 0,\n      y: 0\n    }),\n    e = p({\n      element: null,\n      scrollContainers: null,\n      resizeObserver: null,\n      lastBounds: c,\n      orientationHandler: null\n    }),\n    d = n ? typeof n == \"number\" ? n : n.scroll : null,\n    f = n ? typeof n == \"number\" ? n : n.resize : null,\n    w = p(!1);\n  u(() => (w.current = !0, () => void (w.current = !1)));\n  const [z, m, s] = M(() => {\n    const r = () => {\n      if (!e.current.element) return;\n      const {\n          left: y,\n          top: C,\n          width: H,\n          height: O,\n          bottom: S,\n          right: x,\n          x: B,\n          y: R\n        } = e.current.element.getBoundingClientRect(),\n        l = {\n          left: y,\n          top: C,\n          width: H,\n          height: O,\n          bottom: S,\n          right: x,\n          x: B,\n          y: R\n        };\n      e.current.element instanceof HTMLElement && i && (l.height = e.current.element.offsetHeight, l.width = e.current.element.offsetWidth), Object.freeze(l), w.current && !D(e.current.lastBounds, l) && h(e.current.lastBounds = l);\n    };\n    return [r, f ? g(r, f) : r, d ? g(r, d) : r];\n  }, [h, i, d, f]);\n  function v() {\n    e.current.scrollContainers && (e.current.scrollContainers.forEach(r => r.removeEventListener(\"scroll\", s, !0)), e.current.scrollContainers = null), e.current.resizeObserver && (e.current.resizeObserver.disconnect(), e.current.resizeObserver = null), e.current.orientationHandler && (\"orientation\" in screen && \"removeEventListener\" in screen.orientation ? screen.orientation.removeEventListener(\"change\", e.current.orientationHandler) : \"onorientationchange\" in window && window.removeEventListener(\"orientationchange\", e.current.orientationHandler));\n  }\n  function b() {\n    e.current.element && (e.current.resizeObserver = new a(s), e.current.resizeObserver.observe(e.current.element), t && e.current.scrollContainers && e.current.scrollContainers.forEach(r => r.addEventListener(\"scroll\", s, {\n      capture: !0,\n      passive: !0\n    })), e.current.orientationHandler = () => {\n      s();\n    }, \"orientation\" in screen && \"addEventListener\" in screen.orientation ? screen.orientation.addEventListener(\"change\", e.current.orientationHandler) : \"onorientationchange\" in window && window.addEventListener(\"orientationchange\", e.current.orientationHandler));\n  }\n  const L = r => {\n    !r || r === e.current.element || (v(), e.current.element = r, e.current.scrollContainers = E(r), b());\n  };\n  return X(s, !!t), W(m), u(() => {\n    v(), b();\n  }, [t, s, m]), u(() => v, []), [L, c, z];\n}\nfunction W(n) {\n  u(() => {\n    const t = n;\n    return window.addEventListener(\"resize\", t), () => void window.removeEventListener(\"resize\", t);\n  }, [n]);\n}\nfunction X(n, t) {\n  u(() => {\n    if (t) {\n      const o = n;\n      return window.addEventListener(\"scroll\", o, {\n        capture: !0,\n        passive: !0\n      }), () => void window.removeEventListener(\"scroll\", o, !0);\n    }\n  }, [n, t]);\n}\nfunction E(n) {\n  const t = [];\n  if (!n || n === document.body) return t;\n  const {\n    overflow: o,\n    overflowX: i,\n    overflowY: a\n  } = window.getComputedStyle(n);\n  return [o, i, a].some(c => c === \"auto\" || c === \"scroll\") && t.push(n), [...t, ...E(n.parentElement)];\n}\nconst k = [\"x\", \"y\", \"top\", \"bottom\", \"left\", \"right\", \"width\", \"height\"],\n  D = (n, t) => k.every(o => n[o] === t[o]);\nexport { j as default };","map":{"version":3,"names":["g","n","t","o","_len","arguments","length","i","Array","_key","window","clearTimeout","setTimeout","j","debounce","scroll","polyfill","offsetSize","undefined","a","ResizeObserver","Error","c","h","T","left","top","width","height","bottom","right","x","y","e","p","element","scrollContainers","resizeObserver","lastBounds","orientationHandler","d","f","resize","w","u","current","z","m","s","M","r","callback","C","H","O","S","B","R","getBoundingClientRect","l","HTMLElement","offsetHeight","offsetWidth","Object","freeze","D","v","forEach","removeEventListener","disconnect","screen","orientation","b","observe","addEventListener","capture","passive","L","E","X","W","document","body","overflow","overflowX","overflowY","getComputedStyle","some","push","parentElement","k","areBoundsEqual","every","default"],"sources":["C:\\Users\\Yolanda Ayuso\\Desktop\\frontDespliegueDef\\DQPA_v1.2Front\\dqpa\\node_modules\\react-use-measure\\src\\index.ts"],"sourcesContent":["import { useEffect, useState, useRef, useMemo } from 'react'\r\n\r\nfunction createDebounce<T extends (...args: any[]) => void>(callback: T, ms: number) {\r\n  let timeoutId: number\r\n\r\n  return (...args: Parameters<T>): void => {\r\n    window.clearTimeout(timeoutId)\r\n    timeoutId = window.setTimeout(() => callback(...args), ms)\r\n  }\r\n}\r\n\r\ndeclare type ResizeObserverCallback = (entries: any[], observer: ResizeObserver) => void\r\ndeclare class ResizeObserver {\r\n  constructor(callback: ResizeObserverCallback)\r\n  observe(target: Element, options?: any): void\r\n  unobserve(target: Element): void\r\n  disconnect(): void\r\n  static toString(): string\r\n}\r\n\r\nexport interface RectReadOnly {\r\n  readonly x: number\r\n  readonly y: number\r\n  readonly width: number\r\n  readonly height: number\r\n  readonly top: number\r\n  readonly right: number\r\n  readonly bottom: number\r\n  readonly left: number\r\n  [key: string]: number\r\n}\r\n\r\ntype HTMLOrSVGElement = HTMLElement | SVGElement\r\n\r\ntype Result = [(element: HTMLOrSVGElement | null) => void, RectReadOnly, () => void]\r\n\r\ntype State = {\r\n  element: HTMLOrSVGElement | null\r\n  scrollContainers: HTMLOrSVGElement[] | null\r\n  resizeObserver: ResizeObserver | null\r\n  lastBounds: RectReadOnly\r\n  orientationHandler: null | (() => void)\r\n}\r\n\r\nexport type Options = {\r\n  debounce?: number | { scroll: number; resize: number }\r\n  scroll?: boolean\r\n  polyfill?: { new (cb: ResizeObserverCallback): ResizeObserver }\r\n  offsetSize?: boolean\r\n}\r\n\r\nfunction useMeasure(\r\n  { debounce, scroll, polyfill, offsetSize }: Options = { debounce: 0, scroll: false, offsetSize: false },\r\n): Result {\r\n  const ResizeObserver =\r\n    polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : (window as any).ResizeObserver)\r\n\r\n  if (!ResizeObserver) {\r\n    throw new Error(\r\n      'This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills',\r\n    )\r\n  }\r\n\r\n  const [bounds, set] = useState<RectReadOnly>({\r\n    left: 0,\r\n    top: 0,\r\n    width: 0,\r\n    height: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    x: 0,\r\n    y: 0,\r\n  })\r\n\r\n  // keep all state in a ref\r\n  const state = useRef<State>({\r\n    element: null,\r\n    scrollContainers: null,\r\n    resizeObserver: null,\r\n    lastBounds: bounds,\r\n    orientationHandler: null,\r\n  })\r\n\r\n  // set actual debounce values early, so effects know if they should react accordingly\r\n  const scrollDebounce = debounce ? (typeof debounce === 'number' ? debounce : debounce.scroll) : null\r\n  const resizeDebounce = debounce ? (typeof debounce === 'number' ? debounce : debounce.resize) : null\r\n\r\n  // make sure to update state only as long as the component is truly mounted\r\n  const mounted = useRef(false)\r\n  useEffect(() => {\r\n    mounted.current = true\r\n    return () => void (mounted.current = false)\r\n  })\r\n\r\n  // memoize handlers, so event-listeners know when they should update\r\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\r\n    const callback = () => {\r\n      if (!state.current.element) return\r\n      const { left, top, width, height, bottom, right, x, y } =\r\n        state.current.element.getBoundingClientRect() as unknown as RectReadOnly\r\n\r\n      const size = {\r\n        left,\r\n        top,\r\n        width,\r\n        height,\r\n        bottom,\r\n        right,\r\n        x,\r\n        y,\r\n      }\r\n\r\n      if (state.current.element instanceof HTMLElement && offsetSize) {\r\n        size.height = state.current.element.offsetHeight\r\n        size.width = state.current.element.offsetWidth\r\n      }\r\n\r\n      Object.freeze(size)\r\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set((state.current.lastBounds = size))\r\n    }\r\n    return [\r\n      callback,\r\n      resizeDebounce ? createDebounce(callback, resizeDebounce) : callback,\r\n      scrollDebounce ? createDebounce(callback, scrollDebounce) : callback,\r\n    ]\r\n  }, [set, offsetSize, scrollDebounce, resizeDebounce])\r\n\r\n  // cleanup current scroll-listeners / observers\r\n  function removeListeners() {\r\n    if (state.current.scrollContainers) {\r\n      state.current.scrollContainers.forEach((element) => element.removeEventListener('scroll', scrollChange, true))\r\n      state.current.scrollContainers = null\r\n    }\r\n\r\n    if (state.current.resizeObserver) {\r\n      state.current.resizeObserver.disconnect()\r\n      state.current.resizeObserver = null\r\n    }\r\n\r\n    if (state.current.orientationHandler) {\r\n      if ('orientation' in screen && 'removeEventListener' in screen.orientation) {\r\n        screen.orientation.removeEventListener('change', state.current.orientationHandler)\r\n      } else if ('onorientationchange' in window) {\r\n        window.removeEventListener('orientationchange', state.current.orientationHandler)\r\n      }\r\n    }\r\n  }\r\n\r\n  // add scroll-listeners / observers\r\n  function addListeners() {\r\n    if (!state.current.element) return\r\n    state.current.resizeObserver = new ResizeObserver(scrollChange)\r\n    state.current.resizeObserver!.observe(state.current.element)\r\n    if (scroll && state.current.scrollContainers) {\r\n      state.current.scrollContainers.forEach((scrollContainer) =>\r\n        scrollContainer.addEventListener('scroll', scrollChange, { capture: true, passive: true }),\r\n      )\r\n    }\r\n\r\n    // Handle orientation changes\r\n    state.current.orientationHandler = () => {\r\n      scrollChange()\r\n    }\r\n\r\n    // Use screen.orientation if available\r\n    if ('orientation' in screen && 'addEventListener' in screen.orientation) {\r\n      screen.orientation.addEventListener('change', state.current.orientationHandler)\r\n    } else if ('onorientationchange' in window) {\r\n      // Fallback to orientationchange event\r\n      window.addEventListener('orientationchange', state.current.orientationHandler)\r\n    }\r\n  }\r\n\r\n  // the ref we expose to the user\r\n  const ref = (node: HTMLOrSVGElement | null) => {\r\n    if (!node || node === state.current.element) return\r\n    removeListeners()\r\n    state.current.element = node\r\n    state.current.scrollContainers = findScrollContainers(node)\r\n    addListeners()\r\n  }\r\n\r\n  // add general event listeners\r\n  useOnWindowScroll(scrollChange, Boolean(scroll))\r\n  useOnWindowResize(resizeChange)\r\n\r\n  // respond to changes that are relevant for the listeners\r\n  useEffect(() => {\r\n    removeListeners()\r\n    addListeners()\r\n  }, [scroll, scrollChange, resizeChange])\r\n\r\n  // remove all listeners when the components unmounts\r\n  useEffect(() => removeListeners, [])\r\n  return [ref, bounds, forceRefresh]\r\n}\r\n\r\n// Adds native resize listener to window\r\nfunction useOnWindowResize(onWindowResize: (event: Event) => void) {\r\n  useEffect(() => {\r\n    const cb = onWindowResize\r\n    window.addEventListener('resize', cb)\r\n    return () => void window.removeEventListener('resize', cb)\r\n  }, [onWindowResize])\r\n}\r\nfunction useOnWindowScroll(onScroll: () => void, enabled: boolean) {\r\n  useEffect(() => {\r\n    if (enabled) {\r\n      const cb = onScroll\r\n      window.addEventListener('scroll', cb, { capture: true, passive: true })\r\n      return () => void window.removeEventListener('scroll', cb, true)\r\n    }\r\n  }, [onScroll, enabled])\r\n}\r\n\r\n// Returns a list of scroll offsets\r\nfunction findScrollContainers(element: HTMLOrSVGElement | null): HTMLOrSVGElement[] {\r\n  const result: HTMLOrSVGElement[] = []\r\n  if (!element || element === document.body) return result\r\n  const { overflow, overflowX, overflowY } = window.getComputedStyle(element)\r\n  if ([overflow, overflowX, overflowY].some((prop) => prop === 'auto' || prop === 'scroll')) result.push(element)\r\n  return [...result, ...findScrollContainers(element.parentElement)]\r\n}\r\n\r\n// Checks if element boundaries are equal\r\nconst keys: (keyof RectReadOnly)[] = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height']\r\nconst areBoundsEqual = (a: RectReadOnly, b: RectReadOnly): boolean => keys.every((key) => a[key] === b[key])\r\n\r\nexport default useMeasure\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}