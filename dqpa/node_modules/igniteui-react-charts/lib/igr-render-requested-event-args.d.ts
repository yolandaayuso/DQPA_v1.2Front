import { RenderRequestedEventArgs as RenderRequestedEventArgs_internal } from "./RenderRequestedEventArgs";
import { ContentChildrenManager } from "igniteui-react-core";
/**
 * EventArgs class for RenderRequested events.
*
* Use the `RenderRequested` class for RenderRequested events.
*
* ```ts
* <IgrDataChart
* 		dataSource={this.data}
* 		ref={this.onChartRef}
* 		width="100%"
* 		height="100%" >
* <IgrCategoryXAxis name="xAxis" label="Country" />
* <IgrNumericYAxis name="yAxis" minimumValue={0} />
* <IgrColumnSeries name="series1"
* 		xAxisName="xAxis"
* 		yAxisName="yAxis"
* 		valueMemberPath="Coal"
* 		renderRequested= {this.OnRenderRequested}/>
*  </IgrDataChart>
* ```
*
* ```ts
* let series1 = new IgrColumnSeries({ name: "series1" });
* series1.valueMemberPath = "USA";
* series1.title = "USA";
* series1.xAxisName = "xAxis";
* series1.yAxisName = "yAxis";
* series1.renderRequested = this.OnRenderRequested;
*
* public OnRenderRequested =( s:IgrSeries, e:RenderRequestedEventArgs) => {
*
*   }
* ```
*/
export declare class IgrRenderRequestedEventArgs {
    protected createImplementation(): RenderRequestedEventArgs_internal;
    protected _implementation: any;
    protected mounted: boolean;
    get nativeElement(): HTMLElement;
    /**
     * @hidden
     */
    get i(): RenderRequestedEventArgs_internal;
    protected onImplementationCreated(): void;
    protected _contentChildrenManager: ContentChildrenManager;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * True if animation is requested.
    *
    * Use the `Animate` property true if the animation is requested.
    *
    * ```ts
    * e.animation = true;
    * ```
    */
    get animate(): boolean;
    set animate(v: boolean);
}
