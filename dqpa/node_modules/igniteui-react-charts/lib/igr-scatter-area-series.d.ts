import { IgPoint } from "igniteui-react-core";
import { IgrColorScale } from "./igr-color-scale";
import { IgrScatterTriangulationSeries, IIgrScatterTriangulationSeriesProps } from "./igr-scatter-triangulation-series";
import { ScatterAreaSeries } from "./ScatterAreaSeries";
/**
 * Series class which draws a colored 2D surface based on a triangulation of XY data with numeric values assigned to each point.
*/
export declare class IgrScatterAreaSeries extends IgrScatterTriangulationSeries<IIgrScatterAreaSeriesProps> {
    protected createImplementation(): ScatterAreaSeries;
    /**
                                 * @hidden
                                 */
    get i(): ScatterAreaSeries;
    constructor(props: IIgrScatterAreaSeriesProps);
    /**
     * Gets whether the current series shows an area shape.
    */
    get isArea(): boolean;
    /**
     * Gets or sets ColorScale used to resolve the color values of points in the series.
    */
    get colorScale(): IgrColorScale;
    set colorScale(v: IgrColorScale);
    /**
     * Gets or sets the name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
    */
    get colorMemberPath(): string;
    set colorMemberPath(v: string);
    /**
     * Gets actual color scale that is set on ColorScale property or default ColorScale
    */
    get actualColorScale(): IgrColorScale;
    set actualColorScale(v: IgrColorScale);
    /**
     * Gets or sets the label displayed before series color value in the Data Legend.
    */
    get colorMemberAsLegendLabel(): string;
    set colorMemberAsLegendLabel(v: string);
    /**
     * Gets or sets the unit displayed after series color value in the Data Legend.
    */
    get colorMemberAsLegendUnit(): string;
    set colorMemberAsLegendUnit(v: string);
    findByName(name: string): any;
    protected _styling(container: any, component: any, parent?: any): void;
    getItemValue(item: any, memberPathName: string): any;
    /**
     * Gets the value of a requested member path from the series.
    
    * @param memberPathName  * The property name of a valid member path for the series
    */
    getMemberPathValue(memberPathName: string): string;
    /**
     * Gets the item that is the best match for the specified world coordinates.
    
    * @param world  * The world coordinates to use.
    */
    getItem(world: IgPoint): any;
    /**
     * Updates ActualColorScale properties when the ColorScale property has changed
    
    */
    updateActualColorScale(): void;
    /**
     * Attaches an image to the view of this series
    
    */
    attachImage(image: any): void;
}
export interface IIgrScatterAreaSeriesProps extends IIgrScatterTriangulationSeriesProps {
    /**
     * Gets or sets ColorScale used to resolve the color values of points in the series.
    */
    colorScale?: IgrColorScale;
    /**
     * Gets or sets the name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
    */
    colorMemberPath?: string;
    /**
     * Gets actual color scale that is set on ColorScale property or default ColorScale
    */
    actualColorScale?: IgrColorScale;
    /**
     * Gets or sets the label displayed before series color value in the Data Legend.
    */
    colorMemberAsLegendLabel?: string;
    /**
     * Gets or sets the unit displayed after series color value in the Data Legend.
    */
    colorMemberAsLegendUnit?: string;
}
