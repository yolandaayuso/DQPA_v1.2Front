import * as React from 'react';
import { IgrPropertyUpdatedEventArgs } from "igniteui-react-core";
import { IgrSeries } from "./igr-series";
import { BrushScale } from "./BrushScale";
import { ContentChildrenManager } from "igniteui-react-core";
/**
 * Represents a base class for brush scales.
*/
export declare class IgrBrushScale<P extends IIgrBrushScaleProps = IIgrBrushScaleProps> extends React.Component<P, {}> {
    protected createImplementation(): BrushScale;
    protected _implementation: any;
    protected mounted: boolean;
    get nativeElement(): HTMLElement;
    /**
     * @hidden
     */
    get i(): BrushScale; /**
                                 * @hidden
                                 */
    static _createFromInternal(internal: any): IgrBrushScale;
    protected onImplementationCreated(): void;
    protected _contentChildrenManager: ContentChildrenManager;
    constructor(props: P);
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    render(): any;
    /**
     * Gets the brushes collection used by this scale.
    */
    get brushes(): string[];
    set brushes(v: string[]);
    /**
     * Gets the status of the scale
    */
    get isReady(): boolean;
    /**
     * Checks if this item is a BrushScale
    */
    get isBrushScale(): boolean;
    findByName(name: string): any;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected get hasUserValues(): Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
    /**
     * Registers a series with the scale. Under normal circumstances you should not need to call this manually.
    
    * @param series  * The series to register with the scale.
    */
    registerSeries(series: IgrSeries): void;
    /**
     * Unregisters a series with the scale. Under normal circumstances you should not need to call this manually.
    
    * @param series  * The series to unregister from the scale.
    */
    unregisterSeries(series: IgrSeries): void;
    /**
     * Gets a brush from the brushes collection by index.
    
    */
    getBrush(index: number): string;
    /**
     * Notify attached series about changes to this scale
    
    */
    notifySeries(): void;
    private _propertyUpdated;
    private _propertyUpdated_wrapped;
    /**
     * Event raised when a property (including "effective" and non-dependency property) value changes.
    */
    get propertyUpdated(): (s: IgrBrushScale, e: IgrPropertyUpdatedEventArgs) => void;
    set propertyUpdated(ev: (s: IgrBrushScale, e: IgrPropertyUpdatedEventArgs) => void);
}
export interface IIgrBrushScaleProps {
    children?: React.ReactNode;
    /**
     * Gets the brushes collection used by this scale.
    */
    brushes?: string[] | string;
    /**
     * Event raised when a property (including "effective" and non-dependency property) value changes.
    */
    propertyUpdated?: (s: IgrBrushScale, e: IgrPropertyUpdatedEventArgs) => void;
}
