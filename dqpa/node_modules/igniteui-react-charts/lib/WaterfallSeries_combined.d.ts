import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
import { Brush } from "igniteui-react-core";
import { Series } from "./Series";
import { List$1 } from "igniteui-react-core";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { Type, Point } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { CategoryMode } from "./CategoryMode";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { SeriesVisibleRangeMode } from "./SeriesVisibleRangeMode";
import { Rect } from "igniteui-react-core";
import { Pool$1 } from "igniteui-react-core";
import { Rectangle } from "igniteui-react-core";
import { CategoryTransitionInMode } from "./CategoryTransitionInMode";
import { CategoryFrame } from "./CategoryFrame";
import { CategorySeriesView } from "./CategorySeriesView";
import { ChartSelection } from "./ChartSelection";
import { SeriesSelectionBehavior } from "./SeriesSelectionBehavior";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class WaterfallSeries extends HorizontalAnchoredCategorySeries {
    static $t: Type;
    protected bj(): Series;
    protected get_f6(): boolean;
    protected get_fl(): boolean;
    protected ht(): List$1<SeriesLayerPropertyOverlay>;
    protected jk(): number;
    protected get_fa(): boolean;
    protected cs(): SeriesView;
    q1(a: SeriesView): void;
    acw: WaterfallSeriesView;
    constructor();
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    protected get_fm(): boolean;
    r3(a: Brush, b: Brush): void;
    ac7: Brush;
    vw(): Brush;
    vx(): Brush;
    acx: number;
    acy: number;
    cy(): SeriesVisibleRangeMode;
    protected get_ed(): boolean;
    protected q9(a: any, b: string, c: any, d: any): void;
    gw(a: Point, b: boolean): boolean;
    wn(a: Point): Rect;
    private ac9;
    protected y4(): CategoryTransitionInMode;
    o5(a: boolean, b: SeriesView): void;
    protected get_abb(): number;
    iw(): number;
    aak(a: CategoryFrame, b: CategorySeriesView): void;
    ac8: Brush;
    p4(a: Rect, b: List$1<ChartSelection>, c: SeriesSelectionBehavior): void;
    ak(a: Rect, b: SeriesSelectionBehavior): ChartSelection[];
    aa4(a: number, b: number, c: number): boolean;
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class WaterfallSeriesView extends AnchoredCategorySeriesView {
    static $t: Type;
    au(): void;
    protected df: WaterfallSeries;
    constructor(a: WaterfallSeries);
    dq(): Rectangle;
    protected dh: List$1<Rectangle>;
    di(a: Rectangle): void;
    dk(a: Rectangle): void;
    dj(a: Rectangle): void;
    dl(a: Rectangle, b: number, c: number): void;
    protected ac(a: number): any;
    private dp;
    protected ab(a: number): any;
    protected a8(a: RenderingContext, b: boolean): void;
    dg: Pool$1<Rectangle>;
    an(a: any): void;
    dm(a: number): Rect;
    dn(a: Rectangle): Rect;
}
