import { Base, Point, IList$1, Type } from "igniteui-react-core";
import { ITrendLineManager } from "./ITrendLineManager";
import { TrendLineManagerType } from "./TrendLineManagerType";
import { List$1 } from "igniteui-react-core";
import { Polyline } from "igniteui-react-core";
import { TrendLineType } from "igniteui-react-core";
import { Clipper } from "igniteui-react-core";
import { TrendResolutionParams } from "./TrendResolutionParams";
import { Canvas } from "igniteui-react-core";
import { Series } from "./Series";
import { FastItemsSourceEventAction } from "igniteui-react-core";
/**
 * @hidden
 */
export declare abstract class TrendLineManagerBase$1<TTrendColumn> extends Base implements ITrendLineManager {
    static $t: Type;
    protected $tTrendColumn: Type;
    abstract get g$a(): TrendLineManagerType;
    d: List$1<TTrendColumn>;
    protected a: number[];
    constructor($tTrendColumn: Type);
    get g$j(): Polyline;
    private readonly g;
    g$g(a: List$1<Point>): void;
    protected c(a: TrendLineType): boolean;
    protected b(a: TrendLineType): boolean;
    g$h(a: List$1<Point>, b: Clipper): void;
    protected e(a: IList$1<Point>, b: TrendResolutionParams, c: List$1<Point>): void;
    protected f(a: IList$1<Point>, b: TrendResolutionParams, c: List$1<Point>, d: Clipper): void;
    g$c(a: Canvas, b: Series): void;
    g$f(): void;
    g$d(): void;
    g$i(): void;
    g$e(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    g$b(a: any, b: string, c: any, d: any): boolean;
}
