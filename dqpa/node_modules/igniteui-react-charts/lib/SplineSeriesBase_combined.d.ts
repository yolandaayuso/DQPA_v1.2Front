import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
import { SplineType } from "./SplineType";
import { SeriesView } from "./SeriesView";
import { AxisRange } from "./AxisRange";
import { Axis } from "./Axis";
import { Point, IList$1, Type } from "igniteui-react-core";
import { CategorySeriesView } from "./CategorySeriesView";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { CollisionAvoider } from "./CollisionAvoider";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { CategoryFrame } from "./CategoryFrame";
import { NumericAxisBase } from "./NumericAxisBase";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { ChartSelection } from "./ChartSelection";
import { SeriesSelectionBehavior } from "./SeriesSelectionBehavior";
/**
 * @hidden
 */
export declare abstract class SplineSeriesBase extends HorizontalAnchoredCategorySeries {
    static $t: Type;
    protected jk(): number;
    protected cs(): SeriesView;
    q1(a: SeriesView): void;
    r4(a: boolean): void;
    acz: SplineSeriesBaseView;
    ac1: boolean;
    ay(a: Axis): AxisRange;
    protected get_ev(): boolean;
    acw(a: CategorySeriesView): number[][];
    acx(a: CategorySeriesView): number[][];
    protected acy: number[];
    adc(a: CategoryFrame, b: Rect, c: Rect, d: CategoryAxisBase, e: NumericAxisBase, f: CategorySeriesView): void;
    ac2(a: CategoryFrame, b: number[], c: CollisionAvoider, d: number, e: number, f: CategorySeriesView, g: number): boolean;
    an(a: CategoryAxisBase, b: List$1<number[]>, c: number, d: number, e: Point, f: boolean): number[][];
    aah(a: CategoryFrame, b: CategorySeriesView): void;
    adb(a: CategorySeriesView): void;
    private ac5;
    iv(a: number, b: IList$1<number>, c: number, d: number, e: number, f: number, g: number, h: boolean): number;
    ac6(a: CategoryAxisBase, b: Rect, c: Rect, d: Rect): number;
    private ac4;
    protected get ac8(): number;
    protected set ac8(a: number);
    private ac3;
    protected get ac7(): number;
    protected set ac7(a: number);
    ac0: SplineType;
    protected add(): void;
    protected q9(a: any, b: string, c: any, d: any): void;
    protected pb(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    p4(a: Rect, b: List$1<ChartSelection>, c: SeriesSelectionBehavior): void;
    ak(a: Rect, b: SeriesSelectionBehavior): ChartSelection[];
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class SplineSeriesBaseView extends AnchoredCategorySeriesView {
    static $t: Type;
    protected df: SplineSeriesBase;
    constructor(a: SplineSeriesBase);
    dg(): number;
    protected af(): void;
}
