import { AnnotationLayer } from "./AnnotationLayer";
import { DependencyProperty } from "igniteui-react-core";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { Base, Type, Point } from "igniteui-react-core";
import { Series } from "./Series";
import { CalloutPlacementPositionsCollection } from "./CalloutPlacementPositionsCollection";
import { LabelCollisionPlacementPositions } from "igniteui-react-core";
import { HighlightedValueLabelMode } from "igniteui-react-core";
import { AutoCalloutVisibilityMode } from "./AutoCalloutVisibilityMode";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { CalloutCollisionMode } from "igniteui-react-core";
import { FontInfo } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { Size } from "igniteui-react-core";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { CalloutRenderStyleUpdatingEventArgs } from "./CalloutRenderStyleUpdatingEventArgs";
import { SeriesView } from "./SeriesView";
import { Frame } from "./Frame";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { DataContext } from "igniteui-react-core";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { HashPool$2 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { NumericAxisBase } from "./NumericAxisBase";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { RenderingContext } from "igniteui-react-core";
import { TextBlock } from "igniteui-react-core";
import { Visibility } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class CalloutLayer extends AnnotationLayer {
    static $t: Type;
    protected bj(): Series;
    protected get_eo(): boolean;
    constructor();
    private adw;
    private ad5;
    private adx;
    protected pb(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    gf(a: boolean): boolean;
    aa4: boolean;
    private afx;
    abs: number;
    abq: number;
    abt: number;
    abr: number;
    private aaw;
    private afv;
    wt(): Size;
    private abh;
    private aeb;
    private aec;
    calloutStyleUpdating: (sender: any, args: CalloutStyleUpdatingEventArgs) => void;
    calloutRenderStyleUpdating: (sender: any, args: CalloutRenderStyleUpdatingEventArgs) => void;
    adb: string;
    kq(a: any, b: string): any;
    md(a: string): string;
    get aap(): IFastItemColumn$1<any>;
    set aap(a: IFastItemColumn$1<any>);
    private aak;
    adr: string;
    get aaq(): IFastItemColumn$1<any>;
    set aaq(a: IFastItemColumn$1<any>);
    private aal;
    adu: string;
    get aar(): IFastItemColumn$1<any>;
    set aar(a: IFastItemColumn$1<any>);
    private aam;
    ac5: string;
    get aao(): IFastItemColumn$1<any>;
    set aao(a: IFastItemColumn$1<any>);
    private aaj;
    aa6: boolean;
    ac8: string;
    zy: any[];
    acx: string;
    get aan(): IFastItemColumn$1<any>;
    set aan(a: IFastItemColumn$1<any>);
    private aai;
    private abi;
    private abl;
    private adz;
    protected cs(): SeriesView;
    q1(a: SeriesView): void;
    protected z8: CalloutLayerView;
    private abm;
    ade: string;
    aaf: Series;
    acu: string;
    private z9;
    get aaa(): CalloutPlacementPositionsCollection;
    set aaa(a: CalloutPlacementPositionsCollection);
    zx: LabelCollisionPlacementPositions[];
    aa5: boolean;
    abb: boolean;
    abe: boolean;
    gu(a: Series): boolean;
    aba: boolean;
    abc: boolean;
    abd: boolean;
    abf: boolean;
    aae: HighlightedValueLabelMode;
    get z3(): AutoCalloutVisibilityMode;
    set z3(a: AutoCalloutVisibilityMode);
    get z2(): AutoCalloutVisibilityMode;
    set z2(a: AutoCalloutVisibilityMode);
    static readonly aey: DependencyProperty;
    abp: number;
    aa8: boolean;
    aa7: boolean;
    ab2: number;
    afr: Brush;
    afp: Brush;
    afn: Brush;
    afm: Brush;
    aa9: boolean;
    ab3: number;
    afq: Brush;
    afo: Brush;
    get afw(): Thickness;
    abv: number;
    abx: number;
    abw: number;
    abu: number;
    z5: CalloutCollisionMode;
    aby: number;
    abz: number;
    adh: string;
    private aag;
    get aah(): FontInfo;
    protected yp(a: Series, b: boolean): void;
    protected yr(a: Frame, b: SeriesView): void;
    private abj;
    private abg;
    private aas;
    private aft;
    protected sr(a: Rect, b: Rect): void;
    protected sq(a: Rect, b: Rect): void;
    private aa0;
    private ab1;
    private afs;
    get afu(): Rect;
    set afu(a: Rect);
    private aay;
    private ad6;
    private adj;
    private ad1;
    private aat;
    private ab4;
    private ab5;
    private aau;
    private ady;
    private aav;
    private ab0;
    private abn;
    private ab6;
    protected xi(a: Series): boolean;
    qp(): void;
    private aaz;
    ad4(): void;
    calloutContentUpdating: (sender: any, args: CalloutContentUpdatingEventArgs) => void;
    calloutLabelUpdating: (sender: any, args: CalloutLabelUpdatingEventArgs) => void;
    calloutSeriesSelecting: (sender: any, args: CalloutSeriesSelectingEventArgs) => void;
    private abk;
    private ad7;
    private aa2;
    private aa3;
    private abo;
    private aa1;
    protected b2(): SeriesHitTestMode;
    a2(a: Point, b: boolean): DataContext;
    gw(a: Point, b: boolean): boolean;
    protected aea(a: CalloutLayerFrame, b: boolean): void;
    protected yu(a: Frame, b: SeriesView): void;
    protected ga(): boolean;
    private z0;
    protected q9(a: any, b: string, c: any, d: any): void;
    private z4;
    private zz;
    private ad9;
    private aax;
    private z1;
    private ad2;
    ax(a: AxisRange, b: NumericAxisBase, c: Rect): AxisRange;
    private ad8;
    private ad0;
    private ad3;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CalloutLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CalloutLayer);
    protected b7: CalloutLayer;
    private cc;
    au(): void;
    private b9;
    private cf;
    private ch;
    private cg;
    cb: HashPool$2<CalloutAnnotationWrapper, CalloutView>;
    cq(a: Brush): Brush;
    protected a8(a: RenderingContext, b: boolean): void;
    protected ca(): FontInfo;
    an(a: any): void;
    private cd;
    cs(a: TextBlock): Size;
    private ce;
    private b8;
    cr(a: any, b: Thickness): Size;
    cj(a: CalloutView, b: number, c: number): void;
    ck(a: CalloutView, b: CalloutAnnotationWrapper, c: any): void;
    cl(a: Series, b: Brush): Brush;
    co(): Brush;
    cm(): Brush;
    cp(a: Series, b: Brush): Brush;
    cn(a: Series, b: Brush): Brush;
    ci(): void;
}
/**
 * @hidden
 */
export declare class CalloutView extends Base {
    static $t: Type;
    constructor(a: CalloutLayerView);
    private a;
    y: Visibility;
    j(a: RenderingContext): void;
    private l;
    private t;
    private q;
    private s;
    get r(): Point;
    set r(a: Point);
    get p(): Brush;
    set p(a: Brush);
    get o(): Brush;
    set o(a: Brush);
    get n(): Brush;
    set n(a: Brush);
    get m(): Brush;
    set m(a: Brush);
    get e(): number;
    set e(a: number);
    private w;
    private v;
    get x(): Thickness;
    set x(a: Thickness);
    private c;
    get d(): number;
    set d(a: number);
    get h(): any;
    set h(a: any);
    f: number;
    g: number;
    u(): Size;
    private b;
    k(a: Series, b: CalloutAnnotationWrapper, c: any): void;
    i(a: CalloutLayer, b: FontInfo, c: any): void;
}
