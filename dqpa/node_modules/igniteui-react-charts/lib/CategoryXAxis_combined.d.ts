import { CategoryAxisBase } from "./CategoryAxisBase";
import { IZoomableCategoryAxis } from "./IZoomableCategoryAxis";
import { Type, IList$1 } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { AxisOrientation } from "./AxisOrientation";
import { AxisView } from "./AxisView";
import { AxisLabelPanelBase } from "./AxisLabelPanelBase";
import { Rect } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { SeriesViewer } from "./SeriesViewer";
import { CategoryMode } from "./CategoryMode";
import { IGetItemAtIndex } from "igniteui-react-core";
import { CategoryAxisBaseView } from "./CategoryAxisBaseView";
/**
 * @hidden
 */
export declare class CategoryXAxis extends CategoryAxisBase implements IZoomableCategoryAxis {
    static $t: Type;
    a4(): AxisView;
    hv(a: AxisView): void;
    mm: CategoryXAxisView;
    constructor();
    private mz;
    get m1(): number;
    set m1(a: number);
    private my;
    get m0(): number;
    set m0(a: number);
    av(): AxisLabelPanelBase;
    getCategorySize(a: Rect, b: Rect, c: Rect): number;
    k8(a: Rect, b: Rect, c: Rect): number;
    getGroupCenter(a: number, b: Rect, c: Rect, d: Rect): number;
    d6(): number;
    nc(a: any): void;
    el(a: number, b: ScalerParams): number;
    protected ml(a: IList$1<number[]>): number[][];
    hp(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    em(a: number, b: ScalerParams, c: CategoryMode): number;
    private mv;
    eo(a: number, b: ScalerParams): number;
    ep(a: number, b: ScalerParams, c: CategoryMode): number;
    getUnscaledValue3(a: number, b: Rect, c: Rect, d: CategoryMode): number;
    nd(a: number, b: number): void;
    m2: any;
    protected ic(a: boolean): void;
    c3(): boolean;
    getWindowZoomFromCategories(a: number): number;
    getWindowZoomFromItemSpan(a: number): number;
    nf(): void;
    ne(): void;
    protected hz(a: any, b: string, c: any, d: any): void;
    zoomMaximumCategoryRange: number;
    zoomMaximumItemSpan: number;
    zoomToCategoryRange: number;
    zoomToCategoryStart: number;
    zoomToItemSpan: number;
    static readonly ng: DependencyProperty;
    get mw(): number;
    set mw(a: number);
    mo(): boolean;
    private mp;
    get mr(): number;
    set mr(a: number);
    ex(): number;
    static readonly nh: DependencyProperty;
    get mx(): number;
    set mx(a: number);
    private mq;
    get ms(): number;
    set ms(a: number);
    ky(a: SeriesViewer): boolean;
    protected get_a2(): AxisOrientation;
    get a2(): AxisOrientation;
    protected mn(): IGetItemAtIndex;
    protected mu(a: number, b: ScalerParams): number;
    protected mt(a: number, b: number, c: boolean, d: ScalerParams): number;
    get isVertical(): boolean;
    j$d(a: number, b: ScalerParams): number;
    j$c(a: number, b: ScalerParams): number;
    j$e(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$g(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    get j$b(): boolean;
    j$a(): number[];
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CategoryXAxisView extends CategoryAxisBaseView {
    static $t: Type;
    protected bm: CategoryXAxis;
    constructor(a: CategoryXAxis);
    al(): void;
}
