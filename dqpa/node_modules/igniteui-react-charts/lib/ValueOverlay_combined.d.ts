import { Series } from "./Series";
import { IHasCategoryModePreference } from "./IHasCategoryModePreference";
import { Axis } from "./Axis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { Type, Point } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { Rect } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { Geometry } from "igniteui-react-core";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { CategoryMode } from "./CategoryMode";
import { RenderSurface } from "./RenderSurface";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class ValueOverlay extends Series implements IHasCategoryModePreference {
    static $t: Type;
    protected bj(): Series;
    constructor();
    wy: Axis;
    xh: number;
    xf: number;
    xg: number;
    xc: number;
    i5(a: Point, b: boolean, c: boolean): number;
    xd(a: Point, b: Point): number;
    wc(a: Point, b: boolean, c: boolean): Point;
    j3(a: Point): number;
    kn(a: Point): any;
    gd(a: any): boolean;
    ay(a: Axis): AxisRange;
    rs(a: boolean): void;
    xe(): number;
    xz(a: number, b: ValueOverlayView): void;
    he(a: Rect, b: Rect, c: SeriesView): boolean;
    protected sr(a: Rect, b: Rect): void;
    protected sq(a: Rect, b: Rect): void;
    protected pb(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    protected q9(a: any, b: string, c: any, d: any): void;
    qb(): void;
    o5(a: boolean, b: SeriesView): void;
    private w3;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    get categoryAxis(): CategoryAxisBase;
    protected cs(): SeriesView;
    q1(a: SeriesView): void;
    private w1;
    rt(a: Rect, b: RenderSurface): void;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    w2: boolean;
    w0: (item: any) => string;
    yh: Brush;
    yf: Brush;
    w6: number;
    xi: number;
    yg: Brush;
    get yi(): Thickness;
    w8: number;
    xa: number;
    w9: number;
    w7: number;
    xb: number;
    ai(): Axis[];
    private wz;
    private w5;
    private w4;
    protected x0(a: number, b: boolean): void;
    protected get_isValueOverlay(): boolean;
    xv(a: number): string;
    get xx(): string;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class ValueOverlayView extends SeriesView {
    static $t: Type;
    constructor(a: ValueOverlay);
    private b2;
    protected bd(): void;
    protected be(): void;
    b1(a: Geometry): void;
    b0(): void;
    protected a8(a: RenderingContext, b: boolean): void;
    an(a: any): void;
}
