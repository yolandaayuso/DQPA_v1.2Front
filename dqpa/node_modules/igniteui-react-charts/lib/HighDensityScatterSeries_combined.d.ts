import { Series } from "./Series";
import { NumericXAxis } from "./NumericXAxis";
import { NumericYAxis } from "./NumericYAxis";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { Type, Point } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { Axis } from "./Axis";
import { SeriesView } from "./SeriesView";
import { ProgressiveLoadStatusEventArgs } from "./ProgressiveLoadStatusEventArgs";
import { FastItemsSourceEventAction } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { RenderSurface } from "./RenderSurface";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class HighDensityScatterSeries extends Series {
    static $t: Type;
    protected bj(): Series;
    protected get_fo(): boolean;
    protected jk(): number;
    constructor();
    protected get_fw(): boolean;
    w5: NumericXAxis;
    w7: NumericYAxis;
    y9: string;
    protected get xc(): IFastItemColumn$1<number>;
    protected set xc(a: IFastItemColumn$1<number>);
    private xb;
    y5: string;
    zd: string;
    y7: string;
    zf: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    kq(a: any, b: string): any;
    md(a: string): string;
    zh: string;
    protected get xe(): IFastItemColumn$1<number>;
    protected set xe(a: IFastItemColumn$1<number>);
    private xd;
    xm: boolean;
    xl: boolean;
    yh: number;
    yg: number;
    aaf: Color;
    aae: Color;
    yt: number;
    private zw;
    protected q9(a: any, b: string, c: any, d: any): void;
    private zq;
    xk(a: any): boolean;
    xj(a: any): boolean;
    private zm;
    private yn;
    private xg;
    private x2;
    private x1;
    private x0;
    private xz;
    private xy;
    private xx;
    private xw;
    private xv;
    private get x6();
    private get x5();
    private get x4();
    private get x3();
    private w3;
    private w8;
    private w9;
    private w4;
    private w6;
    private xi;
    he(a: Rect, b: Rect, c: SeriesView): boolean;
    private yo;
    get yu(): number;
    set yu(a: number);
    rs(a: boolean): void;
    private xf;
    private zo;
    private yq;
    private yk;
    private yj;
    protected pb(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    private zl;
    private zr;
    private zp;
    progressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void;
    private zj;
    private zn;
    private xn;
    private zy;
    private xt;
    private xs;
    private xu;
    private x9;
    private x7;
    private x8;
    private ya;
    private yc;
    private ye;
    private yd;
    private yb;
    private xp;
    private xq;
    private xr;
    private xo;
    private zt;
    gd(a: any): boolean;
    private zv;
    private yr;
    private ys;
    private yf;
    private zu;
    private zs;
    private ym;
    private yl;
    private w0;
    private yp;
    private zk;
    protected cs(): SeriesView;
    q1(a: SeriesView): void;
    protected w2: HighDensityScatterSeriesView;
    ay(a: Axis): AxisRange;
    private xh;
    protected sq(a: Rect, b: Rect): void;
    protected sr(a: Rect, b: Rect): void;
    private _itemIndexes;
    private w1;
    private wy;
    kn(a: Point): any;
    private yv;
    zx(a: number[], b: number, c: number): void;
    protected get_g7(): boolean;
    protected set_g7(a: boolean): void;
    o5(a: boolean, b: SeriesView): void;
    rt(a: Rect, b: RenderSurface): void;
    private xa;
    rq(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void;
    o2(): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class HighDensityScatterSeriesView extends SeriesView {
    static $t: Type;
    constructor(a: HighDensityScatterSeries);
    au(): void;
    cd(): void;
    protected b2: HighDensityScatterSeries;
    private b0;
    private b8;
    private b7;
    private b5;
    private b6;
    private b3;
    b9(): void;
    b1(): number[];
    cc(): void;
    cb(a: () => void): void;
    protected a8(a: RenderingContext, b: boolean): void;
    b4(a: Color, b: Color): boolean;
    ca(): void;
    an(a: any): void;
}
