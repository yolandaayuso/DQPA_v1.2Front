import { HorizontalAlignment } from "igniteui-react-core";
import { VerticalAlignment } from "igniteui-react-core";
import { Visibility } from "igniteui-react-core";
import { ValueAxisLabelLocation } from "./ValueAxisLabelLocation";
import { AngleAxisLabelLocation } from "./AngleAxisLabelLocation";
import { IgrDomainChart, IIgrDomainChartProps } from "./igr-domain-chart";
import { RadialBaseChart } from "./RadialBaseChart";
/**
 * Represents a base class for domain charts with X/Y axes
*/
export declare abstract class IgrRadialBaseChart<P extends IIgrRadialBaseChartProps = IIgrRadialBaseChartProps> extends IgrDomainChart<P> {
    /**
                                 * @hidden
                                 */
    get i(): RadialBaseChart;
    constructor(props: P);
    /**
     * Gets or sets function which takes an context object and returns a formatted label for the X-axis.
    */
    get angleAxisFormatLabel(): (item: any) => string;
    set angleAxisFormatLabel(v: (item: any) => string);
    /**
     * Gets or sets function which takes a context object and returns a formatted label for the Y-axis.
    */
    get valueAxisFormatLabel(): (item: any) => string;
    set valueAxisFormatLabel(v: (item: any) => string);
    /**
     * Gets or sets the left margin of labels on the X-axis
    */
    get angleAxisLabelLeftMargin(): number;
    set angleAxisLabelLeftMargin(v: number);
    /**
     * Gets or sets the top margin of labels on the X-axis
    */
    get angleAxisLabelTopMargin(): number;
    set angleAxisLabelTopMargin(v: number);
    /**
     * Gets or sets the right margin of labels on the X-axis
    */
    get angleAxisLabelRightMargin(): number;
    set angleAxisLabelRightMargin(v: number);
    /**
     * Gets or sets the bottom margin of labels on the X-axis
    */
    get angleAxisLabelBottomMargin(): number;
    set angleAxisLabelBottomMargin(v: number);
    /**
     * Gets or sets the left margin of labels on the Y-axis
    */
    get valueAxisLabelLeftMargin(): number;
    set valueAxisLabelLeftMargin(v: number);
    /**
     * Gets or sets the top margin of labels on the Y-axis
    */
    get valueAxisLabelTopMargin(): number;
    set valueAxisLabelTopMargin(v: number);
    /**
     * Gets or sets the right margin of labels on the Y-axis
    */
    get valueAxisLabelRightMargin(): number;
    set valueAxisLabelRightMargin(v: number);
    /**
     * Gets or sets the bottom margin of labels on the Y-axis
    */
    get valueAxisLabelBottomMargin(): number;
    set valueAxisLabelBottomMargin(v: number);
    /**
     * Gets or sets color of labels on the X-axis
    */
    get angleAxisLabelTextColor(): string;
    set angleAxisLabelTextColor(v: string);
    /**
     * Gets or sets color of labels on the Y-axis
    */
    get valueAxisLabelTextColor(): string;
    set valueAxisLabelTextColor(v: string);
    /**
     * Gets the actual color of labels on the X-axis
    */
    get actualAngleAxisLabelTextColor(): string;
    set actualAngleAxisLabelTextColor(v: string);
    /**
     * Gets the actual color of labels on the Y-axis
    */
    get actualValueAxisLabelTextColor(): string;
    set actualValueAxisLabelTextColor(v: string);
    /**
     * Gets or sets the margin around a title on the X-axis
    */
    get angleAxisTitleMargin(): number;
    set angleAxisTitleMargin(v: number);
    /**
     * Gets or sets the margin around a title on the Y-axis
    */
    get valueAxisTitleMargin(): number;
    set valueAxisTitleMargin(v: number);
    /**
     * Gets or sets the left margin of a title on the X-axis
    */
    get angleAxisTitleLeftMargin(): number;
    set angleAxisTitleLeftMargin(v: number);
    /**
     * Gets or sets the left margin of a title on the Y-axis
    */
    get valueAxisTitleLeftMargin(): number;
    set valueAxisTitleLeftMargin(v: number);
    /**
     * Gets or sets the top margin of a title on the X-axis
    */
    get angleAxisTitleTopMargin(): number;
    set angleAxisTitleTopMargin(v: number);
    /**
     * Gets or sets the top margin of a title on the Y-axis
    */
    get valueAxisTitleTopMargin(): number;
    set valueAxisTitleTopMargin(v: number);
    /**
     * Gets or sets the right margin of a title on the X-axis
    */
    get angleAxisTitleRightMargin(): number;
    set angleAxisTitleRightMargin(v: number);
    /**
     * Gets or sets the right margin of a title on the Y-axis
    */
    get valueAxisTitleRightMargin(): number;
    set valueAxisTitleRightMargin(v: number);
    /**
     * Gets or sets the bottom margin of a title on the X-axis
    */
    get angleAxisTitleBottomMargin(): number;
    set angleAxisTitleBottomMargin(v: number);
    /**
     * Gets or sets the bottom margin of a title on the Y-axis
    */
    get valueAxisTitleBottomMargin(): number;
    set valueAxisTitleBottomMargin(v: number);
    /**
     * Gets or sets color of title on the X-axis
    */
    get angleAxisTitleTextColor(): string;
    set angleAxisTitleTextColor(v: string);
    /**
     * Gets or sets color of title on the Y-axis
    */
    get valueAxisTitleTextColor(): string;
    set valueAxisTitleTextColor(v: string);
    /**
     * Gets or sets CSS font property for labels on X-axis
    */
    get angleAxisLabelTextStyle(): string;
    set angleAxisLabelTextStyle(v: string);
    /**
     * Gets or sets CSS font property for labels on Y-axis
    */
    get valueAxisLabelTextStyle(): string;
    set valueAxisLabelTextStyle(v: string);
    /**
     * Gets or sets CSS font property for title on X-axis
    */
    get angleAxisTitleTextStyle(): string;
    set angleAxisTitleTextStyle(v: string);
    /**
     * Gets or sets CSS font property for title on Y-axis
    */
    get valueAxisTitleTextStyle(): string;
    set valueAxisTitleTextStyle(v: string);
    /**
     * Gets or sets the format for labels along the X-axis.
    */
    get angleAxisLabel(): any;
    set angleAxisLabel(v: any);
    /**
     * Gets or sets the property or string from which the labels are derived.
    */
    get valueAxisLabel(): any;
    set valueAxisLabel(v: any);
    /**
     * Gets or sets the color to apply to major gridlines along the X-axis.
    */
    get angleAxisMajorStroke(): string;
    set angleAxisMajorStroke(v: string);
    /**
     * Gets or sets the color to apply to major gridlines along the Y-axis.
    */
    get valueAxisMajorStroke(): string;
    set valueAxisMajorStroke(v: string);
    /**
     * Gets or sets the thickness to apply to major gridlines along the X-axis.
    */
    get angleAxisMajorStrokeThickness(): number;
    set angleAxisMajorStrokeThickness(v: number);
    /**
     * Gets or sets the thickness to apply to major gridlines along the Y-axis.
    */
    get valueAxisMajorStrokeThickness(): number;
    set valueAxisMajorStrokeThickness(v: number);
    /**
     * Gets or sets the thickness to apply to minor gridlines along the X-axis.
    */
    get angleAxisMinorStrokeThickness(): number;
    set angleAxisMinorStrokeThickness(v: number);
    /**
     * Gets or sets the thickness to apply to minor gridlines along the Y-axis.
    */
    get valueAxisMinorStrokeThickness(): number;
    set valueAxisMinorStrokeThickness(v: number);
    /**
     * Gets or sets the color to apply to stripes along the X-axis.
    */
    get angleAxisStrip(): string;
    set angleAxisStrip(v: string);
    /**
     * Gets or sets the color to apply to stripes along the Y-axis.
    */
    get valueAxisStrip(): string;
    set valueAxisStrip(v: string);
    /**
     * Gets or sets the color to apply to the X-axis line.
    */
    get angleAxisStroke(): string;
    set angleAxisStroke(v: string);
    /**
     * Gets or sets the color to apply to the Y-axis line.
    */
    get valueAxisStroke(): string;
    set valueAxisStroke(v: string);
    /**
     * Gets or sets the thickness to apply to the X-axis line.
    */
    get angleAxisStrokeThickness(): number;
    set angleAxisStrokeThickness(v: number);
    /**
     * Gets or sets the thickness to apply to the Y-axis line.
    */
    get valueAxisStrokeThickness(): number;
    set valueAxisStrokeThickness(v: number);
    /**
     * Gets or sets the length of tickmarks along the X-axis.
    */
    get angleAxisTickLength(): number;
    set angleAxisTickLength(v: number);
    /**
     * Gets or sets the length of tickmarks along the Y-axis.
    */
    get valueAxisTickLength(): number;
    set valueAxisTickLength(v: number);
    /**
     * Gets or sets the color to apply to tickmarks along the X-axis.
    */
    get angleAxisTickStroke(): string;
    set angleAxisTickStroke(v: string);
    /**
     * Gets or sets the color to apply to tickmarks along the Y-axis.
    */
    get valueAxisTickStroke(): string;
    set valueAxisTickStroke(v: string);
    /**
     * Gets or sets the thickness to apply to tickmarks along the X-axis.
    */
    get angleAxisTickStrokeThickness(): number;
    set angleAxisTickStrokeThickness(v: number);
    /**
     * Gets or sets the thickness to apply to tickmarks along the Y-axis.
    */
    get valueAxisTickStrokeThickness(): number;
    set valueAxisTickStrokeThickness(v: number);
    /**
     * Gets or sets the Text to display below the X-axis.
    */
    get angleAxisTitle(): string;
    set angleAxisTitle(v: string);
    /**
     * Gets or sets the Text to display to the left of the Y-axis.
    */
    get valueAxisTitle(): string;
    set valueAxisTitle(v: string);
    /**
     * Gets or sets the color to apply to minor gridlines along the X-axis.
    */
    get angleAxisMinorStroke(): string;
    set angleAxisMinorStroke(v: string);
    /**
     * Gets or sets the color to apply to minor gridlines along the Y-axis.
    */
    get valueAxisMinorStroke(): string;
    set valueAxisMinorStroke(v: string);
    /**
     * Gets or sets the angle of rotation for labels along the X-axis.
    */
    get angleAxisLabelAngle(): number;
    set angleAxisLabelAngle(v: number);
    /**
     * Gets or sets the angle of rotation for labels along the Y-axis.
    */
    get valueAxisLabelAngle(): number;
    set valueAxisLabelAngle(v: number);
    /**
     * Gets or sets the distance between the X-axis and the bottom of the chart.
    */
    get angleAxisExtent(): number;
    set angleAxisExtent(v: number);
    /**
     * Gets or sets the distance between the Y-axis and the left edge of the chart.
    */
    get valueAxisExtent(): number;
    set valueAxisExtent(v: number);
    /**
     * Gets or sets the angle of rotation for the X-axis title.
    */
    get angleAxisTitleAngle(): number;
    set angleAxisTitleAngle(v: number);
    /**
     * Gets or sets the angle of rotation for the Y-axis title.
    */
    get valueAxisTitleAngle(): number;
    set valueAxisTitleAngle(v: number);
    /**
     * Gets or sets whether to invert the direction of the X-axis by placing the first data items on the right side of the chart.
    */
    get angleAxisInverted(): boolean;
    set angleAxisInverted(v: boolean);
    /**
     * Gets or sets whether to invert the direction of the Y-axis by placing the minimum numeric value at the top of the chart.
    */
    get valueAxisInverted(): boolean;
    set valueAxisInverted(v: boolean);
    /**
     * Gets or sets Horizontal alignment of the X-axis title.
    */
    get angleAxisTitleAlignment(): HorizontalAlignment;
    set angleAxisTitleAlignment(v: HorizontalAlignment);
    /**
     * Gets or sets Vertical alignment of the Y-axis title.
    */
    get valueAxisTitleAlignment(): VerticalAlignment;
    set valueAxisTitleAlignment(v: VerticalAlignment);
    /**
     * Gets or sets Horizontal alignment of X-axis labels.
    */
    get angleAxisLabelHorizontalAlignment(): HorizontalAlignment;
    set angleAxisLabelHorizontalAlignment(v: HorizontalAlignment);
    /**
     * Gets or sets Horizontal alignment of Y-axis labels.
    */
    get valueAxisLabelHorizontalAlignment(): HorizontalAlignment;
    set valueAxisLabelHorizontalAlignment(v: HorizontalAlignment);
    /**
     * Gets or sets Vertical alignment of X-axis labels.
    */
    get angleAxisLabelVerticalAlignment(): VerticalAlignment;
    set angleAxisLabelVerticalAlignment(v: VerticalAlignment);
    /**
     * Gets or sets Vertical alignment of Y-axis labels.
    */
    get valueAxisLabelVerticalAlignment(): VerticalAlignment;
    set valueAxisLabelVerticalAlignment(v: VerticalAlignment);
    /**
     * Gets or sets Visibility of X-axis labels.
    */
    get angleAxisLabelVisibility(): Visibility;
    set angleAxisLabelVisibility(v: Visibility);
    /**
     * Gets or sets Visibility of Y-axis labels.
    */
    get valueAxisLabelVisibility(): Visibility;
    set valueAxisLabelVisibility(v: Visibility);
    /**
     * Gets or sets location of Y-axis labels, relative to the plot area.
    */
    get valueAxisLabelLocation(): ValueAxisLabelLocation;
    set valueAxisLabelLocation(v: ValueAxisLabelLocation);
    /**
     * Gets or sets location of X-axis labels, relative to the plot area.
    */
    get angleAxisLabelLocation(): AngleAxisLabelLocation;
    set angleAxisLabelLocation(v: AngleAxisLabelLocation);
    /**
     * Gets or sets the format string for the X axis label.
    */
    get angleAxisLabelFormat(): string;
    set angleAxisLabelFormat(v: string);
    /**
     * Gets or sets the format specifiers to use with the AngleAxisLabelFormat string.
    */
    get angleAxisLabelFormatSpecifiers(): any[];
    set angleAxisLabelFormatSpecifiers(v: any[]);
    /**
     * Gets or sets the format string for the Y axis label.
    */
    get valueAxisLabelFormat(): string;
    set valueAxisLabelFormat(v: string);
    /**
     * Gets or sets the format specifiers to use with the ValueAxisLabelFormat string.
    */
    get valueAxisLabelFormatSpecifiers(): any[];
    set valueAxisLabelFormatSpecifiers(v: any[]);
    findByName(name: string): any;
    /**
     * Called by the UI framework to provide a UI container for rendering this control.
    
    * @param container  * The UI container element.
    */
    provideContainer(container: any): void;
    /**
     * Converts the given visual location to a data value.
    
    * @param unscaledValue  * The x-coordinate of the location to scale.
    */
    getScaledAngle(unscaledValue: number): number;
    /**
     * Converts the given data value to a visual location.
    
    * @param scaledValue  * The data value to un-scale.
    */
    getUnscaledAngle(scaledValue: number): number;
    /**
     * Converts the given visual location to a data value.
    
    * @param unscaledValue  * The y-coordinate of the location to scale.
    */
    getScaledValue(unscaledValue: number): number;
    /**
     * Converts the given data value to a visual location.
    
    * @param scaledValue  * The data value to un-scale.
    */
    getUnscaledValue(scaledValue: number): number;
}
export interface IIgrRadialBaseChartProps extends IIgrDomainChartProps {
    /**
     * Gets or sets function which takes an context object and returns a formatted label for the X-axis.
    */
    angleAxisFormatLabel?: (item: any) => string;
    /**
     * Gets or sets function which takes a context object and returns a formatted label for the Y-axis.
    */
    valueAxisFormatLabel?: (item: any) => string;
    /**
     * Gets or sets the left margin of labels on the X-axis
    */
    angleAxisLabelLeftMargin?: number | string;
    /**
     * Gets or sets the top margin of labels on the X-axis
    */
    angleAxisLabelTopMargin?: number | string;
    /**
     * Gets or sets the right margin of labels on the X-axis
    */
    angleAxisLabelRightMargin?: number | string;
    /**
     * Gets or sets the bottom margin of labels on the X-axis
    */
    angleAxisLabelBottomMargin?: number | string;
    /**
     * Gets or sets the left margin of labels on the Y-axis
    */
    valueAxisLabelLeftMargin?: number | string;
    /**
     * Gets or sets the top margin of labels on the Y-axis
    */
    valueAxisLabelTopMargin?: number | string;
    /**
     * Gets or sets the right margin of labels on the Y-axis
    */
    valueAxisLabelRightMargin?: number | string;
    /**
     * Gets or sets the bottom margin of labels on the Y-axis
    */
    valueAxisLabelBottomMargin?: number | string;
    /**
     * Gets or sets color of labels on the X-axis
    */
    angleAxisLabelTextColor?: string;
    /**
     * Gets or sets color of labels on the Y-axis
    */
    valueAxisLabelTextColor?: string;
    /**
     * Gets the actual color of labels on the X-axis
    */
    actualAngleAxisLabelTextColor?: string;
    /**
     * Gets the actual color of labels on the Y-axis
    */
    actualValueAxisLabelTextColor?: string;
    /**
     * Gets or sets the margin around a title on the X-axis
    */
    angleAxisTitleMargin?: number | string;
    /**
     * Gets or sets the margin around a title on the Y-axis
    */
    valueAxisTitleMargin?: number | string;
    /**
     * Gets or sets the left margin of a title on the X-axis
    */
    angleAxisTitleLeftMargin?: number | string;
    /**
     * Gets or sets the left margin of a title on the Y-axis
    */
    valueAxisTitleLeftMargin?: number | string;
    /**
     * Gets or sets the top margin of a title on the X-axis
    */
    angleAxisTitleTopMargin?: number | string;
    /**
     * Gets or sets the top margin of a title on the Y-axis
    */
    valueAxisTitleTopMargin?: number | string;
    /**
     * Gets or sets the right margin of a title on the X-axis
    */
    angleAxisTitleRightMargin?: number | string;
    /**
     * Gets or sets the right margin of a title on the Y-axis
    */
    valueAxisTitleRightMargin?: number | string;
    /**
     * Gets or sets the bottom margin of a title on the X-axis
    */
    angleAxisTitleBottomMargin?: number | string;
    /**
     * Gets or sets the bottom margin of a title on the Y-axis
    */
    valueAxisTitleBottomMargin?: number | string;
    /**
     * Gets or sets color of title on the X-axis
    */
    angleAxisTitleTextColor?: string;
    /**
     * Gets or sets color of title on the Y-axis
    */
    valueAxisTitleTextColor?: string;
    /**
     * Gets or sets CSS font property for labels on X-axis
    */
    angleAxisLabelTextStyle?: string;
    /**
     * Gets or sets CSS font property for labels on Y-axis
    */
    valueAxisLabelTextStyle?: string;
    /**
     * Gets or sets CSS font property for title on X-axis
    */
    angleAxisTitleTextStyle?: string;
    /**
     * Gets or sets CSS font property for title on Y-axis
    */
    valueAxisTitleTextStyle?: string;
    /**
     * Gets or sets the format for labels along the X-axis.
    */
    angleAxisLabel?: any;
    /**
     * Gets or sets the property or string from which the labels are derived.
    */
    valueAxisLabel?: any;
    /**
     * Gets or sets the color to apply to major gridlines along the X-axis.
    */
    angleAxisMajorStroke?: string;
    /**
     * Gets or sets the color to apply to major gridlines along the Y-axis.
    */
    valueAxisMajorStroke?: string;
    /**
     * Gets or sets the thickness to apply to major gridlines along the X-axis.
    */
    angleAxisMajorStrokeThickness?: number | string;
    /**
     * Gets or sets the thickness to apply to major gridlines along the Y-axis.
    */
    valueAxisMajorStrokeThickness?: number | string;
    /**
     * Gets or sets the thickness to apply to minor gridlines along the X-axis.
    */
    angleAxisMinorStrokeThickness?: number | string;
    /**
     * Gets or sets the thickness to apply to minor gridlines along the Y-axis.
    */
    valueAxisMinorStrokeThickness?: number | string;
    /**
     * Gets or sets the color to apply to stripes along the X-axis.
    */
    angleAxisStrip?: string;
    /**
     * Gets or sets the color to apply to stripes along the Y-axis.
    */
    valueAxisStrip?: string;
    /**
     * Gets or sets the color to apply to the X-axis line.
    */
    angleAxisStroke?: string;
    /**
     * Gets or sets the color to apply to the Y-axis line.
    */
    valueAxisStroke?: string;
    /**
     * Gets or sets the thickness to apply to the X-axis line.
    */
    angleAxisStrokeThickness?: number | string;
    /**
     * Gets or sets the thickness to apply to the Y-axis line.
    */
    valueAxisStrokeThickness?: number | string;
    /**
     * Gets or sets the length of tickmarks along the X-axis.
    */
    angleAxisTickLength?: number | string;
    /**
     * Gets or sets the length of tickmarks along the Y-axis.
    */
    valueAxisTickLength?: number | string;
    /**
     * Gets or sets the color to apply to tickmarks along the X-axis.
    */
    angleAxisTickStroke?: string;
    /**
     * Gets or sets the color to apply to tickmarks along the Y-axis.
    */
    valueAxisTickStroke?: string;
    /**
     * Gets or sets the thickness to apply to tickmarks along the X-axis.
    */
    angleAxisTickStrokeThickness?: number | string;
    /**
     * Gets or sets the thickness to apply to tickmarks along the Y-axis.
    */
    valueAxisTickStrokeThickness?: number | string;
    /**
     * Gets or sets the Text to display below the X-axis.
    */
    angleAxisTitle?: string;
    /**
     * Gets or sets the Text to display to the left of the Y-axis.
    */
    valueAxisTitle?: string;
    /**
     * Gets or sets the color to apply to minor gridlines along the X-axis.
    */
    angleAxisMinorStroke?: string;
    /**
     * Gets or sets the color to apply to minor gridlines along the Y-axis.
    */
    valueAxisMinorStroke?: string;
    /**
     * Gets or sets the angle of rotation for labels along the X-axis.
    */
    angleAxisLabelAngle?: number | string;
    /**
     * Gets or sets the angle of rotation for labels along the Y-axis.
    */
    valueAxisLabelAngle?: number | string;
    /**
     * Gets or sets the distance between the X-axis and the bottom of the chart.
    */
    angleAxisExtent?: number | string;
    /**
     * Gets or sets the distance between the Y-axis and the left edge of the chart.
    */
    valueAxisExtent?: number | string;
    /**
     * Gets or sets the angle of rotation for the X-axis title.
    */
    angleAxisTitleAngle?: number | string;
    /**
     * Gets or sets the angle of rotation for the Y-axis title.
    */
    valueAxisTitleAngle?: number | string;
    /**
     * Gets or sets whether to invert the direction of the X-axis by placing the first data items on the right side of the chart.
    */
    angleAxisInverted?: boolean | string;
    /**
     * Gets or sets whether to invert the direction of the Y-axis by placing the minimum numeric value at the top of the chart.
    */
    valueAxisInverted?: boolean | string;
    /**
     * Gets or sets Horizontal alignment of the X-axis title.
    */
    angleAxisTitleAlignment?: HorizontalAlignment | string;
    /**
     * Gets or sets Vertical alignment of the Y-axis title.
    */
    valueAxisTitleAlignment?: VerticalAlignment | string;
    /**
     * Gets or sets Horizontal alignment of X-axis labels.
    */
    angleAxisLabelHorizontalAlignment?: HorizontalAlignment | string;
    /**
     * Gets or sets Horizontal alignment of Y-axis labels.
    */
    valueAxisLabelHorizontalAlignment?: HorizontalAlignment | string;
    /**
     * Gets or sets Vertical alignment of X-axis labels.
    */
    angleAxisLabelVerticalAlignment?: VerticalAlignment | string;
    /**
     * Gets or sets Vertical alignment of Y-axis labels.
    */
    valueAxisLabelVerticalAlignment?: VerticalAlignment | string;
    /**
     * Gets or sets Visibility of X-axis labels.
    */
    angleAxisLabelVisibility?: Visibility | string;
    /**
     * Gets or sets Visibility of Y-axis labels.
    */
    valueAxisLabelVisibility?: Visibility | string;
    /**
     * Gets or sets location of Y-axis labels, relative to the plot area.
    */
    valueAxisLabelLocation?: ValueAxisLabelLocation | string;
    /**
     * Gets or sets location of X-axis labels, relative to the plot area.
    */
    angleAxisLabelLocation?: AngleAxisLabelLocation | string;
    /**
     * Gets or sets the format string for the X axis label.
    */
    angleAxisLabelFormat?: string;
    /**
     * Gets or sets the format specifiers to use with the AngleAxisLabelFormat string.
    */
    angleAxisLabelFormatSpecifiers?: any[];
    /**
     * Gets or sets the format string for the Y axis label.
    */
    valueAxisLabelFormat?: string;
    /**
     * Gets or sets the format specifiers to use with the ValueAxisLabelFormat string.
    */
    valueAxisLabelFormatSpecifiers?: any[];
}
