import { IndicatorDisplayType } from "./IndicatorDisplayType";
import { IgrStrategyBasedIndicator, IIgrStrategyBasedIndicatorProps } from "./igr-strategy-based-indicator";
import { ForceIndexIndicator } from "./ForceIndexIndicator";
/**
 * Represents a IgxDataChartComponent Force Index indicator series.
 * Default required members: Close, Volume
*
* The `ForceIndexIndicator` represents a IgxDataChartComponent Force Index indicator series.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*
*     <IgrCategoryXAxis name="xAxis" label="Date" />
*     <IgrNumericYAxis  name="yAxis" />
*
*
*     <IgrForceIndexIndicator
*     name="series2"
*     xAxisName="xAxis"
*     yAxisName="yAxis"
*     displayType="Candlestick"
*     lowMemberPath="Low"
*     highMemberPath="High"
*     openMemberPath="Open"
*     closeMemberPath="Close"
*     volumeMemberPath="Volume" />
*  </IgrDataChart>
* ```
*
* ```ts
* this.financialSeries = new IgrForceIndexIndicator({name: "financialSeries"});
* this.financialSeries.dataSource = this.financialData;
* this.financialSeries.xAxis = this.timeXAxis;
* this.financialSeries.yAxis = this.numericYAxis;
* this.financialSeries.xAxisName = "timeXAxis";
* this.financialSeries.yAxisName = "numericYAxis";
* this.financialSeries.highMemberPath="High"
* this.financialSeries.lowMemberPath="Low"
* this.financialSeries.closeMemberPath="Close"
* this.financialSeries.openMemberPath="Open"
* this.financialSeries.volumeMemberPath="Volume"
* ```
*/
export declare class IgrForceIndexIndicator extends IgrStrategyBasedIndicator<IIgrForceIndexIndicatorProps> {
    protected createImplementation(): ForceIndexIndicator;
    /**
                                 * @hidden
                                 */
    get i(): ForceIndexIndicator;
    constructor(props: IIgrForceIndexIndicatorProps);
    /**
     * Gets default display type for the current Financial Indicator
    */
    get defaultDisplayType(): IndicatorDisplayType;
    /**
     * Gets or sets the moving average period for the current AverageTrueRangeSeries object.
     * The typical, and initial, value for ForceIndiex periods is 0.
    *
    * You can use the `period` property to get the moving average period of the current FullStochasticOscillatorIndicator object
    *
    * ```ts
    * <IgrDataChart
    *     dataSource={this.state.dataSource}
    *     width="700px"
    *     height="500px">
    *
    *
    *     <IgrCategoryXAxis name="xAxis" label="Date" />
    *     <IgrNumericYAxis  name="yAxis" />
    *
    *
    *     <IgrForceIndexIndicator
    *     name="series2"
    *     xAxisName="xAxis"
    *     yAxisName="yAxis"
    *     displayType="Candlestick"
    *     lowMemberPath="Low"
    *     highMemberPath="High"
    *     openMemberPath="Open"
    *     closeMemberPath="Close"
    *     volumeMemberPath="Volume"
    * 	period= {30} />
    *  </IgrDataChart>
    * ```
    *
    * ```ts
    * this.series.period = 30;
    * ```
    */
    get period(): number;
    set period(v: number);
}
export interface IIgrForceIndexIndicatorProps extends IIgrStrategyBasedIndicatorProps {
    /**
     * Gets or sets the moving average period for the current AverageTrueRangeSeries object.
     * The typical, and initial, value for ForceIndiex periods is 0.
    *
    * You can use the `period` property to get the moving average period of the current FullStochasticOscillatorIndicator object
    *
    * ```ts
    * <IgrDataChart
    *     dataSource={this.state.dataSource}
    *     width="700px"
    *     height="500px">
    *
    *
    *     <IgrCategoryXAxis name="xAxis" label="Date" />
    *     <IgrNumericYAxis  name="yAxis" />
    *
    *
    *     <IgrForceIndexIndicator
    *     name="series2"
    *     xAxisName="xAxis"
    *     yAxisName="yAxis"
    *     displayType="Candlestick"
    *     lowMemberPath="Low"
    *     highMemberPath="High"
    *     openMemberPath="Open"
    *     closeMemberPath="Close"
    *     volumeMemberPath="Volume"
    * 	period= {30} />
    *  </IgrDataChart>
    * ```
    *
    * ```ts
    * this.series.period = 30;
    * ```
    */
    period?: number | string;
}
