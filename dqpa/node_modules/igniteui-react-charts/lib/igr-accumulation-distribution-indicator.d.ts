import { IgrStrategyBasedIndicator, IIgrStrategyBasedIndicatorProps } from "./igr-strategy-based-indicator";
import { AccumulationDistributionIndicator } from "./AccumulationDistributionIndicator";
/**
 * Represents a IgxDataChartComponent Accumulation/Distribution indicator series.
 * Default required members: Close, Low, High, Volume
*
* You can use the `AccumulationDistributionIndicator` to evaluate the suppy and demand of a stock, security, or index.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*
*     <IgrCategoryXAxis name="xAxis" label="Date" />
*     <IgrNumericYAxis  name="yAxis" />
*
*     <IgrAccumulationDistributionIndicator
* 	name="series1"
* 	xAxisName="xAxis"
*     yAxisName="yAxis"
*     displayType="Line"
*     lowMemberPath="Low"
*     highMemberPath="High"
*     openMemberPath="Open"
*     closeMemberPath="Close"
*     volumeMemberPath="Volume"/>
*  </IgrDataChart>
* ```
*
* ```ts
* let series = new IgrAccumulationDistributionIndicator({name:"series3"});
* series.xAxisName = this.xAxis;
* series.yAxisName = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export declare class IgrAccumulationDistributionIndicator extends IgrStrategyBasedIndicator<IIgrAccumulationDistributionIndicatorProps> {
    protected createImplementation(): AccumulationDistributionIndicator;
    /**
                                 * @hidden
                                 */
    get i(): AccumulationDistributionIndicator;
    constructor(props: IIgrAccumulationDistributionIndicatorProps);
}
export interface IIgrAccumulationDistributionIndicatorProps extends IIgrStrategyBasedIndicatorProps {
}
