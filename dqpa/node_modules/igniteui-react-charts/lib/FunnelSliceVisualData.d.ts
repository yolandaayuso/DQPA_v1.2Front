import { Base, Type } from "igniteui-react-core";
import { PointData } from "igniteui-react-core";
import { BrushAppearanceData } from "igniteui-react-core";
import { PrimitiveAppearanceData } from "igniteui-react-core";
import { LabelAppearanceData } from "igniteui-react-core";
import { RectData } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class FunnelSliceVisualData extends Base {
    static $t: Type;
    constructor();
    private _isSelected;
    get isSelected(): boolean;
    set isSelected(a: boolean);
    private _index;
    get index(): number;
    set index(a: number);
    private _top;
    get top(): number;
    set top(a: number);
    private _bottom;
    get bottom(): number;
    set bottom(a: number);
    private _sliceCenterPoint;
    get sliceCenterPoint(): PointData;
    set sliceCenterPoint(a: PointData);
    private _upperRight;
    get upperRight(): PointData;
    set upperRight(a: PointData);
    private _lowerRight;
    get lowerRight(): PointData;
    set lowerRight(a: PointData);
    private _upperLeft;
    get upperLeft(): PointData;
    set upperLeft(a: PointData);
    private _lowerLeft;
    get lowerLeft(): PointData;
    set lowerLeft(a: PointData);
    private _height;
    get height(): number;
    set height(a: number);
    private _upperWidth;
    get upperWidth(): number;
    set upperWidth(a: number);
    private _lowerWidth;
    get lowerWidth(): number;
    set lowerWidth(a: number);
    private _innerLabel;
    get innerLabel(): string;
    set innerLabel(a: string);
    private _outerLabel;
    get outerLabel(): string;
    set outerLabel(a: string);
    private _sliceBorderBrush;
    get sliceBorderBrush(): BrushAppearanceData;
    set sliceBorderBrush(a: BrushAppearanceData);
    private _sliceBorderThickness;
    get sliceBorderThickness(): number;
    set sliceBorderThickness(a: number);
    private _appearance;
    get appearance(): PrimitiveAppearanceData;
    set appearance(a: PrimitiveAppearanceData);
    private _innerLabelAppearance;
    get innerLabelAppearance(): LabelAppearanceData;
    set innerLabelAppearance(a: LabelAppearanceData);
    private _outerLabelAppearance;
    get outerLabelAppearance(): LabelAppearanceData;
    set outerLabelAppearance(a: LabelAppearanceData);
    private _slicePoints;
    get slicePoints(): PointData[];
    set slicePoints(a: PointData[]);
    private _innerLabelPosition;
    get innerLabelPosition(): PointData;
    set innerLabelPosition(a: PointData);
    private _outerLabelPosition;
    get outerLabelPosition(): PointData;
    set outerLabelPosition(a: PointData);
    private _outerLabelBounds;
    get outerLabelBounds(): RectData;
    set outerLabelBounds(a: RectData);
    private _innerLabelBounds;
    get innerLabelBounds(): RectData;
    set innerLabelBounds(a: RectData);
    private _isVisibile;
    get isVisibile(): boolean;
    set isVisibile(a: boolean);
    scaleByViewport(a: RectData): void;
    serialize(): string;
}
