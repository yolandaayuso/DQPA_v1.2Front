import { IgrValueBrushScale } from "./igr-value-brush-scale";
import { IgrContourValueResolver } from "./igr-contour-value-resolver";
import { IgrScatterTriangulationSeries, IIgrScatterTriangulationSeriesProps } from "./igr-scatter-triangulation-series";
import { ScatterContourSeries } from "./ScatterContourSeries";
/**
 * Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.
*/
export declare class IgrScatterContourSeries extends IgrScatterTriangulationSeries<IIgrScatterContourSeriesProps> {
    protected createImplementation(): ScatterContourSeries;
    /**
                                 * @hidden
                                 */
    get i(): ScatterContourSeries;
    constructor(props: IIgrScatterContourSeriesProps);
    /**
     * Gets whether the current series shows a line contour shape.
    */
    get isLineContour(): boolean;
    /**
     * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.
    */
    get valueMemberPath(): string;
    set valueMemberPath(v: string);
    /**
     * Gets or sets the label displayed before series value in the Data Legend.
    */
    get valueMemberAsLegendLabel(): string;
    set valueMemberAsLegendLabel(v: string);
    /**
     * Gets or sets the unit displayed after series value in the Data Legend.
    */
    get valueMemberAsLegendUnit(): string;
    set valueMemberAsLegendUnit(v: string);
    /**
     * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.
    */
    get fillScale(): IgrValueBrushScale;
    set fillScale(v: IgrValueBrushScale);
    /**
     * Gets actual fill scale that is set on the FillScale property or default FillScale
    */
    get actualFillScale(): IgrValueBrushScale;
    set actualFillScale(v: IgrValueBrushScale);
    /**
     * Gets or set the ContourValueResolver used to determine the numeric values of contours.
    */
    get valueResolver(): IgrContourValueResolver;
    set valueResolver(v: IgrContourValueResolver);
    findByName(name: string): any;
    protected _styling(container: any, component: any, parent?: any): void;
    getItemValue(item: any, memberPathName: string): any;
    /**
     * Gets the value of a requested member path from the series.
    
    * @param memberPathName  * The property name of a valid member path for the series
    */
    getMemberPathValue(memberPathName: string): string;
}
export interface IIgrScatterContourSeriesProps extends IIgrScatterTriangulationSeriesProps {
    /**
     * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.
    */
    valueMemberPath?: string;
    /**
     * Gets or sets the label displayed before series value in the Data Legend.
    */
    valueMemberAsLegendLabel?: string;
    /**
     * Gets or sets the unit displayed after series value in the Data Legend.
    */
    valueMemberAsLegendUnit?: string;
    /**
     * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.
    */
    fillScale?: IgrValueBrushScale;
    /**
     * Gets actual fill scale that is set on the FillScale property or default FillScale
    */
    actualFillScale?: IgrValueBrushScale;
    /**
     * Gets or set the ContourValueResolver used to determine the numeric values of contours.
    */
    valueResolver?: IgrContourValueResolver;
}
