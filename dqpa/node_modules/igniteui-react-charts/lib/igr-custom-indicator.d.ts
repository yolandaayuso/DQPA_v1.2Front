import { IgrStrategyBasedIndicator, IIgrStrategyBasedIndicatorProps } from './igr-strategy-based-indicator';
import { CustomIndicator } from "./CustomIndicator";
import { IgrFinancialEventArgs } from "./igr-financial-event-args";
export declare class IgrCustomIndicator extends IgrStrategyBasedIndicator<IIgrCustomIndicatorProps> {
    protected createImplementation(): CustomIndicator;
    get i(): CustomIndicator;
    constructor(props: IIgrCustomIndicatorProps);
    private _indicator;
    private _indicator_wrapped;
    /**
     * Event raised when the indicator values need to be computed.
    */
    get indicator(): (s: IgrCustomIndicator, e: IgrFinancialEventArgs) => void;
    set indicator(ev: (s: IgrCustomIndicator, e: IgrFinancialEventArgs) => void);
    private _basedOnColumns;
    private _basedOnColumns_wrapped;
    /**
     * Event raised when the basedOnColumns values need to be computed.
    */
    get basedOnColumns(): (s: IgrCustomIndicator, e: IgrFinancialEventArgs) => void;
    set basedOnColumns(ev: (s: IgrCustomIndicator, e: IgrFinancialEventArgs) => void);
}
export interface IIgrCustomIndicatorProps extends IIgrStrategyBasedIndicatorProps {
    /**
     * Event raised when the indicator values need to be computed.
    */
    indicator: (s: IgrCustomIndicator, e: IgrFinancialEventArgs) => void;
    /**
     * Event raised when the basedOnColumns values need to be computed.
    */
    basedOnColumns: (s: IgrCustomIndicator, e: IgrFinancialEventArgs) => void;
}
