import { LegendBase } from "./LegendBase";
import { IChartItemLegend } from "igniteui-react-core";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { LegendOrientation } from "./LegendOrientation";
import { LegendBaseView } from "./LegendBaseView";
import { Type } from "igniteui-react-core";
import { UIElement } from "igniteui-react-core";
import { ILegendSeries } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { ILegendContext } from "igniteui-react-core";
import { LegendVisualData } from "./LegendVisualData";
/**
 * @hidden
 */
export declare class ItemLegend extends LegendBase implements IChartItemLegend {
    static $t: Type;
    aj(): LegendBaseView;
    a8(a: LegendBaseView): void;
    bb: ItemLegendView;
    constructor();
    addChildInOrder(a: UIElement, b: ILegendSeries): void;
    protected get_isItemwise(): boolean;
    createItemwiseLegendItems(a: List$1<UIElement>, b: ILegendSeries): void;
    a0(a: List$1<UIElement>, b: ILegendSeries): void;
    createLegendItemsInsert(a: List$1<UIElement>, b: ILegendSeries): void;
    bk(a: List$1<UIElement>, b: ILegendSeries): void;
    renderItemwiseContent(a: ILegendSeries): void;
    bl(a: ILegendSeries): void;
    private bg;
    bf(a: ILegendSeries): number;
    private be;
    bd: IFastItemColumn$1<number>;
    get bc(): LegendOrientation;
    set bc(a: LegendOrientation);
    get bi(): string;
    set bi(a: string);
    get bj(): string;
    set bj(a: string);
}
/**
 * @hidden
 */
export declare class ItemLegendView extends LegendBaseView {
    static $t: Type;
    constructor(a: ItemLegend);
    ap: ItemLegend;
    al(): void;
    protected get_k(): boolean;
    aq(a: ILegendContext): boolean;
    g(): LegendVisualData;
}
