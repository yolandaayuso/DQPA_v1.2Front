import { Base, Point, IList$1, Type } from "igniteui-react-core";
import { Marker } from "./Marker";
import { IDictionary$2 } from "igniteui-react-core";
import { OwnedPoint } from "./OwnedPoint";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { MarkerManagerBucket } from "./MarkerManagerBucket";
/**
 * @hidden
 */
export declare abstract class MarkerManagerBase extends Base {
    static $t: Type;
    f: () => Point[];
    h: (arg1: any) => Marker;
    a: (arg1: IDictionary$2<any, OwnedPoint>) => void;
    g: (arg1: number) => any;
    e: () => List$1<number>;
    static b: boolean;
    constructor(a: (arg1: any) => Marker, b: (arg1: number) => any, c: (arg1: IDictionary$2<any, OwnedPoint>) => void, d: () => Point[], e: () => List$1<number>);
    abstract l(a: IDictionary$2<any, OwnedPoint>, b: number, c: Rect, d: Rect, e: number): void;
    abstract j(a: IDictionary$2<any, OwnedPoint>, b: boolean): void;
    protected d(a: Dictionary$2<number, MarkerManagerBucket>, b: List$1<number>): List$1<number>;
    protected k(a: number, b: Dictionary$2<number, MarkerManagerBucket>, c: List$1<number>, d: List$1<number>): void;
    protected i(a: Rect, b: Rect, c: IList$1<Point>, d: List$1<number>): void;
    protected c(a: Rect, b: List$1<number>, c: number, d: IList$1<Point>): Dictionary$2<number, MarkerManagerBucket>;
}
