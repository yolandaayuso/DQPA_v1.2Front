import { AnchoredRadialSeries } from "./AnchoredRadialSeries";
import { UnknownValuePlotting } from "igniteui-react-core";
import { Series } from "./Series";
import { SeriesView } from "./SeriesView";
import { Type } from "igniteui-react-core";
import { CategoryMode } from "./CategoryMode";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { RadialFrame } from "./RadialFrame";
import { RadialBaseView } from "./RadialBaseView";
import { Rect } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { ChartSelection } from "./ChartSelection";
import { SeriesSelectionBehavior } from "./SeriesSelectionBehavior";
import { AnchoredRadialSeriesView } from "./AnchoredRadialSeriesView";
import { Clipper } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class RadialLineSeries extends AnchoredRadialSeries {
    static $t: Type;
    protected bj(): Series;
    protected get_fk(): boolean;
    protected cs(): SeriesView;
    q1(a: SeriesView): void;
    adp: RadialLineSeriesView;
    constructor();
    ac(): void;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    protected zy(): boolean;
    o5(a: boolean, b: SeriesView): void;
    abc(a: RadialFrame, b: RadialBaseView): void;
    adq: UnknownValuePlotting;
    protected q9(a: any, b: string, c: any, d: any): void;
    protected get_ace(): boolean;
    ak(a: Rect, b: SeriesSelectionBehavior): ChartSelection[];
    p4(a: Rect, b: List$1<ChartSelection>, c: SeriesSelectionBehavior): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class RadialLineSeriesView extends AnchoredRadialSeriesView {
    static $t: Type;
    protected c5: RadialLineSeries;
    constructor(a: RadialLineSeries);
    au(): void;
    get df(): Path;
    get dg(): Path;
    get de(): Path;
    private dc;
    private db;
    private dd;
    private c9;
    private c8;
    private da;
    c6(): void;
    c7(a: number, b: List$1<number[]>, c: boolean, d: UnknownValuePlotting, e: Clipper, f: number, g: number): void;
    protected bd(): void;
    protected be(): void;
    protected a8(a: RenderingContext, b: boolean): void;
    an(a: any): void;
    protected af(): void;
}
