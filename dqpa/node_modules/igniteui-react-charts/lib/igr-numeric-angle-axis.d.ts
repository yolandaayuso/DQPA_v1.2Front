import { AxisAngleLabelMode } from "./AxisAngleLabelMode";
import { IgrNumericAxisBase, IIgrNumericAxisBaseProps } from "./igr-numeric-axis-base";
import { NumericAngleAxis } from "./NumericAngleAxis";
/**
 * Represents a IgxDataChartComponent angle based axis for polar series.
*/
export declare class IgrNumericAngleAxis extends IgrNumericAxisBase<IIgrNumericAngleAxisProps> {
    protected createImplementation(): NumericAngleAxis;
    /**
                                 * @hidden
                                 */
    get i(): NumericAngleAxis;
    constructor(props: IIgrNumericAngleAxisProps);
    /**
     * Gets if the current axis is of angular axis type
    */
    get isAngular(): boolean;
    /**
     * Indicates the angle in degress that the chart's 0th angle should be offset.
    */
    get startAngleOffset(): number;
    set startAngleOffset(v: number);
    /**
     * Indicates the mode axis labels will operate in.
    */
    get labelMode(): AxisAngleLabelMode;
    set labelMode(v: AxisAngleLabelMode);
    /**
     * Gets the scaled angle value in radians based on the raw input.
    
    * @param unscaledAngle  * The unscaled angle.
    */
    getScaledAngle(unscaledAngle: number): number;
    /**
     * Gets the raw axis value back from the angle that would be used on the chart.
    
    * @param scaledAngle  * The chart angle value.
    */
    getUnscaledAngle(scaledAngle: number): number;
}
export interface IIgrNumericAngleAxisProps extends IIgrNumericAxisBaseProps {
    /**
     * Indicates the angle in degress that the chart's 0th angle should be offset.
    */
    startAngleOffset?: number | string;
    /**
     * Indicates the mode axis labels will operate in.
    */
    labelMode?: AxisAngleLabelMode | string;
}
