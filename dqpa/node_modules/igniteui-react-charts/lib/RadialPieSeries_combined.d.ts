import { AnchoredRadialSeries } from "./AnchoredRadialSeries";
import { IFastItemColumn$1 } from "igniteui-react-core";
import { Type, Point } from "igniteui-react-core";
import { Series } from "./Series";
import { LegendEmptyValuesMode } from "igniteui-react-core";
import { SeriesView } from "./SeriesView";
import { CategoryMode } from "./CategoryMode";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { Pool$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { CollisionGeometry } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { RadialFrame } from "./RadialFrame";
import { RadialBaseView } from "./RadialBaseView";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { ChartSelection } from "./ChartSelection";
import { SeriesSelectionBehavior } from "./SeriesSelectionBehavior";
import { AnchoredRadialSeriesView } from "./AnchoredRadialSeriesView";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class RadialPieSeries extends AnchoredRadialSeries {
    static $t: Type;
    protected bj(): Series;
    protected get_fn(): boolean;
    protected get_fl(): boolean;
    protected jk(): number;
    protected cs(): SeriesView;
    q1(a: SeriesView): void;
    adr: RadialPieSeriesView;
    constructor();
    adv: number;
    adw: number;
    private ads;
    get adt(): IFastItemColumn$1<any>;
    set adt(a: IFastItemColumn$1<any>);
    private adx;
    get ad0(): string;
    set ad0(a: string);
    private adp;
    get adq(): LegendEmptyValuesMode;
    set adq(a: LegendEmptyValuesMode);
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    o5(a: boolean, b: SeriesView): void;
    iw(): number;
    ar(a: number, b: number): CollisionGeometry;
    protected get_ed(): boolean;
    protected get_acg(): boolean;
    protected get_aca(): boolean;
    abc(a: RadialFrame, b: RadialBaseView): void;
    private ad7;
    private adu;
    private ad6;
    protected q9(a: any, b: string, c: any, d: any): void;
    wn(a: Point): Rect;
    protected ku(a: number): any;
    eb(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number, e: boolean): boolean;
    ak(a: Rect, b: SeriesSelectionBehavior): ChartSelection[];
    p4(a: Rect, b: List$1<ChartSelection>, c: SeriesSelectionBehavior): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class RadialPieSeriesView extends AnchoredRadialSeriesView {
    static $t: Type;
    protected c5: RadialPieSeries;
    constructor(a: RadialPieSeries);
    c6: Pool$1<Path>;
    au(): void;
    protected c7: List$1<Path>;
    dd(): Path;
    c8(a: Path): void;
    da(a: Path): void;
    c9(a: Path): void;
    protected bg(a: any, b: number): void;
    protected ac(a: number): any;
    private dc;
    protected ab(a: number): any;
    protected a8(a: RenderingContext, b: boolean): void;
    db(): void;
    an(a: any): void;
}
