import { AnchoredRadialSeries } from "./AnchoredRadialSeries";
import { Series } from "./Series";
import { SeriesView } from "./SeriesView";
import { Type } from "igniteui-react-core";
import { CategoryMode } from "./CategoryMode";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { Pool$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { RadialFrame } from "./RadialFrame";
import { RadialBaseView } from "./RadialBaseView";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { ChartSelection } from "./ChartSelection";
import { SeriesSelectionBehavior } from "./SeriesSelectionBehavior";
import { AnchoredRadialSeriesView } from "./AnchoredRadialSeriesView";
import { Rectangle } from "igniteui-react-core";
import { RenderingContext } from "igniteui-react-core";
/**
 * @hidden
 */
export declare class RadialColumnSeries extends AnchoredRadialSeries {
    static $t: Type;
    protected bj(): Series;
    protected get_ez(): boolean;
    protected get_fl(): boolean;
    protected jk(): number;
    protected cs(): SeriesView;
    q1(a: SeriesView): void;
    adp: RadialColumnSeriesView;
    constructor();
    ac(): void;
    protected q9(a: any, b: string, c: any, d: any): void;
    adq: number;
    adr: number;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    o5(a: boolean, b: SeriesView): void;
    protected get_ed(): boolean;
    iw(): number;
    abc(a: RadialFrame, b: RadialBaseView): void;
    ak(a: Rect, b: SeriesSelectionBehavior): ChartSelection[];
    p4(a: Rect, b: List$1<ChartSelection>, c: SeriesSelectionBehavior): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class RadialColumnSeriesView extends AnchoredRadialSeriesView {
    static $t: Type;
    protected c5: RadialColumnSeries;
    constructor(a: RadialColumnSeries);
    c6: Pool$1<Path>;
    au(): void;
    protected c7: List$1<Path>;
    de(): Path;
    c8(a: Path): void;
    da(a: Path): void;
    c9(a: Path): void;
    dc(a: Rectangle, b: number, c: number, d: number, e: number, f: number): void;
    protected bg(a: any, b: number): void;
    protected bh(a: any, b: number): void;
    protected ac(a: number): any;
    private dd;
    protected ab(a: number): any;
    protected a8(a: RenderingContext, b: boolean): void;
    an(a: any): void;
    db(): void;
}
