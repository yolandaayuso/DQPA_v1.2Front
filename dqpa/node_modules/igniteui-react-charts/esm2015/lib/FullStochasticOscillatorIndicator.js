/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { FullStochasticOscillatorIndicatorStrategy } from "./FullStochasticOscillatorIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
/**
 * @hidden
 */
export let FullStochasticOscillatorIndicator = /*@__PURE__*/ (() => {
    class FullStochasticOscillatorIndicator extends StrategyBasedIndicator {
        bj() {
            return new FullStochasticOscillatorIndicator();
        }
        constructor() {
            super();
            this.trendLineBrush = ((() => {
                let $ret = new Brush();
                $ret.fill = "#565656";
                return $ret;
            })());
            this.trendLineType = 10;
            this.trendLinePeriod = 3;
        }
        get_abv() {
            return new FullStochasticOscillatorIndicatorStrategy();
        }
        get abv() {
            return this.get_abv();
        }
        get_ab8() {
            return FullStochasticOscillatorIndicator.$;
        }
        get ab8() {
            return this.get_ab8();
        }
        get acg() {
            return typeGetValue(this.c(FullStochasticOscillatorIndicator.acl));
        }
        set acg(a) {
            this.h(FullStochasticOscillatorIndicator.acl, a);
        }
        ab1() {
            return this.acg;
        }
        aca(a) {
            this.acg = a;
        }
        get smoothingPeriod() {
            return typeGetValue(this.c(FullStochasticOscillatorIndicator.acm));
        }
        set smoothingPeriod(a) {
            this.h(FullStochasticOscillatorIndicator.acm, a);
        }
        ab3() {
            return this.smoothingPeriod;
        }
        get aci() {
            return typeGetValue(this.c(FullStochasticOscillatorIndicator.acn));
        }
        set aci(a) {
            this.h(FullStochasticOscillatorIndicator.acn, a);
        }
        ab0() {
            return this.aci;
        }
        abb() {
            return this.aci;
        }
    }
    FullStochasticOscillatorIndicator.$t = /*@__PURE__*/ markType(FullStochasticOscillatorIndicator, 'FullStochasticOscillatorIndicator', StrategyBasedIndicator.$);
    FullStochasticOscillatorIndicator.acl = /*@__PURE__*/ StrategyBasedIndicator.acd(14, FullStochasticOscillatorIndicator.$);
    FullStochasticOscillatorIndicator.acm = /*@__PURE__*/ StrategyBasedIndicator.ace(3, FullStochasticOscillatorIndicator.$, "SmoothingPeriod");
    FullStochasticOscillatorIndicator.acn = /*@__PURE__*/ StrategyBasedIndicator.ace(3, FullStochasticOscillatorIndicator.$, "TriggerPeriod");
    return FullStochasticOscillatorIndicator;
})();
