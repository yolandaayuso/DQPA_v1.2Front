/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Frame } from "./Frame";
import { markType } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let CategoryToolTipLayerFrame = /*@__PURE__*/ (() => {
    class CategoryToolTipLayerFrame extends Frame {
        get l() {
            return this.f;
        }
        set l(a) {
            this.f = a;
        }
        constructor() {
            super();
            this.f = 0;
            this.k = 0;
            this.h = 0;
            this.g = 0;
            this.j = 0;
            this.i = 0;
            this.k = NaN;
            this.l = NaN;
            this.g = NaN;
            this.h = NaN;
            this.j = NaN;
            this.i = NaN;
        }
        c(a, b, c) {
            let d = b;
            let e = c;
            if (isNaN_(d.k)) {
                this.k = e.k;
            }
            else {
                this.k = d.k + (e.k - d.k) * a;
            }
            if (isNaN_(d.l)) {
                this.l = e.l;
            }
            else {
                this.l = d.l + (e.l - d.l) * a;
            }
            if (isNaN_(d.g)) {
                this.g = e.g;
            }
            else {
                this.g = d.g + (e.g - d.g) * a;
            }
            if (isNaN_(d.h)) {
                this.h = e.h;
            }
            else {
                this.h = d.h + (e.h - d.h) * a;
            }
            if (isNaN_(d.j)) {
                this.j = e.j;
            }
            else {
                this.j = d.j + (e.j - d.j) * a;
            }
            if (isNaN_(d.i)) {
                this.i = e.k;
            }
            else {
                this.i = d.i + (e.i - d.i) * a;
            }
        }
    }
    CategoryToolTipLayerFrame.$t = /*@__PURE__*/ markType(CategoryToolTipLayerFrame, 'CategoryToolTipLayerFrame', Frame.$);
    return CategoryToolTipLayerFrame;
})();
