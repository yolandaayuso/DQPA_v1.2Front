import { IgrStrategyBasedIndicator } from "./igr-strategy-based-indicator";
import { TypicalPriceIndicator } from "./TypicalPriceIndicator";
/**
 * Represents a IgxDataChartComponent Typical Price indicator series.
 * The typical price indicator is represented as a arithmetic average
 * of the High, Low, and Close for a day.
 * Default required members: High, Low, Close
*
* The `TypicalPriceIndicator` class represents a IgxDataChartComponent Typical Price indicator series.
*
* ```ts
*   <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
* 		<IgrCategoryXAxis name="xAxis" label="Date" />
* 		<IgrNumericYAxis  name="yAxis" />
* <IgrTypicalPriceIndicator
*     name="series1"
*     xAxisName="xAxis"
*     yAxisName="yAxis"
*     lowMemberPath="Low"
*     highMemberPath="High"
*     openMemberPath="Open"
*     closeMemberPath="Close"
*     volumeMemberPath="Volume" />
*  </IgrDataChart>
* ```
*
* ```ts
* let series = new IgrTypicalPriceIndicator({name: "series"});
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export class IgrTypicalPriceIndicator extends IgrStrategyBasedIndicator {
    createImplementation() {
        return new TypicalPriceIndicator();
    }
    /**
                                 * @hidden
                                 */
    get i() {
        return this._implementation;
    }
    constructor(props) {
        super(props);
    }
}
