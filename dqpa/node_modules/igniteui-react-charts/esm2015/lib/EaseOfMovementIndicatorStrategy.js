/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { IndicatorCalculationStrategy } from "./IndicatorCalculationStrategy";
import { String_$type, markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let EaseOfMovementIndicatorStrategy = /*@__PURE__*/ (() => {
    class EaseOfMovementIndicatorStrategy extends IndicatorCalculationStrategy {
        b(a, b) {
            let c = new List$1(String_$type, 0);
            c.add("HighColumn");
            c.add("LowColumn");
            c.add("VolumeColumn");
            return c;
        }
        a(a, b) {
            let c = a.indicatorColumn;
            let d = a.highColumn;
            let e = a.lowColumn;
            let f = a.volumeColumn;
            let g = a.count;
            if (g > 0) {
                c.item(0, 0);
            }
            for (let h = 1; h < g; h++) {
                let i = (d.item(h) + e.item(h)) / 2;
                let j = (d.item(h - 1) + e.item(h - 1)) / 2;
                let k = i - j;
                let l = 10000;
                let m = b.i((f.item(h) / l) / (d.item(h) - e.item(h)));
                c.item(h, b.i(k / m));
            }
            return true;
        }
    }
    EaseOfMovementIndicatorStrategy.$t = /*@__PURE__*/ markType(EaseOfMovementIndicatorStrategy, 'EaseOfMovementIndicatorStrategy', IndicatorCalculationStrategy.$);
    return EaseOfMovementIndicatorStrategy;
})();
