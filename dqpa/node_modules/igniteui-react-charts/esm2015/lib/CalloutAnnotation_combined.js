/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { DependencyObject } from "igniteui-react-core";
import { INotifyPropertyChanged_$type, Base, PropertyChangedEventArgs, typeCast, markType, markDep } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Series } from "./Series";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
export let CalloutAnnotation = /*@__PURE__*/ (() => {
    class CalloutAnnotation extends DependencyObject {
        constructor() {
            super(...arguments);
            this.propertyChanged = null;
            this.k = null;
            this.ac = 0;
            this.ad = 0;
            this.ao = null;
            this.az = null;
            this.ab = null;
            this.aa = null;
            this.l = null;
            this.bn = null;
            this._formatLabel = null;
            this.bq = null;
            this.bm = null;
            this.bp = null;
            this.bo = null;
            this.y = 0;
            this.o = false;
            this.n = true;
            this.bv = null;
            this.v = NaN;
            this.x = NaN;
            this.w = NaN;
            this.u = NaN;
        }
        a3(a, b, c) {
            this.a2(a, b, c);
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new PropertyChangedEventArgs(a));
            }
        }
        a2(a, b, c) {
            switch (a) {
                case CalloutAnnotation.$$p[15]:
                    this.ac = c;
                    break;
                case CalloutAnnotation.$$p[16]:
                    this.ad = c;
                    break;
                case CalloutAnnotation.$$p[11]:
                    this.l = c;
                    break;
                case CalloutAnnotation.$$p[6]:
                    this.aa = c;
                    break;
                case CalloutAnnotation.$$p[8]:
                    this.ab = c;
                    break;
                case CalloutAnnotation.$$p[14]:
                    this.ao = c;
                    break;
                case CalloutAnnotation.$$p[7]:
                    this.bn = c;
                    break;
                case CalloutAnnotation.$$p[13]:
                    this.bq = c;
                    break;
                case CalloutAnnotation.$$p[9]:
                    this.bo = c;
                    break;
                case CalloutAnnotation.$$p[10]:
                    this.bp = c;
                    break;
                case CalloutAnnotation.$$p[5]:
                    this.bm = c;
                    break;
                case CalloutAnnotation.$$p[12]:
                    this.y = c;
                    break;
                case CalloutAnnotation.$$p[2]:
                    this.n = true;
                    this.v = c;
                    break;
                case CalloutAnnotation.$$p[4]:
                    this.n = true;
                    this.x = c;
                    break;
                case CalloutAnnotation.$$p[3]:
                    this.n = true;
                    this.w = c;
                    break;
                case CalloutAnnotation.$$p[1]:
                    this.n = true;
                    this.u = c;
                    break;
            }
            this.o = true;
        }
        get formatLabel() {
            return this._formatLabel;
        }
        set formatLabel(a) {
            this._formatLabel = a;
        }
        get backgroundPadding() {
            if (this.n) {
                this.n = false;
                this.bv = new Thickness(1, this.v, this.x, this.w, this.u);
            }
            return this.bv;
        }
        set backgroundPadding(a) {
            this.backgroundPaddingLeft = a.left;
            this.backgroundPaddingTop = a.top;
            this.backgroundPaddingRight = a.right;
            this.backgroundPaddingBottom = a.bottom;
        }
    }
    CalloutAnnotation.$t = /*@__PURE__*/ markType(CalloutAnnotation, 'CalloutAnnotation', DependencyObject.$, [INotifyPropertyChanged_$type]);
    CalloutAnnotation.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, CalloutAnnotation, 'a3', ['BackgroundCornerRadius', [1, NaN], 'BackgroundPaddingBottom', [1, NaN], 'BackgroundPaddingLeft', [1, NaN], 'BackgroundPaddingRight', [1, NaN], 'BackgroundPaddingTop', [1, NaN], 'Background', [Brush.$, null], 'Content', [4, null], 'ItemColor', [Brush.$, null], 'Key', [4, null], 'LeaderBrush', [Brush.$, null], 'Outline', [Brush.$, null], 'Series', [Series.$, null], 'StrokeThickness', [1, 0], 'TextColor', [Brush.$, null], 'Text', [2, null], 'XValue', [4, 0], 'YValue', [4, 0]]);
    return CalloutAnnotation;
})();
/**
 * @hidden
 */
export let CalloutAnnotationWrapper = /*@__PURE__*/ (() => {
    class CalloutAnnotationWrapper extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
            this.c = null;
            this.e = 0;
            this.f = 0;
        }
        get b() {
            return this.a;
        }
        set b(a) {
            this.a = a;
            this.a.k = this;
        }
        equals(a) {
            let b = typeCast(CalloutAnnotationWrapper.$, a);
            if (b == null) {
                return super.equals(a);
            }
            if (b.b == null && this.b == null) {
                return super.equals(a);
            }
            if (b.b == null) {
                return false;
            }
            if (this.b.ab != null || b.b.ab != null) {
                return Base.equalsStatic(this.b.ab, b.b.ab);
            }
            return super.equals(a);
        }
        getHashCode() {
            if (this.b == null || this.b.ab == null) {
                return super.getHashCode();
            }
            return Base.getHashCodeStatic(this.b.ab);
        }
    }
    CalloutAnnotationWrapper.$t = /*@__PURE__*/ markType(CalloutAnnotationWrapper, 'CalloutAnnotationWrapper');
    return CalloutAnnotationWrapper;
})();
