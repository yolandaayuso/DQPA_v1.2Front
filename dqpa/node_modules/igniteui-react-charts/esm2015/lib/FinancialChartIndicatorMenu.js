/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { FinancialChartDropDownControl } from "./FinancialChartDropDownControl";
import { FinancialChartIndicatorMenuViewModel } from "./FinancialChartIndicatorMenuViewModel";
import { runOn, markType } from "igniteui-react-core";
import { FinancialChartIndicatorMenuView } from "./FinancialChartIndicatorMenuView";
/**
 * @hidden
 */
export let FinancialChartIndicatorMenu = /*@__PURE__*/ (() => {
    class FinancialChartIndicatorMenu extends FinancialChartDropDownControl {
        constructor(a, ..._rest) {
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        let c = [null];
                        {
                            let e = c[0];
                            super("financialChartIndicatorMenu", e, "");
                            this.o = new FinancialChartIndicatorMenuView();
                            this.p = new FinancialChartIndicatorMenuViewModel();
                            this.p.onSelectionChanged = runOn(this, this.v);
                            this.p.b = runOn(this.o, this.o.j);
                            this.o.a = this.p;
                        }
                    }
                    break;
                case 1:
                    {
                        let c = _rest[0];
                        super("financialChartIndicatorMenu", c, "");
                        this.o = new FinancialChartIndicatorMenuView();
                        this.p = new FinancialChartIndicatorMenuViewModel();
                        this.p.onSelectionChanged = runOn(this, this.v);
                        this.p.b = runOn(this.o, this.o.j);
                        this.o.a = this.p;
                    }
                    break;
            }
        }
        get_s() {
            return ".financialChartIndicatorMenuDropDownButton";
        }
        get s() {
            return this.get_s();
        }
        get_t() {
            return ".financialChartIndicatorMenuDropDownMenu";
        }
        get t() {
            return this.get_t();
        }
        get y() {
            return this.w.j;
        }
        get z() {
            return this.w.k;
        }
        get aa() {
            return this.w.l;
        }
        get x() {
            return this.w.i;
        }
        get w() {
            return this.p;
        }
        get_q() {
            return true;
        }
    }
    FinancialChartIndicatorMenu.$t = /*@__PURE__*/ markType(FinancialChartIndicatorMenu, 'FinancialChartIndicatorMenu', FinancialChartDropDownControl.$);
    return FinancialChartIndicatorMenu;
})();
