import { TreemapNodePointerEventArgs as TreemapNodePointerEventArgs_internal } from "./TreemapNodePointerEventArgs";
import { fromPoint, toPoint, ensureBool } from "igniteui-react-core";
export class IgrTreemapNodePointerEventArgs {
    createImplementation() {
        return new TreemapNodePointerEventArgs_internal();
    }
    get nativeElement() {
        return this._implementation.nativeElement;
    }
    /**
     * @hidden
     */
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    constructor() {
        this.mounted = false;
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    get value() {
        return this.i.value;
    }
    set value(v) {
        this.i.value = +v;
    }
    get sum() {
        return this.i.sum;
    }
    set sum(v) {
        this.i.sum = +v;
    }
    get customValue() {
        return this.i.customValue;
    }
    set customValue(v) {
        this.i.customValue = v;
    }
    get item() {
        return this.i.item;
    }
    set item(v) {
        this.i.item = v;
    }
    get parentItem() {
        return this.i.parentItem;
    }
    set parentItem(v) {
        this.i.parentItem = v;
    }
    get position() {
        return fromPoint(this.i.position);
    }
    set position(v) {
        this.i.position = toPoint(v);
    }
    get isRightButton() {
        return this.i.isRightButton;
    }
    set isRightButton(v) {
        this.i.isRightButton = ensureBool(v);
    }
    get isHandled() {
        return this.i.isHandled;
    }
    set isHandled(v) {
        this.i.isHandled = ensureBool(v);
    }
    get isOverHeader() {
        return this.i.isOverHeader;
    }
    set isOverHeader(v) {
        this.i.isOverHeader = ensureBool(v);
    }
    get label() {
        return this.i.label;
    }
    set label(v) {
        this.i.label = v;
    }
    get parentValue() {
        return this.i.parentValue;
    }
    set parentValue(v) {
        this.i.parentValue = +v;
    }
    get parentLabel() {
        return this.i.parentLabel;
    }
    set parentLabel(v) {
        this.i.parentLabel = v;
    }
    get parentSum() {
        return this.i.parentSum;
    }
    set parentSum(v) {
        this.i.parentSum = +v;
    }
}
