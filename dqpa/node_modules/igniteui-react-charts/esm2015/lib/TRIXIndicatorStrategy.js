/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { IndicatorCalculationStrategy } from "./IndicatorCalculationStrategy";
import { String_$type, markType, getEnumerator } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let TRIXIndicatorStrategy = /*@__PURE__*/ (() => {
    class TRIXIndicatorStrategy extends IndicatorCalculationStrategy {
        b(a, b) {
            let c = new List$1(String_$type, 0);
            c.add("CloseColumn");
            c.o(b.a.c);
            return c;
        }
        a(a, b) {
            let c = b.a.b(a.closeColumn, a.period);
            let d = b.a.b(c, a.period);
            let e = getEnumerator(b.a.b(d, a.period));
            let f = a.indicatorColumn;
            if (f.count > 0) {
                f.item(0, 0);
            }
            let g = 1;
            e.moveNext();
            let h = e.current;
            while (e.moveNext()) {
                f.item(g, b.i((e.current - h) / h));
                h = e.current;
                g++;
            }
            return true;
        }
    }
    TRIXIndicatorStrategy.$t = /*@__PURE__*/ markType(TRIXIndicatorStrategy, 'TRIXIndicatorStrategy', IndicatorCalculationStrategy.$);
    return TRIXIndicatorStrategy;
})();
