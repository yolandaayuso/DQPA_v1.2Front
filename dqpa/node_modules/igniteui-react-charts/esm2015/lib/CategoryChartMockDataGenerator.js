/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { CategoryChartMockDataItem } from "./CategoryChartMockDataItem";
/**
 * @hidden
 */
export let CategoryChartMockDataGenerator = /*@__PURE__*/ (() => {
    class CategoryChartMockDataGenerator extends Base {
        static a() {
            let a = new List$1(CategoryChartMockDataItem.$, 0);
            a.add(((() => {
                let $ret = new CategoryChartMockDataItem();
                $ret.label = "Item A";
                $ret.series1 = 3;
                $ret.series2 = 4;
                $ret.series3 = 7;
                return $ret;
            })()));
            a.add(((() => {
                let $ret = new CategoryChartMockDataItem();
                $ret.label = "Item B";
                $ret.series1 = 4;
                $ret.series2 = 3;
                $ret.series3 = 6;
                return $ret;
            })()));
            a.add(((() => {
                let $ret = new CategoryChartMockDataItem();
                $ret.label = "Item C";
                $ret.series1 = 7;
                $ret.series2 = 2;
                $ret.series3 = 5;
                return $ret;
            })()));
            a.add(((() => {
                let $ret = new CategoryChartMockDataItem();
                $ret.label = "Item D";
                $ret.series1 = 6;
                $ret.series2 = 4;
                $ret.series3 = 7;
                return $ret;
            })()));
            a.add(((() => {
                let $ret = new CategoryChartMockDataItem();
                $ret.label = "Item E";
                $ret.series1 = 5;
                $ret.series2 = 5;
                $ret.series3 = 8;
                return $ret;
            })()));
            a.add(((() => {
                let $ret = new CategoryChartMockDataItem();
                $ret.label = "Item F";
                $ret.series1 = 4;
                $ret.series2 = 8;
                $ret.series3 = 9;
                return $ret;
            })()));
            let arr_ = a.toArray();
            return arr_;
        }
    }
    CategoryChartMockDataGenerator.$t = /*@__PURE__*/ markType(CategoryChartMockDataGenerator, 'CategoryChartMockDataGenerator');
    return CategoryChartMockDataGenerator;
})();
