/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, IEnumerable$1_$type, String_$type, Number_$type, markType, getEnumerator } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let CalculatedColumn = /*@__PURE__*/ (() => {
    class CalculatedColumn extends Base {
        constructor(a, ..._rest) {
            super();
            this._valuesProvider = null;
            this.c = null;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        let c = _rest[0];
                        let d = [];
                        for (let b = 1; b < _rest.length; b++) {
                            d[b - 1] = _rest[b];
                        }
                        this._valuesProvider = c;
                        this.c = new List$1(String_$type, 1, d);
                    }
                    break;
                case 1:
                    {
                        let d = _rest[0];
                        let e = _rest[1];
                        this._valuesProvider = d;
                        this.c = new List$1(String_$type, 1, e);
                    }
                    break;
            }
        }
        get basedOn() {
            return this.c;
        }
        getEnumerator() {
            return getEnumerator(this._valuesProvider);
        }
        getEnumeratorObject() {
            return getEnumerator(this._valuesProvider);
        }
    }
    CalculatedColumn.$t = /*@__PURE__*/ markType(CalculatedColumn, 'CalculatedColumn', Base.$, [/*@__PURE__*/ IEnumerable$1_$type.specialize(Number_$type)]);
    return CalculatedColumn;
})();
