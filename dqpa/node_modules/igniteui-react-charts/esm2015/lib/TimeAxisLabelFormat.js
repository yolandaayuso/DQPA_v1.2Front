/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, INotifyPropertyChanged_$type, PropertyChangedEventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let TimeAxisLabelFormat = /*@__PURE__*/ (() => {
    class TimeAxisLabelFormat extends Base {
        constructor() {
            super(...arguments);
            this.n = (0);
            this.a = null;
            this.d = null;
            this.c = null;
            this.b = null;
            this.propertyChanged = null;
        }
        get o() {
            return this.n;
        }
        set o(a) {
            let b = this.o;
            if (a != b) {
                this.n = a;
                this.p("Range", b, this.o);
            }
        }
        get e() {
            return this.a;
        }
        set e(a) {
            let b = this.e;
            if (a != b) {
                this.a = a;
                this.p("Format", b, this.e);
            }
        }
        get l() {
            return this.d;
        }
        set l(a) {
            let b = this.l;
            if (a != b) {
                this.d = a;
                this.p("RepeatedYearFormat", b, this.l);
            }
        }
        get j() {
            return this.c;
        }
        set j(a) {
            let b = this.j;
            if (a != b) {
                this.c = a;
                this.p("RepeatedMonthFormat", b, this.j);
            }
        }
        get h() {
            return this.b;
        }
        set h(a) {
            let b = this.h;
            if (a != b) {
                this.b = a;
                this.p("RepeatedDayFormat", b, this.h);
            }
        }
        p(a, b, c) {
            this.q(a, b, c);
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new PropertyChangedEventArgs(a));
            }
        }
        q(a, b, c) {
        }
    }
    TimeAxisLabelFormat.$t = /*@__PURE__*/ markType(TimeAxisLabelFormat, 'TimeAxisLabelFormat', Base.$, [INotifyPropertyChanged_$type]);
    return TimeAxisLabelFormat;
})();
