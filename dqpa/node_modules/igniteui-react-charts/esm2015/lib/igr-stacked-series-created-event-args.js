import { Visibility_$type } from "igniteui-react-core";
import { IgrStyle } from "igniteui-react-core";
import { MarkerType_$type } from "./MarkerType";
import { PenLineCap_$type } from "igniteui-react-core";
import { brushToString, stringToBrush, ensureEnum, toDoubleCollection, fromDoubleCollection } from "igniteui-react-core";
/**
 * Provides data for IgxDataChartComponent stacked series.
*/
export class IgrStackedSeriesCreatedEventArgs {
    get nativeElement() {
        return this._implementation.nativeElement;
    }
    /**
     * @hidden
     */
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    constructor() {
        this.mounted = false;
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    /**
     * Gets or sets the series brush.
    */
    get brush() {
        return brushToString(this.i.brush);
    }
    set brush(v) {
        this.i.brush = stringToBrush(v);
    }
    /**
     * Gets or sets the series legend item template.
    */
    get legendItemTemplate() {
        return this.i.legendItemTemplate;
    }
    set legendItemTemplate(v) {
        this.i.legendItemTemplate = v;
    }
    /**
     * Gets or sets the series legend item badge templae.
    */
    get legendItemBadgeTemplate() {
        return this.i.legendItemBadgeTemplate;
    }
    set legendItemBadgeTemplate(v) {
        this.i.legendItemBadgeTemplate = v;
    }
    /**
     * Gets or sets the visibility of the series legend.
    */
    get legendItemVisibility() {
        return this.i.legendItemVisibility;
    }
    set legendItemVisibility(v) {
        this.i.legendItemVisibility = ensureEnum(Visibility_$type, v);
    }
    /**
     * Gets or sets the series outline brush.
    */
    get outline() {
        return brushToString(this.i.outline);
    }
    set outline(v) {
        this.i.outline = stringToBrush(v);
    }
    /**
     * Gets or sets the series stroke dash array.
    */
    get dashArray() {
        return fromDoubleCollection(this.i.dashArray);
    }
    set dashArray(v) {
        this.i.dashArray = toDoubleCollection(v);
    }
    /**
     * Gets the index of the series.
    */
    get index() {
        return this.i.index;
    }
    /**
     * Gets or sets the series outline thickness.
    */
    get thickness() {
        return this.i.thickness;
    }
    set thickness(v) {
        this.i.thickness = +v;
    }
    /**
     * Gets or sets the series title.
    */
    get title() {
        return this.i.title;
    }
    set title(v) {
        this.i.title = v;
    }
    /**
     * Gets or sets the animation transition duration for the series.
    */
    get transitionDuration() {
        return this.i.transitionDuration;
    }
    set transitionDuration(v) {
        this.i.transitionDuration = +v;
    }
    /**
     * Gets or sets the animation easing function for the series.
    */
    get transitionEasingFunction() {
        return this.i.transitionEasingFunction;
    }
    set transitionEasingFunction(v) {
        this.i.transitionEasingFunction = v;
    }
    /**
     * Gets or sets the series marker brush.
    */
    get markerBrush() {
        return brushToString(this.i.markerBrush);
    }
    set markerBrush(v) {
        this.i.markerBrush = stringToBrush(v);
    }
    /**
     * Gets or sets the series marker outline.
    */
    get markerOutline() {
        return brushToString(this.i.markerOutline);
    }
    set markerOutline(v) {
        this.i.markerOutline = stringToBrush(v);
    }
    /**
     * Gets or sets the series marker style.
    */
    get markerStyle() {
        const r = this.i.markerStyle;
        if (r == null) {
            return null;
        }
        if (!r.externalObject) {
            let e = new IgrStyle();
            if (r.$type) {
                e._implementation = r;
            }
            else {
                if (e.i.setNativeElement) {
                    e.i.setNativeElement(r);
                }
            }
            r.externalObject = e;
        }
        return r.externalObject;
    }
    set markerStyle(v) {
        v == null ? this.i.markerStyle = null : this.i.markerStyle = v.i;
    }
    /**
     * Gets or sets the series marker template.
    */
    get markerTemplate() {
        return this.i.markerTemplate;
    }
    set markerTemplate(v) {
        this.i.markerTemplate = v;
    }
    /**
     * Gets or sets the series marker type.
    */
    get markerType() {
        return this.i.markerType;
    }
    set markerType(v) {
        this.i.markerType = ensureEnum(MarkerType_$type, v);
    }
    /**
     * Gets or sets the series marker thickness.
    */
    get markerThickness() {
        return this.i.markerThickness;
    }
    set markerThickness(v) {
        this.i.markerThickness = +v;
    }
    get lineCap() {
        return this.i.lineCap;
    }
    set lineCap(v) {
        this.i.lineCap = ensureEnum(PenLineCap_$type, v);
    }
}
