/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
import { markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { ChartSelection } from "./ChartSelection";
import { AnchoredCategorySeriesView } from "./AnchoredCategorySeriesView";
import { Defaults } from "./Defaults";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
export let PointSeries = /*@__PURE__*/ (() => {
    class PointSeries extends HorizontalAnchoredCategorySeries {
        bj() {
            return new PointSeries();
        }
        get_ei() {
            return true;
        }
        cs() {
            return new PointSeriesView(this);
        }
        q1(a) {
            super.q1(a);
            this.acw = a;
        }
        constructor() {
            super();
            this.ab = PointSeries.$;
        }
        jl() {
            return 0.7;
        }
        w1() {
            if (this.w0 == 0) {
                return 2;
            }
            return super.w1();
        }
        gw(a, b) {
            let c = this.wc(this.wh(a), true, false);
            if (this.xh(a, b)) {
                return true;
            }
            return false;
        }
        q9(a, b, c, d) {
            super.q9(a, b, c, d);
        }
        p4(a, b, c) {
            this.aac(a, b, c, this.yt, 0);
        }
        ak(a, b) {
            let c = new List$1(ChartSelection.$, 0);
            this.p4(a, c, b);
            return c.toArray();
        }
        get useHighMarkerFidelity() {
            return this.zq;
        }
    }
    PointSeries.$t = /*@__PURE__*/ markType(PointSeries, 'PointSeries', HorizontalAnchoredCategorySeries.$);
    return PointSeries;
})();
/**
 * @hidden
 */
export let PointSeriesView = /*@__PURE__*/ (() => {
    class PointSeriesView extends AnchoredCategorySeriesView {
        constructor(a) {
            super(a);
            this.df = null;
            this.df = a;
        }
        au() {
            super.au();
            if (!this.q) {
                this.b4.xa = Defaults.e;
            }
        }
        af() {
            let a = new Color();
            a.colorString = "rgba(95,95,95,0.5)";
            this.e.v1 = a;
            this.e.jm = 3;
            this.e.jn = 2;
            this.e.jo = 2;
            this.e.hc = false;
        }
    }
    PointSeriesView.$t = /*@__PURE__*/ markType(PointSeriesView, 'PointSeriesView', AnchoredCategorySeriesView.$);
    return PointSeriesView;
})();
