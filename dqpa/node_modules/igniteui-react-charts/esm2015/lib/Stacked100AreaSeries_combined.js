/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StackedAreaSeries } from "./StackedAreaSeries";
import { IStacked100Series_$type } from "./IStacked100Series";
import { markType } from "igniteui-react-core";
import { Stacked100DataPreparer } from "./Stacked100DataPreparer";
import { StackedAreaSeriesView } from "./StackedAreaSeriesView";
import { Defaults } from "./Defaults";
/**
 * @hidden
 */
export let Stacked100AreaSeries = /*@__PURE__*/ (() => {
    class Stacked100AreaSeries extends StackedAreaSeries {
        get_aa4() {
            return true;
        }
        constructor() {
            super();
            this.ab = Stacked100AreaSeries.$;
        }
        ac() {
            super.ac();
            this.rr(false);
        }
        cs() {
            return new Stacked100AreaSeriesView(this);
        }
        q1(a) {
            super.q1(a);
            this.ab3 = a;
        }
        abl() {
            super.abl();
            Stacked100DataPreparer.a(this);
        }
        aba(a, b) {
            let c = 0;
            for (let d = 0; d < this.series.count; d++) {
                c += this.series._inner[d].ak.item(b);
            }
            return (this.series._inner[a].ak.item(b) / c) * 100;
        }
        get useHighMarkerFidelity() {
            return this.zq;
        }
    }
    Stacked100AreaSeries.$t = /*@__PURE__*/ markType(Stacked100AreaSeries, 'Stacked100AreaSeries', StackedAreaSeries.$, [IStacked100Series_$type]);
    return Stacked100AreaSeries;
})();
/**
 * @hidden
 */
export let Stacked100AreaSeriesView = /*@__PURE__*/ (() => {
    class Stacked100AreaSeriesView extends StackedAreaSeriesView {
        constructor(a) {
            super(a);
        }
        au() {
            super.au();
            if (!this.q) {
                this.c5.xa = Defaults.e;
            }
        }
    }
    Stacked100AreaSeriesView.$t = /*@__PURE__*/ markType(Stacked100AreaSeriesView, 'Stacked100AreaSeriesView', StackedAreaSeriesView.$);
    return Stacked100AreaSeriesView;
})();
