/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let AxisRangeChangedEventArgs = /*@__PURE__*/ (() => {
    class AxisRangeChangedEventArgs extends EventArgs {
        constructor(a, ..._rest) {
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        let e = _rest[2];
                        let f = _rest[3];
                        super();
                        this._oldMinimumValue = 0;
                        this._minimumValue = 0;
                        this._oldMaximumValue = 0;
                        this._maximumValue = 0;
                        this.oldMinimumValue = c;
                        this.minimumValue = d;
                        this.oldMaximumValue = e;
                        this.maximumValue = f;
                    }
                    break;
                case 1:
                    {
                        super();
                        this._oldMinimumValue = 0;
                        this._minimumValue = 0;
                        this._oldMaximumValue = 0;
                        this._maximumValue = 0;
                    }
                    break;
            }
        }
        get oldMinimumValue() {
            return this._oldMinimumValue;
        }
        set oldMinimumValue(a) {
            this._oldMinimumValue = a;
        }
        get minimumValue() {
            return this._minimumValue;
        }
        set minimumValue(a) {
            this._minimumValue = a;
        }
        get oldMaximumValue() {
            return this._oldMaximumValue;
        }
        set oldMaximumValue(a) {
            this._oldMaximumValue = a;
        }
        get maximumValue() {
            return this._maximumValue;
        }
        set maximumValue(a) {
            this._maximumValue = a;
        }
    }
    AxisRangeChangedEventArgs.$t = /*@__PURE__*/ markType(AxisRangeChangedEventArgs, 'AxisRangeChangedEventArgs', EventArgs.$);
    return AxisRangeChangedEventArgs;
})();
