/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { AnnotationLayer } from "./AnnotationLayer";
import { DependencyProperty } from "igniteui-react-core";
import { Base, runOn, delegateCombine, String_$type, Array_$type, enumGetBox, EnumUtil, typeCast, fromEnum, delegateRemove, Point_$type, Date_$type, markType, markDep } from "igniteui-react-core";
import { Series } from "./Series";
import { CalloutPlacementPositionsCollection } from "./CalloutPlacementPositionsCollection";
import { HighlightedValueLabelMode_$type } from "igniteui-react-core";
import { AutoCalloutVisibilityMode_$type } from "./AutoCalloutVisibilityMode";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { CalloutCollisionMode_$type } from "igniteui-react-core";
import { FontUtil } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { BindingFormatter } from "igniteui-react-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { Size } from "igniteui-react-core";
import { HashSet$1 } from "igniteui-react-core";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { List$1 } from "igniteui-react-core";
import { LinkedList$1 } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
import { LinkedListNode$1 } from "igniteui-react-core";
import { LabelCollisionManager } from "igniteui-react-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { CalloutAnnotation } from "./CalloutAnnotation";
import { IFastItemsSource_$type } from "igniteui-react-core";
import { DeviceUtils } from "igniteui-react-core";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { BrushUtilCore } from "igniteui-react-core";
import { LabelCollisionInfo } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { CalloutRenderStyleUpdatingEventArgs } from "./CalloutRenderStyleUpdatingEventArgs";
import { IHasCategoryAxis_$type } from "./IHasCategoryAxis";
import { QuadTreeBoundingBox } from "igniteui-react-core";
import { ScalerParams } from "./ScalerParams";
import { ViewportUtils } from "./ViewportUtils";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { CalloutKey } from "./CalloutKey";
import { DataContext } from "igniteui-react-core";
import { HashPool$2 } from "igniteui-react-core";
import { AxisRange } from "./AxisRange";
import { PropertyMetadata } from "igniteui-react-core";
import { isNaN_, isInfinity } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { FastItemObjectColumn } from "igniteui-react-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { TextBlock } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { Line } from "igniteui-react-core";
import { CalloutViewHelper } from "./CalloutViewHelper";
import { Rectangle } from "igniteui-react-core";
import { TranslateTransform } from "igniteui-react-core";
/**
 * @hidden
 */
export let CalloutLayer = /*@__PURE__*/ (() => {
    class CalloutLayer extends AnnotationLayer {
        bj() {
            return new CalloutLayer();
        }
        get_eo() {
            return true;
        }
        constructor() {
            super();
            this.aaw = true;
            this.afv = new Size(1, 0, 0);
            this.calloutStyleUpdating = null;
            this.calloutRenderStyleUpdating = null;
            this.aak = null;
            this.aal = null;
            this.aam = null;
            this.aaj = null;
            this.aai = null;
            this.abi = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            this.abl = new List$1(CalloutAnnotationWrapper.$, 0);
            this.abm = new List$1(CalloutAnnotationWrapper.$, 0);
            this.z9 = null;
            this.zx = null;
            this.aag = null;
            this.abj = new LinkedList$1(CalloutAnnotationWrapper.$);
            this.abg = new Dictionary$2(CalloutAnnotationWrapper.$, LinkedListNode$1.$.specialize(CalloutAnnotationWrapper.$), 0);
            this.aas = null;
            this.aft = new Rect(0, 0, 0, 1, 1);
            this.aa0 = false;
            this.ab1 = 0;
            this.afs = Rect.empty;
            this.aay = false;
            this.aaz = false;
            this.calloutContentUpdating = null;
            this.calloutLabelUpdating = null;
            this.calloutSeriesSelecting = null;
            this.abk = new List$1(SeriesPointOfInterest.$, 0);
            this.aa2 = false;
            this.aa3 = false;
            this.abo = 0;
            this.aa1 = false;
            this.z0 = null;
            this.aax = true;
            this.z1 = 1;
            FastItemObjectColumn.m();
            this.zx = null;
            this.z9 = new CalloutPlacementPositionsCollection();
            let a = this.z9;
            a.collectionChanged = delegateCombine(a.collectionChanged, runOn(this, this.adw));
            this.xk = true;
            let b = new CalloutLayerFrame();
            let c = new CalloutLayerFrame();
            let d = new CalloutLayerFrame();
            let e = this.kd / 1000;
            this.xc = b;
            this.xb = c;
            this.xd = d;
            this.ab = CalloutLayer.$;
        }
        adw(a, b) {
            this.ad5();
        }
        ad5() {
            this.zx = this.zz(this.aaa);
            this.ad2();
        }
        adx(a, b) {
            this.abm.clear();
            this.rr(false);
        }
        pb(a, b, c, d) {
            super.pb(a, b, c, d);
            let e = this.abh();
            switch (a) {
                case 3:
                    this.aeb(b, e);
                    break;
                case 1:
                    for (let f = b; f < b + c; f++) {
                        let g = new CalloutAnnotation();
                        let h = new CalloutAnnotationWrapper();
                        h.b = g;
                        h.b.series = this.aaf;
                        this.abm.insert(f, h);
                        this.aeb(f, e);
                    }
                    break;
                case 0:
                    this.abm.v(b, c);
                    break;
                case 2:
                    for (let i = b; i < b + c; i++) {
                        this.aeb(i, e);
                    }
                    break;
                case 4:
                    this.abm.clear();
                    for (let j = 0; j < this.dn.count; j++) {
                        let k = new CalloutAnnotation();
                        let l = new CalloutAnnotationWrapper();
                        l.b = k;
                        l.b.series = this.aaf;
                        this.abm.add(l);
                        this.aeb(j, e);
                    }
                    break;
            }
            this.rr(true);
        }
        gf(a) {
            return false;
        }
        afx() {
            let a = new Thickness(0, DeviceUtils.g(3));
            if (isNaN_(this.afw.left) || isNaN_(this.afw.top) || isNaN_(this.afw.right) || isNaN_(this.afw.bottom)) {
                a = new Thickness(0, DeviceUtils.g(3));
            }
            else {
                a = this.afw;
            }
            return a;
        }
        wt() {
            let a = 0;
            let b = 0;
            if (!this.aa4) {
                return new Size(1, b, a);
            }
            if (!this.aaw) {
                return this.afv;
            }
            let c = "Ig";
            let d = this.afx();
            let e = this.z8.cr(c, d);
            if (!isNaN_(e.height)) {
                a = Math.max(e.height, a);
            }
            if (!isNaN_(this.aby)) {
                a += this.aby;
            }
            if (!isNaN_(this.aby)) {
                b += this.aby;
            }
            if (!isNaN_(this.abs)) {
                a = Math.max(a, this.abs);
            }
            if (!isNaN_(this.abq)) {
                a = Math.min(a, this.abq);
            }
            if (!isNaN_(this.abt)) {
                b = Math.max(b, this.abt);
            }
            if (!isNaN_(this.abr)) {
                b = Math.min(b, this.abr);
            }
            this.aaw = false;
            this.afv = new Size(1, b, a);
            return this.afv;
        }
        abh() {
            let a = new Dictionary$2(String_$type, Series.$, 0);
            if (this.db != null) {
                for (let b = 0; b < this.db.series.count; b++) {
                    let c = this.db.series._inner[b];
                    if (c.name != null && !a.containsKey(c.name)) {
                        a.addItem(c.name, c);
                    }
                }
            }
            return a;
        }
        aeb(a, b) {
            if (this.aar == null || this.aap == null) {
                return;
            }
            let c = a;
            if (this.aaq != null) {
                c = this.aaq.item(a);
            }
            let d = this.aar.item(a);
            let e = this.aap.item(a);
            let f = this.abm._inner[a];
            if (this.aao != null) {
                if (f.b.ab != this.aao.item(a)) {
                    f.b.key = this.aao.item(a);
                }
            }
            if (this.abg.containsKey(f)) {
                f.b = this.abg.item(f).c.b;
            }
            f.b.xValue = c;
            f.b.yValue = d;
            if (this.calloutLabelUpdating != null) {
                let g = ((() => {
                    let $ret = new CalloutLabelUpdatingEventArgs();
                    $ret.d = c;
                    $ret.e = d;
                    $ret.item = this.dn.item(a);
                    return $ret;
                })());
                this.calloutLabelUpdating(this, g);
                if (g.c != null && !Base.equalsStatic(g.c, f.b.ao)) {
                    let h = g.c;
                    if (this.z0 != null) {
                        f.b.text = this.z0.i(h);
                    }
                    else {
                        f.b.text = h != null ? h.toString() : "";
                    }
                }
            }
            else {
                if (this.z0 != null) {
                    f.b.text = this.z0.i(e);
                }
                else {
                    f.b.text = e != null ? e.toString() : "";
                }
            }
            if (this.aan != null) {
                f.b.content = this.aan.item(a);
            }
            else {
                f.b.content = this.dn.item(a);
            }
            if (this.calloutSeriesSelecting != null) {
                let i = ((() => {
                    let $ret = new CalloutSeriesSelectingEventArgs();
                    $ret.c = c;
                    $ret.d = d;
                    $ret.item = this.dn.item(a);
                    return $ret;
                })());
                this.calloutSeriesSelecting(this, i);
                if (i.a != null) {
                    f.b.series = i.a;
                }
                else if (i.e != null) {
                    if (b.containsKey(i.e)) {
                        f.b.series = b.item(i.e);
                    }
                }
            }
            this.aec(f);
        }
        aec(a) {
            let b = new Thickness(0, DeviceUtils.g(3));
            if (isNaN_(this.afw.left) || isNaN_(this.afw.top) || isNaN_(this.afw.right) || isNaN_(this.afw.bottom)) {
                b = new Thickness(0, DeviceUtils.g(3));
            }
            else {
                b = this.afw;
            }
            let c = DeviceUtils.g(3);
            if (isNaN_(this.abp)) {
                c = DeviceUtils.g(3);
            }
            else {
                c = this.abp;
            }
            let d = this.afm != null && !this.abc ? this.afm : this.z8.cl(a.b.l, a.b.itemColor);
            let e = this.afr != null ? this.afr : null;
            let f = this.afp != null ? this.afp : this.z8.co();
            let g = this.afn != null ? this.afn : this.z8.cm();
            let h = this.afq != null && !this.abd ? this.afq : this.z8.cp(a.b.l, a.b.itemColor);
            let i = this.afo != null ? this.afo : this.z8.cn(a.b.l, a.b.itemColor);
            let j = isNaN_(this.abz) ? 0 : this.abz;
            if (e == null && (this.aba || this.afp != null || this.afn != null)) {
                let k = d;
                if (k == null || BrushUtilCore.a(d)) {
                    k = this.db != null ? this.db.vk : null;
                    if (a.c != null && (a.c.b == 8 || a.c.b == 9)) {
                        k = a.b.itemColor;
                    }
                    if (k == null || BrushUtilCore.a(d)) {
                        k = BrushUtil.h(255, 255, 255, 255);
                    }
                }
                e = BrushUtil.j(k, g, f);
            }
            if (e == null) {
                e = this.z8.co();
            }
            if (this.aa8 && this.calloutStyleUpdating != null) {
                let l = new CalloutStyleUpdatingEventArgs();
                l.item = a.b.aa;
                l.xValue = a.b.ac;
                l.yValue = a.b.ad;
                l.series = a.b.l;
                l.background = d;
                l.textColor = e;
                l.outline = h;
                l.leaderBrush = i;
                l.strokeThickness = j;
                this.calloutStyleUpdating(this, l);
                d = l.background;
                e = l.textColor;
                h = l.outline;
                i = l.leaderBrush;
                j = l.strokeThickness;
            }
            a.b.backgroundPadding = b;
            a.b.backgroundCornerRadius = c;
            a.b.background = d;
            a.b.textColor = e;
            a.b.outline = h;
            a.b.leaderBrush = i;
            a.b.strokeThickness = j;
        }
        kq(a, b) {
            let c = this.nd(b);
            if (c == CalloutLayer.$$p[31]) {
                return this.kr(a, b, this.adb);
            }
            if (c == CalloutLayer.$$p[42]) {
                return this.kr(a, b, this.adr);
            }
            if (c == CalloutLayer.$$p[43]) {
                return this.kr(a, b, this.adu);
            }
            if (c == CalloutLayer.$$p[28]) {
                return this.kr(a, b, this.ac5);
            }
            if (c == CalloutLayer.$$p[22]) {
                return this.kr(a, b, this.acx);
            }
            return super.kq(a, b);
        }
        md(a) {
            let b = this.nd(a);
            if (b == CalloutLayer.$$p[31]) {
                return this.adb;
            }
            if (b == CalloutLayer.$$p[42]) {
                return this.adr;
            }
            if (b == CalloutLayer.$$p[43]) {
                return this.adu;
            }
            if (b == CalloutLayer.$$p[28]) {
                return this.ac5;
            }
            if (b == CalloutLayer.$$p[22]) {
                return this.acx;
            }
            return super.md(a);
        }
        get aap() {
            return this.aak;
        }
        set aap(a) {
            if (this.aak != a) {
                let b = this.aak;
                this.aak = a;
                this.raisePropertyChanged("LabelColumn", b, this.aak);
            }
        }
        get aaq() {
            return this.aal;
        }
        set aaq(a) {
            if (this.aal != a) {
                let b = this.aal;
                this.aal = a;
                this.raisePropertyChanged("XColumn", b, this.aal);
            }
        }
        get aar() {
            return this.aam;
        }
        set aar(a) {
            if (this.aam != a) {
                let b = this.aam;
                this.aam = a;
                this.raisePropertyChanged("YColumn", b, this.aam);
            }
        }
        get aao() {
            return this.aaj;
        }
        set aao(a) {
            if (this.aaj != a) {
                let b = this.aaj;
                this.aaj = a;
                this.raisePropertyChanged("KeyColumn", b, this.aaj);
            }
        }
        get aan() {
            return this.aai;
        }
        set aan(a) {
            if (this.aai != a) {
                let b = this.aai;
                this.aai = a;
                this.raisePropertyChanged("ContentColumn", b, this.aai);
            }
        }
        adz(a, b) {
            if (b.propertyName == CalloutAnnotation.$$p[15] || b.propertyName == CalloutAnnotation.$$p[16]) {
                let c = a.k;
                if (!this.abi.contains(c)) {
                    this.abi.add_1(c);
                    this.abl.add(c);
                    this.rr(false);
                }
            }
        }
        cs() {
            return new CalloutLayerView(this);
        }
        q1(a) {
            super.q1(a);
            this.z8 = a;
        }
        get aaa() {
            return this.z9;
        }
        set aaa(a) {
            let b = this.aaa;
            if (a != b) {
                this.z9 = a;
                this.raisePropertyChanged("AllowedPositions", b, this.aaa);
            }
        }
        gu(a) {
            if (this.aaf == null) {
                return true;
            }
            if (this.aaf == a) {
                return true;
            }
            return false;
        }
        get z3() {
            return EnumUtil.getEnumValue(AutoCalloutVisibilityMode_$type, this.c(CalloutLayer.aey));
        }
        set z3(a) {
            this.h(CalloutLayer.aey, enumGetBox(AutoCalloutVisibilityMode_$type, a));
        }
        get z2() {
            return this.z1;
        }
        set z2(a) {
            this.z1 = a;
        }
        get afw() {
            return new Thickness(1, this.abv, this.abx, this.abw, this.abu);
        }
        get aah() {
            if (this.aag == null) {
                this.aag = FontUtil.toFontInfo(this.jz, this.adh);
            }
            return this.aag;
        }
        yp(a, b) {
            if (this.aaf == null || this.aaf == a) {
                if (!this.a1.c) {
                    this.rr(b);
                }
            }
        }
        yr(a, b) {
            super.yr(a, b);
            let c = a;
            c.q.clear();
            c.r.clear();
            c.n.clear();
            c.f.clear();
            c.i.clear();
            c.h.clear();
            c.k.clear();
            c.m.clear();
            c.l.clear();
            c.j.clear();
            c.g.clear();
            c.o.clear();
            c.p.clear();
            c.u.clear();
            c.v.clear();
            c.s.clear();
            c.t.clear();
            let d = this.abn();
            let e = new List$1(CalloutAnnotationWrapper.$, 0);
            let f = Number.POSITIVE_INFINITY;
            let g = true;
            if (this.aa5) {
                if (this.xi(this.aaf)) {
                    if (typeCast(IHasCategoryAxis_$type, this.aaf) !== null) {
                        let h = this.aaf.getCategoryWidth();
                        if (!isNaN_(h) && !isInfinity(h) && h > 0) {
                            f = Math.min(f, h);
                        }
                    }
                    this.ad7(this.aaf, c, e);
                }
                else {
                    for (let i of fromEnum(this.db.series)) {
                        if (this.xi(i)) {
                            if (typeCast(IHasCategoryAxis_$type, i) !== null) {
                                let j = i.getCategoryWidth();
                                if (!isNaN_(j) && !isInfinity(j) && j > 0) {
                                    f = Math.min(f, j);
                                }
                            }
                            if (!i.es) {
                                if (!i.isVertical) {
                                    g = false;
                                }
                            }
                            let k = false;
                            if (i.eg && this.aae == 0 || this.aae == 3 || this.aae == 2) {
                                if (this.aae == 0 || this.aae == 2) {
                                    k = true;
                                }
                                i.p1((l) => {
                                    this.ad7(l, c, e);
                                    return true;
                                });
                            }
                            if (!k) {
                                this.ad7(i, c, e);
                            }
                        }
                    }
                }
            }
            if (this.aa5 && this.z2 == 2) {
                let l = 0;
                let m = 0;
                let n = 1.7976931348623157E+308;
                let o = 1.7976931348623157E+308;
                let p = -1.7976931348623157E+308;
                let q = -1.7976931348623157E+308;
                if (e.count > 0) {
                    if (e._inner[0].c != null) {
                        l = e._inner[0].e;
                        m = e._inner[0].f;
                    }
                    for (let r = 0; r < e.count; r++) {
                        let s = e._inner[r];
                        if (s.c != null) {
                            let t = s.e;
                            let u = s.f;
                            if (t != l) {
                                n = Math.min(n, Math.abs(t - l));
                            }
                            if (u != m) {
                                o = Math.min(o, Math.abs(u - m));
                            }
                            p = Math.max(s.c.p + s.c.p, p);
                            q = Math.max(s.c.o + s.c.o, q);
                        }
                    }
                    if (g) {
                        if (!isNaN_(f) && !isInfinity(f)) {
                            if (q > f) {
                                e.clear();
                            }
                        }
                        else {
                            if (q > o) {
                                e.clear();
                            }
                        }
                    }
                    else {
                        if (!isNaN_(f) && !isInfinity(f)) {
                            if (p > f) {
                                e.clear();
                            }
                        }
                        else {
                            if (p > n) {
                                e.clear();
                            }
                        }
                    }
                }
            }
            this.ad6(c, d, e);
        }
        sr(a, b) {
            super.sr(a, b);
            let c = b.width - this.aft.width;
            let d = b.height - this.aft.height;
            let e = 0;
            if (Math.abs(c) > Math.abs(d)) {
                e = c;
                this.abo = c * this.ws.width;
            }
            else {
                e = d;
                this.abo = d * this.ws.height;
            }
            if (e > 0 && this.abo > 5) {
                this.aa3 = true;
            }
            if (e < 0 && this.abo > 5) {
                this.aa2 = true;
            }
        }
        sq(a, b) {
            super.sq(a, b);
            if (!a.equals1(b)) {
                this.aa1 = true;
            }
        }
        get afu() {
            return this.afs;
        }
        set afu(a) {
            this.afs = a;
        }
        ad6(a, b, c) {
            if (this.db != null) {
                this.aft = this.db.v4;
            }
            if (this.ws.isEmpty) {
                return;
            }
            this.afu = new Rect(0, this.ws.left, this.ws.top, this.ws.width, this.ws.height);
            if (this.aas != null && this.acu != null && this.acu != this.aas.bd) {
                this.ad1();
            }
            if (this.aas != null && this.aas.j != this.aau()) {
                this.ad1();
            }
            if (this.aas == null) {
                let d = this.aat();
                if (d != null) {
                    this.aas = d;
                    let e = this.aas;
                    e.labelsMoved = delegateCombine(e.labelsMoved, runOn(this, this.ady));
                }
                else {
                    let f = this.wj(this.cv);
                    let g = new Array(2);
                    g[0] = 0;
                    g[1] = 3;
                    if (this.aaf != null) {
                        if (this.aaf.isVertical) {
                            g = new Array(2);
                            g[0] = 2;
                            g[1] = 1;
                        }
                    }
                    else {
                        let h = false;
                        if (this.db != null && this.db.series.count > 0) {
                            h = true;
                            for (let i of fromEnum(this.db.series)) {
                                if (!i.es) {
                                    if (!i.isVertical) {
                                        h = false;
                                    }
                                }
                            }
                        }
                        if (h) {
                            g = new Array(2);
                            g[0] = 2;
                            g[1] = 1;
                        }
                    }
                    if (this.z5 == 4 || this.z5 == 6) {
                        g = new Array(4);
                        g[0] = 10;
                        g[1] = 11;
                        g[2] = 8;
                        g[3] = 9;
                    }
                    if (this.z5 == 5) {
                        g = new Array(4);
                        g[0] = 9;
                        g[1] = 10;
                        g[2] = 11;
                        g[3] = 8;
                    }
                    if (this.z5 == 7) {
                        g = new Array(4);
                        g = new Array(4);
                        g[0] = 8;
                        g[1] = 10;
                        g[2] = 11;
                        g[3] = 9;
                    }
                    this.aas = new LabelCollisionManager(this.ws.right, this.ws.bottom, this.ws, this.z8.j(), this.aby, this.aau(), g, this.ab5(), this.ab4(), this.aa6, this.zx);
                    this.aas.v = this.aa9;
                    if (this.acu != null) {
                        this.aas.bd = this.acu;
                        this.aas.bb = this;
                    }
                    let j = this.aas;
                    j.labelsMoved = delegateCombine(j.labelsMoved, runOn(this, this.ady));
                }
            }
            if (this.aa2) {
                this.aa2 = false;
                if (this.aas.a9 > 2) {
                    this.aa0 = true;
                }
            }
            if (this.aa3) {
                this.aa3 = false;
                if (this.abo > 5) {
                    this.aa0 = true;
                }
            }
            if (this.aa1) {
                this.aa1 = false;
                this.aas.bs(this.ws.right, this.ws.bottom, this.ws);
                this.aa0 = true;
            }
            let k = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            let l = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            let m = new List$1(CalloutAnnotationWrapper.$, 0);
            let n = new List$1(CalloutAnnotationWrapper.$, 0);
            let o = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            for (let p = 0; p < b.count; p++) {
                o.add_1(b._inner[p]);
            }
            for (let q = 0; q < c.count; q++) {
                o.add_1(c._inner[q]);
            }
            let r = this.abj.c;
            while (r != null) {
                let s = r.a;
                if (!o.contains(r.c)) {
                    n.add(r.c);
                    l.add_1(r.c);
                    let t = r.c.b;
                    t.propertyChanged = delegateRemove(t.propertyChanged, runOn(this, this.adz));
                    this.abj.h(r);
                    this.abg.removeItem(r.c);
                    this.aas.br(r.c.c);
                }
                r = s;
            }
            for (let u = 0; u < b.count; u++) {
                if (!this.abg.containsKey(b._inner[u])) {
                    this.abj.f(b._inner[u]);
                    let v = b._inner[u].b;
                    v.propertyChanged = delegateCombine(v.propertyChanged, runOn(this, this.adz));
                    this.abg.addItem(b._inner[u], this.abj.d);
                    m.add(b._inner[u]);
                    k.add_1(b._inner[u]);
                    this.aa0 = true;
                }
            }
            for (let w = 0; w < c.count; w++) {
                if (!this.abg.containsKey(c._inner[w])) {
                    this.abj.f(c._inner[w]);
                    this.abg.addItem(c._inner[w], this.abj.d);
                    let x = c._inner[w].b;
                    x.propertyChanged = delegateCombine(x.propertyChanged, runOn(this, this.adz));
                    m.add(c._inner[w]);
                    k.add_1(c._inner[w]);
                    this.aa0 = true;
                }
            }
            if (this.aay == true) {
                this.aay = false;
                this.aa0 = true;
            }
            let y = false;
            if (this.abl.count > 0) {
                y = true;
                this.abl.clear();
                this.abi.clear();
            }
            r = this.abj.c;
            while (r != null) {
                let z = this.aav(r.c);
                if (z == null) {
                    return;
                }
                if (!Base.equalsStatic(z, r.c.c.e)) {
                    let aa = false;
                    if (r.c.c.e == null) {
                        aa = true;
                    }
                    let ab = r.c.c;
                    ab.s = z.d;
                    ab.t = z.e;
                    if (!isNaN_(ab.s) && !isNaN_(ab.t)) {
                        ab.r = z.g;
                        ab.q = z.f;
                        if (ab.c == null) {
                            this.aas.ad(ab, false);
                        }
                        if (aa) {
                            this.aas.be(ab);
                        }
                        else {
                            this.aas.bo(ab);
                        }
                    }
                }
                r = r.a;
            }
            let ac = this.aas.ba();
            let ad = this.aas.af();
            if (!this.aa0 && y && (ac != 0 || ad)) {
                {
                    this.aa0 = true;
                }
            }
            if (ad) {
                if (this.aas.x()) {
                    this.aa0 = true;
                }
            }
            if (this.aa0 && (ac != 0 || ad)) {
                this.aa0 = false;
                this.ab1 = 0x7FFFFFFF;
                if (this.acu != null) {
                    let ae = true;
                    for (let af = 0; af < this.db.series.count; af++) {
                        let ag = this.db.series._inner[af];
                        if (ag.es && typeCast(CalloutLayer.$, ag) !== null) {
                            let ah = ag;
                            if (ah.acu == this.acu) {
                                if (!ah.afu.equals1(this.aas.b0)) {
                                    ae = false;
                                    break;
                                }
                            }
                        }
                    }
                    if (ae) {
                        this.aas.bv();
                    }
                    else {
                        this.aas.bf();
                        this.aas.bg();
                    }
                }
                else {
                    this.aas.bv();
                }
            }
            else {
                this.aas.bg();
            }
            let ai = this.abj.c;
            let aj;
            let ak;
            let al;
            let am;
            let an;
            let ao;
            let ap;
            let aq;
            let ar;
            let as;
            let at;
            let au;
            let av;
            let aw;
            let ax;
            let ay;
            let az = this.aa7;
            let a0 = this.aa9;
            let a1 = this.cv.bt();
            while (ai != null) {
                let a2 = ai.c;
                let a3 = a2.b;
                aj = a3.bm;
                ak = a3.bp;
                al = a3.bo;
                am = a3.backgroundPadding.left;
                an = a3.backgroundPadding.top;
                ao = a3.backgroundPadding.right;
                ap = a3.backgroundPadding.bottom;
                ar = a3.backgroundCornerRadius;
                aq = a3.y;
                as = a3.bq;
                at = a3.ao;
                au = a3.aa;
                let a4 = a2.c;
                av = a4.s - (a4.k - a4.p);
                aw = a4.t - (a4.l - a4.o);
                ax = a4.k - a4.p;
                ay = a4.l - a4.o;
                let a5 = false;
                if (a0) {
                    if (a4.c != null && this.aas.ab(a4.c)) {
                        a5 = true;
                    }
                }
                if (a2.c.h && !a5) {
                    av = NaN;
                    aw = NaN;
                }
                if (!a2.c.h && (a2.c.b == 8 || a2.c.b == 9)) {
                    al = a1;
                    av = a4.k;
                    aw = a4.l;
                }
                if (a5) {
                    at = this.adj(a2, at);
                    let a6 = this.aas.as(a2.c.c);
                    if (a6 > 0) {
                        ax += a6;
                        av -= a6;
                    }
                }
                if (az) {
                    let a7 = new CalloutRenderStyleUpdatingEventArgs();
                    a7.background = aj;
                    a7.outline = ak;
                    a7.leaderBrush = al;
                    a7.strokeThickness = aq;
                    a7.textColor = as;
                    a7.item = au;
                    a7.series = a3.l;
                    a7.actualPosition = a4.b;
                    a7.xValue = a3.ac;
                    a7.yValue = a3.ad;
                    if (this.calloutRenderStyleUpdating != null) {
                        this.calloutRenderStyleUpdating(this, a7);
                        aj = a7.background;
                        ak = a7.outline;
                        al = a7.leaderBrush;
                        aq = a7.strokeThickness;
                        as = a7.textColor;
                    }
                }
                a.n.add1(a2);
                a.f.add(aj);
                a.i.add(ak);
                a.h.add(al);
                a.k.add(am);
                a.m.add(an);
                a.l.add(ao);
                a.j.add(ap);
                a.g.add(ar);
                a.o.add(aq);
                a.p.add(as);
                a.q.add1(at);
                a.r.add1(au);
                a.u.add(av);
                a.v.add(aw);
                a.s.add(ax);
                a.t.add(ay);
                ai = ai.a;
            }
        }
        adj(a, b) {
            let c = Math.max(this.aas.as(a.c.c), this.aas.at(a.c.c));
            if (c <= 0) {
                return b;
            }
            let d = b.length;
            let e = this.z8.cr(b, a.b.backgroundPadding);
            let f = e.width;
            let g = f - c;
            while (f - g > 0.0001 && d > 0) {
                d--;
                b = b.substr(0, d) + "…";
                e = this.z8.cr(b, a.b.backgroundPadding);
                f = e.width;
            }
            return b;
        }
        ad1() {
            if (this.aas != null) {
                let a = this.abj.c;
                while (a != null) {
                    let b = a.c.c;
                    if (b != null) {
                        this.aas.br(b);
                    }
                    a = a.a;
                }
                let c = this.aas;
                c.labelsMoved = delegateRemove(c.labelsMoved, runOn(this, this.ady));
                this.aas = null;
            }
            this.ad0();
        }
        aat() {
            if (this.db == null) {
                return null;
            }
            for (let a = 0; a < this.db.series.count; a++) {
                let b = this.db.series._inner[a];
                if (b.es && typeCast(CalloutLayer.$, b) !== null) {
                    let c = b;
                    if (c != this) {
                        if (c.acu != null && c.acu == this.acu) {
                            if (c.aas != null) {
                                return c.aas;
                            }
                        }
                    }
                }
            }
            return null;
        }
        ab4() {
            return 20000;
        }
        ab5() {
            return 300;
        }
        aau() {
            switch (this.z5) {
                case 0: return 2;
                case 2: return 1;
                case 3: return 2;
                case 1: return 0;
                case 4: return 3;
                case 7: return 7;
                case 5: return 5;
                case 6: return 6;
            }
            return 2;
        }
        ady(a) {
            let b = this.aas.ba();
            let c = this.ab1;
            if (b < this.ab1) {
                this.ab1 = b;
                if (c != 0x7FFFFFFF) {
                    this.rr(false);
                }
            }
        }
        aav(a) {
            let b = this.aaf;
            if (a.b.l != null) {
                b = a.b.l;
            }
            if (b == null) {
                for (let c = 0; c < this.db.series.count; c++) {
                    let d = this.db.series._inner[c];
                    if (!d.es) {
                        b = d;
                        break;
                    }
                }
            }
            if (b == null) {
                return null;
            }
            let e = b.ai();
            let f = b.iy();
            let g = null;
            let h = null;
            let i = false;
            for (let j = 0; j < e.length; j++) {
                if (e[j] == null) {
                    continue;
                }
                if (e[j].b9) {
                    i = true;
                    g = e[j];
                }
                else if (e[j].cm) {
                    i = true;
                    h = e[j];
                }
                else if (e[j].cp) {
                    h = e[j];
                }
                else {
                    g = e[j];
                }
            }
            if (g == null || h == null) {
                return null;
            }
            if (!g.co() || !h.co()) {
                return null;
            }
            let k = 0;
            let l = 0;
            if (g.cb && g.categoryMode != 0) {
                if (b.e6) {
                    k = b.getOffsetValue();
                }
                else if (b.ey) {
                    k = b.getOffsetValue();
                }
            }
            if (h.cb && h.categoryMode != 0) {
                if (b.ey) {
                    l = b.getOffsetValue();
                }
            }
            let m = new ScalerParams(0, this.db.v4, g.kh, g.ch, g.kc());
            m.b = f;
            let n = new ScalerParams(0, this.db.v4, h.kh, h.ch, h.kc());
            n.b = f;
            let o = 0;
            let p = 0;
            if (i) {
                o = g.el(this.ab0(a.b.ac), m) + k;
                p = h.el(this.ab0(a.b.ad), n) + l;
                let q = o;
                let r = p;
                let s = { $type: Point_$type, x: 0.5, y: 0.5 };
                let t = s.x + (r * Math.cos(q));
                o = ViewportUtils.e(t, m.e, m.d, m.c);
                let u = s.y + (r * Math.sin(q));
                p = ViewportUtils.i(u, n.e, n.d, n.c);
            }
            else {
                o = g.el(this.ab0(a.b.ac), m) + k;
                p = h.el(this.ab0(a.b.ad), n) + l;
            }
            let v = new QuadTreeBoundingBox();
            v.d = o;
            v.e = p;
            v.g = 3;
            v.f = 3;
            v.i = a.b;
            return v;
        }
        ab0(a) {
            if (typeCast(Date_$type, a) !== null) {
                return a.getTime();
            }
            if (a == null) {
                return 0;
            }
            return a;
        }
        abn() {
            let a = new List$1(CalloutAnnotationWrapper.$, 0);
            for (let b = 0; b < this.abm.count; b++) {
                if (stringIsNullOrEmpty(this.abm._inner[b].b.ao)) {
                    continue;
                }
                if (this.abm._inner[b].c == null) {
                    let c = new LabelCollisionInfo();
                    this.abm._inner[b].c = c;
                    let d = this.z8.cr(this.ab6(this.abm._inner[b]), this.abm._inner[b].b.backgroundPadding);
                    c.o = d.height / 2;
                    c.p = d.width / 2;
                }
                let e = this.aav(this.abm._inner[b]);
                if (e == null || e.d < this.ws.left || e.d > this.ws.right || e.e < this.ws.top || e.e > this.ws.bottom) {
                    continue;
                }
                a.add(this.abm._inner[b]);
            }
            return a;
        }
        ab6(a) {
            return a.b.ao;
        }
        xi(a) {
            if (!super.xi(a)) {
                return false;
            }
            if (this.ade != null) {
                if (a.fb) {
                    let b = a.nc();
                    if (!Base.equalsStatic(this.ade, b)) {
                        return false;
                    }
                }
                else {
                    if (!Base.equalsStatic(this.ade, a.name)) {
                        return false;
                    }
                }
            }
            return true;
        }
        qp() {
            super.qp();
            if (!this.a1.c && !this.d3()) {
                return;
            }
            if (this.aax) {
                this.aax = false;
                this.ad8();
                this.ad3();
            }
            if (this.d3()) {
                this.aea(this.xd, false);
            }
            else {
                this.aea(this.xb, false);
            }
        }
        ad4() {
            if (!this.aaz) {
                this.aaz = true;
                this.rr(true);
            }
        }
        ad7(a, b, c) {
            let d = false;
            if (this.aaz) {
                this.aaz = false;
                d = true;
            }
            a.ki = this.z0;
            if (!a.gi && a.eb(this.abk, this.abf, this.abb, this.ab2, false)) {
                let e = this.abk;
                for (let f = 0; f < this.abk.count; f++) {
                    let g = e._inner[f];
                    let h = g.b != null ? g.b.item : null;
                    let i = g.b.item != null ? g.b.item : g.b;
                    let j = g.g;
                    let k = a;
                    let l = new CalloutKey(i, k);
                    let m = new CalloutAnnotationWrapper();
                    let n = new CalloutAnnotation();
                    m.b = n;
                    n.key = l;
                    let o = false;
                    if (this.abg.containsKey(m)) {
                        m = this.abg.item(m).c;
                        n = m.b;
                        o = d;
                    }
                    else {
                        o = true;
                    }
                    let p = n.ac;
                    let q = n.ad;
                    if (this.ab0(p) != this.ab0(g.d) && (!isNaN_(this.ab0(p)) || !isNaN_(this.ab0(g.d)))) {
                        n.xValue = g.d;
                    }
                    if (this.ab0(q) != this.ab0(g.e) && (!isNaN_(this.ab0(q)) || !isNaN_(this.ab0(g.e)))) {
                        n.yValue = g.e;
                    }
                    n.itemColor = j;
                    n.series = a;
                    let r = false;
                    if (g.f != n.az) {
                        n.az = g.f;
                        r = true;
                    }
                    if (o || r) {
                        if (this.calloutLabelUpdating != null) {
                            let s = ((() => {
                                let $ret = new CalloutLabelUpdatingEventArgs();
                                $ret.d = n.ac;
                                $ret.e = n.ad;
                                $ret.item = h;
                                $ret.a = a;
                                $ret.f = a.name;
                                return $ret;
                            })());
                            this.calloutLabelUpdating(this, s);
                            if (s.c != null && !Base.equalsStatic(s.c, m.b.ao)) {
                                let t = s.c;
                                if (this.z0 != null) {
                                    m.b.text = this.z0.i(t);
                                }
                                else {
                                    m.b.text = t != null ? t.toString() : "";
                                }
                            }
                        }
                        else {
                            if (g.f != null) {
                                n.text = g.f;
                            }
                        }
                    }
                    if (n.ao == null) {
                        continue;
                    }
                    if (o || r) {
                        if (this.calloutContentUpdating != null) {
                            let u = ((() => {
                                let $ret = new CalloutContentUpdatingEventArgs();
                                $ret.c = n.ac;
                                $ret.d = n.ad;
                                $ret.item = h;
                                $ret.a = i;
                                return $ret;
                            })());
                            this.calloutContentUpdating(this, u);
                            if (u.a != null && u.a != m.b.aa) {
                                m.b.content = u.a;
                            }
                        }
                        else {
                            if (i != null && i != m.b.aa) {
                                m.b.content = i;
                            }
                        }
                    }
                    if (o) {
                        this.aec(m);
                    }
                    if (m.c == null) {
                        let v = new LabelCollisionInfo();
                        m.c = v;
                        let w = this.z8.cr(this.ab6(m), m.b.backgroundPadding);
                        v.o = w.height / 2;
                        v.p = w.width / 2;
                    }
                    let x = this.aav(m);
                    if (x == null || x.d < this.ws.left || x.d > this.ws.right || x.e < this.ws.top || x.e > this.ws.bottom) {
                        continue;
                    }
                    m.e = x.d;
                    m.f = x.e;
                    if (g.a != null) {
                        m.c.a = g.a;
                    }
                    c.add(m);
                }
            }
            a.ki = null;
        }
        b2() {
            return 1;
        }
        a2(a, b) {
            let c = this.aas.i(a, b);
            if (c == null) {
                return null;
            }
            return c.y;
        }
        gw(a, b) {
            if (this.aas == null) {
                return false;
            }
            return this.aas.i(a, b) != null;
        }
        aea(a, b) {
            let c = 0;
            let d = new HashSet$1(CalloutAnnotationWrapper.$, 0);
            for (c = 0; c < a.q.count; c++) {
                let e = a.n._inner[c];
                if (isNaN_(a.u._inner[c]) || isNaN_(a.v._inner[c])) {
                    continue;
                }
                let f = this.z8.cb.item(e);
                d.add_1(e);
                if (f.h != a.q._inner[c]) {
                    f.h = a.q._inner[c];
                    let g = f.u();
                }
                f.e = a.o._inner[c];
                f.m = a.f._inner[c];
                f.p = a.p._inner[c];
                f.o = f.e > 0 ? a.i._inner[c] : this.cv.bt();
                f.n = a.h._inner[c];
                f.x = new Thickness(1, a.k._inner[c], a.m._inner[c], a.l._inner[c], a.j._inner[c]);
                f.d = a.g._inner[c];
                this.z8.cj(f, Math.min(a.s._inner[c], a.s._inner[c] + a.u._inner[c]), Math.min(a.t._inner[c], a.t._inner[c] + a.v._inner[c]));
                this.z8.ck(f, e, a.r._inner[c]);
                f.r = { $type: Point_$type, x: a.u._inner[c], y: a.v._inner[c] };
            }
            let h = new List$1(CalloutAnnotationWrapper.$, 0);
            for (let i of fromEnum(this.z8.cb.c)) {
                if (!d.contains(i)) {
                    h.add(i);
                }
            }
            for (let j = 0; j < h.count; j++) {
                this.z8.cb.h(h._inner[j]);
            }
        }
        yu(a, b) {
            super.yu(a, b);
            if (this.d3()) {
                this.aea(this.xd, true);
            }
            else {
                this.aea(this.xb, false);
            }
        }
        ga() {
            return true;
        }
        q9(a, b, c, d) {
            super.q9(a, b, c, d);
            switch (b) {
                case CalloutLayer.$$p[35]:
                    this.aag = null;
                    this.z8.ci();
                    this.rr(true);
                    break;
                case CalloutLayer.$$p[33]:
                case CalloutLayer.$$p[34]:
                    this.rr(true);
                    break;
                case CalloutLayer.$$p[29]:
                case CalloutLayer.$$p[30]:
                    if (this.ac8 != null) {
                        this.z0 = new BindingFormatter();
                        this.z0.j = this.ac8;
                        this.z0.d = this.zy;
                    }
                    else {
                        this.z0 = null;
                    }
                    break;
                case CalloutLayer.$$p[21]:
                case CalloutLayer.$$p[23]:
                    this.rr(true);
                    break;
                case "SeriesViewer":
                    if (c != null) {
                        let e = c;
                        e.seriesAnimating = delegateRemove(e.seriesAnimating, runOn(this, this.ad9));
                    }
                    if (d != null) {
                        let f = d;
                        f.seriesAnimating = delegateCombine(f.seriesAnimating, runOn(this, this.ad9));
                    }
                    if (d == null) {
                        this.ad1();
                    }
                    break;
                case "AutoCalloutVisibilityMode":
                    this.z2 = this.z4();
                    this.ad2();
                    break;
                case "AllowedPositions":
                    if (c != null) {
                        let g = c;
                        g.collectionChanged = delegateRemove(g.collectionChanged, runOn(this, this.adw));
                    }
                    if (d != null) {
                        let h = d;
                        h.collectionChanged = delegateCombine(h.collectionChanged, runOn(this, this.adw));
                    }
                    this.zx = this.zz(this.aaa);
                    this.ad2();
                    break;
                case CalloutLayer.$$p[24]:
                case CalloutLayer.$$p[25]:
                case CalloutLayer.$$p[1]:
                case CalloutLayer.$$p[13]:
                case CalloutLayer.$$p[11]:
                case CalloutLayer.$$p[37]:
                case CalloutLayer.$$p[40]:
                case CalloutLayer.$$p[27]:
                case CalloutLayer.$$p[26]:
                case CalloutLayer.$$p[15]:
                case CalloutLayer.$$p[17]:
                case CalloutLayer.$$p[16]:
                case CalloutLayer.$$p[14]:
                case "Visibility":
                case CalloutLayer.$$p[18]:
                case CalloutLayer.$$p[5]:
                case CalloutLayer.$$p[8]:
                case CalloutLayer.$$p[6]:
                case CalloutLayer.$$p[9]:
                case CalloutLayer.$$p[7]:
                    this.aaw = true;
                    this.ad2();
                    break;
                case CalloutLayer.$$p[19]:
                case CalloutLayer.$$p[20]:
                case CalloutLayer.$$p[2]:
                    this.ad2();
                    break;
                case CalloutLayer.$$p[32]:
                    this.ad2();
                    if (this.aas != null) {
                        this.aas.v = d;
                    }
                    break;
                case CalloutLayer.$$p[31]:
                    if (this.dn != null) {
                        this.dn.deregisterColumn(this.aap);
                        this.aap = this.dm(this.adb);
                    }
                    break;
                case "LabelColumn":
                    this.ad2();
                    break;
                case CalloutLayer.$$p[22]:
                    if (this.dn != null) {
                        this.dn.deregisterColumn(this.aan);
                        this.aan = this.dm(this.acx);
                    }
                    break;
                case "ContentColumn":
                    this.ad2();
                    break;
                case CalloutLayer.$$p[42]:
                    if (this.dn != null) {
                        this.dn.deregisterColumn(this.aaq);
                        this.aaq = stringIsNullOrEmpty(this.adr) == false ? this.dm(this.adr) : null;
                    }
                    break;
                case "XColumn":
                    this.ad2();
                    break;
                case CalloutLayer.$$p[43]:
                    if (this.dn != null) {
                        this.dn.deregisterColumn(this.aar);
                        this.aar = this.dm(this.adu);
                    }
                    break;
                case "YColumn":
                    this.ad2();
                    break;
                case CalloutLayer.$$p[28]:
                    if (this.dn != null) {
                        this.dn.deregisterColumn(this.aao);
                        this.aao = this.dm(this.ac5);
                    }
                    break;
                case "KeyColumn":
                    this.ad2();
                    break;
                case "FastItemsSource":
                    this.aay = true;
                    if (typeCast(IFastItemsSource_$type, c) != null) {
                        c.deregisterColumn(this.aap);
                        c.deregisterColumn(this.aan);
                        c.deregisterColumn(this.aaq);
                        c.deregisterColumn(this.aar);
                        c.deregisterColumn(this.aao);
                        this.aap = null;
                        this.aan = null;
                        this.aaq = null;
                        this.aar = null;
                        this.aao = null;
                        this.abm.clear();
                    }
                    if (typeCast(IFastItemsSource_$type, d) != null) {
                        this.aap = this.dm(this.adb);
                        this.aan = this.dm(this.acx);
                        if (stringIsNullOrEmpty(this.adr) == false) {
                            this.aaq = this.dm(this.adr);
                        }
                        this.aar = this.dm(this.adu);
                        this.aao = this.dm(this.ac5);
                    }
                    this.ad2();
                    break;
            }
        }
        z4() {
            if (this.z3 == 0) {
                return 1;
            }
            return this.z3;
        }
        zz(a) {
            if (a == null || a.count == 0) {
                return null;
            }
            let b = new Array(a.count);
            for (let c = 0; c < a.count; c++) {
                b[c] = a._inner[c];
            }
            return b;
        }
        ad9(a) {
            if (a.es) {
                return;
            }
            if ((a == this.aaf || this.aaf == null) && this.aa5) {
                this.rr(false);
            }
        }
        ad2() {
            if (this.aax == false) {
                this.aax = true;
                this.rr(false);
            }
        }
        ax(a, b, c) {
            let d = this.getEffectiveViewport();
            let e = this.db.wk;
            let f = this.wt();
            let g = 0;
            if (b.cp) {
                let h = new ScalerParams(0, c, e, !b.ch, d);
                g = (b.eo(f.height, h));
                return new AxisRange(a.c - g, a.b + g);
            }
            else {
                let i = new ScalerParams(0, c, e, b.ch, d);
                g = (b.eo(f.width, i));
                return new AxisRange(a.c - g, a.b + g);
            }
        }
        ad8() {
            if (!this.aa4) {
                return;
            }
            if (this.c9 == null) {
                return;
            }
            let a = this.c9.series;
            if (a == null) {
                return;
            }
            let b = this.c9.axes;
            if (b == null) {
                return;
            }
            for (let c of fromEnum(b)) {
                c.hl();
                c.c2(true);
            }
        }
        ad0() {
            this.z8.cb.clear();
            this.abj.g();
            this.abg.clear();
        }
        ad3() {
            if (this.aar == null || this.aap == null) {
                let a = this.abj.c;
                while (a != null) {
                    this.aec(a.c);
                    a = a.a;
                }
                return;
            }
            let b = this.abh();
            for (let c = 0; c < this.aar.count; c++) {
                let d;
                if (this.abm.count <= c) {
                    let e = new CalloutAnnotation();
                    d = new CalloutAnnotationWrapper();
                    d.b = e;
                    d.b.series = this.aaf;
                    this.abm.add(d);
                }
                else {
                    d = this.abm._inner[c];
                }
                this.aeb(c, b);
            }
        }
    }
    CalloutLayer.$t = /*@__PURE__*/ markType(CalloutLayer, 'CalloutLayer', AnnotationLayer.$);
    CalloutLayer.aey = /*@__PURE__*/ DependencyProperty.i("AutoCalloutVisibilityMode", AutoCalloutVisibilityMode_$type, CalloutLayer.$, /*@__PURE__*/ new PropertyMetadata(2, /*@__PURE__*/ enumGetBox(AutoCalloutVisibilityMode_$type, 0), (a, b) => a.raisePropertyChanged("AutoCalloutVisibilityMode", b.oldValue, b.newValue)));
    CalloutLayer.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, CalloutLayer, 'raisePropertyChanged', ['AutoCalloutLabelPrecision:ab2:aed', [1, 5], 'CalloutBackground:afm:aee', [Brush.$, null], 'CalloutCollisionMode:z5:aef', [CalloutCollisionMode_$type, /*@__PURE__*/ enumGetBox(CalloutCollisionMode_$type, 3)], 'CalloutCornerRadius:abp:aeg', [1, NaN], 'CalloutDarkTextColor:afn:aeh', [Brush.$, null], 'CalloutExpandsAxisBufferEnabled:aa4:aei', [0, false], 'CalloutExpandsAxisBufferMaxHeight:abq:aej', [1, 400], 'CalloutExpandsAxisBufferMaxWidth:abr:aek', [1, 400], 'CalloutExpandsAxisBufferMinHeight:abs:ael', [1, 50], 'CalloutExpandsAxisBufferMinWidth:abt:aem', [1, 50], 'CalloutInterpolatedValuePrecision:ab3:aen', [1, -1], 'CalloutLeaderBrush:afo:aeo', [Brush.$, null], 'CalloutLightTextColor:afp:aep', [Brush.$, null], 'CalloutOutline:afq:aeq', [Brush.$, null], 'CalloutPaddingBottom:abu:aer', [1, NaN], 'CalloutPaddingLeft:abv:aes', [1, NaN], 'CalloutPaddingRight:abw:aet', [1, NaN], 'CalloutPaddingTop:abx:aeu', [1, NaN], 'CalloutPositionPadding:aby:aev', [1, 10], 'CalloutStrokeThickness:abz:aew', [1, NaN], 'CalloutTextColor:afr:aex', [Brush.$, null], 'CollisionChannel:acu:aez', [2, null], 'ContentMemberPath:acx:ae0', [2, null], 'HighlightedValueLabelMode:aae:ae1', [HighlightedValueLabelMode_$type, /*@__PURE__*/ enumGetBox(HighlightedValueLabelMode_$type, 0)], 'IsAutoCalloutBehaviorEnabled:aa5:ae2', [0, false], 'IsCalloutOffsettingEnabled:aa6:ae3', [0, true], 'IsCustomCalloutRenderStyleEnabled:aa7:ae4', [0, false], 'IsCustomCalloutStyleEnabled:aa8:ae5', [0, false], 'KeyMemberPath:ac5:ae6', [2, null], 'LabelFormat:ac8:ae7', [2, null], 'LabelFormatSpecifiers:zy:ae8', [Array_$type, null], 'LabelMemberPath:adb:ae9', [2, null], 'ShouldTruncateOnBoundaryCollisions:aa9:afa', [0, false], 'TargetSeriesName:ade:afb', [2, null], 'TargetSeries:aaf:afc', [Series.$, null], 'TextStyle:adh:afd', [2, null], 'UseAutoContrastingLabelColors:aba:afe', [0, false], 'UseInterpolatedValueForAutoCalloutLabels:abb:aff', [0, false], 'UseItemColorForFill:abc:afg', [0, false], 'UseItemColorForOutline:abd:afh', [0, false], 'UseSeriesColorForOutline:abe:afi', [0, false], 'UseValueForAutoCalloutLabels:abf:afj', [0, true], 'XMemberPath:adr:afk', [2, null], 'YMemberPath:adu:afl', [2, null]]);
    return CalloutLayer;
})();
/**
 * @hidden
 */
export let CalloutLayerView = /*@__PURE__*/ (() => {
    class CalloutLayerView extends AnnotationLayerView {
        constructor(a) {
            super(a);
            this.b7 = null;
            this.cc = null;
            this.cb = null;
            this.cd = NaN;
            this.b8 = null;
            this.b7 = a;
            this.cc = new List$1(CalloutView.$, 0);
        }
        au() {
            super.au();
            this.cb = ((() => {
                let $ret = new HashPool$2(CalloutAnnotationWrapper.$, CalloutView.$);
                $ret.create = runOn(this, this.b9);
                $ret.activate = runOn(this, this.cf);
                $ret.disactivate = runOn(this, this.ch);
                $ret.destroy = runOn(this, this.cg);
                return $ret;
            })());
        }
        b9() {
            let a = new CalloutView(this);
            this.cc.add(a);
            return a;
        }
        cf(a) {
            a.y = 0;
        }
        ch(a) {
            a.y = 1;
        }
        cg(a) {
            this.cc.remove(a);
        }
        cq(a) {
            if (a == null) {
                return a;
            }
            return BrushUtil.m(a, 0.1);
        }
        a8(a, b) {
            super.a8(a, b);
            a.ad(this.ca());
            if (a.d && !b) {
                for (let c = 0; c < this.cc.count; c++) {
                    let d = this.cc._inner[c];
                    if (d.y == 0) {
                        d.j(a);
                    }
                }
            }
        }
        ca() {
            if (this.b7.aah != null) {
                return this.b7.aah;
            }
            return this.e.db.getFontInfo();
        }
        an(a) {
            super.an(a);
            for (let b = 0; b < this.cc.count; b++) {
                let c = this.cc._inner[b];
                if (c.y != 0) {
                    continue;
                }
                c.i(this.b7, this.ca(), a);
            }
        }
        cs(a) {
            this.k.ad(this.ca());
            this.cd = this.ce();
            let b = this.k.ah(a, this.cd, true);
            return new Size(1, b.c, b.b);
        }
        ce() {
            let a = this.ca();
            if (isNaN_(this.cd)) {
                let b = FontUtil.getCurrentFontHeight(this.e.db.c9.j.ae, a);
                this.cd = b;
            }
            return this.cd;
        }
        cr(a, b) {
            if (this.b8 == null) {
                this.b8 = new CalloutView(this);
            }
            this.b8.h = a;
            this.b8.x = b;
            let c = this.b8.u();
            this.b8.h = null;
            return c;
        }
        cj(a, b, c) {
            a.f = b;
            a.g = c;
        }
        ck(a, b, c) {
            a.k(this.e, b, c);
        }
        cl(a, b) {
            if (b != null && this.b7.abc) {
                return this.cq(b);
            }
            if (a != null) {
                return this.cq(a.vg);
            }
            return this.e.vg;
        }
        co() {
            return ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 255, 255, 255);
                return $ret;
            })());
        }
        cm() {
            return ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 0, 0, 0);
                return $ret;
            })());
        }
        cp(a, b) {
            if (b != null && this.b7.abd) {
                return this.cq(b);
            }
            if (this.b7.abe) {
                if (a != null) {
                    return this.cq(a.vg);
                }
            }
            return ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 255, 255, 255);
                return $ret;
            })());
        }
        cn(a, b) {
            if (b != null && this.b7.abd) {
                return this.cq(b);
            }
            if (a != null) {
                return this.cq(a.u9);
            }
            return this.e.u9;
        }
        ci() {
            this.cd = NaN;
        }
    }
    CalloutLayerView.$t = /*@__PURE__*/ markType(CalloutLayerView, 'CalloutLayerView', AnnotationLayerView.$);
    return CalloutLayerView;
})();
/**
 * @hidden
 */
export let CalloutView = /*@__PURE__*/ (() => {
    class CalloutView extends Base {
        constructor(a) {
            super();
            this.a = null;
            this.y = 0;
            this.l = null;
            this.t = null;
            this.q = { $type: Point_$type, x: 0, y: 0 };
            this.s = null;
            this.w = new Thickness(0, 0);
            this.v = null;
            this.c = 0;
            this.f = 0;
            this.g = 0;
            this.b = null;
            this.s = new Line();
            this.s.ab = false;
            this.s._stroke = ((() => {
                let $ret = new Brush();
                $ret.color = Color.u(255, 0, 0, 0);
                return $ret;
            })());
            this.s.ad = 2;
            this.l = new TextBlock();
            this.t = new Rectangle();
            this.t.ad = 0;
            this.a = a;
            this.y = 0;
        }
        j(a) {
            a.aa();
            a.ag(this.f, this.g);
            let b = new TranslateTransform();
            b.j = this.v.left;
            b.k = this.v.top;
            this.t.j = b;
            a.s(this.s);
            a.aa();
            this.t.width = this.l.m + this.w.left + this.w.right;
            this.t.height = this.l.l + this.w.top + this.w.bottom;
            this.t.ap = this.c;
            this.t.aq = this.c;
            a.k(this.t.j);
            a.w(this.t);
            this.l.ag = true;
            this.l.o = this.w.top;
            this.l.n = this.w.left;
            a.x(this.l);
            a.z();
            a.z();
        }
        get r() {
            return this.q;
        }
        set r(a) {
            if (this.q.x != a.x || this.q.y != a.y) {
                let b = this.u();
                let c = b.height;
                let d = b.width;
                this.q = a;
                let e = CalloutViewHelper.b(this.r, d, c, this.s);
                this.v = e;
            }
        }
        get p() {
            return this.l.ao;
        }
        set p(a) {
            this.l.ao = a;
        }
        get o() {
            return this.t._stroke;
        }
        set o(a) {
            this.t._stroke = a;
        }
        get n() {
            return this.s._stroke;
        }
        set n(a) {
            this.s._stroke = a;
        }
        get m() {
            return this.t._fill;
        }
        set m(a) {
            this.t._fill = a;
        }
        get e() {
            return this.t.ad;
        }
        set e(a) {
            this.t.ad = a;
        }
        get x() {
            return this.w;
        }
        set x(a) {
            this.w = a;
        }
        get d() {
            return this.c;
        }
        set d(a) {
            this.c = a;
        }
        get h() {
            return this.l.al;
        }
        set h(a) {
            if (a == null) {
                this.l.al = "";
            }
            else {
                this.l.al = a.toString();
            }
            let b = this.u();
            let c = b.height;
            let d = b.width;
            let e = CalloutViewHelper.b(this.r, d, c, this.s);
            this.v = e;
        }
        u() {
            let a = this.a.cs(this.l);
            this.l.m = a.width;
            this.l.l = a.height;
            return new Size(1, a.width + this.w.left + this.w.right, a.height + this.w.top + this.w.bottom);
        }
        k(a, b, c) {
            if (this.b == null) {
                this.b = new DataContext();
            }
            this.b.series = a;
            this.b.item = c;
            if (b.c != null) {
                b.c.y = this.b;
            }
        }
        i(a, b, c) {
            a.bc.exportCalloutData(this.f, this.g, this.v.left, this.v.top, c, this.t, this.l, b, this.s, "callout", ["Main", "Callout"]);
        }
    }
    CalloutView.$t = /*@__PURE__*/ markType(CalloutView, 'CalloutView');
    return CalloutView;
})();
