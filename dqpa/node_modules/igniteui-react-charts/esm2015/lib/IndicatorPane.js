/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, fromEnum, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let IndicatorPane = /*@__PURE__*/ (() => {
    class IndicatorPane extends Base {
        constructor() {
            super(...arguments);
            this.c = null;
            this.d = null;
            this.a = null;
        }
        h(a) {
            this.c = a;
            if (this.c == null) {
                return;
            }
            this.d = this.c.createElement("div");
            this.d.setStyleProperty("height", "100%");
            this.d.setStyleProperty("width", "100%");
            this.d.setStyleProperty("display", "grid");
            this.d.setStyleProperty("display", "-ms-grid");
            this.d.setStyleProperty("-ms-grid-columns", "100%");
            this.c.append(this.d);
            this.i();
        }
        i() {
            if (this.d == null) {
                return;
            }
            this.d.removeChildren();
            if (this.b == null) {
                return;
            }
            let a = "";
            for (let b = 0; b < this.b.count; b++) {
                let c = this.b._inner[b];
                let d = this.c.createElement("div");
                d.setStyleProperty("grid-row", (b + 1).toString());
                d.setStyleProperty("grid-column", (1).toString());
                d.setStyleProperty("-ms-grid-row", (b + 1).toString());
                d.setStyleProperty("-ms-grid-column", (1).toString());
                this.d.append(d);
                let e = this.c.getSubRenderer(d);
                c.c9.b4(e);
                a += " 1fr";
            }
            a = a.trim();
            this.d.setStyleProperty("-ms-grid-rows", a);
        }
        get b() {
            return this.a;
        }
        set b(a) {
            let b = this.b;
            if (a != b) {
                this.a = a;
                this.g("IndicatorCharts", b, this.b);
            }
        }
        g(a, b, c) {
            switch (a) {
                case "IndicatorCharts":
                    this.i();
                    break;
            }
        }
        f() {
            if (this.b == null || this.c == null) {
                return;
            }
            for (let a of fromEnum(this.b)) {
                a.notifyContainerResized();
            }
        }
    }
    IndicatorPane.$t = /*@__PURE__*/ markType(IndicatorPane, 'IndicatorPane');
    return IndicatorPane;
})();
