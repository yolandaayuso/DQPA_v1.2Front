/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, typeCast, markType } from "igniteui-react-core";
import { ISupportsErrorBars_$type } from "./ISupportsErrorBars";
import { ISupportsMarkers_$type } from "./ISupportsMarkers";
import { IProvidesViewport_$type } from "./IProvidesViewport";
import { DefaultSupportsMarkers } from "./DefaultSupportsMarkers";
import { DefaultProvidesViewport } from "./DefaultProvidesViewport";
import { DefaultSupportsErrorBars } from "./DefaultSupportsErrorBars";
/**
 * @hidden
 */
export let FramePreparer = /*@__PURE__*/ (() => {
    class FramePreparer extends Base {
        constructor(a, ..._rest) {
            super();
            this.b = null;
            this.c = null;
            this.a = null;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        let c = _rest[0];
                        let d = [typeCast(ISupportsMarkers_$type, c), typeCast(IProvidesViewport_$type, c), typeCast(ISupportsErrorBars_$type, c)];
                        {
                            let f = d[0];
                            let g = d[1];
                            let h = d[2];
                            this.c = new DefaultSupportsMarkers();
                            this.a = new DefaultProvidesViewport();
                            this.b = new DefaultSupportsErrorBars();
                            if (f != null) {
                                this.c = f;
                            }
                            if (g != null) {
                                this.a = g;
                            }
                            if (h != null) {
                                this.b = h;
                            }
                        }
                    }
                    break;
                case 1:
                    {
                        let c = _rest[0];
                        let d = _rest[1];
                        let e = _rest[2];
                        this.c = new DefaultSupportsMarkers();
                        this.a = new DefaultProvidesViewport();
                        this.b = new DefaultSupportsErrorBars();
                        if (c != null) {
                            this.c = c;
                        }
                        if (d != null) {
                            this.a = d;
                        }
                        if (e != null) {
                            this.b = e;
                        }
                    }
                    break;
            }
        }
    }
    FramePreparer.$t = /*@__PURE__*/ markType(FramePreparer, 'FramePreparer');
    return FramePreparer;
})();
