/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let CalloutStyleUpdatingEventArgs = /*@__PURE__*/ (() => {
    class CalloutStyleUpdatingEventArgs extends Base {
        constructor() {
            super(...arguments);
            this._xValue = null;
            this._yValue = null;
            this._item = null;
            this._series = null;
            this._background = null;
            this._textColor = null;
            this._outline = null;
            this._leaderBrush = null;
            this._strokeThickness = 0;
        }
        get xValue() {
            return this._xValue;
        }
        set xValue(a) {
            this._xValue = a;
        }
        get yValue() {
            return this._yValue;
        }
        set yValue(a) {
            this._yValue = a;
        }
        get item() {
            return this._item;
        }
        set item(a) {
            this._item = a;
        }
        get series() {
            return this._series;
        }
        set series(a) {
            this._series = a;
        }
        get background() {
            return this._background;
        }
        set background(a) {
            this._background = a;
        }
        get textColor() {
            return this._textColor;
        }
        set textColor(a) {
            this._textColor = a;
        }
        get outline() {
            return this._outline;
        }
        set outline(a) {
            this._outline = a;
        }
        get leaderBrush() {
            return this._leaderBrush;
        }
        set leaderBrush(a) {
            this._leaderBrush = a;
        }
        get strokeThickness() {
            return this._strokeThickness;
        }
        set strokeThickness(a) {
            this._strokeThickness = a;
        }
    }
    CalloutStyleUpdatingEventArgs.$t = /*@__PURE__*/ markType(CalloutStyleUpdatingEventArgs, 'CalloutStyleUpdatingEventArgs');
    return CalloutStyleUpdatingEventArgs;
})();
