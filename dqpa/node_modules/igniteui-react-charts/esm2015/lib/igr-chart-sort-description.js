import { ListSortDirection, ListSortDirection_$type } from "igniteui-react-core";
import { ChartSortDescription } from "./ChartSortDescription";
import { ensureEnum } from "igniteui-react-core";
/**
 * Represents an element in the current sort applied to a data source or provider. Changes to this object are not observed or expected after it is initially assigned to a collection.
*/
export class IgrChartSortDescription {
    createImplementation() {
        return new ChartSortDescription(0);
    }
    /**
     * @hidden
     */
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    constructor(field = null, sortDirection = ListSortDirection.Ascending) {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        this.field = field;
        this.sortDirection = sortDirection;
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    /**
 * Gets or sets the property being sorted.
*/
    get field() {
        return this.i.f;
    }
    set field(v) {
        this.i.f = v;
    }
    /**
     * Gets or sets the direction to sort based on the property.
    */
    get sortDirection() {
        return this.i.c;
    }
    set sortDirection(v) {
        this.i.c = ensureEnum(ListSortDirection_$type, v);
    }
    findByName(name) {
        if (this.findEphemera) {
            if (name && name.indexOf("@@e:") == 0) {
                return this.findEphemera(name);
            }
        }
        return null;
    }
    /**
 * Returns if the SortDescription is equal to another.

* @param other  * The SortDescription to compare to.
*/
    equals(other) {
        let iv = this.i.equals(other);
        return (iv);
    }
}
