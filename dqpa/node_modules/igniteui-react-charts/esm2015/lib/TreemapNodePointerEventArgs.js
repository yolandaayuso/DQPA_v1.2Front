/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let TreemapNodePointerEventArgs = /*@__PURE__*/ (() => {
    class TreemapNodePointerEventArgs extends EventArgs {
        constructor() {
            super(...arguments);
            this._value = 0;
            this._sum = 0;
            this._customValue = null;
            this._item = null;
            this._parentItem = null;
            this._position = null;
            this._isRightButton = false;
            this._isHandled = false;
            this._isOverHeader = false;
            this._label = null;
            this._parentValue = 0;
            this._parentLabel = null;
            this._parentSum = 0;
        }
        get value() {
            return this._value;
        }
        set value(a) {
            this._value = a;
        }
        get sum() {
            return this._sum;
        }
        set sum(a) {
            this._sum = a;
        }
        get customValue() {
            return this._customValue;
        }
        set customValue(a) {
            this._customValue = a;
        }
        get item() {
            return this._item;
        }
        set item(a) {
            this._item = a;
        }
        get parentItem() {
            return this._parentItem;
        }
        set parentItem(a) {
            this._parentItem = a;
        }
        get position() {
            return this._position;
        }
        set position(a) {
            this._position = a;
        }
        get isRightButton() {
            return this._isRightButton;
        }
        set isRightButton(a) {
            this._isRightButton = a;
        }
        get isHandled() {
            return this._isHandled;
        }
        set isHandled(a) {
            this._isHandled = a;
        }
        get isOverHeader() {
            return this._isOverHeader;
        }
        set isOverHeader(a) {
            this._isOverHeader = a;
        }
        get label() {
            return this._label;
        }
        set label(a) {
            this._label = a;
        }
        get parentValue() {
            return this._parentValue;
        }
        set parentValue(a) {
            this._parentValue = a;
        }
        get parentLabel() {
            return this._parentLabel;
        }
        set parentLabel(a) {
            this._parentLabel = a;
        }
        get parentSum() {
            return this._parentSum;
        }
        set parentSum(a) {
            this._parentSum = a;
        }
    }
    TreemapNodePointerEventArgs.$t = /*@__PURE__*/ markType(TreemapNodePointerEventArgs, 'TreemapNodePointerEventArgs', EventArgs.$);
    return TreemapNodePointerEventArgs;
})();
