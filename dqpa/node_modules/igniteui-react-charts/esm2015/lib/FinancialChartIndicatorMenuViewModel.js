/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { FinancialChartDropDownControlViewModel } from "./FinancialChartDropDownControlViewModel";
import { markType } from "igniteui-react-core";
import { stringIsNullOrWhiteSpace } from "igniteui-react-core";
/**
 * @hidden
 */
export let FinancialChartIndicatorMenuViewModel = /*@__PURE__*/ (() => {
    class FinancialChartIndicatorMenuViewModel extends FinancialChartDropDownControlViewModel {
        constructor() {
            super(...arguments);
            this.j = null;
            this.k = null;
            this.l = 0;
            this.i = 0;
            this.m = "Indicators";
            this.n = "Standalone Indicators";
            this.o = "Overlays";
            this.p = "Trendlines";
            this.q = "Volumes";
            this.r = "Absolute Volume Oscillator";
            this.s = "Accumulation Distribution";
            this.t = "Average Directional Index";
            this.u = "Average True Range";
            this.v = "Bollinger Band Width";
            this.w = "Chaikin Oscillator";
            this.x = "Chaikin Volatility";
            this.y = "Commodity Channel Index";
            this.z = "Detrended Price Oscillator";
            this.aa = "Ease Of Movement";
            this.ab = "Fast Stochastic Oscillator";
            this.ac = "Force Index";
            this.ad = "Full Stochastic Oscillator";
            this.ae = "Market Facilitation Index";
            this.af = "Mass Index";
            this.ag = "Median Price";
            this.ah = "Money Flow Index";
            this.ai = "MACD";
            this.aj = "Negative Volume Index";
            this.ak = "On Balance Volume";
            this.al = "Percentage Price Oscillator";
            this.am = "Percentage Volume Oscillator";
            this.an = "Positive Volume Index";
            this.ao = "Price Volume Trend";
            this.ap = "ROC";
            this.aq = "RSI";
            this.ar = "Slow Stochastic Oscillator";
            this.as = "Standard Deviation";
            this.at = "Stoch RSI";
            this.au = "TRIX";
            this.av = "Typical Price";
            this.aw = "Ultimate Oscillator";
            this.ax = "Weighted Closez";
            this.ay = "Williams %R";
            this.az = "Bollinger Bands";
            this.a0 = "Price Channel";
            this.a1 = "Cubic Fit";
            this.a2 = "Cumulative Average";
            this.a3 = "Exponential Average";
            this.a4 = "Exponential Fit";
            this.a5 = "Linear Fit";
            this.a6 = "Logarithmic Fit";
            this.a7 = "Modified Average";
            this.a8 = "PowerLaw Fit";
            this.a9 = "Quadratic Fit";
            this.ba = "Quartic Fit";
            this.bb = "Quintic Fit";
            this.bc = "Simple Average";
            this.bd = "Weighted Average";
            this.be = "Area";
            this.bf = "Column";
            this.bg = "Line";
        }
        get financialChart_IndicatorMenu_Header() {
            return !stringIsNullOrWhiteSpace(this.a.t) ? this.a.t : this.m;
        }
        get financialChart_IndicatorsMenu_Overlay_BollingerBands() {
            return !stringIsNullOrWhiteSpace(this.a.a6) ? this.a.a6 : this.az;
        }
        get financialChart_IndicatorsMenu_Overlay_PriceChannel() {
            return !stringIsNullOrWhiteSpace(this.a.a7) ? this.a.a7 : this.a0;
        }
        get financialChart_IndicatorMenu_IndicatorsCategoryHeader() {
            return !stringIsNullOrWhiteSpace(this.a.u) ? this.a.u : this.n;
        }
        get financialChart_IndicatorMenu_OverlaysCategoryHeader() {
            return !stringIsNullOrWhiteSpace(this.a.v) ? this.a.v : this.o;
        }
        get financialChart_IndicatorMenu_TrendlinesCategoryHeader() {
            return !stringIsNullOrWhiteSpace(this.a.w) ? this.a.w : this.p;
        }
        get financialChart_IndicatorMenu_VolumeCategoryHeader() {
            return !stringIsNullOrWhiteSpace(this.a.x) ? this.a.x : this.q;
        }
        get financialChart_IndicatorsMenu_Indicator_AbsoluteVolumeOscillator() {
            return !stringIsNullOrWhiteSpace(this.a.y) ? this.a.y : this.r;
        }
        get financialChart_IndicatorsMenu_Indicator_AccumulationDistribution() {
            return !stringIsNullOrWhiteSpace(this.a.z) ? this.a.z : this.s;
        }
        get financialChart_IndicatorsMenu_Indicator_AverageDirectionalIndex() {
            return !stringIsNullOrWhiteSpace(this.a.aa) ? this.a.aa : this.t;
        }
        get financialChart_IndicatorsMenu_Indicator_AverageTrueRange() {
            return !stringIsNullOrWhiteSpace(this.a.ab) ? this.a.ab : this.u;
        }
        get financialChart_IndicatorsMenu_Indicator_BollingerBandWidth() {
            return !stringIsNullOrWhiteSpace(this.a.ac) ? this.a.ac : this.v;
        }
        get financialChart_IndicatorsMenu_Indicator_ChaikinOscillator() {
            return !stringIsNullOrWhiteSpace(this.a.ad) ? this.a.ad : this.w;
        }
        get financialChart_IndicatorsMenu_Indicator_ChaikinVolatility() {
            return !stringIsNullOrWhiteSpace(this.a.ae) ? this.a.ae : this.x;
        }
        get financialChart_IndicatorsMenu_Indicator_CommodityChannelIndex() {
            return !stringIsNullOrWhiteSpace(this.a.af) ? this.a.af : this.y;
        }
        get financialChart_IndicatorsMenu_Indicator_DetrendedPriceOscillator() {
            return !stringIsNullOrWhiteSpace(this.a.ag) ? this.a.ag : this.z;
        }
        get financialChart_IndicatorsMenu_Indicator_EaseOfMovement() {
            return !stringIsNullOrWhiteSpace(this.a.ah) ? this.a.ah : this.aa;
        }
        get financialChart_IndicatorsMenu_Indicator_FastStochasticOscillator() {
            return !stringIsNullOrWhiteSpace(this.a.ai) ? this.a.ai : this.ab;
        }
        get financialChart_IndicatorsMenu_Indicator_ForceIndex() {
            return !stringIsNullOrWhiteSpace(this.a.aj) ? this.a.aj : this.ac;
        }
        get financialChart_IndicatorsMenu_Indicator_FullStochasticOscillator() {
            return !stringIsNullOrWhiteSpace(this.a.ak) ? this.a.ak : this.ad;
        }
        get financialChart_IndicatorsMenu_Indicator_MarketFacilitationIndex() {
            return !stringIsNullOrWhiteSpace(this.a.al) ? this.a.al : this.ae;
        }
        get financialChart_IndicatorsMenu_Indicator_MassIndex() {
            return !stringIsNullOrWhiteSpace(this.a.am) ? this.a.am : this.af;
        }
        get financialChart_IndicatorsMenu_Indicator_MedianPrice() {
            return !stringIsNullOrWhiteSpace(this.a.an) ? this.a.an : this.ag;
        }
        get financialChart_IndicatorsMenu_Indicator_MoneyFlowIndex() {
            return !stringIsNullOrWhiteSpace(this.a.ao) ? this.a.ao : this.ah;
        }
        get financialChart_IndicatorsMenu_Indicator_MovingAverageConvergenceDivergence() {
            return !stringIsNullOrWhiteSpace(this.a.ap) ? this.a.ap : this.ai;
        }
        get financialChart_IndicatorsMenu_Indicator_NegativeVolumeIndex() {
            return !stringIsNullOrWhiteSpace(this.a.aq) ? this.a.aq : this.aj;
        }
        get financialChart_IndicatorsMenu_Indicator_OnBalanceVolume() {
            return !stringIsNullOrWhiteSpace(this.a.ar) ? this.a.ar : this.ak;
        }
        get financialChart_IndicatorsMenu_Indicator_PercentagePriceOscillator() {
            return !stringIsNullOrWhiteSpace(this.a.as) ? this.a.as : this.al;
        }
        get financialChart_IndicatorsMenu_Indicator_PercentageVolumeOscillator() {
            return !stringIsNullOrWhiteSpace(this.a.at) ? this.a.at : this.am;
        }
        get financialChart_IndicatorsMenu_Indicator_PositiveVolumeIndex() {
            return !stringIsNullOrWhiteSpace(this.a.au) ? this.a.au : this.an;
        }
        get financialChart_IndicatorsMenu_Indicator_PriceVolumeTrend() {
            return !stringIsNullOrWhiteSpace(this.a.av) ? this.a.av : this.ao;
        }
        get financialChart_IndicatorsMenu_Indicator_RateOfChangeAndMomentum() {
            return !stringIsNullOrWhiteSpace(this.a.aw) ? this.a.aw : this.ap;
        }
        get financialChart_IndicatorsMenu_Indicator_RelativeStrengthIndex() {
            return !stringIsNullOrWhiteSpace(this.a.ax) ? this.a.ax : this.aq;
        }
        get financialChart_IndicatorsMenu_Indicator_SlowStochasticOscillator() {
            return !stringIsNullOrWhiteSpace(this.a.ay) ? this.a.ay : this.ar;
        }
        get financialChart_IndicatorsMenu_Indicator_StandardDeviation() {
            return !stringIsNullOrWhiteSpace(this.a.az) ? this.a.az : this.as;
        }
        get financialChart_IndicatorsMenu_Indicator_StochRSI() {
            return !stringIsNullOrWhiteSpace(this.a.a0) ? this.a.a0 : this.at;
        }
        get financialChart_IndicatorsMenu_Indicator_TRIX() {
            return !stringIsNullOrWhiteSpace(this.a.a1) ? this.a.a1 : this.au;
        }
        get financialChart_IndicatorsMenu_Indicator_TypicalPrice() {
            return !stringIsNullOrWhiteSpace(this.a.a2) ? this.a.a2 : this.av;
        }
        get financialChart_IndicatorsMenu_Indicator_UltimateOscillator() {
            return !stringIsNullOrWhiteSpace(this.a.a3) ? this.a.a3 : this.aw;
        }
        get financialChart_IndicatorsMenu_Indicator_WeightedClose() {
            return !stringIsNullOrWhiteSpace(this.a.a4) ? this.a.a4 : this.ax;
        }
        get financialChart_IndicatorsMenu_Indicator_WilliamsPercentR() {
            return !stringIsNullOrWhiteSpace(this.a.a5) ? this.a.a5 : this.ay;
        }
        get financialChart_IndicatorsMenu_TrendLine_CubicFit() {
            return !stringIsNullOrWhiteSpace(this.a.a8) ? this.a.a8 : this.a1;
        }
        get financialChart_IndicatorsMenu_TrendLine_CumulativeAverage() {
            return !stringIsNullOrWhiteSpace(this.a.a9) ? this.a.a9 : this.a2;
        }
        get financialChart_IndicatorsMenu_TrendLine_ExponentialAverage() {
            return !stringIsNullOrWhiteSpace(this.a.ba) ? this.a.ba : this.a3;
        }
        get financialChart_IndicatorsMenu_TrendLine_ExponentialFit() {
            return !stringIsNullOrWhiteSpace(this.a.bb) ? this.a.bb : this.a4;
        }
        get financialChart_IndicatorsMenu_TrendLine_LinearFit() {
            return !stringIsNullOrWhiteSpace(this.a.bc) ? this.a.bc : this.a5;
        }
        get financialChart_IndicatorsMenu_TrendLine_LogarithmicFit() {
            return !stringIsNullOrWhiteSpace(this.a.bd) ? this.a.bd : this.a6;
        }
        get financialChart_IndicatorsMenu_TrendLine_ModifiedAverage() {
            return !stringIsNullOrWhiteSpace(this.a.be) ? this.a.be : this.a7;
        }
        get financialChart_IndicatorsMenu_TrendLine_PowerLawFit() {
            return !stringIsNullOrWhiteSpace(this.a.bf) ? this.a.bf : this.a8;
        }
        get financialChart_IndicatorsMenu_TrendLine_QuadraticFit() {
            return !stringIsNullOrWhiteSpace(this.a.bg) ? this.a.bg : this.a9;
        }
        get financialChart_IndicatorsMenu_TrendLine_QuarticFit() {
            return !stringIsNullOrWhiteSpace(this.a.bh) ? this.a.bh : this.ba;
        }
        get financialChart_IndicatorsMenu_TrendLine_QuinticFit() {
            return !stringIsNullOrWhiteSpace(this.a.bi) ? this.a.bi : this.bb;
        }
        get financialChart_IndicatorsMenu_TrendLine_SimpleAverage() {
            return !stringIsNullOrWhiteSpace(this.a.bj) ? this.a.bj : this.bc;
        }
        get financialChart_IndicatorsMenu_TrendLine_WeightedAverage() {
            return !stringIsNullOrWhiteSpace(this.a.bk) ? this.a.bk : this.bd;
        }
        get financialChart_IndicatorsMenu_Volume_Area() {
            return !stringIsNullOrWhiteSpace(this.a.bl) ? this.a.bl : this.be;
        }
        get financialChart_IndicatorsMenu_Volume_Column() {
            return !stringIsNullOrWhiteSpace(this.a.bm) ? this.a.bm : this.bf;
        }
        get financialChart_IndicatorsMenu_Volume_Line() {
            return !stringIsNullOrWhiteSpace(this.a.bn) ? this.a.bn : this.bg;
        }
    }
    FinancialChartIndicatorMenuViewModel.$t = /*@__PURE__*/ markType(FinancialChartIndicatorMenuViewModel, 'FinancialChartIndicatorMenuViewModel', FinancialChartDropDownControlViewModel.$);
    return FinancialChartIndicatorMenuViewModel;
})();
