/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { IndicatorCalculationStrategy } from "./IndicatorCalculationStrategy";
import { String_$type, markType, getEnumerator } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
export let BollingerBandWidthIndicatorStrategy = /*@__PURE__*/ (() => {
    class BollingerBandWidthIndicatorStrategy extends IndicatorCalculationStrategy {
        b(a, b) {
            let c = new List$1(String_$type, 0);
            c.o(a.typicalColumn.basedOn);
            c.o(b.c.c);
            c.o(b.d.c);
            return c;
        }
        a(a, b) {
            let c = getEnumerator(b.c.b(a.typicalColumn, a.period));
            let d = getEnumerator(b.d.b(a.typicalColumn, a.period));
            let e = a.multiplier;
            let f = a.indicatorColumn;
            let g = 0;
            while (c.moveNext() && d.moveNext()) {
                let h = d.current * e;
                let i = c.current + h;
                let j = c.current - h;
                let k = c.current;
                let l = b.i((i - j) / k);
                f.item(g, l);
                g++;
            }
            return true;
        }
    }
    BollingerBandWidthIndicatorStrategy.$t = /*@__PURE__*/ markType(BollingerBandWidthIndicatorStrategy, 'BollingerBandWidthIndicatorStrategy', IndicatorCalculationStrategy.$);
    return BollingerBandWidthIndicatorStrategy;
})();
