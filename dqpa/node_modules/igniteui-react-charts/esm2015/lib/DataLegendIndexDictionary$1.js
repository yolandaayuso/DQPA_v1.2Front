/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Dictionary$2 } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Number_$type, fromEnum, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let DataLegendIndexDictionary$1 = /*@__PURE__*/ (() => {
    class DataLegendIndexDictionary$1 extends Dictionary$2 {
        constructor($tValue) {
            super(Number_$type, $tValue, 0);
            this.$tValue = null;
            this.$tValue = $tValue;
            this.$type = this.$type.specialize(this.$tValue);
        }
        q(a, b) {
            if (this.containsKey(a)) {
                this.item(a, b);
            }
            else {
                this.addItem(a, b);
            }
        }
        p(a) {
            let b = new List$1(this.$tValue, 0);
            for (let c of fromEnum(a)) {
                b.add(this.item(c));
            }
            return b.toArray();
        }
    }
    DataLegendIndexDictionary$1.$t = /*@__PURE__*/ markType(DataLegendIndexDictionary$1, 'DataLegendIndexDictionary$1', /*@__PURE__*/ Dictionary$2.$.specialize(Number_$type, 0));
    return DataLegendIndexDictionary$1;
})();
