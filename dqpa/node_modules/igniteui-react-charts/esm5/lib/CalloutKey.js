/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var CalloutKey = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CalloutKey, _super);
    function CalloutKey(a, b) {
        var _this = _super.call(this) || this;
        _this._item = null;
        _this.a = null;
        _this.item = a;
        _this.a = b;
        return _this;
    }
    Object.defineProperty(CalloutKey.prototype, "item", {
        get: function () {
            return this._item;
        },
        set: function (a) {
            this._item = a;
        },
        enumerable: false,
        configurable: true
    });
    CalloutKey.prototype.getHashCode = function () {
        return Base.getHashCodeStatic(this.item) ^ Base.getHashCodeStatic(this.a);
    };
    CalloutKey.prototype.equals = function (a) {
        var b = typeCast(CalloutKey.$, a);
        if (b == null) {
            return _super.prototype.equals.call(this, a);
        }
        return Base.referenceEquals(this.item, b.item) && this.a == b.a;
    };
    CalloutKey.$t = markType(CalloutKey, 'CalloutKey');
    return CalloutKey;
}(Base));
export { CalloutKey };
