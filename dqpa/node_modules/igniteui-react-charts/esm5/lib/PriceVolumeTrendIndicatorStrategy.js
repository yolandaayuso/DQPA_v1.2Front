/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { IndicatorCalculationStrategy } from "./IndicatorCalculationStrategy";
import { String_$type, markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
var PriceVolumeTrendIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PriceVolumeTrendIndicatorStrategy, _super);
    function PriceVolumeTrendIndicatorStrategy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PriceVolumeTrendIndicatorStrategy.prototype.b = function (a, b) {
        var c = new List$1(String_$type, 0);
        c.add("VolumeColumn");
        c.add("CloseColumn");
        return c;
    };
    PriceVolumeTrendIndicatorStrategy.prototype.a = function (a, b) {
        var c = 0;
        var d = a.indicatorColumn;
        var e = a.volumeColumn;
        var f = a.closeColumn;
        var g = a.count;
        if (g > 0) {
            d.item(0, c);
        }
        for (var h = 1; h < g; ++h) {
            c = c + b.i(e.item(h) * (f.item(h) - f.item(h - 1)) / f.item(h - 1));
            d.item(h, c);
        }
        return true;
    };
    PriceVolumeTrendIndicatorStrategy.$t = markType(PriceVolumeTrendIndicatorStrategy, 'PriceVolumeTrendIndicatorStrategy', IndicatorCalculationStrategy.$);
    return PriceVolumeTrendIndicatorStrategy;
}(IndicatorCalculationStrategy));
export { PriceVolumeTrendIndicatorStrategy };
