/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var SeriesRenderer$2 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SeriesRenderer$2, _super);
    function SeriesRenderer$2($tFrame, $tView, a) {
        var _rest = [];
        for (var _i = 3; _i < arguments.length; _i++) {
            _rest[_i - 3] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.$tFrame = null;
        _this.$tView = null;
        _this.c = null;
        _this.d = null;
        _this.a = null;
        _this.e = null;
        _this.f = null;
        _this.b = null;
        _this.$tFrame = $tFrame;
        _this.$tView = $tView;
        _this.$type = _this.$type.specialize(_this.$tFrame, _this.$tView);
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    _this.c = c;
                    _this.d = d;
                    _this.a = function (h) {
                    };
                    _this.f = e;
                    _this.e = f;
                    _this.b = g;
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    var g = _rest[4];
                    var h = _rest[5];
                    _this.c = c;
                    _this.d = d;
                    _this.a = h;
                    _this.f = e;
                    _this.e = f;
                    _this.b = g;
                }
                break;
        }
        return _this;
    }
    SeriesRenderer$2.prototype.g = function (a, b, c, d, e) {
        var f = 0;
        f = a.c;
        if (a.a && f > 0 && !a.b) {
            var g = b;
            if (this.f()) {
                this.b();
                b = d;
                d = g;
            }
            else {
                b = c;
                c = g;
            }
            this.a(c);
            this.c(c, e);
            this.e();
        }
        else {
            if (!a.b) {
                this.a(c);
                this.c(c, e);
            }
            this.d(c, e);
        }
        return {
            p1: b,
            p2: c,
            p3: d
        };
    };
    SeriesRenderer$2.$t = markType(SeriesRenderer$2, 'SeriesRenderer$2');
    return SeriesRenderer$2;
}(Base));
export { SeriesRenderer$2 };
