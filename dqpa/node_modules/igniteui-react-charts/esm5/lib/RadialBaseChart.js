/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { DomainChart } from "./DomainChart";
import { fromEnum, enumGetBox, markType } from "igniteui-react-core";
import { HorizontalAlignment_$type } from "igniteui-react-core";
import { VerticalAlignment_$type } from "igniteui-react-core";
import { Visibility_$type } from "igniteui-react-core";
import { ValueAxisLabelLocation_$type } from "./ValueAxisLabelLocation";
import { AngleAxisLabelLocation_$type } from "./AngleAxisLabelLocation";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { AxisDefaults } from "./AxisDefaults";
import { TitleSettings } from "./TitleSettings";
import { ScalerParams } from "./ScalerParams";
import { DeviceUtils } from "igniteui-react-core";
/**
 * @hidden
 */
var RadialBaseChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialBaseChart, _super);
    function RadialBaseChart() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.z6 = null;
        _this.z7 = null;
        _this.aal = 0;
        _this.aan = 5;
        _this.aam = 0;
        _this.aak = 5;
        _this.aa2 = 5;
        _this.aa4 = 0;
        _this.aa3 = 5;
        _this.aa1 = 0;
        _this.afv = null;
        _this.af2 = null;
        _this.aft = null;
        _this.afu = null;
        _this.aaw = 0;
        _this.abd = 0;
        _this.aav = NaN;
        _this.abc = NaN;
        _this.aay = NaN;
        _this.abf = NaN;
        _this.aax = NaN;
        _this.abe = NaN;
        _this.aau = NaN;
        _this.abb = NaN;
        _this.af1 = null;
        _this.af8 = null;
        _this.acn = null;
        _this.acr = null;
        _this.acp = null;
        _this.act = null;
        _this.aci = null;
        _this.acj = null;
        _this.afw = null;
        _this.af3 = null;
        _this.aao = DeviceUtils.g(1);
        _this.aa5 = DeviceUtils.g(1);
        _this.aap = DeviceUtils.g(1);
        _this.aa6 = DeviceUtils.g(1);
        _this.afy = null;
        _this.af5 = null;
        _this.afz = null;
        _this.af6 = null;
        _this.aaq = DeviceUtils.g(1);
        _this.aa7 = DeviceUtils.g(1);
        _this.aar = DeviceUtils.g(8);
        _this.aa8 = 0;
        _this.af0 = null;
        _this.af7 = null;
        _this.aas = DeviceUtils.g(1);
        _this.aa9 = DeviceUtils.g(1);
        _this.aco = null;
        _this.acs = null;
        _this.afx = null;
        _this.af4 = null;
        _this.aaj = 0;
        _this.aa0 = 0;
        _this.aai = NaN;
        _this.aaz = NaN;
        _this.aat = 0;
        _this.aba = -90;
        _this.aae = false;
        _this.aaf = false;
        _this.afo = 1;
        _this.agr = 1;
        _this.afn = 1;
        _this.afp = 2;
        _this.agp = 0;
        _this.agq = 1;
        _this.agv = 0;
        _this.agw = 0;
        _this.aac = 4;
        _this.z2 = 4;
        _this.acm = null;
        _this.zy = null;
        _this.acq = null;
        _this.zz = null;
        return _this;
    }
    RadialBaseChart.prototype.provideContainer = function (a) {
        if (a != null) {
            var b = this.z4();
            var c = this.z5();
            if (b != null) {
                b.provideRenderer(a);
            }
            if (c != null) {
                c.provideRenderer(a);
            }
        }
        _super.prototype.provideContainer.call(this, a);
    };
    RadialBaseChart.prototype.u5 = function () {
        _super.prototype.u5.call(this);
        var a = this.z4();
        var b = this.z5();
        if (a != null && a.az != null) {
            this.agb = a.az.textColor;
        }
        if (b != null && b.az != null) {
            this.agi = b.az.textColor;
        }
        this.agg = AxisDefaults.j;
        this.agn = AxisDefaults.j;
        this.agc = AxisDefaults.h;
        this.agj = AxisDefaults.h;
        this.agf = AxisDefaults.g;
        this.agm = AxisDefaults.g;
    };
    RadialBaseChart.prototype.vx = function (a, b, c) {
        var _this = this;
        _super.prototype.vx.call(this, a, b, c);
        switch (a) {
            case "AngleAxisLabelLeftMargin":
                this.aff(function (d) { return d.leftMargin = _this.abj; });
                break;
            case "AngleAxisLabelTopMargin":
                this.aff(function (d) { return d.topMargin = _this.abl; });
                break;
            case "AngleAxisLabelRightMargin":
                this.aff(function (d) { return d.rightMargin = _this.abk; });
                break;
            case "AngleAxisLabelBottomMargin":
                this.aff(function (d) { return d.bottomMargin = _this.abi; });
                break;
            case "ValueAxisLabelLeftMargin":
                this.afk(function (d) { return d.leftMargin = _this.ab4; });
                break;
            case "ValueAxisLabelTopMargin":
                this.afk(function (d) { return d.topMargin = _this.ab6; });
                break;
            case "ValueAxisLabelRightMargin":
                this.afk(function (d) { return d.rightMargin = _this.ab5; });
                break;
            case "ValueAxisLabelBottomMargin":
                this.afk(function (d) { return d.bottomMargin = _this.ab3; });
                break;
            case "ActualItemsSource":
            case "ShouldDisplayMockData":
            case "ShouldUseSkeletonStyleForMockData":
                this.af9 = this.yw(this.agb);
                this.aga = this.yw(this.agi);
                break;
            case "AngleAxisLabelTextColor":
                this.af9 = this.yw(this.agb);
                break;
            case "ValueAxisLabelTextColor":
                this.aga = this.yw(this.agi);
                break;
            case "ActualAngleAxisLabelTextColor":
                this.aff(function (d) { return d.textColor = _this.af9; });
                break;
            case "ActualValueAxisLabelTextColor":
                this.afk(function (d) { return d.textColor = _this.aga; });
                break;
            case "AngleAxisTitleMargin":
                this.afh(function (d) { return d.margin = _this.abu; });
                break;
            case "ValueAxisTitleMargin":
                this.afm(function (d) { return d.margin = _this.acf; });
                break;
            case "AngleAxisTitleLeftMargin":
                this.afh(function (d) { return d.leftMargin = _this.abt; });
                break;
            case "ValueAxisTitleLeftMargin":
                this.afm(function (d) { return d.leftMargin = _this.ace; });
                break;
            case "AngleAxisTitleTopMargin":
                this.afh(function (d) { return d.topMargin = _this.abw; });
                break;
            case "ValueAxisTitleTopMargin":
                this.afm(function (d) { return d.topMargin = _this.ach; });
                break;
            case "AngleAxisTitleRightMargin":
                this.afh(function (d) { return d.rightMargin = _this.abv; });
                break;
            case "ValueAxisTitleRightMargin":
                this.afm(function (d) { return d.rightMargin = _this.acg; });
                break;
            case "AngleAxisTitleBottomMargin":
                this.afh(function (d) { return d.bottomMargin = _this.abs; });
                break;
            case "ValueAxisTitleBottomMargin":
                this.afm(function (d) { return d.bottomMargin = _this.acd; });
                break;
            case "AngleAxisTitleTextColor":
                this.afh(function (d) { return d.textColor = _this.agh; });
                break;
            case "ValueAxisTitleTextColor":
                this.afm(function (d) { return d.textColor = _this.ago; });
                break;
            case "AngleAxisFormatLabel":
                this.afd(function (d) { return d.au = _this.z8; });
                break;
            case "ValueAxisFormatLabel":
                this.afi(function (d) { return d.au = _this.z9; });
                break;
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "z8", {
        get: function () {
            return this.z6;
        },
        set: function (a) {
            var b = this.z8;
            if (a != b) {
                this.z6 = a;
                this.vu("AngleAxisFormatLabel", b, this.z8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "z9", {
        get: function () {
            return this.z7;
        },
        set: function (a) {
            var b = this.z9;
            if (a != b) {
                this.z7 = a;
                this.vu("ValueAxisFormatLabel", b, this.z9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abj", {
        get: function () {
            return this.aal;
        },
        set: function (a) {
            var b = this.abj;
            if (a != b) {
                this.aal = a;
                this.vu("AngleAxisLabelLeftMargin", b, this.abj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abl", {
        get: function () {
            return this.aan;
        },
        set: function (a) {
            var b = this.abl;
            if (a != b) {
                this.aan = a;
                this.vu("AngleAxisLabelTopMargin", b, this.abl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abk", {
        get: function () {
            return this.aam;
        },
        set: function (a) {
            var b = this.abk;
            if (a != b) {
                this.aam = a;
                this.vu("AngleAxisLabelRightMargin", b, this.abk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abi", {
        get: function () {
            return this.aak;
        },
        set: function (a) {
            var b = this.abi;
            if (a != b) {
                this.aak = a;
                this.vu("AngleAxisLabelBottomMargin", b, this.abi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab4", {
        get: function () {
            return this.aa2;
        },
        set: function (a) {
            var b = this.ab4;
            if (a != b) {
                this.aa2 = a;
                this.vu("ValueAxisLabelLeftMargin", b, this.ab4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab6", {
        get: function () {
            return this.aa4;
        },
        set: function (a) {
            var b = this.ab6;
            if (a != b) {
                this.aa4 = a;
                this.vu("ValueAxisLabelTopMargin", b, this.ab6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab5", {
        get: function () {
            return this.aa3;
        },
        set: function (a) {
            var b = this.ab5;
            if (a != b) {
                this.aa3 = a;
                this.vu("ValueAxisLabelRightMargin", b, this.ab5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab3", {
        get: function () {
            return this.aa1;
        },
        set: function (a) {
            var b = this.ab3;
            if (a != b) {
                this.aa1 = a;
                this.vu("ValueAxisLabelBottomMargin", b, this.ab3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agb", {
        get: function () {
            return this.afv;
        },
        set: function (a) {
            var b = this.agb;
            if (a != b) {
                this.afv = a;
                this.vu("AngleAxisLabelTextColor", b, this.agb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agi", {
        get: function () {
            return this.af2;
        },
        set: function (a) {
            var b = this.agi;
            if (a != b) {
                this.af2 = a;
                this.vu("ValueAxisLabelTextColor", b, this.agi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "af9", {
        get: function () {
            return this.aft;
        },
        set: function (a) {
            var b = this.aft;
            if (a != b) {
                this.aft = a;
                this.vu("ActualAngleAxisLabelTextColor", b, this.af9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aga", {
        get: function () {
            return this.afu;
        },
        set: function (a) {
            var b = this.afu;
            if (a != b) {
                this.afu = a;
                this.vu("ActualValueAxisLabelTextColor", b, this.aga);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abu", {
        get: function () {
            return this.aaw;
        },
        set: function (a) {
            var b = this.abu;
            if (a != b) {
                this.aaw = a;
                this.vu("AngleAxisTitleMargin", b, this.abu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "acf", {
        get: function () {
            return this.abd;
        },
        set: function (a) {
            var b = this.acf;
            if (a != b) {
                this.abd = a;
                this.vu("ValueAxisTitleMargin", b, this.acf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abt", {
        get: function () {
            return this.aav;
        },
        set: function (a) {
            var b = this.abt;
            if (a != b) {
                this.aav = a;
                this.vu("AngleAxisTitleLeftMargin", b, this.abt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ace", {
        get: function () {
            return this.abc;
        },
        set: function (a) {
            var b = this.ace;
            if (a != b) {
                this.abc = a;
                this.vu("ValueAxisTitleLeftMargin", b, this.ace);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abw", {
        get: function () {
            return this.aay;
        },
        set: function (a) {
            var b = this.abw;
            if (a != b) {
                this.aay = a;
                this.vu("AngleAxisTitleTopMargin", b, this.abw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ach", {
        get: function () {
            return this.abf;
        },
        set: function (a) {
            var b = this.ach;
            if (a != b) {
                this.abf = a;
                this.vu("ValueAxisTitleTopMargin", b, this.ach);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abv", {
        get: function () {
            return this.aax;
        },
        set: function (a) {
            var b = this.abv;
            if (a != b) {
                this.aax = a;
                this.vu("AngleAxisTitleRightMargin", b, this.abv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "acg", {
        get: function () {
            return this.abe;
        },
        set: function (a) {
            var b = this.acg;
            if (a != b) {
                this.abe = a;
                this.vu("ValueAxisTitleRightMargin", b, this.acg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abs", {
        get: function () {
            return this.aau;
        },
        set: function (a) {
            var b = this.abs;
            if (a != b) {
                this.aau = a;
                this.vu("AngleAxisTitleBottomMargin", b, this.abs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "acd", {
        get: function () {
            return this.abb;
        },
        set: function (a) {
            var b = this.acd;
            if (a != b) {
                this.abb = a;
                this.vu("ValueAxisTitleBottomMargin", b, this.acd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agh", {
        get: function () {
            return this.af1;
        },
        set: function (a) {
            var b = this.agh;
            if (a != b) {
                this.af1 = a;
                this.vu("AngleAxisTitleTextColor", b, this.agh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ago", {
        get: function () {
            return this.af8;
        },
        set: function (a) {
            var b = this.ago;
            if (a != b) {
                this.af8 = a;
                this.vu("ValueAxisTitleTextColor", b, this.ago);
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.vy = function (a, b, c) {
        var _this = this;
        _super.prototype.vy.call(this, a, b, c);
        switch (a) {
            case "AngleAxisLabelTextStyle":
                this.aff(function (d) { return d.textStyle = _this.ada; });
                break;
            case "ValueAxisLabelTextStyle":
                this.afk(function (d) { return d.textStyle = _this.aeg; });
                break;
            case "AngleAxisTitleTextStyle":
                this.afh(function (d) { return d.textStyle = _this.ady; });
                break;
            case "ValueAxisTitleTextStyle":
                this.afm(function (d) { return d.textStyle = _this.ae4; });
                break;
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "ada", {
        get: function () {
            return this.acn;
        },
        set: function (a) {
            var b = this.ada;
            if (a != b) {
                this.acn = a;
                this.vu("AngleAxisLabelTextStyle", b, this.ada);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aeg", {
        get: function () {
            return this.acr;
        },
        set: function (a) {
            var b = this.aeg;
            if (a != b) {
                this.acr = a;
                this.vu("ValueAxisLabelTextStyle", b, this.aeg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ady", {
        get: function () {
            return this.acp;
        },
        set: function (a) {
            var b = this.ady;
            if (a != b) {
                this.acp = a;
                this.vu("AngleAxisTitleTextStyle", b, this.ady);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ae4", {
        get: function () {
            return this.act;
        },
        set: function (a) {
            var b = this.ae4;
            if (a != b) {
                this.act = a;
                this.vu("ValueAxisTitleTextStyle", b, this.ae4);
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.afa = function (a) {
        var _this = this;
        this.ae7(a, function (b) { return b.leftMargin = _this.abj; });
        this.ae7(a, function (b) { return b.topMargin = _this.abl; });
        this.ae7(a, function (b) { return b.rightMargin = _this.abk; });
        this.ae7(a, function (b) { return b.bottomMargin = _this.abi; });
        this.ae7(a, function (b) { return b.textColor = _this.af9; });
        this.ae8(a, function (b) { return b.textColor = _this.agh; });
        this.ae8(a, function (b) { return b.leftMargin = _this.abt; });
        this.ae8(a, function (b) { return b.topMargin = _this.abw; });
        this.ae8(a, function (b) { return b.rightMargin = _this.abv; });
        this.ae8(a, function (b) { return b.bottomMargin = _this.abs; });
        this.ae7(a, function (b) { return b.textStyle = _this.ada; });
        this.ae8(a, function (b) { return b.textStyle = _this.ady; });
    };
    RadialBaseChart.prototype.afc = function (a) {
        var _this = this;
        this.ae7(a, function (b) { return b.leftMargin = _this.ab4; });
        this.ae7(a, function (b) { return b.topMargin = _this.ab6; });
        this.ae7(a, function (b) { return b.rightMargin = _this.ab5; });
        this.ae7(a, function (b) { return b.bottomMargin = _this.ab3; });
        this.ae7(a, function (b) { return b.textColor = _this.aga; });
        this.ae8(a, function (b) { return b.textColor = _this.ago; });
        this.ae8(a, function (b) { return b.leftMargin = _this.ace; });
        this.ae8(a, function (b) { return b.topMargin = _this.ach; });
        this.ae8(a, function (b) { return b.rightMargin = _this.acg; });
        this.ae8(a, function (b) { return b.bottomMargin = _this.acd; });
        this.ae7(a, function (b) { return b.textStyle = _this.aeg; });
        this.ae8(a, function (b) { return b.textStyle = _this.ae4; });
    };
    RadialBaseChart.prototype.wo = function (a) {
        var b = this.be(a);
        var c = this.dc(a, b);
        if (c == null) {
            return;
        }
        c.itemsSource = this.h1(a);
        if (a.highlightedData != null) {
            c.highlightedItemsSource = this.h2(a);
        }
        c.name = this.qo(a);
        c.title = this.qp(a, b);
        this.dataChart.series.add(c);
    };
    RadialBaseChart.prototype.afd = function (a) {
        this.afe(a, null);
    };
    RadialBaseChart.prototype.afe = function (a, b) {
        a(this.z4());
    };
    RadialBaseChart.prototype.afj = function (a, b) {
        a(this.z5());
    };
    RadialBaseChart.prototype.afi = function (a) {
        this.afj(a, true);
    };
    RadialBaseChart.prototype.uo = function (a, b) {
        this.afd(a);
        this.afj(a, b);
    };
    RadialBaseChart.prototype.afh = function (a) {
        this.ae8(this.z4(), a);
    };
    RadialBaseChart.prototype.afm = function (a) {
        this.ae8(this.z5(), a);
    };
    RadialBaseChart.prototype.afk = function (a) {
        this.ae7(this.z5(), a);
    };
    RadialBaseChart.prototype.aff = function (a) {
        this.ae7(this.z4(), a);
    };
    RadialBaseChart.prototype.abx = function (a) {
        var b = this.z4();
        return b.el(a, new ScalerParams(1, this.y5, this.y4, b.ch));
    };
    RadialBaseChart.prototype.abz = function (a) {
        var b = this.z4();
        return b.eo(a, new ScalerParams(1, this.y5, this.y4, b.ch));
    };
    RadialBaseChart.prototype.aby = function (a) {
        var b = this.z5();
        return b.el(a, new ScalerParams(1, this.y5, this.y4, b.ch));
    };
    RadialBaseChart.prototype.ab0 = function (a) {
        var b = this.z5();
        return b.eo(a, new ScalerParams(1, this.y5, this.y4, b.ch));
    };
    RadialBaseChart.prototype.wl = function (a) {
        _super.prototype.wl.call(this, a);
        if (a == null) {
            return;
        }
        if (a.axes != null) {
            var b = this.z4();
            var c = this.z5();
            if (a.axes.contains(b)) {
                a.axes.remove(b);
            }
            if (a.axes.contains(c)) {
                a.axes.remove(c);
            }
        }
    };
    RadialBaseChart.ad1 = function (a, b) {
        var e_1, _a;
        try {
            for (var _b = __values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                var d = c.findMatchingHint(16);
                if (d != null) {
                    var e = d.path;
                    return e;
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return null;
    };
    RadialBaseChart.prototype.u0 = function (a, b) {
        _super.prototype.u0.call(this, a, b);
        if (a == this.dataChart) {
            this.dataChart.axes.add(this.z4());
            this.dataChart.axes.add(this.z5());
        }
    };
    RadialBaseChart.prototype.ae9 = function (a) {
        var _this = this;
        if (a != null && this.lt != null && a.fn == null) {
            a.provideRenderer(this.lt);
        }
        a.jz = this.agc;
        a.et = this.abm;
        a.j0 = this.agd;
        a.ew = this.abn;
        a.j2 = this.agf;
        a.fi = this.abo;
        a.j1 = this.age;
        a.fj = this.abp;
        a.j3 = this.agg;
        a.fk = this.abq;
        a.c4 = true;
        a.cu = this.shouldAvoidAxisAnnotationCollisions;
        a.cw = this.shouldAvoidAxisAnnotationCollisions;
        var b = a == this.z4();
        if (b) {
            a.g8 = this.adp;
        }
        a.f2 = this.ack;
        a.gi = this.ac1;
        a.ah = this.z0;
        this.ae7(a, function (c) { return c.angle = _this.abh; });
        this.ae7(a, function (c) {
            if (c.extent != _this.abg) {
                c.extent = _this.abg;
            }
        });
        this.ae7(a, function (c) { return c.horizontalAlignment = _this.afq; });
        this.ae7(a, function (c) { return c.verticalAlignment = _this.ags; });
        this.ae7(a, function (c) { return c.visibility = _this.agx; });
        this.ae7(a, function (c) { return c.location = _this.aaa(_this.z3); });
        this.ae8(a, function (c) { return c.horizontalAlignment = _this.afr; });
        this.ae8(a, function (c) { return c.angle = _this.abr; });
        this.afa(a);
    };
    RadialBaseChart.prototype.afb = function (a) {
        var _this = this;
        if (a == null) {
            return;
        }
        if (this.lt != null && a.fn == null) {
            a.provideRenderer(this.lt);
        }
        a.cu = this.shouldAvoidAxisAnnotationCollisions;
        a.cw = this.shouldAvoidAxisAnnotationCollisions;
        this.ae7(a, function (b) { return b.angle = _this.ab2; });
        this.ae7(a, function (b) {
            if (b.extent != _this.ab1) {
                b.extent = _this.ab1;
            }
        });
        this.ae7(a, function (b) { return b.horizontalAlignment = _this.afs; });
        this.ae7(a, function (b) { return b.verticalAlignment = _this.agt; });
        this.ae7(a, function (b) { return b.visibility = _this.agy; });
        this.ae7(a, function (b) { return b.location = _this.aab(_this.aad); });
        this.ae8(a, function (b) { return b.verticalAlignment = _this.agu; });
        this.ae8(a, function (b) { return b.angle = _this.acc; });
        a.jz = this.agj;
        a.et = this.ab7;
        a.j0 = this.agk;
        a.ew = this.ab8;
        a.j2 = this.agm;
        a.fi = this.ab9;
        a.j1 = this.agl;
        a.fj = this.aca;
        a.j3 = this.agn;
        a.fk = this.acb;
        var b = a == this.z5();
        if (b) {
            a.g8 = this.aev;
        }
        a.gi = this.ad7;
        a.ah = this.z1;
        this.afc(a);
    };
    RadialBaseChart.prototype.ux = function () {
        _super.prototype.ux.call(this);
        this.ae9(this.z4());
        this.afb(this.z5());
    };
    RadialBaseChart.prototype.ae7 = function (a, b) {
        if (a == null) {
            return;
        }
        if (a.az == null) {
            a.az = new AxisLabelSettings();
            a.az.angle = a.d7();
            a.az.bottomMargin = a.d8();
            a.az.leftMargin = a.d9();
            a.az.rightMargin = a.ea();
            a.az.topMargin = a.eb();
            a.az.horizontalAlignment = a.ju();
            a.az.location = a.a0();
            a.az.verticalAlignment = a.ko();
        }
        b(a.az);
    };
    RadialBaseChart.prototype.ae8 = function (a, b) {
        if (a == null) {
            return;
        }
        if (a.bf == null) {
            a.bf = new TitleSettings();
            a.bf.bottomMargin = a.ed();
            a.bf.leftMargin = a.ee();
            a.bf.rightMargin = a.ef();
            a.bf.topMargin = a.eg();
            a.bf.location = a.a1();
            a.bf.angle = a.ec();
            a.bf.horizontalAlignment = a.jv();
            a.bf.verticalAlignment = a.kp();
        }
        b(a.bf);
    };
    RadialBaseChart.prototype.vu = function (a, b, c) {
        var _this = this;
        _super.prototype.vu.call(this, a, b, c);
        switch (a) {
            case "AngleAxisLabelAngle":
                this.aff(function (d) { return d.angle = _this.abh; });
                break;
            case "ValueAxisLabelAngle":
                this.afk(function (d) { return d.angle = _this.ab2; });
                break;
            case "AngleAxisLabelHorizontalAlignment":
                this.aff(function (d) { return d.horizontalAlignment = _this.afq; });
                break;
            case "ValueAxisLabelHorizontalAlignment":
                this.afk(function (d) { return d.horizontalAlignment = _this.afs; });
                break;
            case "AngleAxisLabelVerticalAlignment":
                this.aff(function (d) { return d.verticalAlignment = _this.ags; });
                break;
            case "ValueAxisLabelVerticalAlignment":
                this.afk(function (d) { return d.verticalAlignment = _this.agt; });
                break;
            case "AngleAxisLabelVisibility":
                this.aff(function (d) { return d.visibility = _this.agx; });
                break;
            case "ValueAxisLabelVisibility":
                this.afk(function (d) { return d.visibility = _this.agy; });
                break;
            case "AngleAxisLabel":
                this.afd(function (d) { return d.f2 = _this.ack; });
                break;
            case "ValueAxisLabel":
                this.afi(function (d) { return d.f2 = _this.acl; });
                break;
            case "AngleAxisLabelFormat":
                this.afd(function (d) { return d.gi = _this.ac1; });
                break;
            case "AngleAxisLabelFormatSpecifiers":
                this.afd(function (d) { return d.ah = _this.z0; });
                break;
            case "ValueAxisLabelFormat":
                this.afi(function (d) { return d.gi = _this.ad7; });
                break;
            case "ValueAxisLabelFormatSpecifiers":
                this.afi(function (d) { return d.ah = _this.z1; });
                break;
            case "AngleAxisTitleAngle":
                this.afh(function (d) { return d.angle = _this.abr; });
                break;
            case "ValueAxisTitleAngle":
                this.afm(function (d) { return d.angle = _this.acc; });
                break;
            case "AngleAxisTitleAlignment":
                this.afh(function (d) { return d.horizontalAlignment = _this.afr; });
                break;
            case "ValueAxisTitleAlignment":
                this.afm(function (d) { return d.verticalAlignment = _this.agu; });
                break;
            case "AngleAxisTitle":
                this.afd(function (d) { return d.g8 = _this.adp; });
                break;
            case "ValueAxisTitle":
                this.afj(function (d) { return d.g8 = _this.aev; }, false);
                break;
            case "AngleAxisMajorStroke":
                this.afe(function (d) { return d.jz = _this.agc; }, a);
                break;
            case "ValueAxisMajorStroke":
                this.afi(function (d) { return d.jz = _this.agj; });
                break;
            case "AngleAxisMajorStrokeThickness":
                this.afe(function (d) { return d.et = _this.abm; }, a);
                break;
            case "ValueAxisMajorStrokeThickness":
                this.afi(function (d) { return d.et = _this.ab7; });
                break;
            case "AngleAxisMinorStroke":
                this.afd(function (d) { return d.j0 = _this.agd; });
                break;
            case "ValueAxisMinorStroke":
                this.afi(function (d) { return d.j0 = _this.agk; });
                break;
            case "AngleAxisMinorStrokeThickness":
                this.afd(function (d) { return d.ew = _this.abn; });
                break;
            case "ValueAxisMinorStrokeThickness":
                this.afi(function (d) { return d.ew = _this.ab8; });
                break;
            case "AngleAxisTickLength":
                this.afd(function (d) { return d.fj = _this.abp; });
                break;
            case "ValueAxisTickLength":
                this.afi(function (d) { return d.fj = _this.aca; });
                break;
            case "AngleAxisTickStroke":
                this.afd(function (d) { return d.j3 = _this.agg; });
                break;
            case "ValueAxisTickStroke":
                this.afi(function (d) { return d.j3 = _this.agn; });
                break;
            case "AngleAxisTickStrokeThickness":
                this.afd(function (d) { return d.fk = _this.abq; });
                break;
            case "ValueAxisTickStrokeThickness":
                this.afi(function (d) { return d.fk = _this.acb; });
                break;
            case "AngleAxisStroke":
                this.afd(function (d) { return d.j2 = _this.agf; });
                break;
            case "ValueAxisStroke":
                this.afi(function (d) { return d.j2 = _this.agm; });
                break;
            case "AngleAxisStrokeThickness":
                this.afd(function (d) { return d.fi = _this.abo; });
                break;
            case "ValueAxisStrokeThickness":
                this.afi(function (d) { return d.fi = _this.ab9; });
                break;
            case "AngleAxisExtent":
                this.aff(function (d) { return d.extent = _this.abg; });
                break;
            case "ValueAxisExtent":
                this.afk(function (d) { return d.extent = _this.ab1; });
                break;
            case "AngleAxisStrip":
                this.afd(function (d) { return d.j1 = _this.age; });
                break;
            case "ValueAxisStrip":
                this.afi(function (d) { return d.j1 = _this.agl; });
                break;
            case "AngleAxisInverted":
                this.afd(function (d) { return d.ch = _this.aag; });
                break;
            case "ValueAxisInverted":
                this.afi(function (d) { return d.ch = _this.aah; });
                break;
            case "ValueAxisLabelLocation":
                this.afl();
                break;
            case "AngleAxisLabelLocation":
                this.afg();
                break;
        }
    };
    RadialBaseChart.prototype.afl = function () {
        var a = this.aab(this.aad);
        if (a == 2 || a == 7) {
            this.afs = 2;
        }
        else {
            this.afs = 0;
        }
        this.afk(function (b) { return b.location = a; });
    };
    RadialBaseChart.prototype.afg = function () {
        var a = this.aaa(this.z3);
        if (a == 1 || a == 5) {
            this.ags = 0;
        }
        else {
            this.ags = 2;
        }
        this.aff(function (b) { return b.location = a; });
    };
    RadialBaseChart.prototype.aab = function (a) {
        if (a == 0) {
            return 2;
        }
        else if (a == 1) {
            return 3;
        }
        else if (a == 3) {
            return 7;
        }
        else if (a == 2) {
            return 6;
        }
        else {
            if (this.cb == 1) {
                return 3;
            }
            else {
                return 2;
            }
        }
    };
    RadialBaseChart.prototype.aaa = function (a) {
        if (a == 1) {
            return 1;
        }
        else if (a == 0) {
            return 0;
        }
        else if (a == 3) {
            return 5;
        }
        else if (a == 2) {
            return 4;
        }
        else {
            return 1;
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "ack", {
        get: function () {
            return this.aci;
        },
        set: function (a) {
            var b = this.ack;
            if (a != b) {
                this.aci = a;
                this.vu("AngleAxisLabel", b, this.ack);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "acl", {
        get: function () {
            return this.acj;
        },
        set: function (a) {
            var b = this.acl;
            if (a != b) {
                this.acj = a;
                this.vu("ValueAxisLabel", b, this.acl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agc", {
        get: function () {
            return this.afw;
        },
        set: function (a) {
            var b = this.agc;
            if (a != b) {
                this.afw = a;
                this.vu("AngleAxisMajorStroke", b, this.agc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agj", {
        get: function () {
            return this.af3;
        },
        set: function (a) {
            var b = this.agj;
            if (a != b) {
                this.af3 = a;
                this.vu("ValueAxisMajorStroke", b, this.agj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abm", {
        get: function () {
            return this.aao;
        },
        set: function (a) {
            var b = this.abm;
            if (a != b) {
                this.aao = a;
                this.vu("AngleAxisMajorStrokeThickness", b, this.abm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab7", {
        get: function () {
            return this.aa5;
        },
        set: function (a) {
            var b = this.ab7;
            if (a != b) {
                this.aa5 = a;
                this.vu("ValueAxisMajorStrokeThickness", b, this.ab7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abn", {
        get: function () {
            return this.aap;
        },
        set: function (a) {
            var b = this.abn;
            if (a != b) {
                this.aap = a;
                this.vu("AngleAxisMinorStrokeThickness", b, this.abn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab8", {
        get: function () {
            return this.aa6;
        },
        set: function (a) {
            var b = this.ab8;
            if (a != b) {
                this.aa6 = a;
                this.vu("ValueAxisMinorStrokeThickness", b, this.ab8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "age", {
        get: function () {
            return this.afy;
        },
        set: function (a) {
            var b = this.age;
            if (a != b) {
                this.afy = a;
                this.vu("AngleAxisStrip", b, this.age);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agl", {
        get: function () {
            return this.af5;
        },
        set: function (a) {
            var b = this.agl;
            if (a != b) {
                this.af5 = a;
                this.vu("ValueAxisStrip", b, this.agl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agf", {
        get: function () {
            return this.afz;
        },
        set: function (a) {
            var b = this.agf;
            if (a != b) {
                this.afz = a;
                this.vu("AngleAxisStroke", b, this.agf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agm", {
        get: function () {
            return this.af6;
        },
        set: function (a) {
            var b = this.agm;
            if (a != b) {
                this.af6 = a;
                this.vu("ValueAxisStroke", b, this.agm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abo", {
        get: function () {
            return this.aaq;
        },
        set: function (a) {
            var b = this.abo;
            if (a != b) {
                this.aaq = a;
                this.vu("AngleAxisStrokeThickness", b, this.abo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab9", {
        get: function () {
            return this.aa7;
        },
        set: function (a) {
            var b = this.ab9;
            if (a != b) {
                this.aa7 = a;
                this.vu("ValueAxisStrokeThickness", b, this.ab9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abp", {
        get: function () {
            return this.aar;
        },
        set: function (a) {
            var b = this.abp;
            if (a != b) {
                this.aar = a;
                this.vu("AngleAxisTickLength", b, this.abp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aca", {
        get: function () {
            return this.aa8;
        },
        set: function (a) {
            var b = this.aca;
            if (a != b) {
                this.aa8 = a;
                this.vu("ValueAxisTickLength", b, this.aca);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agg", {
        get: function () {
            return this.af0;
        },
        set: function (a) {
            var b = this.agg;
            if (a != b) {
                this.af0 = a;
                this.vu("AngleAxisTickStroke", b, this.agg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agn", {
        get: function () {
            return this.af7;
        },
        set: function (a) {
            var b = this.agn;
            if (a != b) {
                this.af7 = a;
                this.vu("ValueAxisTickStroke", b, this.agn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abq", {
        get: function () {
            return this.aas;
        },
        set: function (a) {
            var b = this.abq;
            if (a != b) {
                this.aas = a;
                this.vu("AngleAxisTickStrokeThickness", b, this.abq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "acb", {
        get: function () {
            return this.aa9;
        },
        set: function (a) {
            var b = this.acb;
            if (a != b) {
                this.aa9 = a;
                this.vu("ValueAxisTickStrokeThickness", b, this.acb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "adp", {
        get: function () {
            return this.aco;
        },
        set: function (a) {
            var b = this.adp;
            if (a != b) {
                this.aco = a;
                this.vu("AngleAxisTitle", b, this.adp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aev", {
        get: function () {
            return this.acs;
        },
        set: function (a) {
            var b = this.aev;
            if (a != b) {
                this.acs = a;
                this.vu("ValueAxisTitle", b, this.aev);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agd", {
        get: function () {
            return this.afx;
        },
        set: function (a) {
            var b = this.agd;
            if (a != b) {
                this.afx = a;
                this.vu("AngleAxisMinorStroke", b, this.agd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agk", {
        get: function () {
            return this.af4;
        },
        set: function (a) {
            var b = this.agk;
            if (a != b) {
                this.af4 = a;
                this.vu("ValueAxisMinorStroke", b, this.agk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abh", {
        get: function () {
            return this.aaj;
        },
        set: function (a) {
            var b = this.abh;
            if (a != b) {
                this.aaj = a;
                this.vu("AngleAxisLabelAngle", b, this.abh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab2", {
        get: function () {
            return this.aa0;
        },
        set: function (a) {
            var b = this.ab2;
            if (a != b) {
                this.aa0 = a;
                this.vu("ValueAxisLabelAngle", b, this.ab2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abg", {
        get: function () {
            return this.aai;
        },
        set: function (a) {
            var b = this.abg;
            if (a != b) {
                this.aai = a;
                this.vu("AngleAxisExtent", b, this.abg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab1", {
        get: function () {
            return this.aaz;
        },
        set: function (a) {
            var b = this.ab1;
            if (a != b) {
                this.aaz = a;
                this.vu("ValueAxisExtent", b, this.ab1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abr", {
        get: function () {
            return this.aat;
        },
        set: function (a) {
            var b = this.abr;
            if (a != b) {
                this.aat = a;
                this.vu("AngleAxisTitleAngle", b, this.abr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "acc", {
        get: function () {
            return this.aba;
        },
        set: function (a) {
            var b = this.acc;
            if (a != b) {
                this.aba = a;
                this.vu("ValueAxisTitleAngle", b, this.acc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aag", {
        get: function () {
            return this.aae;
        },
        set: function (a) {
            var b = this.aag;
            if (a != b) {
                this.aae = a;
                this.vu("AngleAxisInverted", b, this.aag);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aah", {
        get: function () {
            return this.aaf;
        },
        set: function (a) {
            var b = this.aah;
            if (a != b) {
                this.aaf = a;
                this.vu("ValueAxisInverted", b, this.aah);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afr", {
        get: function () {
            return this.afo;
        },
        set: function (a) {
            var b = this.afr;
            if (a != b) {
                this.afo = a;
                this.vu("AngleAxisTitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.afr));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agu", {
        get: function () {
            return this.agr;
        },
        set: function (a) {
            var b = this.agu;
            if (a != b) {
                this.agr = a;
                this.vu("ValueAxisTitleAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.agu));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afq", {
        get: function () {
            return this.afn;
        },
        set: function (a) {
            var b = this.afq;
            if (a != b) {
                this.afn = a;
                this.vu("AngleAxisLabelHorizontalAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.afq));
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.get_afs = function () {
        return this.afp;
    };
    RadialBaseChart.prototype.set_afs = function (a) {
        var b = this.afs;
        if (a != b) {
            this.afp = a;
            this.vu("ValueAxisLabelHorizontalAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.afs));
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "afs", {
        get: function () {
            return this.get_afs();
        },
        set: function (a) {
            this.set_afs(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ags", {
        get: function () {
            return this.agp;
        },
        set: function (a) {
            var b = this.ags;
            if (a != b) {
                this.agp = a;
                this.vu("AngleAxisLabelVerticalAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.ags));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agt", {
        get: function () {
            return this.agq;
        },
        set: function (a) {
            var b = this.agt;
            if (a != b) {
                this.agq = a;
                this.vu("ValueAxisLabelVerticalAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.agt));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agx", {
        get: function () {
            return this.agv;
        },
        set: function (a) {
            var b = this.agx;
            if (a != b) {
                this.agv = a;
                this.vu("AngleAxisLabelVisibility", enumGetBox(Visibility_$type, b), enumGetBox(Visibility_$type, this.agx));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agy", {
        get: function () {
            return this.agw;
        },
        set: function (a) {
            var b = this.agy;
            if (a != b) {
                this.agw = a;
                this.vu("ValueAxisLabelVisibility", enumGetBox(Visibility_$type, b), enumGetBox(Visibility_$type, this.agy));
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.get_aad = function () {
        return this.aac;
    };
    RadialBaseChart.prototype.set_aad = function (a) {
        var b = this.aad;
        if (a != b) {
            this.aac = a;
            this.vu("ValueAxisLabelLocation", enumGetBox(ValueAxisLabelLocation_$type, b), enumGetBox(ValueAxisLabelLocation_$type, this.aad));
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "aad", {
        get: function () {
            return this.get_aad();
        },
        set: function (a) {
            this.set_aad(a);
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.get_z3 = function () {
        return this.z2;
    };
    RadialBaseChart.prototype.set_z3 = function (a) {
        var b = this.z3;
        if (a != b) {
            this.z2 = a;
            this.vu("AngleAxisLabelLocation", enumGetBox(AngleAxisLabelLocation_$type, b), enumGetBox(AngleAxisLabelLocation_$type, this.z3));
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "z3", {
        get: function () {
            return this.get_z3();
        },
        set: function (a) {
            this.set_z3(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ac1", {
        get: function () {
            return this.acm;
        },
        set: function (a) {
            var b = this.acm;
            if (a != b) {
                this.acm = a;
                this.vu("AngleAxisLabelFormat", b, this.acm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "z0", {
        get: function () {
            return this.zy;
        },
        set: function (a) {
            var b = this.zy;
            if (a != b) {
                this.zy = a;
                this.vu("AngleAxisLabelFormatSpecifiers", b, this.zy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ad7", {
        get: function () {
            return this.acq;
        },
        set: function (a) {
            var b = this.acq;
            if (a != b) {
                this.acq = a;
                this.vu("ValueAxisLabelFormat", b, this.acq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "z1", {
        get: function () {
            return this.zz;
        },
        set: function (a) {
            var b = this.zz;
            if (a != b) {
                this.zz = a;
                this.vu("ValueAxisLabelFormatSpecifiers", b, this.zz);
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.$t = markType(RadialBaseChart, 'RadialBaseChart', DomainChart.$);
    return RadialBaseChart;
}(DomainChart));
export { RadialBaseChart };
