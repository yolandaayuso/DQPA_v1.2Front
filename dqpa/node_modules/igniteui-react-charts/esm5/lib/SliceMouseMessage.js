/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ModelUpdateMessage } from "./ModelUpdateMessage";
import { EnumUtil, markType } from "igniteui-react-core";
import { SliceMouseMessageType_$type } from "./SliceMouseMessageType";
/**
 * @hidden
 */
var SliceMouseMessage = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SliceMouseMessage, _super);
    function SliceMouseMessage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.d = 0;
        _this.f = null;
        _this.b = 0;
        _this.i = null;
        _this.h = null;
        return _this;
    }
    Object.defineProperty(SliceMouseMessage.prototype, "e", {
        get: function () {
            return this.d;
        },
        set: function (a) {
            this.d = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliceMouseMessage.prototype, "item", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SliceMouseMessage.prototype, "c", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            this.b = a;
        },
        enumerable: false,
        configurable: true
    });
    SliceMouseMessage.prototype.toString = function () {
        return "SliceMouseMessage[" + this.e.toString() + ", " + this.item.toString() + ", " + EnumUtil.getName(SliceMouseMessageType_$type, this.c) + "]";
    };
    SliceMouseMessage.$t = markType(SliceMouseMessage, 'SliceMouseMessage', ModelUpdateMessage.$);
    return SliceMouseMessage;
}(ModelUpdateMessage));
export { SliceMouseMessage };
