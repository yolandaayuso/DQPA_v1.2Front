/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var SparklineToolTipContext = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SparklineToolTipContext, _super);
    function SparklineToolTipContext() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._high = 0;
        _this._low = 0;
        _this._first = 0;
        _this._last = 0;
        return _this;
    }
    Object.defineProperty(SparklineToolTipContext.prototype, "high", {
        get: function () {
            return this._high;
        },
        set: function (a) {
            this._high = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineToolTipContext.prototype, "low", {
        get: function () {
            return this._low;
        },
        set: function (a) {
            this._low = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineToolTipContext.prototype, "first", {
        get: function () {
            return this._first;
        },
        set: function (a) {
            this._first = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineToolTipContext.prototype, "last", {
        get: function () {
            return this._last;
        },
        set: function (a) {
            this._last = a;
        },
        enumerable: false,
        configurable: true
    });
    SparklineToolTipContext.$t = markType(SparklineToolTipContext, 'SparklineToolTipContext', EventArgs.$);
    return SparklineToolTipContext;
}(EventArgs));
export { SparklineToolTipContext };
