import { __extends } from "tslib";
import { IgrSplineSeriesBase } from "./igr-spline-series-base";
import { SplineSeries } from "./SplineSeries";
/**
 * Represents a IgxDataChartComponent spline series.
*
* ```ts
*  <IgrDataChart
*     dataSource={this.state.dataSource} >
*
*     <IgrNumericXAxis name="xAxis" />
*     <IgrNumericYAxis name="yAxis" />
*
*     <IgrSplineSeries
*      name="series1"
*     xAxisName="xAxis"
* 	yAxisName="yAxis"
* 	valueMemberPath="Value" />
*  </IgrDataChart>
* ```
*
* ```ts
* let series = new IgrSplineAreaSeries({name:"series"});
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.valueMemberPath = "Value";
* ```
*/
var IgrSplineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrSplineSeries, _super);
    function IgrSplineSeries(props) {
        return _super.call(this, props) || this;
    }
    IgrSplineSeries.prototype.createImplementation = function () {
        return new SplineSeries();
    };
    Object.defineProperty(IgrSplineSeries.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrSplineSeries.prototype, "isSpline", {
        /**
         * Gets whether the current series shows a spline shape.
        */
        get: function () {
            return this.i.f0;
        },
        enumerable: false,
        configurable: true
    });
    return IgrSplineSeries;
}(IgrSplineSeriesBase));
export { IgrSplineSeries };
