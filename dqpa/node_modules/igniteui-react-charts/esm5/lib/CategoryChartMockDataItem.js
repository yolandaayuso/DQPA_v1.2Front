/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var CategoryChartMockDataItem = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryChartMockDataItem, _super);
    function CategoryChartMockDataItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._label = null;
        _this._series1 = 0;
        _this._series2 = 0;
        _this._series3 = 0;
        return _this;
    }
    Object.defineProperty(CategoryChartMockDataItem.prototype, "label", {
        get: function () {
            return this._label;
        },
        set: function (a) {
            this._label = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartMockDataItem.prototype, "series1", {
        get: function () {
            return this._series1;
        },
        set: function (a) {
            this._series1 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartMockDataItem.prototype, "series2", {
        get: function () {
            return this._series2;
        },
        set: function (a) {
            this._series2 = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartMockDataItem.prototype, "series3", {
        get: function () {
            return this._series3;
        },
        set: function (a) {
            this._series3 = a;
        },
        enumerable: false,
        configurable: true
    });
    CategoryChartMockDataItem.$t = markType(CategoryChartMockDataItem, 'CategoryChartMockDataItem');
    return CategoryChartMockDataItem;
}(Base));
export { CategoryChartMockDataItem };
