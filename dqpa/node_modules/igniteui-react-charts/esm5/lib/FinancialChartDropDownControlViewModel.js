/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var FinancialChartDropDownControlViewModel = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChartDropDownControlViewModel, _super);
    function FinancialChartDropDownControlViewModel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._onSelectionChanged = null;
        _this._isOpen = false;
        _this._notifyChanged = null;
        _this.a = null;
        _this.b = null;
        return _this;
    }
    Object.defineProperty(FinancialChartDropDownControlViewModel.prototype, "onSelectionChanged", {
        get: function () {
            return this._onSelectionChanged;
        },
        set: function (a) {
            this._onSelectionChanged = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDropDownControlViewModel.prototype, "isOpen", {
        get: function () {
            return this._isOpen;
        },
        set: function (a) {
            this._isOpen = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDropDownControlViewModel.prototype, "notifyChanged", {
        get: function () {
            return this._notifyChanged;
        },
        set: function (a) {
            this._notifyChanged = a;
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartDropDownControlViewModel.prototype.updateUI = function () {
        if (this.notifyChanged != null) {
            this.notifyChanged();
        }
    };
    FinancialChartDropDownControlViewModel.prototype.onButtonPressed = function () {
        this.isOpen = !this.isOpen;
        this.updateUI();
    };
    FinancialChartDropDownControlViewModel.prototype.handleDropDownClick = function (a) {
        if (this.b != null) {
            this.b(a);
        }
    };
    FinancialChartDropDownControlViewModel.$t = markType(FinancialChartDropDownControlViewModel, 'FinancialChartDropDownControlViewModel');
    return FinancialChartDropDownControlViewModel;
}(Base));
export { FinancialChartDropDownControlViewModel };
