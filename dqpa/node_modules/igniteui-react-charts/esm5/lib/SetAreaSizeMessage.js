/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { RenderingMessage } from "./RenderingMessage";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var SetAreaSizeMessage = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SetAreaSizeMessage, _super);
    function SetAreaSizeMessage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.f = false;
        _this.j = 0;
        _this.g = false;
        _this.k = 0;
        return _this;
    }
    Object.defineProperty(SetAreaSizeMessage.prototype, "h", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            this.f = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SetAreaSizeMessage.prototype, "l", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            this.j = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SetAreaSizeMessage.prototype, "i", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            this.g = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SetAreaSizeMessage.prototype, "m", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
        },
        enumerable: false,
        configurable: true
    });
    SetAreaSizeMessage.prototype.toString = function () {
        return "SetAreaSizeMessage[" + this.h.toString() + ", " + this.l.toString() + ", " + this.i.toString() + ", " + this.m.toString() + "]";
    };
    SetAreaSizeMessage.$t = markType(SetAreaSizeMessage, 'SetAreaSizeMessage', RenderingMessage.$);
    return SetAreaSizeMessage;
}(RenderingMessage));
export { SetAreaSizeMessage };
