import { __extends } from "tslib";
import { IgrHorizontalAnchoredCategorySeries } from "./igr-horizontal-anchored-category-series";
import { StepLineSeries } from "./StepLineSeries";
/**
 * Represents a IgxDataChartComponent step line series.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*     <IgrCategoryXAxis name="xAxis" label="Year" />
*     <IgrNumericYAxis  name="yAxis" />
*
*     <IgrStepLineSeries
*         name="series1"
*         xAxisName="xAxis"
*         yAxisName="yAxis"
* 		valueMemberPath="value" />
*  </IgrDataChart>
* ```
*
* ```ts
*   let series = new IgrStepLineSeries({name:"series1"});
*   series.xAxis = this.xAxis;
*   series.yAxis = this.yAxis;
*   series.valueMemberPath="value";
*   this.chart.series.add(series);
* ```
*/
var IgrStepLineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrStepLineSeries, _super);
    function IgrStepLineSeries(props) {
        return _super.call(this, props) || this;
    }
    IgrStepLineSeries.prototype.createImplementation = function () {
        return new StepLineSeries();
    };
    Object.defineProperty(IgrStepLineSeries.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrStepLineSeries.prototype, "isLineOnly", {
        /**
         * Gets whether the current series shows only line shapes.
        */
        get: function () {
            return this.i.fk;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrStepLineSeries.prototype, "isStep", {
        /**
         * Gets whether the current series shows step shapes.
        */
        get: function () {
            return this.i.f1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrStepLineSeries.prototype, "isMarkerlessDisplayPreferred", {
        /**
         * Overridden by derived series classes to indicate when marker-less display is preferred or not.
        */
        get: function () {
            return this.i.fl;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrStepLineSeries.prototype, "isAreaOrLine", {
        /**
         * Gets whether the current series shows an area or line shape.
        */
        get: function () {
            return this.i.ev;
        },
        enumerable: false,
        configurable: true
    });
    return IgrStepLineSeries;
}(IgrHorizontalAnchoredCategorySeries));
export { IgrStepLineSeries };
