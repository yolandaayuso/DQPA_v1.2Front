/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { IndicatorCalculationStrategy } from "./IndicatorCalculationStrategy";
import { String_$type, markType, getEnumerator } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { intDivide } from "igniteui-react-core";
/**
 * @hidden
 */
var DetrendedPriceOscillatorIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DetrendedPriceOscillatorIndicatorStrategy, _super);
    function DetrendedPriceOscillatorIndicatorStrategy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DetrendedPriceOscillatorIndicatorStrategy.prototype.b = function (a, b) {
        var c = new List$1(String_$type, 0);
        c.add("CloseColumn");
        c.o(b.c.c);
        return c;
    };
    DetrendedPriceOscillatorIndicatorStrategy.prototype.a = function (a, b) {
        var c = a.period;
        var d = a.closeColumn;
        var e = a.indicatorColumn;
        var f = getEnumerator(b.c.b(d, c));
        var g = (intDivide(c, 2)) + 1;
        var h = new Array(g);
        for (var i = 0; i < g; i++) {
            h[i] = 0;
        }
        for (var j = 1; j < Math.min(g + 1, e.count); ++j) {
            var k = j % g;
            e.item(j, 0);
            f.moveNext();
            h[k] = f.current;
        }
        for (var l = g + 1; l < e.count; l++) {
            var m = l % g;
            e.item(l, d.item(l) - h[m]);
            f.moveNext();
            h[m] = f.current;
        }
        return true;
    };
    DetrendedPriceOscillatorIndicatorStrategy.$t = markType(DetrendedPriceOscillatorIndicatorStrategy, 'DetrendedPriceOscillatorIndicatorStrategy', IndicatorCalculationStrategy.$);
    return DetrendedPriceOscillatorIndicatorStrategy;
}(IndicatorCalculationStrategy));
export { DetrendedPriceOscillatorIndicatorStrategy };
