import { __extends } from "tslib";
import { IgrStrategyBasedIndicator } from "./igr-strategy-based-indicator";
import { ChaikinOscillatorIndicator } from "./ChaikinOscillatorIndicator";
/**
 * Represents the IgxDataChartComponent Chaikin Oscillator indicator series.
 * Default required members: Close, Low, High, Volume
*
* `ChaikinOscillatorIndicator` class specify the series as Chaikin Oscillator Indicator series.
*
* ```ts
* <IgrDataChart
* 	ref={this.onChartRef}
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*
*     <IgrCategoryXAxis name="xAxis" label="Date" />
*     <IgrNumericYAxis  name="yAxis" />
*
*    <IgrChaikinOscillatorIndicator
*     name="series3"
*     xAxisName="xAxis"
*     yAxisName="yAxis"
*     displayType="Line"
*     lowMemberPath="Low"
*     highMemberPath="High"
*     openMemberPath="Open"
*     closeMemberPath="Close"
*     volumeMemberPath="Volume"
* 	longPeriod={30}/>
*  </IgrDataChart>
* ```
*
* ```ts
* let series1 = new IgrAbsoluteVolumeOscillatorIndicator({ name: ""});
* series1.xAxis = this.categoryXAxis;
* series1.yAxis = this.numericYAxis;
* series1.xAxisName = "XAxis";
* series1.yAxisName = "YAxis";
* series1.valueMemberPath = "Volume";
* series1.openMemberPath = "open";
* series1.highMemberPath = "high";
* series1.lowMemberPath = "low";
* series1.closeMemberPath = "close";
* ```
*/
var IgrChaikinOscillatorIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrChaikinOscillatorIndicator, _super);
    function IgrChaikinOscillatorIndicator(props) {
        return _super.call(this, props) || this;
    }
    IgrChaikinOscillatorIndicator.prototype.createImplementation = function () {
        return new ChaikinOscillatorIndicator();
    };
    Object.defineProperty(IgrChaikinOscillatorIndicator.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrChaikinOscillatorIndicator.prototype, "shortPeriod", {
        /**
         * Gets or sets the short moving average period for the current ChaikinOscillatorIndicator object.
         * The typical, and initial, value for short CHO periods is 3.
        *
        * Set the `ShortPeriod` property if you wish to change the short moving average period for the indicator.
        *
        * ```ts
        * this.series.shortPeriod = 30;
        * ```
        *
        * ```ts
        * <IgrDataChart
        *     dataSource={this.state.dataSource}
        *     width="700px"
        *     height="500px">
        *
        *
        *     <IgrCategoryXAxis name="xAxis" label="Date" />
        *     <IgrNumericYAxis  name="yAxis" />
        *
        *    <IgrChaikinOscillatorIndicator
        *     name="series3"
        *     xAxisName="xAxis"
        *     yAxisName="yAxis"
        *     displayType="Line"
        *     lowMemberPath="Low"
        *     highMemberPath="High"
        *     openMemberPath="Open"
        *     closeMemberPath="Close"
        *     volumeMemberPath="Volume"
        * 	ShortPeriod ={5}/>
        *  </IgrDataChart>
        * ```
        */
        get: function () {
            return this.i.shortPeriod;
        },
        set: function (v) {
            this.i.shortPeriod = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrChaikinOscillatorIndicator.prototype, "longPeriod", {
        /**
         * Gets or sets the long moving average period for the current ChaikinOscillatorIndicator object.
         * The typical, and initial, value for long CHO periods is 10.
        *
        * Set the `LongPeriod` property if you wish to change the long moving average period for the indicator.
        *
        * ```ts
        * this.series.longPeriod = 30;
        * ```
        *
        * ```ts
        * <IgrDataChart
        *     dataSource={this.state.dataSource}
        *     width="700px"
        *     height="500px">
        *
        *
        *     <IgrCategoryXAxis name="xAxis" label="Date" />
        *     <IgrNumericYAxis  name="yAxis" />
        *
        *    <IgrChaikinOscillatorIndicator
        *     name="series3"
        *     xAxisName="xAxis"
        *     yAxisName="yAxis"
        *     displayType="Line"
        *     lowMemberPath="Low"
        *     highMemberPath="High"
        *     openMemberPath="Open"
        *     closeMemberPath="Close"
        *     volumeMemberPath="Volume"
        * 	longPeriod={30}/>
        *  </IgrDataChart>
        * ```
        */
        get: function () {
            return this.i.longPeriod;
        },
        set: function (v) {
            this.i.longPeriod = +v;
        },
        enumerable: false,
        configurable: true
    });
    return IgrChaikinOscillatorIndicator;
}(IgrStrategyBasedIndicator));
export { IgrChaikinOscillatorIndicator };
