/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ObservableCollection$1 } from "igniteui-react-core";
import { Base, PropertyChangedEventArgs, delegateCombine, markType } from "igniteui-react-core";
import { NotifyCollectionChangedEventArgs } from "igniteui-react-core";
/**
 * @hidden
 */
var FunnelChartSelectedItemsCollection = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FunnelChartSelectedItemsCollection, _super);
    function FunnelChartSelectedItemsCollection() {
        var _this = _super.call(this, Base.$, 0) || this;
        _this.af = false;
        return _this;
    }
    Object.defineProperty(FunnelChartSelectedItemsCollection.prototype, "ae", {
        get: function () {
            return this;
        },
        enumerable: false,
        configurable: true
    });
    FunnelChartSelectedItemsCollection.prototype.ag = function (a) {
        this.collectionChanged = delegateCombine(this.collectionChanged, a);
    };
    FunnelChartSelectedItemsCollection.prototype.u = function (a) {
        var b = this._inner[a];
        if (a == 0) {
            this._inner.shift();
        }
        else {
            this._inner.splice(a, 1);
        }
        this.ad(new PropertyChangedEventArgs("Count"));
        this.ad(new PropertyChangedEventArgs("Item[]"));
        if (!this.af) {
            this.ac(new NotifyCollectionChangedEventArgs(1, 1, b, a));
        }
    };
    FunnelChartSelectedItemsCollection.$t = markType(FunnelChartSelectedItemsCollection, 'FunnelChartSelectedItemsCollection', ObservableCollection$1.$.specialize(Base.$));
    return FunnelChartSelectedItemsCollection;
}(ObservableCollection$1));
export { FunnelChartSelectedItemsCollection };
