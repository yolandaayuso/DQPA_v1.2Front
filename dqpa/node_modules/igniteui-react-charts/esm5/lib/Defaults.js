/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { DeviceUtils } from "igniteui-react-core";
import { ColorUtil } from "igniteui-react-core";
/**
 * @hidden
 */
var Defaults = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Defaults, _super);
    function Defaults() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Defaults.$t = markType(Defaults, 'Defaults');
    Defaults.ae = BrushUtil.h(255, 187, 187, 187);
    Defaults.j = DeviceUtils.g(1);
    Defaults.ag = BrushUtil.h(255, 255, 255, 255);
    Defaults.af = BrushUtil.h(255, 0, 0, 0);
    Defaults.v = DeviceUtils.g(2);
    Defaults.w = 8;
    Defaults.u = 8;
    Defaults.t = 0;
    Defaults.s = DeviceUtils.g(12);
    Defaults.r = DeviceUtils.g(12);
    Defaults.ab = DeviceUtils.g(2);
    Defaults.ad = DeviceUtils.g(2);
    Defaults.ac = DeviceUtils.g(1);
    Defaults.ah = BrushUtil.h(255, 238, 88, 121);
    Defaults.ai = BrushUtil.h(255, 238, 88, 121);
    Defaults.l = DeviceUtils.g(1);
    Defaults.k = DeviceUtils.g(5);
    Defaults.g = 1;
    Defaults.i = DeviceUtils.g(1);
    Defaults.h = DeviceUtils.g(4);
    Defaults.c = 1;
    Defaults.e = 2;
    Defaults.aq = ColorUtil.u("#000000");
    Defaults.ap = ColorUtil.u("#ee5879");
    Defaults.al = BrushUtil.h(255, 0, 0, 0);
    Defaults.ak = BrushUtil.h(255, 238, 88, 121);
    Defaults.q = DeviceUtils.g(4);
    Defaults.x = DeviceUtils.g(5);
    Defaults.aa = DeviceUtils.g(2);
    Defaults.am = BrushUtil.h(255, 0, 0, 0);
    Defaults.z = DeviceUtils.g(2);
    Defaults.y = DeviceUtils.g(2);
    Defaults.f = 1;
    Defaults.b = 1;
    Defaults.aj = BrushUtil.h(255, 0, 0, 0);
    Defaults.p = DeviceUtils.g(1);
    Defaults.o = DeviceUtils.g(2);
    Defaults.d = 1;
    Defaults.a = 1;
    Defaults.n = DeviceUtils.g(2);
    Defaults.m = DeviceUtils.g(2);
    Defaults.ao = BrushUtil.h(255, 170, 211, 223);
    Defaults.an = BrushUtil.h(255, 255, 255, 255);
    return Defaults;
}(Base));
export { Defaults };
