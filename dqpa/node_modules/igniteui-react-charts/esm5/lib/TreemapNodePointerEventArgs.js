/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var TreemapNodePointerEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TreemapNodePointerEventArgs, _super);
    function TreemapNodePointerEventArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._value = 0;
        _this._sum = 0;
        _this._customValue = null;
        _this._item = null;
        _this._parentItem = null;
        _this._position = null;
        _this._isRightButton = false;
        _this._isHandled = false;
        _this._isOverHeader = false;
        _this._label = null;
        _this._parentValue = 0;
        _this._parentLabel = null;
        _this._parentSum = 0;
        return _this;
    }
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (a) {
            this._value = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "sum", {
        get: function () {
            return this._sum;
        },
        set: function (a) {
            this._sum = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "customValue", {
        get: function () {
            return this._customValue;
        },
        set: function (a) {
            this._customValue = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "item", {
        get: function () {
            return this._item;
        },
        set: function (a) {
            this._item = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "parentItem", {
        get: function () {
            return this._parentItem;
        },
        set: function (a) {
            this._parentItem = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "position", {
        get: function () {
            return this._position;
        },
        set: function (a) {
            this._position = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "isRightButton", {
        get: function () {
            return this._isRightButton;
        },
        set: function (a) {
            this._isRightButton = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "isHandled", {
        get: function () {
            return this._isHandled;
        },
        set: function (a) {
            this._isHandled = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "isOverHeader", {
        get: function () {
            return this._isOverHeader;
        },
        set: function (a) {
            this._isOverHeader = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "label", {
        get: function () {
            return this._label;
        },
        set: function (a) {
            this._label = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "parentValue", {
        get: function () {
            return this._parentValue;
        },
        set: function (a) {
            this._parentValue = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "parentLabel", {
        get: function () {
            return this._parentLabel;
        },
        set: function (a) {
            this._parentLabel = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TreemapNodePointerEventArgs.prototype, "parentSum", {
        get: function () {
            return this._parentSum;
        },
        set: function (a) {
            this._parentSum = a;
        },
        enumerable: false,
        configurable: true
    });
    TreemapNodePointerEventArgs.$t = markType(TreemapNodePointerEventArgs, 'TreemapNodePointerEventArgs', EventArgs.$);
    return TreemapNodePointerEventArgs;
}(EventArgs));
export { TreemapNodePointerEventArgs };
