/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __generator, __values } from "tslib";
import { Base, Point_$type, fromEnum, toEnum, markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
var DelegateClipper = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DelegateClipper, _super);
    function DelegateClipper(a, b, c, d) {
        var e_1, _b, e_2, _c;
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.c = null;
        _this.d = null;
        var e = new List$1(Point_$type, 0);
        try {
            for (var _d = __values(fromEnum(DelegateClipper.a(0, c))), _e = _d.next(); !_e.done; _e = _d.next()) {
                var f = _e.value;
                e.add({ $type: Point_$type, x: a(f), y: b(f) });
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_e && !_e.done && (_b = _d.return))
                    _b.call(_d);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        _this.b = new List$1(Point_$type, 0);
        _this.c = function (g) { return _this.b.count > g ? _this.b._inner[g].x : NaN; };
        _this.d = function (g) { return _this.b.count > g ? _this.b._inner[g].y : NaN; };
        d.i = _this.b;
        try {
            for (var _f = __values(fromEnum(e)), _g = _f.next(); !_g.done; _g = _f.next()) {
                var g = _g.value;
                d.j(g);
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_g && !_g.done && (_c = _f.return))
                    _c.call(_f);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        d.i = null;
        return _this;
    }
    Object.defineProperty(DelegateClipper.prototype, "e", {
        get: function () {
            return this.b.count;
        },
        enumerable: false,
        configurable: true
    });
    DelegateClipper._a = function (a, b) {
        var c;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    c = a;
                    _b.label = 1;
                case 1:
                    if (!(c < a + b))
                        return [3 /*break*/, 4];
                    return [4 /*yield*/, c];
                case 2:
                    _b.sent();
                    _b.label = 3;
                case 3:
                    c++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    };
    DelegateClipper.a = function (a, b) {
        return toEnum(function () { return DelegateClipper._a(a, b); });
    };
    DelegateClipper.$t = markType(DelegateClipper, 'DelegateClipper');
    return DelegateClipper;
}(Base));
export { DelegateClipper };
