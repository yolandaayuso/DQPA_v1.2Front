/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, String_$type, markType } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
var SupportingCalculation$1 = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SupportingCalculation$1, _super);
    function SupportingCalculation$1($tCalculationStrategy, a) {
        var _rest = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            _rest[_i - 2] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.$tCalculationStrategy = null;
        _this.a = null;
        _this.d = null;
        _this.$tCalculationStrategy = $tCalculationStrategy;
        _this.$type = _this.$type.specialize(_this.$tCalculationStrategy);
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    _this.a = c;
                    _this.d = new List$1(String_$type, 0);
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    _this.a = c;
                    _this.d = new List$1(String_$type, 1, d);
                }
                break;
        }
        return _this;
    }
    Object.defineProperty(SupportingCalculation$1.prototype, "b", {
        get: function () {
            return this.a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SupportingCalculation$1.prototype, "c", {
        get: function () {
            return this.d;
        },
        enumerable: false,
        configurable: true
    });
    SupportingCalculation$1.$t = markType(SupportingCalculation$1, 'SupportingCalculation$1');
    return SupportingCalculation$1;
}(Base));
export { SupportingCalculation$1 };
