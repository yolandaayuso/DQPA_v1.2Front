/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { RadialBaseChart } from "./RadialBaseChart";
import { ProportionalCategoryAngleAxis } from "./ProportionalCategoryAngleAxis";
import { NumericRadiusAxis } from "./NumericRadiusAxis";
import { typeCast, runOn, delegateCombine, enumGetBox, markType } from "igniteui-react-core";
import { PieChartSweepDirection_$type } from "./PieChartSweepDirection";
import { CalloutCollisionMode_$type } from "igniteui-react-core";
import { LegendEmptyValuesMode_$type } from "igniteui-react-core";
import { OthersCategoryType_$type } from "igniteui-react-core";
import { AxisRangeBufferMode_$type } from "./AxisRangeBufferMode";
import { RadialLabelMode_$type } from "igniteui-react-core";
import { CollisionAvoidanceType_$type } from "./CollisionAvoidanceType";
import { RadialBase } from "./RadialBase";
import { RadialPieSeries } from "./RadialPieSeries";
import { AnchoredRadialSeries } from "./AnchoredRadialSeries";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
var DataPieBaseChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataPieBaseChart, _super);
    function DataPieBaseChart() {
        var _this = _super.call(this) || this;
        _this.aiw = null;
        _this.ag2 = null;
        _this.ais = null;
        _this.ag0 = null;
        _this.aiu = null;
        _this.ag1 = null;
        _this.air = null;
        _this.agz = null;
        _this.ah3 = 0;
        _this.ahj = 0;
        _this.ag9 = 6;
        _this.aki = null;
        _this.akh = null;
        _this.aix = null;
        _this.aiq = null;
        _this.ahd = 0;
        _this.ahh = 1;
        _this.ah4 = 3;
        _this.ait = null;
        _this.aip = null;
        _this.ahu = true;
        _this.ag7 = 0;
        _this.ah1 = 0;
        _this.ah2 = 0;
        _this.ah7 = 0;
        _this.ahv = false;
        _this.ain = 10;
        _this.ah9 = NaN;
        _this.ah8 = NaN;
        _this.aia = 0;
        _this.ah5 = NaN;
        _this.ah6 = NaN;
        _this.aiv = " - ";
        _this.aho = 0;
        _this.ahn = 0;
        _this.ahs = true;
        _this.aht = true;
        _this.ahb = 0;
        return _this;
    }
    DataPieBaseChart.prototype.hd = function () {
        return true;
    };
    DataPieBaseChart.prototype.akd = function (a) {
        this.ake(function (b, c) { return a(b); });
    };
    DataPieBaseChart.prototype.ake = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (c.ft) {
                a(c, b);
            }
        }
    };
    DataPieBaseChart.prototype.akb = function (a) {
        this.akc(function (b, c) { return a(b); });
    };
    DataPieBaseChart.prototype.akc = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (c.ft) {
                a(c, b);
            }
        }
    };
    DataPieBaseChart.prototype.wp = function () {
        var a = this.bf.dataSeries != null ? this.bf.dataSeries.count : 0;
        _super.prototype.wp.call(this);
        if (this.ai3 != null) {
            var b = this.ai3;
            this.angleAxis.f2 = b;
        }
        else {
            this.angleAxis.f2 = this.ack == null ? RadialBaseChart.ad1(this.angleAxis, this.bf.dataSeries) : this.ack;
        }
        this.angleAxis.itemsSource = this.dataChart != null && this.dataChart.series.count > 0 ? this.dataChart.series._inner[0].itemsSource : null;
        if (this.aj8 != null) {
            this.angleAxis.ok = this.aj8;
        }
        else {
            this.angleAxis.ok = (this.dataChart != null && this.dataChart.series.count > 0 && typeCast(RadialPieSeries.$, this.dataChart.series._inner[0]) !== null) ? this.dataChart.series._inner[0].acx : null;
        }
    };
    DataPieBaseChart.prototype.c2 = function (a, b) {
        if (this.c5 == null || this.c5.count == 0) {
            return 13;
        }
        var c = _super.prototype.c2.call(this, a, b);
        if (c == 1) {
            return 13;
        }
        return c;
    };
    DataPieBaseChart.prototype.wn = function (a) {
    };
    DataPieBaseChart.prototype.g9 = function (a) {
        if (!_super.prototype.g9.call(this, a)) {
            return false;
        }
        return true;
    };
    DataPieBaseChart.prototype.wq = function () {
        this.valueAxis.lo = this.ah0;
        this.valueAxis.mm = this.aio;
    };
    Object.defineProperty(DataPieBaseChart.prototype, "angleAxis", {
        get: function () {
            return this.ahl;
        },
        set: function (a) {
            var b = this.angleAxis;
            if (a != b) {
                this.ahl = a;
                this.vu("AngleAxis", b, this.angleAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "valueAxis", {
        get: function () {
            return this.ahf;
        },
        set: function (a) {
            var b = this.valueAxis;
            if (a != b) {
                this.ahf = a;
                this.vu("ValueAxis", b, this.valueAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    DataPieBaseChart.prototype.get_ahx = function () {
        return false;
    };
    Object.defineProperty(DataPieBaseChart.prototype, "ahx", {
        get: function () {
            return this.get_ahx();
        },
        enumerable: false,
        configurable: true
    });
    DataPieBaseChart.prototype.dc = function (a, b) {
        var c = null;
        if (b == 34) {
            c = this.ahr(a, b);
        }
        if (a.index > 0) {
            if (!this.ahx) {
                if (c != null) {
                    c.o2();
                }
                return null;
            }
        }
        return c;
    };
    DataPieBaseChart.prototype.u6 = function (a, b) {
        _super.prototype.u6.call(this, a, b);
        if (this.gx(a) && this.ce.isCalloutLayer(a)) {
            if (this.akk != null) {
                this.ce.setCalloutLightColor(a, this.akk);
            }
            if (this.akj != null) {
                this.ce.setCalloutDarkColor(a, this.akj);
            }
            var c = this.ah;
            if (this.aha != 0) {
                c = this.aha;
            }
            this.ce.setCollisionMode(a, c);
        }
    };
    DataPieBaseChart.prototype.ahr = function (a, b) {
        var c = null;
        if (b == 34) {
            c = this.de(34);
        }
        else {
            c = this.de(34);
        }
        if (this.aj8 != null) {
            c.acx = this.aj8;
        }
        else {
            c.acx = a.getMemberPathFor(0);
        }
        if (this.ai6 != null) {
            c.ad0 = this.ai6;
        }
        c.adq = this.ahe;
        c.yz = this.angleAxis;
        c.y5 = this.valueAxis;
        c.g9 = true;
        c.ach = true;
        c.aa2 = this.ajs;
        c.yr = this.ag6;
        c.aaz = this.ajl;
        c.yq = this.ag5;
        c.aas = this.ajc;
        c.yo = this.ag4;
        c.aaw = this.ai8;
        c.yp = this.ag3;
        c.ze = this.ahq;
        c.zf = this.ahp;
        c.aad = this.ajq;
        return c;
    };
    DataPieBaseChart.prototype.z4 = function () {
        return this.angleAxis;
    };
    DataPieBaseChart.prototype.z5 = function () {
        return this.valueAxis;
    };
    DataPieBaseChart.prototype.ug = function () {
        this.angleAxis = new ProportionalCategoryAngleAxis();
        this.angleAxis.name = "angleAxis";
        var a = this.angleAxis;
        a.propertyChanged = delegateCombine(a.propertyChanged, runOn(this, this.akf));
        this.angleAxis.k5 = 0;
        this.valueAxis = new NumericRadiusAxis();
        this.valueAxis.name = "valueAxis";
        var b = this.valueAxis;
        b.propertyChanged = delegateCombine(b.propertyChanged, runOn(this, this.akg));
        if (this.angleAxis.az == null) {
            this.angleAxis.az = new AxisLabelSettings();
        }
        if (this.valueAxis.az == null) {
            this.valueAxis.az = new AxisLabelSettings();
        }
    };
    DataPieBaseChart.prototype.akf = function (a, b) {
        switch (b.propertyName) {
            case "ActualMinimumValue":
                this.wb("AngleAxisActualMinimum");
                break;
            case "ActualMaximumValue":
                this.wb("AngleAxisActualMaximum");
                break;
        }
    };
    DataPieBaseChart.prototype.akg = function (a, b) {
        switch (b.propertyName) {
            case "ActualMinimumValue":
                this.wb("ValueAxisActualMinimum");
                break;
            case "ActualMaximumValue":
                this.wb("ValueAxisActualMaximum");
                break;
        }
    };
    DataPieBaseChart.prototype.ua = function (a, b) {
        var c = typeCast(RadialBase.$, a);
        if (c != null) {
            c.xa = this.c2(a, b);
        }
    };
    DataPieBaseChart.prototype.afb = function (a) {
        _super.prototype.afb.call(this, a);
        a.lf = this.ahy;
        a.lj = this.ahz;
        a.og = this.aid;
        if (!isNaN_(this.aif)) {
            a.oh = this.aif;
        }
        else {
            a.oh = 0.65;
        }
    };
    DataPieBaseChart.prototype.ae9 = function (a) {
        _super.prototype.ae9.call(this, a);
        a.oe = this.ajh;
        a.ny = this.ahi;
        a.ob = this.aie;
        if (!isNaN_(this.aig)) {
            a.ne = this.aig;
        }
        if (this.ahk != 0) {
            if (this.ahk == 1) {
                a.ch = false;
            }
            else {
                a.ch = true;
            }
        }
    };
    DataPieBaseChart.prototype.vu = function (a, b, c) {
        var _this = this;
        _super.prototype.vu.call(this, a, b, c);
        switch (a) {
            case "SliceLabelPositionMode":
                this.us(function (d) {
                    if (d.eo) {
                        _this.ce.setCollisionMode(d, _this.aha);
                    }
                });
                break;
            case "SliceLabelContentSeparator":
                this.akb(function (d) { return d.aad = _this.ajq; });
                break;
            case "SliceLabelContentMode":
                this.akb(function (d) { return d.ze = _this.ahq; });
                break;
            case "LegendSliceLabelContentMode":
                this.akb(function (d) { return d.zf = _this.ahp; });
                break;
            case "SliceLabelFormat":
                this.akb(function (d) { return d.aa2 = _this.ajs; });
                break;
            case "SliceLabelFormatSpecifiers":
                this.akb(function (d) { return d.yr = _this.ag6; });
                break;
            case "OthersSliceLabelFormat":
                this.akb(function (d) { return d.aaz = _this.ajl; });
                break;
            case "OthersSliceLabelFormatSpecifiers":
                this.akb(function (d) { return d.yq = _this.ag5; });
                break;
            case "LegendSliceLabelFormat":
                this.akb(function (d) { return d.aas = _this.ajs; });
                break;
            case "LegendSliceLabelFormatSpecifiers":
                this.akb(function (d) { return d.yo = _this.ag6; });
                break;
            case "LegendOthersSliceLabelFormat":
                this.akb(function (d) { return d.aaw = _this.ai8; });
                break;
            case "LegendOthersSliceLabelFormatSpecifiers":
                this.akb(function (d) { return d.yp = _this.ag3; });
                break;
            case "SweepDirection":
                if (this.angleAxis != null) {
                    if (this.ahk != 0) {
                        if (this.ahk == 1) {
                            this.angleAxis.ch = false;
                        }
                        else {
                            this.angleAxis.ch = true;
                        }
                    }
                    else {
                        this.angleAxis.ch = this.aag;
                    }
                }
                break;
            case "StartAngle":
                if (this.angleAxis != null) {
                    this.angleAxis.ne = isNaN_(this.aig) ? 0 : this.aig;
                }
                break;
            case "RadiusExtent":
                if (this.valueAxis != null) {
                    this.valueAxis.oh = isNaN_(this.aif) ? 0.65 : this.aif;
                }
                break;
            case "OthersCategoryText":
                if (this.angleAxis != null) {
                    this.angleAxis.oe = this.ajh;
                }
                break;
            case "OthersCategoryType":
                if (this.angleAxis != null) {
                    this.angleAxis.ny = this.ahi;
                }
                break;
            case "OthersCategoryThreshold":
                if (this.angleAxis != null) {
                    this.angleAxis.ob = this.aie;
                }
                break;
            case "InnerExtent":
                if (this.valueAxis != null) {
                    this.valueAxis.og = this.aid;
                }
                break;
            case "LightSliceLabelColor":
                this.up(function (d) {
                    if (d.eo) {
                        _this.ce.setCalloutLightColor(d, _this.akk);
                    }
                });
                break;
            case "DarkSliceLabelColor":
                this.up(function (d) {
                    if (d.eo) {
                        _this.ce.setCalloutDarkColor(d, _this.akj);
                    }
                });
                break;
            case "ValueMemberPath":
                if (c != null) {
                    this.uu(function (d) {
                        if (typeCast(AnchoredRadialSeries.$, d) !== null) {
                            var e = d;
                            e.acx = _this.aj8;
                        }
                    });
                    this.angleAxis.ok = this.aj8;
                }
                else {
                    this.v0();
                }
                break;
            case "LabelMemberPath":
                if (c != null) {
                    var d = this.ai3;
                    this.angleAxis.f2 = d;
                }
                else {
                    this.v0();
                }
                break;
            case "LegendLabelMemberPath":
                if (c != null) {
                    this.uu(function (e) {
                        if (typeCast(RadialPieSeries.$, e) !== null) {
                            var f = e;
                            f.ad0 = _this.ai6;
                        }
                    });
                }
                else {
                    this.v0();
                }
                break;
            case "AngleAxisInterval":
                this.angleAxis.nb = this.aib;
                break;
            case "ValueAxisInterval":
                this.valueAxis.l8 = this.aij;
                break;
            case "ValueAxisFavorLabellingScaleEnd":
                this.valueAxis.lj = this.ahz;
                break;
            case "ValueAxisAutoRangeBufferMode":
                this.valueAxis.ky = this.ag8;
                break;
            case "AngleAxisMinorInterval":
                this.angleAxis.nc = this.aic;
                break;
            case "ValueAxisMinorInterval":
                this.valueAxis.md = this.aim;
                break;
            case "ValueAxisIsLogarithmic":
                this.valueAxis.lo = this.ah0;
                break;
            case "ValueAxisLogarithmBase":
                this.valueAxis.mm = this.aio;
                break;
            case "ValueAxisMinimumValue":
                this.valueAxis.mc = this.ail;
                break;
            case "ValueAxisMaximumValue":
                this.valueAxis.mb = this.aik;
                break;
            case "MarkerCollision":
                this.uv(function (e, f) { return _this.ua(e, f); });
                break;
            case "ValueAxisAbbreviateLargeNumbers":
                this.afi(function (e) { return e.lf = _this.ahy; });
                break;
        }
    };
    Object.defineProperty(DataPieBaseChart.prototype, "ajs", {
        get: function () {
            return this.aiw;
        },
        set: function (a) {
            var b = this.ajs;
            if (a != b) {
                this.aiw = a;
                this.vu("SliceLabelFormat", b, this.ajs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ag6", {
        get: function () {
            return this.ag2;
        },
        set: function (a) {
            var b = this.ag6;
            if (a != b) {
                this.ag2 = a;
                this.vu("SliceLabelFormatSpecifiers", b, this.ag6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ajc", {
        get: function () {
            return this.ais;
        },
        set: function (a) {
            var b = this.ajc;
            if (a != b) {
                this.ais = a;
                this.vu("LegendSliceLabelFormat", b, this.ajc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ag4", {
        get: function () {
            return this.ag0;
        },
        set: function (a) {
            var b = this.ag4;
            if (a != b) {
                this.ag0 = a;
                this.vu("LegendSliceLabelFormatSpecifiers", b, this.ag4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ajl", {
        get: function () {
            return this.aiu;
        },
        set: function (a) {
            var b = this.ajl;
            if (a != b) {
                this.aiu = a;
                this.vu("OthersSliceLabelFormat", b, this.ajl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ag5", {
        get: function () {
            return this.ag1;
        },
        set: function (a) {
            var b = this.ag5;
            if (a != b) {
                this.ag1 = a;
                this.vu("OthersSliceLabelFormatSpecifiers", b, this.ag5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ai8", {
        get: function () {
            return this.air;
        },
        set: function (a) {
            var b = this.ai8;
            if (a != b) {
                this.air = a;
                this.vu("LegendOthersSliceLabelFormat", b, this.ai8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ag3", {
        get: function () {
            return this.agz;
        },
        set: function (a) {
            var b = this.ag3;
            if (a != b) {
                this.agz = a;
                this.vu("LegendOthersSliceLabelFormatSpecifiers", b, this.ag3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aid", {
        get: function () {
            return this.ah3;
        },
        set: function (a) {
            var b = this.aid;
            if (a != b) {
                this.ah3 = a;
                this.vu("InnerExtent", b, this.aid);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahk", {
        get: function () {
            return this.ahj;
        },
        set: function (a) {
            var b = this.ahk;
            if (a != b) {
                this.ahj = a;
                this.vu("SweepDirection", enumGetBox(PieChartSweepDirection_$type, b), enumGetBox(PieChartSweepDirection_$type, this.ahk));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aha", {
        get: function () {
            return this.ag9;
        },
        set: function (a) {
            var b = this.aha;
            if (a != b) {
                this.ag9 = a;
                this.vu("SliceLabelPositionMode", enumGetBox(CalloutCollisionMode_$type, b), enumGetBox(CalloutCollisionMode_$type, this.aha));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "akk", {
        get: function () {
            return this.aki;
        },
        set: function (a) {
            var b = this.akk;
            if (a != b) {
                this.aki = a;
                this.vu("LightSliceLabelColor", b, this.akk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "akj", {
        get: function () {
            return this.akh;
        },
        set: function (a) {
            var b = this.akj;
            if (a != b) {
                this.akh = a;
                this.vu("DarkSliceLabelColor", b, this.akj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aj8", {
        get: function () {
            return this.aix;
        },
        set: function (a) {
            var b = this.aj8;
            if (a != b) {
                this.aix = a;
                this.vu("ValueMemberPath", b, this.aj8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ai6", {
        get: function () {
            return this.aiq;
        },
        set: function (a) {
            var b = this.aiq;
            if (a != b) {
                this.aiq = a;
                this.vu("LegendLabelMemberPath", b, this.aiq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahe", {
        get: function () {
            return this.ahd;
        },
        set: function (a) {
            var b = this.ahd;
            if (a != b) {
                this.ahd = a;
                this.vu("LegendEmptyValuesMode", enumGetBox(LegendEmptyValuesMode_$type, b), this.aiq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahi", {
        get: function () {
            return this.ahh;
        },
        set: function (a) {
            var b = this.ahi;
            if (a != b) {
                this.ahh = a;
                this.vu("OthersCategoryType", enumGetBox(OthersCategoryType_$type, b), enumGetBox(OthersCategoryType_$type, this.ahi));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aie", {
        get: function () {
            return this.ah4;
        },
        set: function (a) {
            var b = this.aie;
            if (a != b) {
                this.ah4 = a;
                this.vu("OthersCategoryThreshold", b, this.aie);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ajh", {
        get: function () {
            return this.ait;
        },
        set: function (a) {
            var b = this.ajh;
            if (a != b) {
                this.ait = a;
                this.vu("OthersCategoryText", b, this.ajh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ai3", {
        get: function () {
            return this.aip;
        },
        set: function (a) {
            var b = this.ai3;
            if (a != b) {
                this.aip = a;
                this.vu("LabelMemberPath", b, this.ai3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahz", {
        get: function () {
            return this.ahu;
        },
        set: function (a) {
            var b = this.ahz;
            if (a != b) {
                this.ahu = a;
                this.vu("ValueAxisFavorLabellingScaleEnd", b, this.ahz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ag8", {
        get: function () {
            return this.ag7;
        },
        set: function (a) {
            var b = this.ag8;
            if (a != b) {
                this.ag7 = a;
                this.vu("ValueAxisAutoRangeBufferMode", enumGetBox(AxisRangeBufferMode_$type, b), enumGetBox(AxisRangeBufferMode_$type, this.ag8));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aib", {
        get: function () {
            return this.ah1;
        },
        set: function (a) {
            var b = this.aib;
            if (a != b) {
                this.ah1 = a;
                this.vu("AngleAxisInterval", b, this.aib);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aic", {
        get: function () {
            return this.ah2;
        },
        set: function (a) {
            var b = this.aic;
            if (a != b) {
                this.ah2 = a;
                this.vu("AngleAxisMinorInterval", b, this.aic);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aij", {
        get: function () {
            return this.ah7;
        },
        set: function (a) {
            var b = this.aij;
            if (a != b) {
                this.ah7 = a;
                this.vu("ValueAxisInterval", b, this.aij);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ah0", {
        get: function () {
            return this.ahv;
        },
        set: function (a) {
            var b = this.ah0;
            if (a != b) {
                this.ahv = a;
                this.vu("ValueAxisIsLogarithmic", b, this.ah0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aio", {
        get: function () {
            return this.ain;
        },
        set: function (a) {
            var b = this.aio;
            if (a != b) {
                this.ain = a;
                this.vu("ValueAxisLogarithmBase", b, this.aio);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ail", {
        get: function () {
            return this.ah9;
        },
        set: function (a) {
            var b = this.ail;
            if (a != b) {
                this.ah9 = a;
                this.vu("ValueAxisMinimumValue", b, this.ail);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aik", {
        get: function () {
            return this.ah8;
        },
        set: function (a) {
            var b = this.aik;
            if (a != b) {
                this.ah8 = a;
                this.vu("ValueAxisMaximumValue", b, this.aik);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aim", {
        get: function () {
            return this.aia;
        },
        set: function (a) {
            var b = this.aim;
            if (a != b) {
                this.aia = a;
                this.vu("ValueAxisMinorInterval", b, this.aim);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aii", {
        get: function () {
            return this.valueAxis.l4;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aih", {
        get: function () {
            return this.valueAxis.l3;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aif", {
        get: function () {
            return this.ah5;
        },
        set: function (a) {
            var b = this.aif;
            if (a != b) {
                this.ah5 = a;
                this.vu("RadiusExtent", b, this.aif);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aig", {
        get: function () {
            return this.ah6;
        },
        set: function (a) {
            var b = this.aig;
            if (a != b) {
                this.ah6 = a;
                this.vu("StartAngle", b, this.aig);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ajq", {
        get: function () {
            return this.aiv;
        },
        set: function (a) {
            var b = this.ajq;
            if (a != b) {
                this.aiv = a;
                this.vu("SliceLabelContentSeparator", b, this.ajq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahq", {
        get: function () {
            return this.aho;
        },
        set: function (a) {
            var b = this.ahq;
            if (a != b) {
                this.aho = a;
                this.vu("SliceLabelContentMode", enumGetBox(RadialLabelMode_$type, b), enumGetBox(RadialLabelMode_$type, this.ahq));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahp", {
        get: function () {
            return this.ahn;
        },
        set: function (a) {
            var b = this.ahp;
            if (a != b) {
                this.ahn = a;
                this.vu("LegendSliceLabelContentMode", enumGetBox(RadialLabelMode_$type, b), enumGetBox(RadialLabelMode_$type, this.ahp));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahw", {
        get: function () {
            return this.ahs;
        },
        set: function (a) {
            var b = this.ahw;
            if (a != b) {
                this.ahs = a;
                this.vu("AngleAxisFavorLabellingScaleEnd", b, this.ahw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahy", {
        get: function () {
            return this.aht;
        },
        set: function (a) {
            var b = this.ahy;
            if (a != b) {
                this.aht = a;
                this.vu("ValueAxisAbbreviateLargeNumbers", b, this.ahy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahc", {
        get: function () {
            return this.ahb;
        },
        set: function (a) {
            var b = this.ahb;
            if (a != b) {
                this.ahb = a;
                this.vu("MarkerCollision", enumGetBox(CollisionAvoidanceType_$type, b), enumGetBox(CollisionAvoidanceType_$type, this.ahb));
            }
        },
        enumerable: false,
        configurable: true
    });
    DataPieBaseChart.$t = markType(DataPieBaseChart, 'DataPieBaseChart', RadialBaseChart.$);
    return DataPieBaseChart;
}(RadialBaseChart));
export { DataPieBaseChart };
