import { __extends } from "tslib";
import { IgrFragmentBase } from "./igr-fragment-base";
import { LineFragment } from "./LineFragment";
/**
 * Represents one part of a StackedLineSeries.
*/
var IgrLineFragment = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrLineFragment, _super);
    function IgrLineFragment(props) {
        return _super.call(this, props) || this;
    }
    IgrLineFragment.prototype.createImplementation = function () {
        return new LineFragment();
    };
    Object.defineProperty(IgrLineFragment.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrLineFragment.prototype, "isLineOnly", {
        /**
         * Gets whether the current series shows only line shapes.
        */
        get: function () {
            return this.i.fk;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrLineFragment.prototype, "isAreaOrLine", {
        /**
         * Gets whether the current series shows an area or line shape.
        */
        get: function () {
            return this.i.ev;
        },
        enumerable: false,
        configurable: true
    });
    return IgrLineFragment;
}(IgrFragmentBase));
export { IgrLineFragment };
