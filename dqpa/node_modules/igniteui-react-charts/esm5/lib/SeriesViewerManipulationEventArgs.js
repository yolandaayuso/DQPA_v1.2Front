/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var SeriesViewerManipulationEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SeriesViewerManipulationEventArgs, _super);
    function SeriesViewerManipulationEventArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._isZoomPan = false;
        _this._isDragZoom = false;
        _this._isDragSelect = false;
        return _this;
    }
    Object.defineProperty(SeriesViewerManipulationEventArgs.prototype, "isZoomPan", {
        get: function () {
            return this._isZoomPan;
        },
        set: function (a) {
            this._isZoomPan = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SeriesViewerManipulationEventArgs.prototype, "isDragZoom", {
        get: function () {
            return this._isDragZoom;
        },
        set: function (a) {
            this._isDragZoom = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SeriesViewerManipulationEventArgs.prototype, "isDragSelect", {
        get: function () {
            return this._isDragSelect;
        },
        set: function (a) {
            this._isDragSelect = a;
        },
        enumerable: false,
        configurable: true
    });
    SeriesViewerManipulationEventArgs.$t = markType(SeriesViewerManipulationEventArgs, 'SeriesViewerManipulationEventArgs', EventArgs.$);
    return SeriesViewerManipulationEventArgs;
}(EventArgs));
export { SeriesViewerManipulationEventArgs };
