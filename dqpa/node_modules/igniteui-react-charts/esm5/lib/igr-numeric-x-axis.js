import { __extends } from "tslib";
import { IgrStraightNumericAxisBase } from "./igr-straight-numeric-axis-base";
import { NumericXAxis } from "./NumericXAxis";
/**
 * Represents a IgxDataChartComponent numeric X axis.
*
* The `NumericXAxis` treats the data as continuously varying numerical data items. Labels on this axis are placed along the X-axis. The location of labels varies according to the value in a data column that is mapped using the `XMemberPath` property of Scatter Series or `ValueMemberPath` property of Bar Series.
*
* ```ts
*  <IgrDataChart
*     dataSource={this.state.dataSource} >
*
*     <IgrNumericXAxis name="xAxis" />
*     <IgrNumericYAxis name="yAxis"
* 		 crossingAxis= "xAxis"
* 		crossingValue= {700}/>
*  </IgrDataChart>
* ```
*
* ```ts
* this.series = new IgrColumnSeries({ name: "series1" });
* this.series.dataSource = this.data;
* this.series.xAxis = this.numericXAxis;
* this.series.yAxis = this.numericYAxis;
* this.series.xAxisName = "xAxis";
* this.series.yAxisName = "yAxis";
* ```
*/
var IgrNumericXAxis = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrNumericXAxis, _super);
    function IgrNumericXAxis(props) {
        return _super.call(this, props) || this;
    }
    IgrNumericXAxis.prototype.createImplementation = function () {
        return new NumericXAxis();
    };
    Object.defineProperty(IgrNumericXAxis.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgrNumericXAxis.prototype.scrollRangeIntoView = function (minimum, maximum) {
        this.i.ok(minimum, maximum);
    };
    return IgrNumericXAxis;
}(IgrStraightNumericAxisBase));
export { IgrNumericXAxis };
