import { __extends } from "tslib";
import { IgrStrategyBasedIndicator } from "./igr-strategy-based-indicator";
import { AverageDirectionalIndexIndicator } from "./AverageDirectionalIndexIndicator";
/**
 * Represents a IgxDataChartComponent Average Directional indicator series.
 * Default required members: High, Low, Close
*
* You can use the `AverageDirectionalIndexIndicator` to measures trend strength without regard to trend direction.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*     <IgrCategoryXAxis name="xAxis" label="Year" />
*     <IgrNumericYAxis  name="yAxis" />
*
*     <IgrAverageDirectionalIndexIndicator
*         name="series1"
*         xAxisName="xAxis"
*         yAxisName="yAxis"
* 		openMemberPath="Open"
* 		volumeMemberPath="Volume"
*         highMemberPath="High"
*         lowMemberPath="Low" />
*  </IgrDataChart>
* ```
*
* ```ts
* let series = new IgrAverageDirectionalIndexIndicator();
* series.xAxisName = this.xAxis;
* series.yAxisName = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
var IgrAverageDirectionalIndexIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrAverageDirectionalIndexIndicator, _super);
    function IgrAverageDirectionalIndexIndicator(props) {
        return _super.call(this, props) || this;
    }
    IgrAverageDirectionalIndexIndicator.prototype.createImplementation = function () {
        return new AverageDirectionalIndexIndicator();
    };
    Object.defineProperty(IgrAverageDirectionalIndexIndicator.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrAverageDirectionalIndexIndicator.prototype, "period", {
        /**
         * Gets or sets the moving average period for the current AverageDirectionalIndexIndicator object.
         * The typical, and initial, value for AverageDirectionalIndexIndicator periods is 14.
        *
        * You can use the `Period` to set the moving average.
        *
        * ```ts
        * <IgrDataChart
        *     dataSource={this.state.dataSource}
        *     width="700px"
        *     height="500px">
        *
        *     <IgrCategoryXAxis name="xAxis" label="Year" />
        *     <IgrNumericYAxis  name="yAxis" />
        *
        *     <IgrAverageDirectionalIndexIndicator
        *         name="series1"
        *         xAxisName="xAxis"
        *         yAxisName="yAxis"
        * 		openMemberPath="Open"
        * 		volumeMemberPath="Volume"
        *         highMemberPath="High"
        *         lowMemberPath="Low"
        * 		period="14"/>
        *  </IgrDataChart>
        * ```
        *
        * ```ts
        * this.series.period = 14;
        * ```
        */
        get: function () {
            return this.i.acg;
        },
        set: function (v) {
            this.i.acg = +v;
        },
        enumerable: false,
        configurable: true
    });
    return IgrAverageDirectionalIndexIndicator;
}(IgrStrategyBasedIndicator));
export { IgrAverageDirectionalIndexIndicator };
