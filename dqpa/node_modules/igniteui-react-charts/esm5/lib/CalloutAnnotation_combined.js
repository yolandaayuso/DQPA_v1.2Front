/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { DependencyObject } from "igniteui-react-core";
import { INotifyPropertyChanged_$type, Base, PropertyChangedEventArgs, typeCast, markType, markDep } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Series } from "./Series";
import { Brush } from "igniteui-react-core";
import { Thickness } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
var CalloutAnnotation = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CalloutAnnotation, _super);
    function CalloutAnnotation() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.propertyChanged = null;
        _this.k = null;
        _this.ac = 0;
        _this.ad = 0;
        _this.ao = null;
        _this.az = null;
        _this.ab = null;
        _this.aa = null;
        _this.l = null;
        _this.bn = null;
        _this._formatLabel = null;
        _this.bq = null;
        _this.bm = null;
        _this.bp = null;
        _this.bo = null;
        _this.y = 0;
        _this.o = false;
        _this.n = true;
        _this.bv = null;
        _this.v = NaN;
        _this.x = NaN;
        _this.w = NaN;
        _this.u = NaN;
        return _this;
    }
    CalloutAnnotation.prototype.a3 = function (a, b, c) {
        this.a2(a, b, c);
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
    };
    CalloutAnnotation.prototype.a2 = function (a, b, c) {
        switch (a) {
            case CalloutAnnotation.$$p[15]:
                this.ac = c;
                break;
            case CalloutAnnotation.$$p[16]:
                this.ad = c;
                break;
            case CalloutAnnotation.$$p[11]:
                this.l = c;
                break;
            case CalloutAnnotation.$$p[6]:
                this.aa = c;
                break;
            case CalloutAnnotation.$$p[8]:
                this.ab = c;
                break;
            case CalloutAnnotation.$$p[14]:
                this.ao = c;
                break;
            case CalloutAnnotation.$$p[7]:
                this.bn = c;
                break;
            case CalloutAnnotation.$$p[13]:
                this.bq = c;
                break;
            case CalloutAnnotation.$$p[9]:
                this.bo = c;
                break;
            case CalloutAnnotation.$$p[10]:
                this.bp = c;
                break;
            case CalloutAnnotation.$$p[5]:
                this.bm = c;
                break;
            case CalloutAnnotation.$$p[12]:
                this.y = c;
                break;
            case CalloutAnnotation.$$p[2]:
                this.n = true;
                this.v = c;
                break;
            case CalloutAnnotation.$$p[4]:
                this.n = true;
                this.x = c;
                break;
            case CalloutAnnotation.$$p[3]:
                this.n = true;
                this.w = c;
                break;
            case CalloutAnnotation.$$p[1]:
                this.n = true;
                this.u = c;
                break;
        }
        this.o = true;
    };
    Object.defineProperty(CalloutAnnotation.prototype, "formatLabel", {
        get: function () {
            return this._formatLabel;
        },
        set: function (a) {
            this._formatLabel = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CalloutAnnotation.prototype, "backgroundPadding", {
        get: function () {
            if (this.n) {
                this.n = false;
                this.bv = new Thickness(1, this.v, this.x, this.w, this.u);
            }
            return this.bv;
        },
        set: function (a) {
            this.backgroundPaddingLeft = a.left;
            this.backgroundPaddingTop = a.top;
            this.backgroundPaddingRight = a.right;
            this.backgroundPaddingBottom = a.bottom;
        },
        enumerable: false,
        configurable: true
    });
    CalloutAnnotation.$t = markType(CalloutAnnotation, 'CalloutAnnotation', DependencyObject.$, [INotifyPropertyChanged_$type]);
    CalloutAnnotation.$$p = markDep(DependencyProperty, PropertyMetadata, CalloutAnnotation, 'a3', ['BackgroundCornerRadius', [1, NaN], 'BackgroundPaddingBottom', [1, NaN], 'BackgroundPaddingLeft', [1, NaN], 'BackgroundPaddingRight', [1, NaN], 'BackgroundPaddingTop', [1, NaN], 'Background', [Brush.$, null], 'Content', [4, null], 'ItemColor', [Brush.$, null], 'Key', [4, null], 'LeaderBrush', [Brush.$, null], 'Outline', [Brush.$, null], 'Series', [Series.$, null], 'StrokeThickness', [1, 0], 'TextColor', [Brush.$, null], 'Text', [2, null], 'XValue', [4, 0], 'YValue', [4, 0]]);
    return CalloutAnnotation;
}(DependencyObject));
export { CalloutAnnotation };
/**
 * @hidden
 */
var CalloutAnnotationWrapper = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CalloutAnnotationWrapper, _super);
    function CalloutAnnotationWrapper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = null;
        _this.c = null;
        _this.e = 0;
        _this.f = 0;
        return _this;
    }
    Object.defineProperty(CalloutAnnotationWrapper.prototype, "b", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            this.a = a;
            this.a.k = this;
        },
        enumerable: false,
        configurable: true
    });
    CalloutAnnotationWrapper.prototype.equals = function (a) {
        var b = typeCast(CalloutAnnotationWrapper.$, a);
        if (b == null) {
            return _super.prototype.equals.call(this, a);
        }
        if (b.b == null && this.b == null) {
            return _super.prototype.equals.call(this, a);
        }
        if (b.b == null) {
            return false;
        }
        if (this.b.ab != null || b.b.ab != null) {
            return Base.equalsStatic(this.b.ab, b.b.ab);
        }
        return _super.prototype.equals.call(this, a);
    };
    CalloutAnnotationWrapper.prototype.getHashCode = function () {
        if (this.b == null || this.b.ab == null) {
            return _super.prototype.getHashCode.call(this);
        }
        return Base.getHashCodeStatic(this.b.ab);
    };
    CalloutAnnotationWrapper.$t = markType(CalloutAnnotationWrapper, 'CalloutAnnotationWrapper');
    return CalloutAnnotationWrapper;
}(Base));
export { CalloutAnnotationWrapper };
