/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { ITileZoomTileInfo_$type } from "./ITileZoomTileInfo";
/**
 * @hidden
 */
var TileZoomTileInfo = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TileZoomTileInfo, _super);
    function TileZoomTileInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._zoomLevel = 0;
        _this._xPosition = 0;
        _this._yPosition = 0;
        return _this;
    }
    Object.defineProperty(TileZoomTileInfo.prototype, "zoomLevel", {
        get: function () {
            return this._zoomLevel;
        },
        set: function (a) {
            this._zoomLevel = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TileZoomTileInfo.prototype, "xPosition", {
        get: function () {
            return this._xPosition;
        },
        set: function (a) {
            this._xPosition = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TileZoomTileInfo.prototype, "yPosition", {
        get: function () {
            return this._yPosition;
        },
        set: function (a) {
            this._yPosition = a;
        },
        enumerable: false,
        configurable: true
    });
    TileZoomTileInfo.prototype.toString = function () {
        return this.zoomLevel + "_" + this.xPosition + "_" + this.yPosition;
    };
    TileZoomTileInfo.$t = markType(TileZoomTileInfo, 'TileZoomTileInfo', Base.$, [ITileZoomTileInfo_$type]);
    return TileZoomTileInfo;
}(Base));
export { TileZoomTileInfo };
