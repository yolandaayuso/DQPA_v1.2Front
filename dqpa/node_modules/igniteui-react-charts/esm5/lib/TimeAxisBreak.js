/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, INotifyPropertyChanged_$type, PropertyChangedEventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var TimeAxisBreak = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(TimeAxisBreak, _super);
    function TimeAxisBreak() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.b = new Date();
        _this.a = new Date();
        _this.h = (0);
        _this.propertyChanged = null;
        return _this;
    }
    Object.defineProperty(TimeAxisBreak.prototype, "d", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            var b = this.d;
            if (+a != +b) {
                this.b = a;
                this.j("Start", b, this.d);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeAxisBreak.prototype, "c", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            var b = this.c;
            if (+a != +b) {
                this.a = a;
                this.j("End", b, this.c);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TimeAxisBreak.prototype, "i", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            var b = this.i;
            if (a != b) {
                this.h = a;
                this.j("Interval", b, this.i);
            }
        },
        enumerable: false,
        configurable: true
    });
    TimeAxisBreak.prototype.j = function (a, b, c) {
        this.k(a, b, c);
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
    };
    TimeAxisBreak.prototype.k = function (a, b, c) {
    };
    TimeAxisBreak.$t = markType(TimeAxisBreak, 'TimeAxisBreak', Base.$, [INotifyPropertyChanged_$type]);
    return TimeAxisBreak;
}(Base));
export { TimeAxisBreak };
