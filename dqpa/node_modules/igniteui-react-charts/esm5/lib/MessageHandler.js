/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, Type, Delegate_$type, markType, getInstanceType } from "igniteui-react-core";
import { Dictionary$2 } from "igniteui-react-core";
/**
 * @hidden
 */
var MessageHandler = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(MessageHandler, _super);
    function MessageHandler() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.a = new Dictionary$2(Type.$, Delegate_$type, 0);
        return _this;
    }
    MessageHandler.prototype.b = function (a, b) {
        this.a.addItem(a, b);
    };
    MessageHandler.prototype.c = function (a) {
        var _this = this;
        var b;
        if (((function () { var c = _this.a.tryGetValue(getInstanceType(a), b); b = c.p1; return c.ret; })())) {
            b(a);
        }
    };
    MessageHandler.$t = markType(MessageHandler, 'MessageHandler');
    return MessageHandler;
}(Base));
export { MessageHandler };
