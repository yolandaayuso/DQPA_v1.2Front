import { __extends } from "tslib";
import { IgrStrategyBasedIndicator } from "./igr-strategy-based-indicator";
import { MovingAverageConvergenceDivergenceIndicator } from "./MovingAverageConvergenceDivergenceIndicator";
/**
 * Represents a IgxDataChartComponent Moving Average Convergence/Divergence (MACD) indicator series.
 * Default required members: High, Low, Close
*
* Represents a Ignite UIDataChart Moving Average Convergence/Divergence (MACD) indicator series.
*
* Example:
*
* ```ts
*  <IgrDataChart
*     dataSource={this.state.dataSource} >
*
*     <IgrCategoryXAxis name="xAxis" />
*     <IgrNumericYAxis name="yAxis" />
*
*     <IgrMovingAverageConvergenceDivergenceIndicator
* 	name="series1"
* 	openMemberPath="open"
* 	volumeMemberPath="Volume"
* 	highMemberPath="High"
* 	lowMemberPath="Low"
* 	closeMemberPath="close"/>
*  </IgrDataChart>
* ```
*
* ```ts
* this.series = new IgrMovingAverageConvergenceDivergenceIndicator ({ name: "Series1" });
* this.series.dataSource = this.data;
* this.series.xAxis = this.categoryXAxis;
* this.series.yAxis = this.numericYAxis;
* this.series.xAxisName = "categoryXAxis";
* this.series.yAxisName = "numericYAxis";
* this.series.openMemberPath = "open";
* this.series.highMemberPath = "high";
* this.series.lowMemberPath = "low";
* this.series.closeMemberPath = "close";
* ```
*/
var IgrMovingAverageConvergenceDivergenceIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrMovingAverageConvergenceDivergenceIndicator, _super);
    function IgrMovingAverageConvergenceDivergenceIndicator(props) {
        return _super.call(this, props) || this;
    }
    IgrMovingAverageConvergenceDivergenceIndicator.prototype.createImplementation = function () {
        return new MovingAverageConvergenceDivergenceIndicator();
    };
    Object.defineProperty(IgrMovingAverageConvergenceDivergenceIndicator.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrMovingAverageConvergenceDivergenceIndicator.prototype, "defaultDisplayType", {
        /**
         * Gets default display type for the current Financial Indicator
        */
        get: function () {
            return this.i.aa2;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrMovingAverageConvergenceDivergenceIndicator.prototype, "shortPeriod", {
        /**
         * Gets or sets the short moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
         * The typical, and initial, value for short MACD periods is 10.
        *
        * Gets or sets the short moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
        *
        * Example:
        *
        * ```ts
        *  <IgrDataChart
        *     dataSource={this.state.dataSource} >
        *
        *     <IgrCategoryXAxis name="xAxis" />
        *     <IgrNumericYAxis name="yAxis" />
        *
        *     <IgrMovingAverageConvergenceDivergenceIndicator
        * 	name="series1"
        * 	openMemberPath="open"
        * 	volumeMemberPath="Volume"
        * 	highMemberPath="High"
        * 	lowMemberPath="Low"
        * 	closeMemberPath="close"
        * 	shortPeriod="30"/>
        *  </IgrDataChart>
        * ```
        */
        get: function () {
            return this.i.shortPeriod;
        },
        set: function (v) {
            this.i.shortPeriod = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrMovingAverageConvergenceDivergenceIndicator.prototype, "longPeriod", {
        /**
         * Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
         * The typical, and initial, value for long MACD periods is 30.
        *
        * Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
        *
        * Example:
        *
        * ```ts
        * this.series.longPeriod="30" ;
        * ```
        *
        * ```ts
        *  <IgrDataChart
        *     dataSource={this.state.dataSource} >
        *
        *     <IgrCategoryXAxis name="xAxis" />
        *     <IgrNumericYAxis name="yAxis" />
        *
        *     <IgrMovingAverageConvergenceDivergenceIndicator
        * 	name="series1"
        * 	openMemberPath="open"
        * 	volumeMemberPath="Volume"
        * 	highMemberPath="High"
        * 	lowMemberPath="Low"
        * 	closeMemberPath="close"
        * 	longPeriod="30"/>
        *  </IgrDataChart>
        * ```
        */
        get: function () {
            return this.i.longPeriod;
        },
        set: function (v) {
            this.i.longPeriod = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrMovingAverageConvergenceDivergenceIndicator.prototype, "signalPeriod", {
        /**
         * Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
         * The typical, and initial, value for long PVO periods is 30.
        *
        * Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
        *
        * Example:
        *
        * ```ts
        *  <IgrDataChart
        *     dataSource={this.state.dataSource} >
        *
        *     <IgrCategoryXAxis name="xAxis" />
        *     <IgrNumericYAxis name="yAxis" />
        *
        *     <IgrMovingAverageConvergenceDivergenceIndicator
        * 	name="series1"
        * 	openMemberPath="open"
        * 	volumeMemberPath="Volume"
        * 	highMemberPath="High"
        * 	lowMemberPath="Low"
        * 	closeMemberPath="close"
        * 	signalPeriod="30"/>
        *  </IgrDataChart>
        * ```
        */
        get: function () {
            return this.i.signalPeriod;
        },
        set: function (v) {
            this.i.signalPeriod = +v;
        },
        enumerable: false,
        configurable: true
    });
    return IgrMovingAverageConvergenceDivergenceIndicator;
}(IgrStrategyBasedIndicator));
export { IgrMovingAverageConvergenceDivergenceIndicator };
