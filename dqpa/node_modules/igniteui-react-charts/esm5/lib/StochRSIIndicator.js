/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { StochRSIIndicatorStrategy } from "./StochRSIIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var StochRSIIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(StochRSIIndicator, _super);
    function StochRSIIndicator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StochRSIIndicator.prototype.bj = function () {
        return new StochRSIIndicator();
    };
    StochRSIIndicator.prototype.get_abv = function () {
        return new StochRSIIndicatorStrategy();
    };
    Object.defineProperty(StochRSIIndicator.prototype, "abv", {
        get: function () {
            return this.get_abv();
        },
        enumerable: false,
        configurable: true
    });
    StochRSIIndicator.prototype.get_ab8 = function () {
        return StochRSIIndicator.$;
    };
    Object.defineProperty(StochRSIIndicator.prototype, "ab8", {
        get: function () {
            return this.get_ab8();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(StochRSIIndicator.prototype, "acg", {
        get: function () {
            return typeGetValue(this.c(StochRSIIndicator.ach));
        },
        set: function (a) {
            this.h(StochRSIIndicator.ach, a);
        },
        enumerable: false,
        configurable: true
    });
    StochRSIIndicator.prototype.ab1 = function () {
        return this.acg;
    };
    StochRSIIndicator.prototype.aca = function (a) {
        this.acg = a;
    };
    StochRSIIndicator.$t = markType(StochRSIIndicator, 'StochRSIIndicator', StrategyBasedIndicator.$);
    StochRSIIndicator.ach = StrategyBasedIndicator.acd(14, StochRSIIndicator.$);
    return StochRSIIndicator;
}(StrategyBasedIndicator));
export { StochRSIIndicator };
