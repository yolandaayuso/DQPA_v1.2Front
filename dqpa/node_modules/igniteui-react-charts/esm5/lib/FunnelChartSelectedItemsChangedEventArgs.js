/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var FunnelChartSelectedItemsChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FunnelChartSelectedItemsChangedEventArgs, _super);
    function FunnelChartSelectedItemsChangedEventArgs(a, b, c) {
        var _this = _super.call(this) || this;
        _this._oldItems = null;
        _this._newItems = null;
        _this._currentItems = null;
        _this.oldItems = a;
        _this.newItems = b;
        _this.currentItems = c;
        return _this;
    }
    Object.defineProperty(FunnelChartSelectedItemsChangedEventArgs.prototype, "oldItems", {
        get: function () {
            return this._oldItems;
        },
        set: function (a) {
            this._oldItems = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FunnelChartSelectedItemsChangedEventArgs.prototype, "newItems", {
        get: function () {
            return this._newItems;
        },
        set: function (a) {
            this._newItems = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FunnelChartSelectedItemsChangedEventArgs.prototype, "currentItems", {
        get: function () {
            return this._currentItems;
        },
        set: function (a) {
            this._currentItems = a;
        },
        enumerable: false,
        configurable: true
    });
    FunnelChartSelectedItemsChangedEventArgs.$t = markType(FunnelChartSelectedItemsChangedEventArgs, 'FunnelChartSelectedItemsChangedEventArgs', EventArgs.$);
    return FunnelChartSelectedItemsChangedEventArgs;
}(EventArgs));
export { FunnelChartSelectedItemsChangedEventArgs };
