/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { NumericAxisRenderingParameters } from "./NumericAxisRenderingParameters";
import { IPolarRadialRenderingParameters_$type } from "./IPolarRadialRenderingParameters";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var PolarAxisRenderingParameters = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PolarAxisRenderingParameters, _super);
    function PolarAxisRenderingParameters() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._minLength = 0;
        _this._maxLength = 0;
        _this._center = null;
        _this._minAngle = 0;
        _this._maxAngle = 0;
        _this._crossingAngleRadians = 0;
        _this._effectiveMaximum = 0;
        return _this;
    }
    Object.defineProperty(PolarAxisRenderingParameters.prototype, "minLength", {
        get: function () {
            return this._minLength;
        },
        set: function (a) {
            this._minLength = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarAxisRenderingParameters.prototype, "maxLength", {
        get: function () {
            return this._maxLength;
        },
        set: function (a) {
            this._maxLength = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarAxisRenderingParameters.prototype, "center", {
        get: function () {
            return this._center;
        },
        set: function (a) {
            this._center = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarAxisRenderingParameters.prototype, "minAngle", {
        get: function () {
            return this._minAngle;
        },
        set: function (a) {
            this._minAngle = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarAxisRenderingParameters.prototype, "maxAngle", {
        get: function () {
            return this._maxAngle;
        },
        set: function (a) {
            this._maxAngle = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarAxisRenderingParameters.prototype, "crossingAngleRadians", {
        get: function () {
            return this._crossingAngleRadians;
        },
        set: function (a) {
            this._crossingAngleRadians = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PolarAxisRenderingParameters.prototype, "effectiveMaximum", {
        get: function () {
            return this._effectiveMaximum;
        },
        set: function (a) {
            this._effectiveMaximum = a;
        },
        enumerable: false,
        configurable: true
    });
    PolarAxisRenderingParameters.$t = markType(PolarAxisRenderingParameters, 'PolarAxisRenderingParameters', NumericAxisRenderingParameters.$, [IPolarRadialRenderingParameters_$type]);
    return PolarAxisRenderingParameters;
}(NumericAxisRenderingParameters));
export { PolarAxisRenderingParameters };
