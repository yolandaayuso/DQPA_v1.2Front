import { __extends } from "tslib";
import { delegateCombine, delegateRemove } from "igniteui-react-core";
import { IgrSeries } from "./igr-series";
import { IgrCalloutPlacementPositionsCollection } from "./igr-callout-placement-positions-collection";
import { HighlightedValueLabelMode_$type } from "igniteui-react-core";
import { AutoCalloutVisibilityMode_$type } from "./AutoCalloutVisibilityMode";
import { CalloutCollisionMode_$type } from "igniteui-react-core";
import { IgrCalloutStyleUpdatingEventArgs } from "./igr-callout-style-updating-event-args";
import { IgrCalloutRenderStyleUpdatingEventArgs } from "./igr-callout-render-style-updating-event-args";
import { IgrCalloutContentUpdatingEventArgs } from "./igr-callout-content-updating-event-args";
import { IgrCalloutLabelUpdatingEventArgs } from "./igr-callout-label-updating-event-args";
import { IgrCalloutSeriesSelectingEventArgs } from "./igr-callout-series-selecting-event-args";
import { IgrAnnotationLayer } from "./igr-annotation-layer";
import { CalloutLayer } from "./CalloutLayer";
import { ensureBool, ensureEnum, brushToString, stringToBrush, arrayFindByName } from "igniteui-react-core";
import { CalloutPlacementPositionsCollection as CalloutPlacementPositionsCollection_internal } from "./CalloutPlacementPositionsCollection";
import { CalloutPlacementPositions_$type } from "./CalloutPlacementPositions";
import { SyncableObservableCollection$1 } from "igniteui-react-core";
/**
 * Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.
*/
var IgrCalloutLayer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrCalloutLayer, _super);
    function IgrCalloutLayer(props) {
        var _this = _super.call(this, props) || this;
        _this._allowedPositions = null;
        _this._calloutStyleUpdating = null;
        _this._calloutStyleUpdating_wrapped = null;
        _this._calloutRenderStyleUpdating = null;
        _this._calloutRenderStyleUpdating_wrapped = null;
        _this._calloutContentUpdating = null;
        _this._calloutContentUpdating_wrapped = null;
        _this._calloutLabelUpdating = null;
        _this._calloutLabelUpdating_wrapped = null;
        _this._calloutSeriesSelecting = null;
        _this._calloutSeriesSelecting_wrapped = null;
        return _this;
    }
    IgrCalloutLayer.prototype.createImplementation = function () {
        return new CalloutLayer();
    };
    Object.defineProperty(IgrCalloutLayer.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "isAnnotationCalloutLayer", {
        /**
         * Gets whether the series is an callout annotation layer.
        */
        get: function () {
            return this.i.eo;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutExpandsAxisBufferEnabled", {
        /**
         * Gets or sets wether or not callout positions adjust auto margin .
        */
        get: function () {
            return this.i.aa4;
        },
        set: function (v) {
            this.i.aa4 = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutExpandsAxisBufferMinHeight", {
        /**
         * Gets or sets the minimum vertical axis buffer for posititing callouts.
         * This property does not take precedences over the CalloutExpandsAxisBufferMaxHeight property.
        */
        get: function () {
            return this.i.abs;
        },
        set: function (v) {
            this.i.abs = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutExpandsAxisBufferMaxHeight", {
        /**
         * Gets or sets the maximum vertical axis buffer for posititing callouts.
         * This property takes precedences over the CalloutExpandsAxisBufferMinHeight property.
        */
        get: function () {
            return this.i.abq;
        },
        set: function (v) {
            this.i.abq = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutExpandsAxisBufferMinWidth", {
        /**
         * Gets or sets the minimum horizontal axis buffer for posititing callouts.
         * This property does not take precedences over the CalloutExpandsAxisBufferMaxWidth property.
        */
        get: function () {
            return this.i.abt;
        },
        set: function (v) {
            this.i.abt = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutExpandsAxisBufferMaxWidth", {
        /**
         * Gets or sets the maximum horizontal axis buffer for posititing callouts.
         * This property takes precedences over the CalloutExpandsAxisBufferMinWidth property.
        */
        get: function () {
            return this.i.abr;
        },
        set: function (v) {
            this.i.abr = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "labelMemberPath", {
        /**
         * Gets or sets the label mapping property for the callouts.
        */
        get: function () {
            return this.i.adb;
        },
        set: function (v) {
            this.i.adb = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "xMemberPath", {
        /**
         * Gets or sets the label mapping property for the callouts.
        */
        get: function () {
            return this.i.adr;
        },
        set: function (v) {
            this.i.adr = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "yMemberPath", {
        /**
         * Gets or sets the label mapping property for the callouts.
        */
        get: function () {
            return this.i.adu;
        },
        set: function (v) {
            this.i.adu = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "keyMemberPath", {
        /**
         * Gets or sets the key mapping property for the callouts.
        */
        get: function () {
            return this.i.ac5;
        },
        set: function (v) {
            this.i.ac5 = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "isCalloutOffsettingEnabled", {
        /**
         * Gets or sets whether to allow the callouts to be variable distances from the target points, for suppporting collision modes.
        */
        get: function () {
            return this.i.aa6;
        },
        set: function (v) {
            this.i.aa6 = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "labelFormat", {
        /**
         * Gets or sets the label format string to use for the label.
        */
        get: function () {
            return this.i.ac8;
        },
        set: function (v) {
            this.i.ac8 = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "labelFormatSpecifiers", {
        /**
         * Gets or sets the format specifiers to use with the LabelFormat string.
        */
        get: function () {
            return this.i.zy;
        },
        set: function (v) {
            if (v && !Array.isArray(v) && typeof (v) == "string") {
                var re = /\s*(?:,|\s|$)\s*/gm;
                v = v.split(re);
            }
            this.i.zy = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "contentMemberPath", {
        /**
         * Gets or sets the content mapping property for the callouts.
        */
        get: function () {
            return this.i.acx;
        },
        set: function (v) {
            this.i.acx = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "targetSeriesName", {
        /**
         * Gets or sets the name of the series series to target this annotation to. If null, this annotation targets all series simultaneously.
        */
        get: function () {
            return this.i.ade;
        },
        set: function (v) {
            this.i.ade = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "targetSeries", {
        /**
         * Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.
        */
        get: function () {
            var r = this.i.aaf;
            if (r == null) {
                return null;
            }
            if (!r.externalObject) {
                var e = IgrSeries._createFromInternal(r);
                if (e) {
                    e._implementation = r;
                }
                r.externalObject = e;
            }
            return r.externalObject;
        },
        set: function (v) {
            if (v != null && this._stylingContainer && v._styling)
                v._styling(this._stylingContainer, this, this);
            v == null ? this.i.aaf = null : this.i.aaf = v.i;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "collisionChannel", {
        /**
         * Gets or sets a channel name to identify other callout layers within the chart to share collision information with.
        */
        get: function () {
            return this.i.acu;
        },
        set: function (v) {
            this.i.acu = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "allowedPositions", {
        /**
         * Gets or sets the allowed positions that the callout layer is allowed to use.
        */
        get: function () {
            if (this._allowedPositions === null) {
                var coll = new IgrCalloutPlacementPositionsCollection();
                var innerColl = this.i.aaa;
                if (!innerColl) {
                    innerColl = new CalloutPlacementPositionsCollection_internal();
                }
                this._allowedPositions = coll._fromInner(innerColl);
                this.i.aaa = innerColl;
            }
            return this._allowedPositions;
        },
        set: function (v) {
            if (this._allowedPositions !== null) {
                this._allowedPositions._setSyncTarget(null);
                this._allowedPositions = null;
            }
            var coll = new IgrCalloutPlacementPositionsCollection();
            this._allowedPositions = coll._fromOuter(v);
            var syncColl = new SyncableObservableCollection$1(CalloutPlacementPositions_$type);
            var innerColl = this.i.aaa;
            if (!innerColl) {
                innerColl = new CalloutPlacementPositionsCollection_internal();
            }
            syncColl._inner = innerColl;
            syncColl.clear();
            this._allowedPositions._setSyncTarget(syncColl);
            this.i.aaa = innerColl;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "isAutoCalloutBehaviorEnabled", {
        /**
         * Gets or sets how to select the final value to annotate.
        */
        get: function () {
            return this.i.aa5;
        },
        set: function (v) {
            this.i.aa5 = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "useInterpolatedValueForAutoCalloutLabels", {
        /**
         * Gets or sets whether to use values, rather than labels for auto callout labels.
        */
        get: function () {
            return this.i.abb;
        },
        set: function (v) {
            this.i.abb = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "useSeriesColorForOutline", {
        /**
         * Gets or sets whether to the series color as the outline of the callout.
        */
        get: function () {
            return this.i.abe;
        },
        set: function (v) {
            this.i.abe = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "useAutoContrastingLabelColors", {
        /**
         * Gets or sets whether to the label color is automatically decided between a light and dark option for contrast.
        */
        get: function () {
            return this.i.aba;
        },
        set: function (v) {
            this.i.aba = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "useItemColorForFill", {
        /**
         * Gets or sets whether to the series color as the outline of the callout.
        */
        get: function () {
            return this.i.abc;
        },
        set: function (v) {
            this.i.abc = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "useItemColorForOutline", {
        /**
         * Gets or sets whether to the series item color as the outline of the callout.
        */
        get: function () {
            return this.i.abd;
        },
        set: function (v) {
            this.i.abd = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "useValueForAutoCalloutLabels", {
        /**
         * Gets or sets whether to use values, rather than labels for auto callout labels.
        */
        get: function () {
            return this.i.abf;
        },
        set: function (v) {
            this.i.abf = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "highlightedValueLabelMode", {
        /**
         * Gets or sets whether to use values, rather than labels for auto callout labels.
        */
        get: function () {
            return this.i.aae;
        },
        set: function (v) {
            this.i.aae = ensureEnum(HighlightedValueLabelMode_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "autoCalloutVisibilityMode", {
        /**
         * Gets or sets the rules for when the callouts should be visible.
        */
        get: function () {
            return this.i.z3;
        },
        set: function (v) {
            this.i.z3 = ensureEnum(AutoCalloutVisibilityMode_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutCornerRadius", {
        /**
         * Gets or sets the corner radius to use for the callout borders.
        */
        get: function () {
            return this.i.abp;
        },
        set: function (v) {
            this.i.abp = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "isCustomCalloutStyleEnabled", {
        /**
         * Gets or sets whether to allow for custom callout styles.
        */
        get: function () {
            return this.i.aa8;
        },
        set: function (v) {
            this.i.aa8 = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "isCustomCalloutRenderStyleEnabled", {
        /**
         * Gets or sets whether to allow for custom callout styles.
        */
        get: function () {
            return this.i.aa7;
        },
        set: function (v) {
            this.i.aa7 = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "autoCalloutLabelPrecision", {
        /**
         * Gets or sets the precision to use when values are used for the auto callout labels.
        */
        get: function () {
            return this.i.ab2;
        },
        set: function (v) {
            this.i.ab2 = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutTextColor", {
        /**
         * Gets or sets the color to use for the callout text. Leave unset for an automatic value.
        */
        get: function () {
            return brushToString(this.i.afr);
        },
        set: function (v) {
            this.i.afr = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutLightTextColor", {
        /**
         * Gets or sets the light color to use for the callout text. Leave unset for an automatic value.
        */
        get: function () {
            return brushToString(this.i.afp);
        },
        set: function (v) {
            this.i.afp = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutDarkTextColor", {
        /**
         * Gets or sets the dark color to use for the callout text. Leave unset for an automatic value.
        */
        get: function () {
            return brushToString(this.i.afn);
        },
        set: function (v) {
            this.i.afn = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutBackground", {
        /**
         * Gets or sets the brush that specifies how the backgrounds for the callouts of the layer are painted. Leave unset for an automatic value.
        */
        get: function () {
            return brushToString(this.i.afm);
        },
        set: function (v) {
            this.i.afm = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "shouldTruncateOnBoundaryCollisions", {
        /**
         * Gets or sets whether the callouts that collide with the boundary should be truncated.
        */
        get: function () {
            return this.i.aa9;
        },
        set: function (v) {
            this.i.aa9 = ensureBool(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutInterpolatedValuePrecision", {
        /**
         * Gets or sets the precision to use displaying values for interpolated crosshair positions.
        */
        get: function () {
            return this.i.ab3;
        },
        set: function (v) {
            this.i.ab3 = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutOutline", {
        /**
         * Gets or sets the brush that specifies how the outlines for the callouts of the layer are painted.
        */
        get: function () {
            return brushToString(this.i.afq);
        },
        set: function (v) {
            this.i.afq = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutLeaderBrush", {
        /**
         * Gets or sets the brush that specifies how the leader lines for the callouts of the layer are painted.
        */
        get: function () {
            return brushToString(this.i.afo);
        },
        set: function (v) {
            this.i.afo = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutPaddingLeft", {
        /**
         * Gets or sets the left padding to use withing the callout. Leaving this NaN will use an automatic value related to the axis label margins.
        */
        get: function () {
            return this.i.abv;
        },
        set: function (v) {
            this.i.abv = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutPaddingTop", {
        /**
         * Gets or sets the top padding to use within the callout. Leaving this NaN will use an automatic value related to the axis label margins.
        */
        get: function () {
            return this.i.abx;
        },
        set: function (v) {
            this.i.abx = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutPaddingRight", {
        /**
         * Gets or sets the right padding to use within the callout. Leaving this NaN will use an automatic value related to the axis label margins.
        */
        get: function () {
            return this.i.abw;
        },
        set: function (v) {
            this.i.abw = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutPaddingBottom", {
        /**
         * Gets or sets the bottom padding to use within the callout. Leaving this NaN will use an automatic value related to the axis label margins.
        */
        get: function () {
            return this.i.abu;
        },
        set: function (v) {
            this.i.abu = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutCollisionMode", {
        /**
         * Gets or sets the strategy to use for avoiding collisions between the callouts in this layer. Leave unset for an automatic value.
        */
        get: function () {
            return this.i.z5;
        },
        set: function (v) {
            this.i.z5 = ensureEnum(CalloutCollisionMode_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutPositionPadding", {
        /**
         * Gets or sets the padding to add to the callout positioning. Leave unset for an automatic value.
        */
        get: function () {
            return this.i.aby;
        },
        set: function (v) {
            this.i.aby = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutStrokeThickness", {
        /**
         * Gets or sets the stroke thickness for the callout backing. Leave unset for an automatic value.
        */
        get: function () {
            return this.i.abz;
        },
        set: function (v) {
            this.i.abz = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "textStyle", {
        /**
         * Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.
        */
        get: function () {
            return this.i.adh;
        },
        set: function (v) {
            this.i.adh = v;
        },
        enumerable: false,
        configurable: true
    });
    IgrCalloutLayer.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.labelFormatSpecifiers != null && arrayFindByName(this.labelFormatSpecifiers, name)) {
            return arrayFindByName(this.labelFormatSpecifiers, name);
        }
        if (this.targetSeries && this.targetSeries.name && this.targetSeries.name == name) {
            return this.targetSeries;
        }
        if (this.allowedPositions != null && this.allowedPositions.findByName && this.allowedPositions.findByName(name)) {
            return this.allowedPositions.findByName(name);
        }
        return null;
    };
    IgrCalloutLayer.prototype._styling = function (container, component, parent) {
        _super.prototype._styling.call(this, container, component, parent);
        this._inStyling = true;
        if (this.targetSeries && this.targetSeries._styling) {
            this.targetSeries._styling(container, component, this);
        }
        this._inStyling = false;
    };
    IgrCalloutLayer.prototype.getItemValue = function (item, memberPathName) {
        var iv = this.i.kq(item, memberPathName);
        return (iv);
    };
    /**
     * Gets the value of a requested member path from the series.
    
    * @param memberPathName  * The property name of a valid member path for the series
    */
    IgrCalloutLayer.prototype.getMemberPathValue = function (memberPathName) {
        var iv = this.i.md(memberPathName);
        return (iv);
    };
    /**
     * Invalidates content of callout layer
    
    */
    IgrCalloutLayer.prototype.invalidateCalloutContent = function () {
        this.i.ad4();
    };
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutStyleUpdating", {
        /**
         * Event raised when updating style of callout layer
        */
        get: function () {
            return this._calloutStyleUpdating;
        },
        set: function (ev) {
            var _this = this;
            if (this._calloutStyleUpdating_wrapped !== null) {
                this.i.calloutStyleUpdating = delegateRemove(this.i.calloutStyleUpdating, this._calloutStyleUpdating_wrapped);
                this._calloutStyleUpdating_wrapped = null;
                this._calloutStyleUpdating = null;
            }
            this._calloutStyleUpdating = ev;
            this._calloutStyleUpdating_wrapped = function (o, e) {
                var outerArgs = new IgrCalloutStyleUpdatingEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeCalloutStyleUpdating) {
                    _this.beforeCalloutStyleUpdating(_this, outerArgs);
                }
                if (_this._calloutStyleUpdating) {
                    _this._calloutStyleUpdating(_this, outerArgs);
                }
            };
            this.i.calloutStyleUpdating = delegateCombine(this.i.calloutStyleUpdating, this._calloutStyleUpdating_wrapped);
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutRenderStyleUpdating", {
        /**
         * Event raised when updating style of callout layer
        */
        get: function () {
            return this._calloutRenderStyleUpdating;
        },
        set: function (ev) {
            var _this = this;
            if (this._calloutRenderStyleUpdating_wrapped !== null) {
                this.i.calloutRenderStyleUpdating = delegateRemove(this.i.calloutRenderStyleUpdating, this._calloutRenderStyleUpdating_wrapped);
                this._calloutRenderStyleUpdating_wrapped = null;
                this._calloutRenderStyleUpdating = null;
            }
            this._calloutRenderStyleUpdating = ev;
            this._calloutRenderStyleUpdating_wrapped = function (o, e) {
                var outerArgs = new IgrCalloutRenderStyleUpdatingEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeCalloutRenderStyleUpdating) {
                    _this.beforeCalloutRenderStyleUpdating(_this, outerArgs);
                }
                if (_this._calloutRenderStyleUpdating) {
                    _this._calloutRenderStyleUpdating(_this, outerArgs);
                }
            };
            this.i.calloutRenderStyleUpdating = delegateCombine(this.i.calloutRenderStyleUpdating, this._calloutRenderStyleUpdating_wrapped);
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutContentUpdating", {
        /**
         * Raised to allow you to decide on the content for an automatically created callout.
        */
        get: function () {
            return this._calloutContentUpdating;
        },
        set: function (ev) {
            var _this = this;
            if (this._calloutContentUpdating_wrapped !== null) {
                this.i.calloutContentUpdating = delegateRemove(this.i.calloutContentUpdating, this._calloutContentUpdating_wrapped);
                this._calloutContentUpdating_wrapped = null;
                this._calloutContentUpdating = null;
            }
            this._calloutContentUpdating = ev;
            this._calloutContentUpdating_wrapped = function (o, e) {
                var outerArgs = new IgrCalloutContentUpdatingEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeCalloutContentUpdating) {
                    _this.beforeCalloutContentUpdating(_this, outerArgs);
                }
                if (_this._calloutContentUpdating) {
                    _this._calloutContentUpdating(_this, outerArgs);
                }
            };
            this.i.calloutContentUpdating = delegateCombine(this.i.calloutContentUpdating, this._calloutContentUpdating_wrapped);
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutLabelUpdating", {
        /**
         * Raised to allow you to decide on the label for an automatically created callout.
        */
        get: function () {
            return this._calloutLabelUpdating;
        },
        set: function (ev) {
            var _this = this;
            if (this._calloutLabelUpdating_wrapped !== null) {
                this.i.calloutLabelUpdating = delegateRemove(this.i.calloutLabelUpdating, this._calloutLabelUpdating_wrapped);
                this._calloutLabelUpdating_wrapped = null;
                this._calloutLabelUpdating = null;
            }
            this._calloutLabelUpdating = ev;
            this._calloutLabelUpdating_wrapped = function (o, e) {
                var outerArgs = new IgrCalloutLabelUpdatingEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeCalloutLabelUpdating) {
                    _this.beforeCalloutLabelUpdating(_this, outerArgs);
                }
                if (_this._calloutLabelUpdating) {
                    _this._calloutLabelUpdating(_this, outerArgs);
                }
            };
            this.i.calloutLabelUpdating = delegateCombine(this.i.calloutLabelUpdating, this._calloutLabelUpdating_wrapped);
            ;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgrCalloutLayer.prototype, "calloutSeriesSelecting", {
        /**
         * Raised to allow you to select a target series for a data bound callout.
        */
        get: function () {
            return this._calloutSeriesSelecting;
        },
        set: function (ev) {
            var _this = this;
            if (this._calloutSeriesSelecting_wrapped !== null) {
                this.i.calloutSeriesSelecting = delegateRemove(this.i.calloutSeriesSelecting, this._calloutSeriesSelecting_wrapped);
                this._calloutSeriesSelecting_wrapped = null;
                this._calloutSeriesSelecting = null;
            }
            this._calloutSeriesSelecting = ev;
            this._calloutSeriesSelecting_wrapped = function (o, e) {
                var outerArgs = new IgrCalloutSeriesSelectingEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeCalloutSeriesSelecting) {
                    _this.beforeCalloutSeriesSelecting(_this, outerArgs);
                }
                if (_this._calloutSeriesSelecting) {
                    _this._calloutSeriesSelecting(_this, outerArgs);
                }
            };
            this.i.calloutSeriesSelecting = delegateCombine(this.i.calloutSeriesSelecting, this._calloutSeriesSelecting_wrapped);
            ;
        },
        enumerable: false,
        configurable: true
    });
    return IgrCalloutLayer;
}(IgrAnnotationLayer));
export { IgrCalloutLayer };
