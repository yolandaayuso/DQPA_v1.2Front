/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ErrorBarSettingsBase } from "./ErrorBarSettingsBase";
import { EnableErrorBars_$type } from "./EnableErrorBars";
import { DependencyProperty } from "igniteui-react-core";
import { ErrorBarCalculatorReference_$type } from "igniteui-react-core";
import { IErrorBarCalculator_$type } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { Style } from "igniteui-react-core";
import { runOn, delegateCombine, enumGetBox, typeCast, delegateRemove, markType, markDep } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
var ScatterErrorBarSettings = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterErrorBarSettings, _super);
    function ScatterErrorBarSettings() {
        var _this = _super.call(this) || this;
        _this.q = null;
        _this.propertyUpdated = delegateCombine(_this.propertyUpdated, runOn(_this, _this.ap));
        return _this;
    }
    Object.defineProperty(ScatterErrorBarSettings.prototype, "r", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
        },
        enumerable: false,
        configurable: true
    });
    ScatterErrorBarSettings.prototype.ap = function (a, b) {
        switch (b.propertyName) {
            case ScatterErrorBarSettings.$$p[2]:
            case ScatterErrorBarSettings.$$p[8]:
                var c = typeCast(IErrorBarCalculator_$type, b.oldValue);
                if (c != null) {
                    c.changed = delegateRemove(c.changed, runOn(this, this.ao));
                }
                if (this.r != null) {
                    this.r.rr(false);
                    if (this.r.db != null) {
                        this.r.ql();
                    }
                }
                var d = typeCast(IErrorBarCalculator_$type, b.newValue);
                if (d != null) {
                    d.changed = delegateCombine(d.changed, runOn(this, this.ao));
                }
                break;
            case ScatterErrorBarSettings.$$p[0]:
            case ScatterErrorBarSettings.$$p[1]:
            case ScatterErrorBarSettings.$$p[3]:
            case ScatterErrorBarSettings.$$p[4]:
            case ScatterErrorBarSettings.$$p[5]:
            case ScatterErrorBarSettings.$$p[6]:
            case ScatterErrorBarSettings.$$p[7]:
            case ScatterErrorBarSettings.$$p[9]:
            case ScatterErrorBarSettings.$$p[10]:
            case ScatterErrorBarSettings.$$p[11]:
            case ScatterErrorBarSettings.$$p[12]:
            case ScatterErrorBarSettings.$$p[13]:
                if (this.r != null) {
                    this.r.rr(false);
                    if (this.r.db != null) {
                        this.r.ql();
                    }
                }
                break;
        }
    };
    ScatterErrorBarSettings.prototype.ao = function (a, b) {
        var c = typeCast(IErrorBarCalculator_$type, a);
        if (c != null) {
            c.changed = delegateRemove(c.changed, runOn(this, this.ao));
            if (this.r != null) {
                this.r.rr(false);
            }
            c.changed = delegateCombine(c.changed, runOn(this, this.ao));
        }
    };
    ScatterErrorBarSettings.$t = markType(ScatterErrorBarSettings, 'ScatterErrorBarSettings', ErrorBarSettingsBase.$);
    ScatterErrorBarSettings.$$p = markDep(DependencyProperty, PropertyMetadata, ScatterErrorBarSettings, 'l', ['EnableErrorBarsHorizontal:o:aq', [EnableErrorBars_$type, enumGetBox(EnableErrorBars_$type, 0)], 'EnableErrorBarsVertical:p:ar', [EnableErrorBars_$type, enumGetBox(EnableErrorBars_$type, 0)], 'HorizontalCalculator:u:as', [IErrorBarCalculator_$type, null], 'HorizontalCalculatorReference:s:at', [ErrorBarCalculatorReference_$type, enumGetBox(ErrorBarCalculatorReference_$type, 0)], 'HorizontalErrorBarCapLength:y:au', [1, 6], 'HorizontalErrorBarStyle:a6:av', [Style.$, null], 'HorizontalStroke:a4:aw', [Brush.$, null], 'HorizontalStrokeThickness:w:ax', [1, 1], 'VerticalCalculator:v:ay', [IErrorBarCalculator_$type, null], 'VerticalCalculatorReference:t:az', [ErrorBarCalculatorReference_$type, enumGetBox(ErrorBarCalculatorReference_$type, 1)], 'VerticalErrorBarCapLength:z:a0', [1, 6], 'VerticalErrorBarStyle:a7:a1', [Style.$, null], 'VerticalStroke:a5:a2', [Brush.$, null], 'VerticalStrokeThickness:x:a3', [1, 1]]);
    return ScatterErrorBarSettings;
}(ErrorBarSettingsBase));
export { ScatterErrorBarSettings };
