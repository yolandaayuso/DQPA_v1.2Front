/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ContentControl } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { Visibility_$type } from "igniteui-react-core";
import { Number_$type, enumGetBox, EnumUtil, markType, markDep } from "igniteui-react-core";
import { Binding } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
var XamFunnelSlice = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(XamFunnelSlice, _super);
    function XamFunnelSlice() {
        var _this = _super.call(this) || this;
        _this.a7 = null;
        _this.ai = null;
        _this.ab = XamFunnelSlice.$;
        _this.g(XamFunnelSlice.aw, new Binding(1, XamFunnelSlice.$$p[0]));
        _this.g(XamFunnelSlice.az, new Binding(1, XamFunnelSlice.$$p[3]));
        _this.g(XamFunnelSlice.ax, new Binding(1, XamFunnelSlice.$$p[1]));
        _this.g(XamFunnelSlice.ay, new Binding(1, XamFunnelSlice.$$p[2]));
        return _this;
    }
    Object.defineProperty(XamFunnelSlice.prototype, "aj", {
        get: function () {
            return this.c(XamFunnelSlice.a6);
        },
        set: function (a) {
            this.h(XamFunnelSlice.a6, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XamFunnelSlice.prototype, "a8", {
        get: function () {
            return this.c(XamFunnelSlice.aw);
        },
        set: function (a) {
            this.h(XamFunnelSlice.aw, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XamFunnelSlice.prototype, "bb", {
        get: function () {
            return this.c(XamFunnelSlice.az);
        },
        set: function (a) {
            this.h(XamFunnelSlice.az, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XamFunnelSlice.prototype, "a9", {
        get: function () {
            return this.c(XamFunnelSlice.ax);
        },
        set: function (a) {
            this.h(XamFunnelSlice.ax, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XamFunnelSlice.prototype, "ba", {
        get: function () {
            return this.c(XamFunnelSlice.ay);
        },
        set: function (a) {
            this.h(XamFunnelSlice.ay, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XamFunnelSlice.prototype, "bg", {
        get: function () {
            return EnumUtil.getEnumValue(Visibility_$type, this.c(XamFunnelSlice.a3));
        },
        set: function (a) {
            this.h(XamFunnelSlice.a3, enumGetBox(Visibility_$type, a));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(XamFunnelSlice.prototype, "bh", {
        get: function () {
            return EnumUtil.getEnumValue(Visibility_$type, this.c(XamFunnelSlice.a4));
        },
        set: function (a) {
            this.h(XamFunnelSlice.a4, enumGetBox(Visibility_$type, a));
        },
        enumerable: false,
        configurable: true
    });
    XamFunnelSlice.prototype.av = function (a, b, c) {
        var d;
        switch (a) {
            case "Fill":
                d = new Binding(1, XamFunnelSlice.$$p[0]);
                if (c != null) {
                    d.d = this;
                }
                this.g(XamFunnelSlice.aw, d);
                break;
            case "Outline":
                d = new Binding(1, XamFunnelSlice.$$p[3]);
                if (c != null) {
                    d.d = this;
                }
                this.g(XamFunnelSlice.az, d);
                break;
        }
    };
    XamFunnelSlice.$t = markType(XamFunnelSlice, 'XamFunnelSlice', ContentControl.$);
    XamFunnelSlice.a6 = DependencyProperty.i("StrokeThickness", Number_$type, XamFunnelSlice.$, new PropertyMetadata(2, 1, function (a, b) {
    }));
    XamFunnelSlice.aw = DependencyProperty.i("ActualFill", Brush.$, XamFunnelSlice.$, new PropertyMetadata(1, null));
    XamFunnelSlice.az = DependencyProperty.i("ActualOutline", Brush.$, XamFunnelSlice.$, new PropertyMetadata(1, null));
    XamFunnelSlice.ax = DependencyProperty.i("ActualHighlightFill", Brush.$, XamFunnelSlice.$, new PropertyMetadata(1, null));
    XamFunnelSlice.ay = DependencyProperty.i("ActualHighlightOutline", Brush.$, XamFunnelSlice.$, new PropertyMetadata(1, null));
    XamFunnelSlice.a3 = DependencyProperty.i("HighlightVisibility", Visibility_$type, XamFunnelSlice.$, new PropertyMetadata(2, enumGetBox(Visibility_$type, 1), function (a, b) {
    }));
    XamFunnelSlice.a4 = DependencyProperty.i("LabelVisibility", Visibility_$type, XamFunnelSlice.$, new PropertyMetadata(2, enumGetBox(Visibility_$type, 0), function (a, b) {
    }));
    XamFunnelSlice.$$p = markDep(DependencyProperty, PropertyMetadata, XamFunnelSlice, 'av', ['Fill:bc:a0', [Brush.$, null], 'HighlightFill:bd:a1', [Brush.$, null], 'HighlightOutline:be:a2', [Brush.$, null], 'Outline:bf:a5', [Brush.$, null]]);
    return XamFunnelSlice;
}(ContentControl));
export { XamFunnelSlice };
