/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, markType } from "igniteui-react-core";
import { ISupportsErrorBars_$type } from "./ISupportsErrorBars";
import { ISupportsMarkers_$type } from "./ISupportsMarkers";
import { IProvidesViewport_$type } from "./IProvidesViewport";
import { DefaultSupportsMarkers } from "./DefaultSupportsMarkers";
import { DefaultProvidesViewport } from "./DefaultProvidesViewport";
import { DefaultSupportsErrorBars } from "./DefaultSupportsErrorBars";
/**
 * @hidden
 */
var FramePreparer = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FramePreparer, _super);
    function FramePreparer(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = _super.call(this) || this;
        _this.b = null;
        _this.c = null;
        _this.a = null;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = [typeCast(ISupportsMarkers_$type, c), typeCast(IProvidesViewport_$type, c), typeCast(ISupportsErrorBars_$type, c)];
                    {
                        var f = d[0];
                        var g = d[1];
                        var h = d[2];
                        _this.c = new DefaultSupportsMarkers();
                        _this.a = new DefaultProvidesViewport();
                        _this.b = new DefaultSupportsErrorBars();
                        if (f != null) {
                            _this.c = f;
                        }
                        if (g != null) {
                            _this.a = g;
                        }
                        if (h != null) {
                            _this.b = h;
                        }
                    }
                }
                break;
            case 1:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    _this.c = new DefaultSupportsMarkers();
                    _this.a = new DefaultProvidesViewport();
                    _this.b = new DefaultSupportsErrorBars();
                    if (c != null) {
                        _this.c = c;
                    }
                    if (d != null) {
                        _this.a = d;
                    }
                    if (e != null) {
                        _this.b = e;
                    }
                }
                break;
        }
        return _this;
    }
    FramePreparer.$t = markType(FramePreparer, 'FramePreparer');
    return FramePreparer;
}(Base));
export { FramePreparer };
