/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ScatterBaseView } from "./ScatterBaseView";
import { Path } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { markType } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
/**
 * @hidden
 */
var ScatterSplineSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterSplineSeriesView, _super);
    function ScatterSplineSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.dl = new Path();
        _this.dk = new Path();
        return _this;
    }
    ScatterSplineSeriesView.prototype.au = function () {
        _super.prototype.au.call(this);
        if (!this.q) {
            this.b4.xa = Defaults.e;
        }
    };
    ScatterSplineSeriesView.prototype.bd = function () {
        _super.prototype.bd.call(this);
    };
    ScatterSplineSeriesView.prototype.be = function () {
        _super.prototype.be.call(this);
        this.dk.an = this.dl.an;
        var a = this.br();
        this.dk._stroke = a;
        this.dk.ad = this.e.ie + 3;
    };
    ScatterSplineSeriesView.prototype.a8 = function (a, b) {
        _super.prototype.a8.call(this, a, b);
        if (a.d) {
            if (b) {
                a.t(this.dk);
            }
            else {
                a.t(this.dl);
            }
        }
    };
    ScatterSplineSeriesView.prototype.c9 = function (a) {
        _super.prototype.c9.call(this, a);
        this.dl.an = null;
        this.dk.an = null;
    };
    ScatterSplineSeriesView.prototype.an = function (a) {
        _super.prototype.an.call(this, a);
        this.e.bc.exportPathData(a, this.dl, "shape", ["Main"]);
    };
    ScatterSplineSeriesView.prototype.af = function () {
        var a = new Color();
        a.colorString = "rgba(95,95,95,0.5)";
        this.e.v1 = a;
        this.e.jm = 3;
        this.e.jn = 1;
        this.e.jo = 4;
        this.e.hc = false;
    };
    ScatterSplineSeriesView.$t = markType(ScatterSplineSeriesView, 'ScatterSplineSeriesView', ScatterBaseView.$);
    return ScatterSplineSeriesView;
}(ScatterBaseView));
export { ScatterSplineSeriesView };
