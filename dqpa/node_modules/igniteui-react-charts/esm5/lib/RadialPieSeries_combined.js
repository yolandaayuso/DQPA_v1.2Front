/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { AnchoredRadialSeries } from "./AnchoredRadialSeries";
import { DependencyProperty } from "igniteui-react-core";
import { enumGetBox, Point_$type, runOn, typeCast, markType, markDep, fromEnum } from "igniteui-react-core";
import { LegendEmptyValuesMode_$type } from "igniteui-react-core";
import { Defaults } from "./Defaults";
import { Pool$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { RadialBaseView } from "./RadialBaseView";
import { ScalerParams } from "./ScalerParams";
import { PathGeometry } from "igniteui-react-core";
import { ViewportUtils } from "./ViewportUtils";
import { SliceCoords } from "./SliceCoords";
import { PathFigure } from "igniteui-react-core";
import { LineSegment } from "igniteui-react-core";
import { ArcSegment } from "igniteui-react-core";
import { PieSliceCollisionGeometry } from "igniteui-react-core";
import { Size } from "igniteui-react-core";
import { GeometryUtil } from "igniteui-react-core";
import { MathUtil } from "igniteui-react-core";
import { ProportionalCategoryAngleAxis } from "./ProportionalCategoryAngleAxis";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { DataContext } from "igniteui-react-core";
import { ChartSelection } from "./ChartSelection";
import { CollisionRect } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
import { intDivide, isNaN_ } from "igniteui-react-core";
import { AnchoredRadialSeriesView } from "./AnchoredRadialSeriesView";
/**
 * @hidden
 */
var RadialPieSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialPieSeries, _super);
    function RadialPieSeries() {
        var _this = _super.call(this) || this;
        _this.ads = null;
        _this.adx = null;
        _this.adp = 0;
        _this.ab = RadialPieSeries.$;
        return _this;
    }
    RadialPieSeries.prototype.bj = function () {
        return new RadialPieSeries();
    };
    RadialPieSeries.prototype.get_fn = function () {
        return true;
    };
    RadialPieSeries.prototype.get_fl = function () {
        return true;
    };
    RadialPieSeries.prototype.jk = function () {
        if (!isNaN_(this.jj)) {
            return _super.prototype.jk.call(this);
        }
        return Defaults.h;
    };
    RadialPieSeries.prototype.cs = function () {
        return new RadialPieSeriesView(this);
    };
    RadialPieSeries.prototype.q1 = function (a) {
        _super.prototype.q1.call(this, a);
        this.adr = a;
    };
    Object.defineProperty(RadialPieSeries.prototype, "adt", {
        get: function () {
            return this.ads;
        },
        set: function (a) {
            if (this.ads != a) {
                var b = this.adt;
                this.ads = a;
                this.raisePropertyChanged("LegendLabelColumn", b, this.adt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialPieSeries.prototype, "ad0", {
        get: function () {
            return this.adx;
        },
        set: function (a) {
            if (this.adx != a) {
                var b = this.adx;
                this.adx = a;
                this.raisePropertyChanged("LegendLabelMemberPath", b, this.adx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialPieSeries.prototype, "adq", {
        get: function () {
            return this.adp;
        },
        set: function (a) {
            if (this.adp != a) {
                var b = this.adp;
                this.adp = a;
                this.raisePropertyChanged("LegendEmptyValuesMode", enumGetBox(LegendEmptyValuesMode_$type, b), enumGetBox(LegendEmptyValuesMode_$type, this.adp));
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialPieSeries.prototype.preferredCategoryMode = function (a) {
        return a != null && a == this.yz ? 2 : 0;
    };
    RadialPieSeries.prototype.o5 = function (a, b) {
        _super.prototype.o5.call(this, a, b);
        var c = b;
        if (a && c.c6 != null) {
            c.c6.count = 0;
        }
    };
    RadialPieSeries.prototype.iw = function () {
        return this.yz.k8(this.cv.by, this.cv.bx, this.getEffectiveViewport1(this.cv));
    };
    RadialPieSeries.prototype.ar = function (a, b) {
        var c = new List$1(Rect.$, 0);
        var d = this.cv.by;
        var e = this.cv.bx;
        var f = this.getEffectiveViewport1(this.cv);
        var g = this.wj(this.cv);
        var h = this.y5.k5(e, d, f, g);
        var i = { $type: Point_$type, x: 0.5, y: 0.5 };
        var j = this.y5;
        var k = Math.max(0, 0.5 * j.n6);
        var l = k;
        l = Math.max(l, h.minLength);
        var m = this.yz.k8(d, e, f);
        var n = this.yz != null && this.yz.cl;
        var o = this.za;
        if (this.d3()) {
            o = this.zd;
        }
        {
            if (n) {
                m = this.z0(a, d, e, f);
            }
            if (b < 0 || b > o.f.count - 1) {
                return null;
            }
            var p = o.f._inner[b][0];
            var q = Math.min(o.f._inner[b][2], h.maxLength);
            return this.adu(d, e, f, p - (m * 0.5), p + (m * 0.5), l, q, i);
        }
    };
    RadialPieSeries.prototype.get_ed = function () {
        return true;
    };
    RadialPieSeries.prototype.get_acg = function () {
        return true;
    };
    RadialPieSeries.prototype.get_aca = function () {
        return true;
    };
    RadialPieSeries.prototype.abc = function (a, b) {
        _super.prototype.abc.call(this, a, b);
        var c = b;
        var d = b.by;
        var e = b.bx;
        var f = this.getEffectiveViewport1(b);
        var g = this.wj(b);
        var h = this.y5.k5(e, d, f, g);
        var i = a.f;
        var j = this.y5;
        var k = Math.max(0, 0.5 * j.n6);
        var l = k;
        l = Math.max(l, h.minLength);
        var m = this.yz.k8(d, e, f);
        var n = this.yz.cl;
        var o = { $type: Point_$type, x: 0.5, y: 0.5 };
        var p = this.adv;
        var q = this.adw;
        var r = (p > 0 && q > 0);
        var s = this.ab8.count;
        this.zg.a2(this, this.zx(), runOn(this, this.yn), this.z6(b), this.z7(b));
        this.zg.r = this.adv;
        this.zg.s = this.adw;
        this.zg.k = this.adv;
        this.zg.l = this.adw;
        var t = false;
        var u = this.zg.b;
        if (u != null) {
            t = true;
        }
        var v = this.yz;
        var w = new ScalerParams(1, b.by, b.bx, v.ch);
        w.c = this.getEffectiveViewport();
        var x = 0;
        var y = 0;
        for (var z = 0; z < i.count; ++z) {
            var aa = i._inner[z][0];
            var ab = Math.min(i._inner[z][2], h.maxLength);
            var ac = i._inner[z][1];
            var ad = i._inner[z][2];
            var ae = i._inner[z][3];
            if (t) {
                this.ac5(i, z, s, v, w, b.q);
            }
            if (n) {
                if (isNaN_(aa) || isNaN_(ac) || isNaN_(ad)) {
                    continue;
                }
                var af = (b.cx.c + z) * b.cx.b;
                if ((b.cx.c + z) * b.cx.b > this.yz.lk - 1) {
                    if ((af) * b.cx.b >= this.yz.lj) {
                        af = (af) - (intDivide((this.yz.lj), b.cx.b));
                    }
                }
                m = ae;
                if (isNaN_(m)) {
                    continue;
                }
            }
            var ag = c.c6.item(x);
            x++;
            var ah = this.zg.k;
            var ai = this.zg.l;
            r = (ah > 0 && ai > 0);
            var aj = null;
            if (r) {
                aj = this.ad6(d, e, f, aa - (m * 0.5), aa + (m * 0.5), l, ab, o, ah, ai);
            }
            else {
                aj = this.ad7(d, e, f, aa - (m * 0.5), aa + (m * 0.5), l, ab, o);
            }
            ag.an = aj;
            this.zg.ad(ag, false, false, false, false);
            var ak = i._inner[z][2];
            if (ak > y) {
                y = ak;
            }
        }
        c.cz = ViewportUtils.f(y, d, e);
        c.c0 = { $type: Point_$type, x: ViewportUtils.e(o.x, d, e, f), y: ViewportUtils.i(o.y, d, e, f) };
        c.c6.count = x;
        c.db();
    };
    RadialPieSeries.prototype.ad7 = function (a, b, c, d, e, f, g, h) {
        var i = SliceCoords.b(a, b, c, d, e, f, g, h);
        var j = new PathFigure();
        j._startPoint = i.d;
        j._isClosed = true;
        j._segments.add(((function () {
            var $ret = new LineSegment(1);
            $ret.c = i.f;
            return $ret;
        })()));
        j._segments.add(((function () {
            var $ret = new ArcSegment();
            $ret.e = i.h;
            $ret.f = i.n;
            $ret.d = 1;
            $ret.b = i.c;
            return $ret;
        })()));
        j._segments.add(((function () {
            var $ret = new LineSegment(1);
            $ret.c = i.j;
            return $ret;
        })()));
        j._segments.add(((function () {
            var $ret = new ArcSegment();
            $ret.e = i.d;
            $ret.f = i.m;
            $ret.d = 0;
            $ret.b = i.c;
            return $ret;
        })()));
        var k = new PathGeometry();
        k.c.add(j);
        return k;
    };
    RadialPieSeries.prototype.adu = function (a, b, c, d, e, f, g, h) {
        var i = SliceCoords.b(a, b, c, d, e, f, g, h);
        if (isNaN_(i.n.width) || isNaN_(d) || isNaN_(e)) {
            return null;
        }
        var j = ViewportUtils.e(0.5, a, b, c);
        var k = ViewportUtils.i(0.5, a, b, c);
        return new PieSliceCollisionGeometry(j, k, i.n.width, i.m.width, d, e);
    };
    RadialPieSeries.prototype.ad6 = function (a, b, c, d, e, f, g, h, i, j) {
        var k = SliceCoords.a(a, b, c, d, e, f, g, h, i, j);
        if (k == null) {
            return this.ad7(a, b, c, d, e, f, g, h);
        }
        var l = new PathFigure();
        l._startPoint = k.d;
        l._isClosed = true;
        var m = ((d + ((e - d) * 0.5)) * 180 / Math.PI) + 90;
        var n = new Size(1, k.l.width * (f / g), k.l.height * (f / g));
        l._segments.add(((function () {
            var $ret = new ArcSegment();
            $ret.e = k.e;
            $ret.f = n;
            $ret.c = m;
            $ret.d = 1;
            $ret.b = false;
            return $ret;
        })()));
        l._segments.add(((function () {
            var $ret = new LineSegment(1);
            $ret.c = k.f;
            return $ret;
        })()));
        l._segments.add(((function () {
            var $ret = new ArcSegment();
            $ret.e = k.g;
            $ret.f = k.l;
            $ret.c = m;
            $ret.d = 1;
            $ret.b = false;
            return $ret;
        })()));
        l._segments.add(((function () {
            var $ret = new ArcSegment();
            $ret.e = k.h;
            $ret.f = k.n;
            $ret.d = 1;
            $ret.b = k.c;
            return $ret;
        })()));
        l._segments.add(((function () {
            var $ret = new ArcSegment();
            $ret.e = k.i;
            $ret.f = k.l;
            $ret.c = m;
            $ret.d = 1;
            $ret.b = false;
            return $ret;
        })()));
        l._segments.add(((function () {
            var $ret = new LineSegment(1);
            $ret.c = k.j;
            return $ret;
        })()));
        l._segments.add(((function () {
            var $ret = new ArcSegment();
            $ret.e = k.k;
            $ret.f = n;
            $ret.c = m;
            $ret.d = 1;
            $ret.b = false;
            return $ret;
        })()));
        l._segments.add(((function () {
            var $ret = new ArcSegment();
            $ret.e = k.d;
            $ret.f = k.m;
            $ret.d = 0;
            $ret.b = k.c;
            return $ret;
        })()));
        var o = new PathGeometry();
        o.c.add(l);
        return o;
    };
    RadialPieSeries.prototype.q9 = function (a, b, c, d) {
        _super.prototype.q9.call(this, a, b, c, d);
        switch (b) {
            case RadialPieSeries.$$p[0]:
            case RadialPieSeries.$$p[1]:
                this.q3();
                break;
            case "FastItemsSource":
                if (c != null) {
                    if (this.adt != null) {
                        c.deregisterColumn(this.adt);
                    }
                }
                if (d != null) {
                    if (this.ad0 != null) {
                        this.adt = this.dm(this.ad0);
                    }
                }
                break;
            case "LegendLabelMemberPath":
                if (this.dn != null) {
                    this.dn.deregisterColumn(this.adt);
                    this.adt = this.dm(this.ad0);
                    this.pe();
                    this.pt();
                }
                break;
        }
    };
    RadialPieSeries.prototype.wn = function (a) {
        var b = this.adr.by;
        var c = this.adr.bx;
        var d = this.getEffectiveViewport1(this.adr);
        var e = this.wj(this.adr);
        var f = this.y5.k5(c, b, d, e);
        var g = { $type: Point_$type, x: 0.5, y: 0.5 };
        var h = GeometryUtil.j(g, a);
        var i = this.za.f;
        var j = 0;
        for (var k = 0; k < i.count; k++) {
            var l = i._inner[k][0];
            var m = Math.min(i._inner[k][2], f.maxLength);
            var n = i._inner[k][3];
            if (isNaN_(n)) {
                continue;
            }
            l = l % 6.28318531;
            if (l < 0) {
                l += 6.28318531;
            }
            if (h >= l - (n * 0.5) && h <= l + (n * 0.5)) {
                var o = Math.max(0, 0.5 * this.y5.n6);
                var p = o;
                p = Math.max(p, f.minLength);
                var q = SliceCoords.b(b, c, d, l - (n * 0.5), l + (n * 0.5), p, m, g);
                var r = GeometryUtil.u({ $type: Point_$type, x: ViewportUtils.e(g.x, b, c, d), y: ViewportUtils.i(g.y, b, c, d) }, MathUtil.f(l), q.n.width);
                var s = 1.7976931348623157E+308;
                var t = 1.7976931348623157E+308;
                var u = -1.7976931348623157E+308;
                var v = -1.7976931348623157E+308;
                s = Math.min(s, q.d.x);
                s = Math.min(s, q.f.x);
                s = Math.min(s, q.h.x);
                s = Math.min(s, q.j.x);
                s = Math.min(s, r.x);
                t = Math.min(t, q.d.y);
                t = Math.min(t, q.f.y);
                t = Math.min(t, q.h.y);
                t = Math.min(t, q.j.y);
                t = Math.min(t, r.y);
                u = Math.max(u, q.d.x);
                u = Math.max(u, q.f.x);
                u = Math.max(u, q.h.x);
                u = Math.max(u, q.j.x);
                u = Math.max(u, r.x);
                v = Math.max(v, q.d.y);
                v = Math.max(v, q.f.y);
                v = Math.max(v, q.h.y);
                v = Math.max(v, q.j.y);
                v = Math.max(v, r.y);
                return new Rect(0, s, t, u - s, v - t);
            }
            j++;
        }
        return new Rect(0, 0, 0, 0, 0);
    };
    RadialPieSeries.prototype.ku = function (a) {
        if (this.yz != null && this.yz.cl && a == this.yz.othersIndex) {
            return null;
        }
        if (this.adt != null) {
            return this.adt.item(a);
        }
        return null;
    };
    RadialPieSeries.prototype.eb = function (a, b, c, d, e) {
        var _this = this;
        if (_super.prototype.eb.call(this, a, b, c, d, e)) {
            var f = typeCast(ProportionalCategoryAngleAxis.$, this.yz) !== null && this.yz.hasOthersCategory;
            if (e && (this.adq == 1 || (this.adq == 2 && !f))) {
                var g = this.yz;
                var h = new ScalerParams(1, this.db.v4, this.ws, g.ch);
                h.c = this.getEffectiveViewport1(this.cv);
                var i = this.y5;
                var j = new ScalerParams(1, this.db.v4, this.ws, i.ch);
                j.c = this.getEffectiveViewport1(this.cv);
                var k = this.z5;
                var _loop_1 = function (l) {
                    var m = this_1.dn.item(l);
                    var n = NaN;
                    if (m != null) {
                        n = this_1.jc(m);
                    }
                    if (n == 0) {
                        var o = new SeriesPointOfInterest();
                        o.f = this_1.aa5(n, m, l, d, k, c, b, false);
                        o.b = ((function () {
                            var $ret = new DataContext();
                            $ret.item = m;
                            $ret.series = _this;
                            return $ret;
                        })());
                        o.g = this_1.vg;
                        o.c = l;
                        if (this_1.g9) {
                            o.g = this_1.vn(l);
                        }
                        var p = false;
                        for (var q = 0; q < a.count; q++) {
                            if (o.c < a._inner[q].c) {
                                a.insert(q, o);
                                p = true;
                                break;
                            }
                        }
                        if (!p) {
                            a.add(o);
                        }
                    }
                };
                var this_1 = this;
                for (var l = 0; l < this.dn.count; l++) {
                    _loop_1(l);
                }
            }
            return true;
        }
        return false;
    };
    RadialPieSeries.prototype.ak = function (a, b) {
        var c = new List$1(ChartSelection.$, 0);
        this.p4(a, c, b);
        return c.toArray();
    };
    RadialPieSeries.prototype.p4 = function (a, b, c) {
        var _this = this;
        if (this.y0 == 0) {
            _super.prototype.p4.call(this, a, b, c);
            return;
        }
        var d = this.cv.by;
        var e = this.cv.bx;
        var f = this.getEffectiveViewport1(this.cv);
        var g = this.wj(this.cv);
        var h = this.y5.k5(e, d, f, g);
        var i = { $type: Point_$type, x: 0.5, y: 0.5 };
        var j = this.y5;
        var k = Math.max(0, 0.5 * j.n6);
        var l = k;
        l = Math.max(l, h.minLength);
        var m = this.yz.k8(d, e, f);
        var n = this.yz != null && this.yz.cl;
        var o = new CollisionRect(0, a);
        var _loop_2 = function (p) {
            var q = typeCast(RadialBaseView.$, this_2.cv);
            var r = q.cx.getBucket(p);
            var s = this_2.acj(this_2.yz, d, e, f);
            if (n) {
                m = this_2.z0(p, d, e, f);
                s = this_2.aci(p, this_2.yz, d, e, f);
                if (isNaN_(s)) {
                    s = 0;
                }
            }
            r[0] = this_2.yz.getScaledAngle(r[0]) + s;
            var t = r[0];
            var u = Math.min(this_2.y8.b.od(r[2]), h.maxLength);
            var v = this_2.adu(d, e, f, t - (m * 0.5), t + (m * 0.5), l, u, i);
            if (v.collidesWithHeavy(o)) {
                if (c == 7 || c == 6) {
                    b.add(((function () {
                        var $ret = new ChartSelection();
                        $ret.series = _this;
                        return $ret;
                    })()));
                    return { value: void 0 };
                }
                if (c == 2 || c == 1) {
                    b.add(((function () {
                        var $ret = new ChartSelection();
                        $ret.item = _this.dn.item(p);
                        return $ret;
                    })()));
                }
                else {
                    b.add(((function () {
                        var $ret = new ChartSelection();
                        $ret.item = _this.dn.item(p);
                        $ret.series = _this;
                        return $ret;
                    })()));
                }
            }
        };
        var this_2 = this;
        for (var p = 0; p < this.yz.lk; p++) {
            var state_1 = _loop_2(p);
            if (typeof state_1 === "object")
                return state_1.value;
        }
    };
    RadialPieSeries.$t = markType(RadialPieSeries, 'RadialPieSeries', AnchoredRadialSeries.$);
    RadialPieSeries.$$p = markDep(DependencyProperty, PropertyMetadata, RadialPieSeries, 'raisePropertyChanged', ['RadiusX:adv:ad4', [1, 2], 'RadiusY:adw:ad5', [1, 2]]);
    return RadialPieSeries;
}(AnchoredRadialSeries));
export { RadialPieSeries };
/**
 * @hidden
 */
var RadialPieSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialPieSeriesView, _super);
    function RadialPieSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c5 = null;
        _this.c6 = null;
        _this.c7 = null;
        _this.dc = new Path();
        _this.c5 = a;
        _this.c6 = ((function () {
            var $ret = new Pool$1(Path.$);
            $ret.create = runOn(_this, _this.dd);
            $ret.activate = runOn(_this, _this.c8);
            $ret.disactivate = runOn(_this, _this.da);
            $ret.destroy = runOn(_this, _this.c9);
            return $ret;
        })());
        return _this;
    }
    RadialPieSeriesView.prototype.au = function () {
        _super.prototype.au.call(this);
        this.c7 = new List$1(Path.$, 0);
        if (!this.q) {
            this.cw.xa = Defaults.c;
            this.cw.jp = Defaults.i;
        }
    };
    RadialPieSeriesView.prototype.dd = function () {
        var _this = this;
        var a = ((function () {
            var $ret = new Path();
            $ret.dataContext = ((function () {
                var $ret = new DataContext();
                $ret.series = _this.e;
                return $ret;
            })());
            return $ret;
        })());
        this.c7.add(a);
        a._visibility = 1;
        return a;
    };
    RadialPieSeriesView.prototype.c8 = function (a) {
        a._visibility = 0;
    };
    RadialPieSeriesView.prototype.da = function (a) {
        a._visibility = 1;
    };
    RadialPieSeriesView.prototype.c9 = function (a) {
        this.c7.remove(a);
    };
    RadialPieSeriesView.prototype.bg = function (a, b) {
        _super.prototype.bg.call(this, a, b);
        var c = a;
    };
    RadialPieSeriesView.prototype.ac = function (a) {
        return this.c7._inner[a];
    };
    RadialPieSeriesView.prototype.ab = function (a) {
        var b = this.c7._inner[a];
        this.dc._visibility = b._visibility;
        this.dc.an = b.an;
        var c = this.bs(a);
        this.dc._fill = c;
        this.dc._stroke = c;
        this.dc.ad = this.e.ie;
        return this.dc;
    };
    RadialPieSeriesView.prototype.a8 = function (a, b) {
        _super.prototype.a8.call(this, a, b);
        if (a.d) {
            for (var c = 0; c < this.c7.count; c++) {
                var d = this.aa(c, b);
                a.t(d);
            }
        }
    };
    RadialPieSeriesView.prototype.db = function () {
        this.as();
    };
    RadialPieSeriesView.prototype.an = function (a) {
        var e_1, _a;
        _super.prototype.an.call(this, a);
        var b = 0;
        try {
            for (var _b = __values(fromEnum(this.c6.a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                this.e.bc.exportPathData(a, c, "slice" + b, ["Main", "Fill"]);
                b++;
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
    };
    RadialPieSeriesView.$t = markType(RadialPieSeriesView, 'RadialPieSeriesView', AnchoredRadialSeriesView.$);
    return RadialPieSeriesView;
}(AnchoredRadialSeriesView));
export { RadialPieSeriesView };
