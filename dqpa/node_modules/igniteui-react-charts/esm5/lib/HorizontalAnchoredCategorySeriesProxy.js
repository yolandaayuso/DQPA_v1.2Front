/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, typeCast, markType } from "igniteui-react-core";
import { IHorizontalAnchoredCategorySeriesProxy_$type } from "./IHorizontalAnchoredCategorySeriesProxy";
import { HorizontalAnchoredCategorySeries } from "./HorizontalAnchoredCategorySeries";
/**
 * @hidden
 */
var HorizontalAnchoredCategorySeriesProxy = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(HorizontalAnchoredCategorySeriesProxy, _super);
    function HorizontalAnchoredCategorySeriesProxy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HorizontalAnchoredCategorySeriesProxy.prototype.matchesType = function (a) {
        return typeCast(HorizontalAnchoredCategorySeries.$, a) !== null;
    };
    HorizontalAnchoredCategorySeriesProxy.prototype.setCategoryMode = function (a, b) {
        a.acg = b;
    };
    HorizontalAnchoredCategorySeriesProxy.prototype.setValueMemberPath = function (a, b) {
        a.abn = b;
    };
    HorizontalAnchoredCategorySeriesProxy.prototype.setXAxis = function (a, b) {
        a.xAxis = b;
    };
    HorizontalAnchoredCategorySeriesProxy.prototype.setYAxis = function (a, b) {
        a.yAxis = b;
    };
    HorizontalAnchoredCategorySeriesProxy.prototype.setTrendLineType = function (a, b) {
        a.trendLineType = b;
    };
    HorizontalAnchoredCategorySeriesProxy.prototype.setMarkerType = function (a, b) {
        a.xa = b;
    };
    HorizontalAnchoredCategorySeriesProxy.prototype.getMarkerType = function (a) {
        return a.w8;
    };
    HorizontalAnchoredCategorySeriesProxy.prototype.getTrendLineType = function (a) {
        return a.trendLineType;
    };
    HorizontalAnchoredCategorySeriesProxy.$t = markType(HorizontalAnchoredCategorySeriesProxy, 'HorizontalAnchoredCategorySeriesProxy', Base.$, [IHorizontalAnchoredCategorySeriesProxy_$type]);
    return HorizontalAnchoredCategorySeriesProxy;
}(Base));
export { HorizontalAnchoredCategorySeriesProxy };
