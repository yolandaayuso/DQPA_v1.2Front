import { __extends } from "tslib";
import { IgrStrategyBasedIndicator } from "./igr-strategy-based-indicator";
import { UltimateOscillatorIndicator } from "./UltimateOscillatorIndicator";
/**
 * Represents a IgxDataChartComponent Ultimate Oscillator indicator series.
 * Default required members: High, Low, Close
*
* You can use the `UltimateOscillatorIndicator` which represents a IgxDataChartComponent Ultimate Oscillator indicator series.
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*     <IgrCategoryXAxis name="xAxis" label="Year" />
*     <IgrNumericYAxis  name="yAxis" />
*
*     <IgrUltimateOscillatorIndicator
*         name="series1"
*         xAxisName="xAxis"
*         yAxisName="yAxis"
* 		openMemberPath="Open"
* 		closeMemberPath="close"
*         highMemberPath="High"
*         lowMemberPath="Low" />
*  </IgrDataChart>
* ```
*
* ```ts
* let series = new IgrUltimateOscillatorIndicator({name: "series"});
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
var IgrUltimateOscillatorIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrUltimateOscillatorIndicator, _super);
    function IgrUltimateOscillatorIndicator(props) {
        return _super.call(this, props) || this;
    }
    IgrUltimateOscillatorIndicator.prototype.createImplementation = function () {
        return new UltimateOscillatorIndicator();
    };
    Object.defineProperty(IgrUltimateOscillatorIndicator.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    return IgrUltimateOscillatorIndicator;
}(IgrStrategyBasedIndicator));
export { IgrUltimateOscillatorIndicator };
