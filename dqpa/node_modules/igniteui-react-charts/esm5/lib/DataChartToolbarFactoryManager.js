/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType, TypeRegistrar } from "igniteui-react-core";
import { DVContainer } from "igniteui-react-core";
import { IDataChartToolbarProvider_$type } from "./IDataChartToolbarProvider";
import { DataChartToolbarProvider } from "./DataChartToolbarProvider";
/**
 * @hidden
 */
var DataChartToolbarFactoryManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataChartToolbarFactoryManager, _super);
    function DataChartToolbarFactoryManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataChartToolbarFactoryManager.register = function () {
        if (!DataChartToolbarFactoryManager.a) {
            TypeRegistrar.register("DataChartToolbarFactoryManager", DataChartToolbarFactoryManager.$);
            DVContainer.instance.registerFactory(IDataChartToolbarProvider_$type, function () { return new DataChartToolbarProvider(); });
            DataChartToolbarFactoryManager.a = true;
        }
    };
    DataChartToolbarFactoryManager.$t = markType(DataChartToolbarFactoryManager, 'DataChartToolbarFactoryManager');
    DataChartToolbarFactoryManager.a = false;
    return DataChartToolbarFactoryManager;
}(Base));
export { DataChartToolbarFactoryManager };
