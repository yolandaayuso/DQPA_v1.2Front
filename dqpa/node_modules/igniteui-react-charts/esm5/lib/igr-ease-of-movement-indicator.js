import { __extends } from "tslib";
import { IgrStrategyBasedIndicator } from "./igr-strategy-based-indicator";
import { EaseOfMovementIndicator } from "./EaseOfMovementIndicator";
/**
 * Represents a IgxDataChartComponent Ease of Movement indicator series.
 * The ease of movement indicator by Richard W. Arms, Jr relates the price change of an asset to
 * its volume. Normally smoothed with a moving average.
 * Default required members: Low, High, Volume
*
* The ease of movment indicator is used to analyze relationships between a price changes and volume. One would usually plot this in a separate chart below the main price chart. It can be added to a chart like this:
*
* ```ts
* <IgrDataChart
*     dataSource={this.state.dataSource}
*     width="700px"
*     height="500px">
*
*     <IgrCategoryXAxis name="xAxis" label="Year" />
*     <IgrNumericYAxis  name="yAxis" />
*
*     <IgrEaseOfMovementIndicator
*         name="series1"
*         xAxisName="xAxis"
*         yAxisName="yAxis"
* 		volumeMemberPath="Volume"
*         highMemberPath="High"
*         lowMemberPath="Low" />
*  </IgrDataChart>
* ```
*/
var IgrEaseOfMovementIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgrEaseOfMovementIndicator, _super);
    function IgrEaseOfMovementIndicator(props) {
        return _super.call(this, props) || this;
    }
    IgrEaseOfMovementIndicator.prototype.createImplementation = function () {
        return new EaseOfMovementIndicator();
    };
    Object.defineProperty(IgrEaseOfMovementIndicator.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    return IgrEaseOfMovementIndicator;
}(IgrStrategyBasedIndicator));
export { IgrEaseOfMovementIndicator };
