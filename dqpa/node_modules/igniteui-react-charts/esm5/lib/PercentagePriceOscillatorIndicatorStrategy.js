/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { IndicatorCalculationStrategy } from "./IndicatorCalculationStrategy";
import { String_$type, markType, getEnumerator } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
/**
 * @hidden
 */
var PercentagePriceOscillatorIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(PercentagePriceOscillatorIndicatorStrategy, _super);
    function PercentagePriceOscillatorIndicatorStrategy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PercentagePriceOscillatorIndicatorStrategy.prototype.b = function (a, b) {
        var c = new List$1(String_$type, 0);
        c.o(b.g.c);
        c.o(b.e.c);
        return c;
    };
    PercentagePriceOscillatorIndicatorStrategy.prototype.a = function (a, b) {
        var c = a.indicatorColumn;
        var d = getEnumerator(b.g.b(a));
        var e = getEnumerator(b.e.b(a));
        var f = 0;
        while (d.moveNext() && e.moveNext()) {
            var g = b.i(100 * (d.current - e.current) / e.current);
            c.item(f, g);
            ++f;
        }
        return true;
    };
    PercentagePriceOscillatorIndicatorStrategy.$t = markType(PercentagePriceOscillatorIndicatorStrategy, 'PercentagePriceOscillatorIndicatorStrategy', IndicatorCalculationStrategy.$);
    return PercentagePriceOscillatorIndicatorStrategy;
}(IndicatorCalculationStrategy));
export { PercentagePriceOscillatorIndicatorStrategy };
