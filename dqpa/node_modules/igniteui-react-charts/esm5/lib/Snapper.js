/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { truncate, log10 } from "igniteui-react-core";
/**
 * @hidden
 */
var Snapper = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(Snapper, _super);
    function Snapper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = 7;
        _this.a = false;
        return _this;
    }
    Object.defineProperty(Snapper.prototype, "f", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            this.c = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Snapper.prototype, "b", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            this.a = a;
        },
        enumerable: false,
        configurable: true
    });
    Snapper.d = function (a, b) {
        var c = 1;
        if (b > 0) {
            for (; b > 0; --b) {
                c *= a;
            }
        }
        else {
            for (; b < 0; ++b) {
                c /= a;
            }
        }
        return c;
    };
    Snapper.e = function (a, b) {
        var c = truncate(Math.floor(log10(a)));
        var d = a / Math.pow(10, c);
        if (b) {
            var e = d < 1.5 ? 1 : d < 3 ? 2 : d < 7 ? 5 : 10;
            return e * Math.pow(10, c);
        }
        else {
            var f = d <= 1 ? 1 : d <= 2 ? 2 : d <= 5 ? 5 : 10;
            return f * Math.pow(10, c);
        }
    };
    Snapper.$t = markType(Snapper, 'Snapper');
    return Snapper;
}(Base));
export { Snapper };
