/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Frame } from "./Frame";
import { Dictionary$2 } from "igniteui-react-core";
import { CategoryHighlightFrameRect } from "./CategoryHighlightFrameRect";
import { Number_$type, runOn, markType } from "igniteui-react-core";
import { DictInterpolator$3 } from "./DictInterpolator$3";
import { BrushUtil } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
var CategoryHighlightLayerFrame = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryHighlightLayerFrame, _super);
    function CategoryHighlightLayerFrame() {
        var _this = _super.call(this) || this;
        _this.g = null;
        _this.f = null;
        _this.g = new Dictionary$2(Number_$type, CategoryHighlightFrameRect.$, 0);
        _this.f = new DictInterpolator$3(Number_$type, CategoryHighlightFrameRect.$, CategoryHighlightLayerFrame.$, runOn(_this, _this.h), function (a) { return a.f; }, function (a) { return true; }, function () { return new CategoryHighlightFrameRect(); });
        return _this;
    }
    CategoryHighlightLayerFrame.prototype.h = function (a, b, c, d, e, f) {
        if (d != null) {
            a.f = d.f;
        }
        else if (c != null) {
            a.f = c.f;
        }
        else {
            a.f = 0;
        }
        if (c == null || isNaN_(c.e)) {
            a.e = d != null ? d.e : NaN;
        }
        else if (d == null || isNaN_(d.e)) {
            a.e = NaN;
        }
        else {
            a.e = c.e + b * (d.e - c.e);
        }
        if (c == null || isNaN_(c.b)) {
            a.b = d != null ? d.b : NaN;
        }
        else if (d == null || isNaN_(d.b)) {
            a.b = NaN;
        }
        else {
            a.b = c.b + b * (d.b - c.b);
        }
        if (c == null || isNaN_(c.c)) {
            a.c = d != null ? d.c : NaN;
        }
        else if (d == null || isNaN_(d.c)) {
            a.c = NaN;
        }
        else {
            a.c = c.c + b * (d.c - c.c);
        }
        if (c == null || isNaN_(c.a)) {
            a.a = d != null ? d.a : NaN;
        }
        else if (d == null || isNaN_(d.a)) {
            a.a = NaN;
        }
        else {
            a.a = c.a + b * (d.a - c.a);
        }
        if (c == null || isNaN_(c.d)) {
            a.d = d != null ? d.d : NaN;
        }
        else if (d == null || isNaN_(d.d)) {
            a.d = NaN;
        }
        else {
            a.d = c.d + b * (d.d - c.d);
        }
        if (c == null || c.g == null) {
            a.g = d != null ? d.g : null;
        }
        else if (d == null || d.g == null) {
            a.g = null;
        }
        else {
            a.g = BrushUtil.l(c.g, b, d.g, 0);
        }
        if (c == null || c.h == null) {
            a.h = d != null ? d.h : null;
        }
        else if (d == null || d.h == null) {
            a.h = null;
        }
        else {
            a.h = BrushUtil.l(c.h, b, d.h, 0);
        }
    };
    CategoryHighlightLayerFrame.prototype.c = function (a, b, c) {
        var d = b;
        var e = c;
        this.f.f(this.g, a, d.g, e.g, d, e);
    };
    CategoryHighlightLayerFrame.$t = markType(CategoryHighlightLayerFrame, 'CategoryHighlightLayerFrame', Frame.$);
    return CategoryHighlightLayerFrame;
}(Frame));
export { CategoryHighlightLayerFrame };
