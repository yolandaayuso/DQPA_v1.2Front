/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { LegendVisualDataList } from "./LegendVisualDataList";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
var LegendVisualData = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(LegendVisualData, _super);
    function LegendVisualData() {
        var _this = _super.call(this) || this;
        _this._items = null;
        _this._viewport = null;
        _this._width = 0;
        _this._height = 0;
        _this.items = new LegendVisualDataList();
        return _this;
    }
    Object.defineProperty(LegendVisualData.prototype, "items", {
        get: function () {
            return this._items;
        },
        set: function (a) {
            this._items = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LegendVisualData.prototype, "viewport", {
        get: function () {
            return this._viewport;
        },
        set: function (a) {
            this._viewport = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LegendVisualData.prototype, "width", {
        get: function () {
            return this._width;
        },
        set: function (a) {
            this._width = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LegendVisualData.prototype, "height", {
        get: function () {
            return this._height;
        },
        set: function (a) {
            this._height = a;
        },
        enumerable: false,
        configurable: true
    });
    LegendVisualData.prototype.serialize = function () {
        var a = new StringBuilder(0);
        a.u("{");
        a.u("width: " + this.width + ",");
        a.u("height: " + this.height + ",");
        a.u("items: [");
        for (var b = 0; b < this.items.count; b++) {
            if (b != 0) {
                a.l(", ");
            }
            a.l(this.items._inner[b].serialize());
        }
        a.u("],");
        a.u("}");
        return a.toString();
    };
    LegendVisualData.$t = markType(LegendVisualData, 'LegendVisualData');
    return LegendVisualData;
}(Base));
export { LegendVisualData };
