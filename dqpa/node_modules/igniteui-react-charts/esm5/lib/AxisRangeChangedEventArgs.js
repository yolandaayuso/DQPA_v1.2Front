/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var AxisRangeChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AxisRangeChangedEventArgs, _super);
    function AxisRangeChangedEventArgs(a) {
        var _rest = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            _rest[_i - 1] = arguments[_i];
        }
        var _this = this;
        a = (a == void 0) ? 0 : a;
        switch (a) {
            case 0:
                {
                    var c = _rest[0];
                    var d = _rest[1];
                    var e = _rest[2];
                    var f = _rest[3];
                    _this = _super.call(this) || this;
                    _this._oldMinimumValue = 0;
                    _this._minimumValue = 0;
                    _this._oldMaximumValue = 0;
                    _this._maximumValue = 0;
                    _this.oldMinimumValue = c;
                    _this.minimumValue = d;
                    _this.oldMaximumValue = e;
                    _this.maximumValue = f;
                }
                break;
            case 1:
                {
                    _this = _super.call(this) || this;
                    _this._oldMinimumValue = 0;
                    _this._minimumValue = 0;
                    _this._oldMaximumValue = 0;
                    _this._maximumValue = 0;
                }
                break;
        }
        return _this;
    }
    Object.defineProperty(AxisRangeChangedEventArgs.prototype, "oldMinimumValue", {
        get: function () {
            return this._oldMinimumValue;
        },
        set: function (a) {
            this._oldMinimumValue = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisRangeChangedEventArgs.prototype, "minimumValue", {
        get: function () {
            return this._minimumValue;
        },
        set: function (a) {
            this._minimumValue = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisRangeChangedEventArgs.prototype, "oldMaximumValue", {
        get: function () {
            return this._oldMaximumValue;
        },
        set: function (a) {
            this._oldMaximumValue = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(AxisRangeChangedEventArgs.prototype, "maximumValue", {
        get: function () {
            return this._maximumValue;
        },
        set: function (a) {
            this._maximumValue = a;
        },
        enumerable: false,
        configurable: true
    });
    AxisRangeChangedEventArgs.$t = markType(AxisRangeChangedEventArgs, 'AxisRangeChangedEventArgs', EventArgs.$);
    return AxisRangeChangedEventArgs;
}(EventArgs));
export { AxisRangeChangedEventArgs };
