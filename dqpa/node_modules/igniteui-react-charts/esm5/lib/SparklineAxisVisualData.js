/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
var SparklineAxisVisualData = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SparklineAxisVisualData, _super);
    function SparklineAxisVisualData() {
        var _this = _super.call(this) || this;
        _this._name = null;
        _this._minLabel = null;
        _this._maxLabel = null;
        _this._axisLine = null;
        return _this;
    }
    Object.defineProperty(SparklineAxisVisualData.prototype, "name", {
        get: function () {
            return this._name;
        },
        set: function (a) {
            this._name = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineAxisVisualData.prototype, "minLabel", {
        get: function () {
            return this._minLabel;
        },
        set: function (a) {
            this._minLabel = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineAxisVisualData.prototype, "maxLabel", {
        get: function () {
            return this._maxLabel;
        },
        set: function (a) {
            this._maxLabel = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineAxisVisualData.prototype, "axisLine", {
        get: function () {
            return this._axisLine;
        },
        set: function (a) {
            this._axisLine = a;
        },
        enumerable: false,
        configurable: true
    });
    SparklineAxisVisualData.prototype.scaleByViewport = function (a) {
    };
    SparklineAxisVisualData.prototype.serialize = function () {
        var a = new StringBuilder(0);
        a.u("{");
        a.u("name: \"" + this.name + "\"");
        if (this.minLabel != null) {
            a.u(",");
            a.l("minLabel: " + this.minLabel.serialize());
        }
        if (this.maxLabel != null) {
            a.u(",");
            a.l("maxLabel: " + this.maxLabel.serialize());
        }
        if (this.axisLine != null) {
            a.u(",");
            a.l("axisLine: " + this.axisLine.serialize());
        }
        a.u("");
        a.u("}");
        return a.toString();
    };
    SparklineAxisVisualData.$t = markType(SparklineAxisVisualData, 'SparklineAxisVisualData');
    return SparklineAxisVisualData;
}(Base));
export { SparklineAxisVisualData };
