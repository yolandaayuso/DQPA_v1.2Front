/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType, TypeRegistrar } from "igniteui-react-core";
import { DVContainer } from "igniteui-react-core";
import { ISeriesInteractionManager_$type } from "./ISeriesInteractionManager";
import { SeriesInteractionManager } from "./SeriesInteractionManager";
import { ICategorySeriesInteractionManager_$type } from "./ICategorySeriesInteractionManager";
import { IAnchoredCategorySeriesInteractionManager_$type } from "./IAnchoredCategorySeriesInteractionManager";
import { IHorizontalAnchoredCategorySeriesInteractionManager_$type } from "./IHorizontalAnchoredCategorySeriesInteractionManager";
import { IVerticalAnchoredCategorySeriesInteractionManager_$type } from "./IVerticalAnchoredCategorySeriesInteractionManager";
import { ISeriesViewerInteractionManager_$type } from "./ISeriesViewerInteractionManager";
import { CategorySeriesInteractionManager } from "./CategorySeriesInteractionManager";
import { AnchoredCategorySeriesInteractionManager } from "./AnchoredCategorySeriesInteractionManager";
import { HorizontalAnchoredCategorySeriesInteractionManager } from "./HorizontalAnchoredCategorySeriesInteractionManager";
import { VerticalAnchoredCategorySeriesInteractionManager } from "./VerticalAnchoredCategorySeriesInteractionManager";
import { SeriesViewerInteractionManager } from "./SeriesViewerInteractionManager";
/**
 * @hidden
 */
var InteractivityFactoryManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(InteractivityFactoryManager, _super);
    function InteractivityFactoryManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InteractivityFactoryManager.register = function () {
        if (!InteractivityFactoryManager.a) {
            TypeRegistrar.register("InteractivityFactoryManager", InteractivityFactoryManager.$);
            DVContainer.instance.registerFactory(ISeriesInteractionManager_$type, function () { return new SeriesInteractionManager(); });
            DVContainer.instance.registerFactory(ICategorySeriesInteractionManager_$type, function () { return new CategorySeriesInteractionManager(); });
            DVContainer.instance.registerFactory(IAnchoredCategorySeriesInteractionManager_$type, function () { return new AnchoredCategorySeriesInteractionManager(); });
            DVContainer.instance.registerFactory(IHorizontalAnchoredCategorySeriesInteractionManager_$type, function () { return new HorizontalAnchoredCategorySeriesInteractionManager(); });
            DVContainer.instance.registerFactory(IVerticalAnchoredCategorySeriesInteractionManager_$type, function () { return new VerticalAnchoredCategorySeriesInteractionManager(); });
            DVContainer.instance.registerFactory(ISeriesViewerInteractionManager_$type, function () { return new SeriesViewerInteractionManager(); });
            InteractivityFactoryManager.a = true;
        }
    };
    InteractivityFactoryManager.$t = markType(InteractivityFactoryManager, 'InteractivityFactoryManager');
    InteractivityFactoryManager.a = false;
    return InteractivityFactoryManager;
}(Base));
export { InteractivityFactoryManager };
