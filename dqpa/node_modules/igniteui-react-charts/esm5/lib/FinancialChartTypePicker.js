/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { FinancialChartDropDownControl } from "./FinancialChartDropDownControl";
import { FinancialChartTypePickerViewModel } from "./FinancialChartTypePickerViewModel";
import { FinancialChartTypePickerView } from "./FinancialChartTypePickerView";
import { runOn, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var FinancialChartTypePicker = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChartTypePicker, _super);
    function FinancialChartTypePicker(a) {
        var _this = _super.call(this, "financialChartTypePicker", a, FinancialChartTypePicker.z) || this;
        _this.o = new FinancialChartTypePickerView();
        _this.p = new FinancialChartTypePickerViewModel();
        _this.p.onSelectionChanged = runOn(_this, _this.v);
        _this.p.b = runOn(_this.o, _this.o.j);
        _this.o.a = _this.p;
        return _this;
    }
    Object.defineProperty(FinancialChartTypePicker.prototype, "w", {
        get: function () {
            return this.y.chartType;
        },
        set: function (a) {
            this.y.chartType = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartTypePicker.prototype, "x", {
        get: function () {
            return this.o;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartTypePicker.prototype, "y", {
        get: function () {
            return this.p;
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartTypePicker.prototype.get_s = function () {
        return ".financialChartTypePickerDropDownButton";
    };
    Object.defineProperty(FinancialChartTypePicker.prototype, "s", {
        get: function () {
            return this.get_s();
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartTypePicker.prototype.get_t = function () {
        return ".financialChartTypePickerDropDownMenu";
    };
    Object.defineProperty(FinancialChartTypePicker.prototype, "t", {
        get: function () {
            return this.get_t();
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartTypePicker.$t = markType(FinancialChartTypePicker, 'FinancialChartTypePicker', FinancialChartDropDownControl.$);
    FinancialChartTypePicker.z = "<button class='financialChartTypePickerDropDownButton' data-value='Auto'>\r\n\t\t<span class='ui-icon ui-icon-changeable'></span>\r\n\t\t<span class='ui-icon-toolbar-dd'></span>\r\n\t</button>\r\n\r\n\t<div class='financialChartTypePickerDropDownMenu'>\r\n\t\t<ul>\r\n\t\t\t<li class='financialChartListItem' data-value='Auto'>\r\n\t\t\t<span class='ui-icon ui-icon-chartAuto'></span>\r\n\t\t\t<span>Auto</span>\r\n\t\t\t</li>\r\n\t\t\t<li class='financialChartListItem' data-value='Bar'>\r\n\t\t\t\t<span class='ui-icon ui-icon-BarIcon'></span>\r\n\t\t\t\t<span>Bar</span>\r\n\t\t\t</li>\r\n\t\t\t<li class='financialChartListItem' data-value='Line'>\r\n\t\t\t\t<span class='ui-icon ui-icon-LineIcon'></span>\r\n\t\t\t\t<span>Line</span>\r\n\t\t\t</li>\r\n\t\t\t<li class='financialChartListItem' data-value='Candle'>\r\n\t\t\t\t<span class='ui-icon ui-icon-CandleIcon'></span>\r\n\t\t\t\t<span>Candle</span>\r\n\t\t\t</li>\r\n\t\t\t<li class='financialChartListItem' data-value='Column'>\r\n\t\t\t\t<span class='ui-icon ui-icon-ColumnIcon'></span>\r\n\t\t\t\t<span>Column</span>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</div>";
    return FinancialChartTypePicker;
}(FinancialChartDropDownControl));
export { FinancialChartTypePicker };
