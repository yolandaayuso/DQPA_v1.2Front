/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
var SparklineVisualData = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(SparklineVisualData, _super);
    function SparklineVisualData() {
        var _this = _super.call(this) || this;
        _this._name = null;
        _this._horizontalAxis = null;
        _this._verticalAxis = null;
        _this._sparkPath = null;
        _this._negativeSparkPath = null;
        _this._trendLinePath = null;
        _this._rangePath = null;
        _this._markersPath = null;
        _this._negativeMarkersPath = null;
        _this._lowMarkersPath = null;
        _this._highMarkersPath = null;
        _this._firstMarkerPath = null;
        _this._lastMarkerPath = null;
        _this._viewport = null;
        _this._marginViewport = null;
        return _this;
    }
    Object.defineProperty(SparklineVisualData.prototype, "name", {
        get: function () {
            return this._name;
        },
        set: function (a) {
            this._name = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "horizontalAxis", {
        get: function () {
            return this._horizontalAxis;
        },
        set: function (a) {
            this._horizontalAxis = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "verticalAxis", {
        get: function () {
            return this._verticalAxis;
        },
        set: function (a) {
            this._verticalAxis = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "sparkPath", {
        get: function () {
            return this._sparkPath;
        },
        set: function (a) {
            this._sparkPath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "negativeSparkPath", {
        get: function () {
            return this._negativeSparkPath;
        },
        set: function (a) {
            this._negativeSparkPath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "trendLinePath", {
        get: function () {
            return this._trendLinePath;
        },
        set: function (a) {
            this._trendLinePath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "rangePath", {
        get: function () {
            return this._rangePath;
        },
        set: function (a) {
            this._rangePath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "markersPath", {
        get: function () {
            return this._markersPath;
        },
        set: function (a) {
            this._markersPath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "negativeMarkersPath", {
        get: function () {
            return this._negativeMarkersPath;
        },
        set: function (a) {
            this._negativeMarkersPath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "lowMarkersPath", {
        get: function () {
            return this._lowMarkersPath;
        },
        set: function (a) {
            this._lowMarkersPath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "highMarkersPath", {
        get: function () {
            return this._highMarkersPath;
        },
        set: function (a) {
            this._highMarkersPath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "firstMarkerPath", {
        get: function () {
            return this._firstMarkerPath;
        },
        set: function (a) {
            this._firstMarkerPath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "lastMarkerPath", {
        get: function () {
            return this._lastMarkerPath;
        },
        set: function (a) {
            this._lastMarkerPath = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "viewport", {
        get: function () {
            return this._viewport;
        },
        set: function (a) {
            this._viewport = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SparklineVisualData.prototype, "marginViewport", {
        get: function () {
            return this._marginViewport;
        },
        set: function (a) {
            this._marginViewport = a;
        },
        enumerable: false,
        configurable: true
    });
    SparklineVisualData.prototype.scaleByViewport = function () {
        this.horizontalAxis.scaleByViewport(this.viewport);
        this.verticalAxis.scaleByViewport(this.viewport);
        if (this.sparkPath != null) {
            this.sparkPath.scaleByViewport(this.marginViewport);
        }
        if (this.negativeSparkPath != null) {
            this.negativeSparkPath.scaleByViewport(this.marginViewport);
        }
        if (this.trendLinePath != null) {
            this.trendLinePath.scaleByViewport(this.marginViewport);
        }
        if (this.rangePath != null) {
            this.rangePath.scaleByViewport(this.marginViewport);
        }
        if (this.markersPath != null) {
            this.markersPath.scaleByViewport(this.marginViewport);
        }
        if (this.negativeMarkersPath != null) {
            this.negativeMarkersPath.scaleByViewport(this.marginViewport);
        }
        if (this.lowMarkersPath != null) {
            this.lowMarkersPath.scaleByViewport(this.marginViewport);
        }
        if (this.highMarkersPath != null) {
            this.highMarkersPath.scaleByViewport(this.marginViewport);
        }
        if (this.firstMarkerPath != null) {
            this.firstMarkerPath.scaleByViewport(this.marginViewport);
        }
        if (this.lastMarkerPath != null) {
            this.lastMarkerPath.scaleByViewport(this.marginViewport);
        }
    };
    SparklineVisualData.prototype.serialize = function () {
        var a = new StringBuilder(0);
        a.u("{");
        a.u("name: \"" + this.name + "\"");
        if (this.horizontalAxis != null) {
            a.u(",");
            a.l("horizontalAxis: " + this.horizontalAxis.serialize());
        }
        if (this.horizontalAxis != null) {
            a.u(",");
            a.l("verticalAxis: " + this.verticalAxis.serialize());
        }
        if (this.sparkPath != null) {
            a.u(",");
            a.l("sparkPath: " + this.sparkPath.serialize());
        }
        if (this.negativeSparkPath != null) {
            a.u(",");
            a.l("negativeSparkPath: " + this.negativeSparkPath.serialize());
        }
        if (this.trendLinePath != null) {
            a.u(",");
            a.l("trendLinePath: " + this.trendLinePath.serialize());
        }
        if (this.rangePath != null) {
            a.u(",");
            a.l("rangePath: " + this.rangePath.serialize());
        }
        if (this.markersPath != null) {
            a.u(",");
            a.l("markersPath: " + this.markersPath.serialize());
        }
        if (this.negativeMarkersPath != null) {
            a.u(",");
            a.l("negativeMarkersPath: " + this.negativeMarkersPath.serialize());
        }
        if (this.lowMarkersPath != null) {
            a.u(",");
            a.l("lowMarkersPath: " + this.lowMarkersPath.serialize());
        }
        if (this.highMarkersPath != null) {
            a.u(",");
            a.l("highMarkersPath: " + this.highMarkersPath.serialize());
        }
        if (this.firstMarkerPath != null) {
            a.u(",");
            a.l("firstMarkerPath: " + this.firstMarkerPath.serialize());
        }
        if (this.lastMarkerPath != null) {
            a.u(",");
            a.l("lastMarkerPath: " + this.lastMarkerPath.serialize());
        }
        if (this.viewport != null) {
            a.l(",");
            a.l("viewPort:" + this.viewport.serialize());
        }
        if (this.marginViewport != null) {
            a.l(",");
            a.l("marginViewPort:" + this.marginViewport.serialize());
        }
        a.u("");
        a.u("}");
        return a.toString();
    };
    SparklineVisualData.$t = markType(SparklineVisualData, 'SparklineVisualData');
    return SparklineVisualData;
}(Base));
export { SparklineVisualData };
